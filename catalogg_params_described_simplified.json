[
  {
    "name": "Stock Symbol Search API",
    "description": "Stock Symbol Search API (category: reference) resolves company names or partial tickers into clean, exchange-verified symbols for global equities. It covers five core use-cases—UI autocomplete, symbol validation, bulk name-to-ticker mapping, multi-exchange portfolio onboarding, and ETL data hygiene. Parameters: query (string, required) plus limit and exchange (optional) for row caps and venue scoping. The response returns symbol, name, currency, exchangeFullName, and exchange. Example: {\"symbol\":\"AAPL\",\"name\":\"Apple Inc.\",\"currency\":\"USD\",\"exchangeFullName\":\"NASDAQ Global Select\",\"exchange\":\"NASDAQ\"}. Plug this endpoint in front of quote, fundamentals, or analytics calls to eliminate ticker ambiguity.",
    "category": "reference",
    "use_cases": [
      "ticker autocomplete in UI forms",
      "validate user-supplied symbols before downstream queries",
      "bulk mapping of company names to tickers",
      "multi-exchange coverage for global portfolios",
      "ETL pipelines that need clean symbol metadata"
    ],
    "parameters": {
      "required": {
        "query": "A free-form text string used to perform fuzzy or exact matches against company names, ticker symbols, or keywords. Example: \"Apple\" to retrieve all symbols or names containing “Apple”. (String, required for text-based search endpoints)"
      },
      "optional": {
        "limit": "An integer cap on the number of results returned by the endpoint. Example: 50 to restrict output to the top 50 matches. Must be ≥1 and ≤1000. (Integer, optional; defaults to 100)",
        "exchange": "The exchange code or abbreviation to scope results to a specific trading venue. Example: \"NASDAQ\" or \"NYSE\". Filters out tickers not listed on that exchange. (String, optional)"
      }
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "name": "The full legal or common name of the company. Example: \"Apple Inc.\" (String)",
      "currency": "The ISO 4217 three-letter currency code representing the trading currency of the security. Example: \"USD\" for US Dollars. (String)",
      "exchangeFullName": "The full name of the stock exchange where the security is listed. Example: \"NASDAQ Global Select\". (String)",
      "exchange": "The abbreviated code or name of the exchange where the security is traded. Example: \"NASDAQ\". (String)"
    }
  },
  {
    "name": "Stock Symbol Search API",
    "description": "Stock Symbol Search API delivers fast text-to-ticker mapping for equities across major exchanges. Classified under reference, it supports two operational modes—broad discovery (query only) and scoped search (query with limit and/or exchange). Key application areas include AI assistants, compliance checks, reconciliation workflows, onboarding flows, and any pipeline that depends on accurate instrument identifiers. Required parameter: query. Optional parameters: limit and exchange. Response schema: symbol, name, currency, exchangeFullName, exchange. Sample output: {\"symbol\":\"AAPL\",\"name\":\"Apple Inc.\",\"currency\":\"USD\",\"exchangeFullName\":\"NASDAQ Global Select\",\"exchange\":\"NASDAQ\"}. Use it as the first call in data pipelines to guarantee downstream requests reference the correct security.",
    "category": "reference",
    "use_cases": [
      "ticker autocomplete in UI forms",
      "validate user-supplied symbols before downstream queries",
      "bulk mapping of company names to tickers",
      "multi-exchange coverage for global portfolios",
      "ETL pipelines that need clean symbol metadata"
    ],
    "parameters": {
      "required": {
        "query": "A free-form text string used to perform fuzzy or exact matches against company names, ticker symbols, or keywords. Example: \"Apple\" to retrieve all symbols or names containing “Apple”. (String, required for text-based search endpoints)"
      },
      "optional": {
        "limit": "An integer cap on the number of results returned by the endpoint. Example: 50 to restrict output to the top 50 matches. Must be ≥1 and ≤1000. (Integer, optional; defaults to 100)",
        "exchange": "The exchange code or abbreviation to scope results to a specific trading venue. Example: \"NASDAQ\" or \"NYSE\". Filters out tickers not listed on that exchange. (String, optional)"
      }
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "name": "The full legal or common name of the company. Example: \"Apple Inc.\" (String)",
      "currency": "The ISO 4217 three-letter currency code representing the trading currency of the security. Example: \"USD\" for US Dollars. (String)",
      "exchangeFullName": "The full name of the stock exchange where the security is listed. Example: \"NASDAQ Global Select\". (String)",
      "exchange": "The abbreviated code or name of the exchange where the security is traded. Example: \"NASDAQ\". (String)"
    }
  },
  {
    "name": "Financial Estimates API",
    "description": "Financial Estimates API (category: fundamentals) surfaces forward-looking consensus metrics compiled from sell-side analyst models. Required parameters—symbol (e.g., AAPL) and period (annual or quarter)—define the security and cadence. Optional page and limit control pagination up to 1,000 rows. Use cases span earnings-model inputs, valuation comps, screeners that rank companies by projected EPS growth, and risk dashboards monitoring revenue trajectory versus guidance. The endpoint returns revenue, EBITDA, EBIT, net-income, SG&A, EPS ranges (low/high/average), and analyst-coverage counts, enabling granular scenario analysis. Example object: {\"symbol\":\"AAPL\",\"date\":\"2029-09-28\",\"revenueLow\":483092500000,\"revenueHigh\":483093500000,\"revenueAvg\":483093000000,\"ebitdaLow\":155952166036,\"ebitdaHigh\":155952488856,\"ebitdaAvg\":155952327446,\"ebitLow\":140628295747,\"ebitHigh\":140628586847,\"ebitAvg\":140628441297,\"netIncomeLow\":139446957701,\"netIncomeHigh\":157185372990,\"netIncomeAvg\":149150359609,\"sgaExpenseLow\":31694652812,\"sgaExpenseHigh\":31694718420,\"sgaExpenseAvg\":31694685616,\"epsAvg\":9.68,\"epsHigh\":10.20148,\"epsLow\":9.05024,\"numAnalystsRevenue\":16,\"numAnalystsEps\":6}. Leverage this feed wherever forward estimates drive investment decisions or KPI forecasting.",
    "category": "fundamentals",
    "use_cases": [
      "populate DCF and three-statement models with forward figures",
      "track consensus EPS revisions in earnings-season dashboards",
      "screen for high-growth companies by projected revenue CAGR",
      "compare analyst forecasts to company guidance for surprise risk",
      "feed risk models that stress-test EBITDA margin expectations"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)",
        "period": "A string or integer indicating the fiscal period for which data is requested. Example: \"annual\" or \"quarter\" to indicate annual or quarterly data. (String or Number, required for period-based endpoints)"
      },
      "optional": {
        "page": "A zero-based integer page index for paginated endpoints. Example: 2 to return the third page of results, given the configured `limit`. (Integer, optional; defaults to 0)",
        "limit": "An integer cap on the number of results returned by the endpoint. Example: 50 to restrict output to the top 50 matches. Must be ≥1 and ≤1000. (Integer, optional; defaults to 100)"
      }
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "revenueLow": "The lowest projected or reported revenue estimate for the period, expressed in the reporting currency's smallest unit. Example: 483092500000 (representing 483.09 billion). (Number)",
      "revenueHigh": "The highest projected or reported revenue estimate for the period. Example: 483093500000 (representing 483.09 billion). (Number)",
      "revenueAvg": "The average of all revenue estimates for the period. Example: 483093000000 (representing 483.093 billion). (Number)",
      "ebitdaLow": "The lowest projected or reported EBITDA (Earnings Before Interest, Taxes, Depreciation, and Amortization) for the period. Example: 155952166036. (Number)",
      "ebitdaHigh": "The highest projected or reported EBITDA for the period. Example: 155952488856. (Number)",
      "ebitdaAvg": "The average EBITDA estimate for the period. Example: 155952327446. (Number)",
      "ebitLow": "The lowest projected or reported EBIT (Earnings Before Interest and Taxes) for the period. Example: 140628295747. (Number)",
      "ebitHigh": "The highest projected or reported EBIT for the period. Example: 140628586847. (Number)",
      "ebitAvg": "The average EBIT estimate for the period. Example: 140628441297. (Number)",
      "netIncomeLow": "The lowest projected or reported net income estimate for the period. Example: 139446957701. (Number)",
      "netIncomeHigh": "The highest projected or reported net income estimate for the period. Example: 157185372990. (Number)",
      "netIncomeAvg": "The average net income estimate for the period. Example: 149150359609. (Number)",
      "sgaExpenseLow": "The lowest projected or reported SG&A (Selling, General, and Administrative) expense for the period. Example: 31694652812. (Number)",
      "sgaExpenseHigh": "The highest projected or reported SG&A expense for the period. Example: 31694718420. (Number)",
      "sgaExpenseAvg": "The average SG&A expense estimate for the period. Example: 31694685616. (Number)",
      "epsAvg": "The average Earnings Per Share (EPS) estimate or reported value for the period. Example: 9.68. (Number)",
      "epsHigh": "The highest EPS estimate for the period. Example: 10.20148. (Number)",
      "epsLow": "The lowest EPS estimate for the period. Example: 9.05024. (Number)",
      "numAnalystsRevenue": "The number of analysts contributing to the revenue estimate. Example: 16. (Number)",
      "numAnalystsEps": "The number of analysts contributing to the EPS estimate. Example: 6. (Number)"
    }
  },
  {
    "name": "Financial Estimates API",
    "description": "The Financial Estimates API provides consensus analyst forecasts—revenue, EBITDA, EBIT, net income, SG&A, and EPS—across annual and quarterly horizons. Tagged under fundamentals, it requires symbol and period, with optional page/limit to paginate up to 1,000 records. Typical integrations include earnings-preview reports, factor screens using forward P/E or EV/EBITDA, AI chatbots answering “What do analysts expect for AAPL next year?”, and automated alerting when consensus swings. Response fields deliver low, high, and average projections plus analyst counts, enabling probabilistic confidence scoring. Example payload illustrates full breadth of columns for Apple Inc. on 2029-09-28, showcasing revenueAvg 483.1 B and epsAvg 9.68 from 16 revenue and 6 EPS contributors. Embed this endpoint upstream of valuation engines, screener-backends, and portfolio-monitoring workflows to keep models synchronized with street expectations.",
    "category": "fundamentals",
    "use_cases": [
      "generate earnings-preview PDFs with consensus versus last year",
      "rank stocks by forward EV/EBITDA or PEG",
      "answer natural-language queries on expected EPS or revenue",
      "trigger alerts when analyst estimates diverge from guidance",
      "feed machine-learning models predicting post-earnings drift"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)",
        "period": "A string or integer indicating the fiscal period for which data is requested. Example: \"annual\" or \"quarter\" to indicate annual or quarterly data. (String or Number, required for period-based endpoints)"
      },
      "optional": {
        "page": "A zero-based integer page index for paginated endpoints. Example: 2 to return the third page of results, given the configured `limit`. (Integer, optional; defaults to 0)",
        "limit": "An integer cap on the number of results returned by the endpoint. Example: 50 to restrict output to the top 50 matches. Must be ≥1 and ≤1000. (Integer, optional; defaults to 100)"
      }
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "revenueLow": "The lowest projected or reported revenue estimate for the period, expressed in the reporting currency's smallest unit. Example: 483092500000 (representing 483.09 billion). (Number)",
      "revenueHigh": "The highest projected or reported revenue estimate for the period. Example: 483093500000 (representing 483.09 billion). (Number)",
      "revenueAvg": "The average of all revenue estimates for the period. Example: 483093000000 (representing 483.093 billion). (Number)",
      "ebitdaLow": "The lowest projected or reported EBITDA (Earnings Before Interest, Taxes, Depreciation, and Amortization) for the period. Example: 155952166036. (Number)",
      "ebitdaHigh": "The highest projected or reported EBITDA for the period. Example: 155952488856. (Number)",
      "ebitdaAvg": "The average EBITDA estimate for the period. Example: 155952327446. (Number)",
      "ebitLow": "The lowest projected or reported EBIT (Earnings Before Interest and Taxes) for the period. Example: 140628295747. (Number)",
      "ebitHigh": "The highest projected or reported EBIT for the period. Example: 140628586847. (Number)",
      "ebitAvg": "The average EBIT estimate for the period. Example: 140628441297. (Number)",
      "netIncomeLow": "The lowest projected or reported net income estimate for the period. Example: 139446957701. (Number)",
      "netIncomeHigh": "The highest projected or reported net income estimate for the period. Example: 157185372990. (Number)",
      "netIncomeAvg": "The average net income estimate for the period. Example: 149150359609. (Number)",
      "sgaExpenseLow": "The lowest projected or reported SG&A (Selling, General, and Administrative) expense for the period. Example: 31694652812. (Number)",
      "sgaExpenseHigh": "The highest projected or reported SG&A expense for the period. Example: 31694718420. (Number)",
      "sgaExpenseAvg": "The average SG&A expense estimate for the period. Example: 31694685616. (Number)",
      "epsAvg": "The average Earnings Per Share (EPS) estimate or reported value for the period. Example: 9.68. (Number)",
      "epsHigh": "The highest EPS estimate for the period. Example: 10.20148. (Number)",
      "epsLow": "The lowest EPS estimate for the period. Example: 9.05024. (Number)",
      "numAnalystsRevenue": "The number of analysts contributing to the revenue estimate. Example: 16. (Number)",
      "numAnalystsEps": "The number of analysts contributing to the EPS estimate. Example: 6. (Number)"
    }
  },
  {
    "name": "Ratings Snapshot API",
    "description": "Ratings Snapshot API (category: fundamentals) delivers a one-call summary of a company’s financial strength by distilling multiple key ratios into an overall letter-rating and component scores. Required input is **symbol**; optional **limit** controls record count. Common integrations include portfolio-health dashboards, screening rules (e.g., only hold stocks rated B or better), automated credit-style alerts, and back-tests that correlate rating changes with price momentum. Each response returns the letter **rating**, an **overallScore** (1–5), plus sub-scores for discounted cash flow, ROE, ROA, debt-to-equity, P/E, and P/B. Example payload: {\"symbol\":\"AAPL\",\"rating\":\"A-\",\"overallScore\":4,\"discountedCashFlowScore\":3,\"returnOnEquityScore\":5,\"returnOnAssetsScore\":5,\"debtToEquityScore\":4,\"priceToEarningsScore\":2,\"priceToBookScore\":1}. Deploy this endpoint wherever fast, ratio-based health checks drive investment or risk decisions.",
    "category": "fundamentals",
    "use_cases": [
      "rank stocks by composite financial health",
      "trigger alerts when a company’s rating falls below a threshold",
      "overlay rating filters in momentum or factor screens",
      "feed portfolio dashboards with quick health metrics",
      "research how rating shifts correlate with subsequent returns"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {
        "limit": "An integer cap on the number of results returned by the endpoint. Example: 50 to restrict output to the top 50 matches. Must be ≥1 and ≤1000. (Integer, optional; defaults to 100)"
      }
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "rating": "The letter or grade rating assigned to the company, reflecting financial health or analyst consensus. Example: \"A-\". (String)",
      "overallScore": "The overall numeric score assigned to the company, typically on a standardized scale (e.g., 1–5). Example: 4. (Number)",
      "discountedCashFlowScore": "The score based on discounted cash flow analysis, where a higher score indicates a stronger valuation. Example: 3. (Number)",
      "returnOnEquityScore": "The score based on Return on Equity (ROE) analysis, evaluating profitability relative to shareholder equity. Example: 5. (Number)",
      "returnOnAssetsScore": "The score based on Return on Assets (ROA) analysis, measuring profitability relative to total assets. Example: 5. (Number)",
      "debtToEquityScore": "The score based on the company's debt-to-equity ratio, indicating leverage and financial risk. Example: 4. (Number)",
      "priceToEarningsScore": "The score based on the company's Price-to-Earnings (P/E) ratio, used to gauge valuation relative to earnings. Example: 2. (Number)",
      "priceToBookScore": "The score based on the company's Price-to-Book (P/B) ratio, evaluating valuation relative to book value. Example: 1. (Number)"
    }
  },
  {
    "name": "Ratings Snapshot API",
    "description": "The Ratings Snapshot API provides an instant, ratio-driven verdict on corporate quality by synthesizing discounted cash-flow valuation, profitability, leverage, and valuation multiples into an overall grade. Classified as fundamentals, it requires only the **symbol**; **limit** is optional for pagination. Typical workflows: risk-budget systems limiting exposure to low-grade names, investor dashboards displaying letter ratings next to ticker lists, AI chatbots answering “How strong is AAPL’s balance sheet?”, and quant screens that filter by high ROE + low debt scores. Output fields include rating, overallScore, and individual sub-scores (DCF, ROE, ROA, debt-to-equity, P/E, P/B). Sample object for Apple shows an A- with strong profitability (ROE/ROA scores of 5) offset by middling valuation multiples. Integrate this feed upstream of allocation engines, credit-risk monitors, or factor models requiring concise, comparable health metrics.",
    "category": "fundamentals",
    "use_cases": [
      "display letter ratings in watchlists and mobile apps",
      "limit portfolio exposure to companies scoring below 3",
      "answer user queries about a firm’s financial quality",
      "augment credit-risk models with ratio-based grades",
      "historical back-testing of rating upgrades/downgrades"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {
        "limit": "An integer cap on the number of results returned by the endpoint. Example: 50 to restrict output to the top 50 matches. Must be ≥1 and ≤1000. (Integer, optional; defaults to 100)"
      }
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "rating": "The letter or grade rating assigned to the company, reflecting financial health or analyst consensus. Example: \"A-\". (String)",
      "overallScore": "The overall numeric score assigned to the company, typically on a standardized scale (e.g., 1–5). Example: 4. (Number)",
      "discountedCashFlowScore": "The score based on discounted cash flow analysis, where a higher score indicates a stronger valuation. Example: 3. (Number)",
      "returnOnEquityScore": "The score based on Return on Equity (ROE) analysis, evaluating profitability relative to shareholder equity. Example: 5. (Number)",
      "returnOnAssetsScore": "The score based on Return on Assets (ROA) analysis, measuring profitability relative to total assets. Example: 5. (Number)",
      "debtToEquityScore": "The score based on the company's debt-to-equity ratio, indicating leverage and financial risk. Example: 4. (Number)",
      "priceToEarningsScore": "The score based on the company's Price-to-Earnings (P/E) ratio, used to gauge valuation relative to earnings. Example: 2. (Number)",
      "priceToBookScore": "The score based on the company's Price-to-Book (P/B) ratio, evaluating valuation relative to book value. Example: 1. (Number)"
    }
  },
  {
    "name": "Historical Ratings API",
    "description": "Historical Ratings API (category: fundamentals) supplies date-stamped letter grades and component ratio scores so analysts can quantify how a company’s financial quality evolves. Required parameter **symbol** specifies the equity; optional **limit** (max 10 000) paginates the series. Common applications include: trend charts that plot rating drift, quant factors measuring upgrade/downgrade momentum, risk controls that flag deteriorating balance-sheet metrics, and AI assistants answering “How has AAPL’s ROE score changed over five years?”. The response delivers a structured record—date, rating, overallScore, and sub-scores for discounted cash flow, ROE, ROA, debt-to-equity, P/E, and P/B. Example: {\"symbol\":\"AAPL\",\"date\":\"2025-02-04\",\"rating\":\"A-\",\"overallScore\":4,\"discountedCashFlowScore\":3,\"returnOnEquityScore\":5,\"returnOnAssetsScore\":5,\"debtToEquityScore\":4,\"priceToEarningsScore\":2,\"priceToBookScore\":1}. Integrate this feed into back-tests, performance dashboards, or compliance monitors that need longitudinal ratio intelligence.",
    "category": "fundamentals",
    "use_cases": [
      "chart rating upgrades and downgrades over time",
      "build factors based on rating momentum for quant strategies",
      "trigger alerts when financial health deteriorates",
      "benchmark management effectiveness via improving ROE/ROA scores",
      "correlate historical rating changes with stock-price moves"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {
        "limit": "An integer cap on the number of results returned by the endpoint. Example: 50 to restrict output to the top 50 matches. Must be ≥1 and ≤1000. (Integer, optional; defaults to 100)"
      }
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "rating": "The letter or grade rating assigned to the company, reflecting financial health or analyst consensus. Example: \"A-\". (String)",
      "overallScore": "The overall numeric score assigned to the company, typically on a standardized scale (e.g., 1–5). Example: 4. (Number)",
      "discountedCashFlowScore": "The score based on discounted cash flow analysis, where a higher score indicates a stronger valuation. Example: 3. (Number)",
      "returnOnEquityScore": "The score based on Return on Equity (ROE) analysis, evaluating profitability relative to shareholder equity. Example: 5. (Number)",
      "returnOnAssetsScore": "The score based on Return on Assets (ROA) analysis, measuring profitability relative to total assets. Example: 5. (Number)",
      "debtToEquityScore": "The score based on the company's debt-to-equity ratio, indicating leverage and financial risk. Example: 4. (Number)",
      "priceToEarningsScore": "The score based on the company's Price-to-Earnings (P/E) ratio, used to gauge valuation relative to earnings. Example: 2. (Number)",
      "priceToBookScore": "The score based on the company's Price-to-Book (P/B) ratio, evaluating valuation relative to book value. Example: 1. (Number)"
    }
  },
  {
    "name": "Historical Ratings API",
    "description": "The Historical Ratings API offers a time-series archive of composite financial ratings, enabling longitudinal analysis of a firm’s valuation discipline, profitability, leverage, and cash-flow coverage. Classified under fundamentals, it mandates **symbol** and accepts **limit** for batching up to 10 000 observations per request. Key deployments include portfolio risk engines that weight exposure by rating trajectory, dashboards comparing multi-year scorecards across peers, academic research studying rating signals, and chatbots that surface “show me every date when AAPL’s rating slipped below B+”. Returned fields mirror the snapshot schema—rating, overallScore, plus individual scores (DCF, ROE, ROA, debt-to-equity, P/E, P/B) keyed by historical **date**. Sample row: {\"symbol\":\"AAPL\",\"date\":\"2025-02-04\",\"rating\":\"A-\",\"overallScore\":4,\"discountedCashFlowScore\":3,\"returnOnEquityScore\":5,\"returnOnAssetsScore\":5,\"debtToEquityScore\":4,\"priceToEarningsScore\":2,\"priceToBookScore\":1}. Attach this endpoint to any workflow that values rigorous, time-based financial diagnostics.",
    "category": "fundamentals",
    "use_cases": [
      "feed decade-long rating histories into machine-learning models",
      "compare rating paths across competitors for peer analysis",
      "generate client reports documenting credit-style upgrades",
      "enhance ESG or risk dashboards with historical health metrics",
      "validate investment theses against multi-year rating trends"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {
        "limit": "An integer cap on the number of results returned by the endpoint. Example: 50 to restrict output to the top 50 matches. Must be ≥1 and ≤1000. (Integer, optional; defaults to 100)"
      }
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "rating": "The letter or grade rating assigned to the company, reflecting financial health or analyst consensus. Example: \"A-\". (String)",
      "overallScore": "The overall numeric score assigned to the company, typically on a standardized scale (e.g., 1–5). Example: 4. (Number)",
      "discountedCashFlowScore": "The score based on discounted cash flow analysis, where a higher score indicates a stronger valuation. Example: 3. (Number)",
      "returnOnEquityScore": "The score based on Return on Equity (ROE) analysis, evaluating profitability relative to shareholder equity. Example: 5. (Number)",
      "returnOnAssetsScore": "The score based on Return on Assets (ROA) analysis, measuring profitability relative to total assets. Example: 5. (Number)",
      "debtToEquityScore": "The score based on the company's debt-to-equity ratio, indicating leverage and financial risk. Example: 4. (Number)",
      "priceToEarningsScore": "The score based on the company's Price-to-Earnings (P/E) ratio, used to gauge valuation relative to earnings. Example: 2. (Number)",
      "priceToBookScore": "The score based on the company's Price-to-Book (P/B) ratio, evaluating valuation relative to book value. Example: 1. (Number)"
    }
  },
  {
    "name": "Price Target Summary API",
    "description": "Price Target Summary API (category: analyst_sentiment) aggregates published analyst price objectives into four rolling windows—last month, last quarter, last year, and all-time—to quantify consensus upside or downside in one call. Required parameter **symbol** pinpoints the equity. Typical integrations: upside-potential widgets, pre-trade dashboards benchmarking current price to consensus, screeners flagging stocks with accelerating target momentum, risk reports monitoring sentiment deterioration, and AI agents fielding “What’s Wall Street’s target for AAPL?”. The payload returns lastMonthCount / lastMonthAvgPriceTarget, lastQuarterCount / lastQuarterAvgPriceTarget, lastYearCount / lastYearAvgPriceTarget, allTimeCount / allTimeAvgPriceTarget, plus a JSON string of contributing **publishers**. Example: {\"symbol\":\"AAPL\",\"lastMonthCount\":1,\"lastMonthAvgPriceTarget\":200.75,\"lastQuarterCount\":3,\"lastQuarterAvgPriceTarget\":204.2,\"lastYearCount\":48,\"lastYearAvgPriceTarget\":232.99,\"allTimeCount\":167,\"allTimeAvgPriceTarget\":201.21,\"publishers\":\"[\\\"Benzinga\\\",\\\"StreetInsider\\\",…]\"}. Deploy this endpoint wherever forward valuation sentiment drives investment decisions.",
    "category": "analyst_sentiment",
    "use_cases": [
      "display consensus upside in portfolio dashboards",
      "alert when average target crosses a technical level",
      "rank tickers by target-price momentum",
      "compare analyst sentiment to internal valuation models",
      "feed ML models predicting post-revision price drift"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "lastMonthCount": "The number of analyst price targets issued in the last month. Example: 1. (Number)",
      "lastMonthAvgPriceTarget": "The average of analyst price targets published in the last month. Example: 200.75. (Number)",
      "lastQuarterCount": "The number of analyst price targets issued in the last quarter. Example: 3. (Number)",
      "lastQuarterAvgPriceTarget": "The average of analyst price targets published in the last quarter. Example: 204.2. (Number)",
      "lastYearCount": "The number of analyst price targets issued in the last year. Example: 48. (Number)",
      "lastYearAvgPriceTarget": "The average of analyst price targets published in the last year. Example: 232.99. (Number)",
      "allTimeCount": "The total number of analyst price targets ever issued for the company. Example: 167. (Number)",
      "allTimeAvgPriceTarget": "The average of all analyst price targets ever issued for the company. Example: 201.21. (Number)",
      "publishers": "An array of publishers or sources contributing to analyst price targets. Example: [\"Benzinga\",\"StreetInsider\",...]. (Array of Strings)"
    }
  },
  {
    "name": "Price Target Summary API",
    "description": "The Price Target Summary API distills analyst opinion into numeric benchmarks that quantify market expectations across multiple horizons. Tagged under analyst_sentiment, it requires only **symbol**—no pagination needed. Core use-case clusters: 1) rapidly gauge upside/downside versus last close, 2) feed factor screens that score stocks by dispersion between recent and historical targets, 3) automate investor-relations slides showing target-price trends, 4) power chatbot answers like “How bullish are analysts on AAPL now?”, and 5) trigger compliance alerts when promotional materials diverge sharply from consensus. Returned fields supply counts and averages for month, quarter, year, and lifetime plus a publisher roster, enabling both snapshot and drift analysis. Sample output mirrors the schema for Apple Inc. with 48 yearly targets averaging 232.99 USD. Bolt this endpoint onto valuation engines, research portals, or sentiment-aware trading algorithms to keep consensus in plain view.",
    "category": "analyst_sentiment",
    "use_cases": [
      "upside/downside headlines in mobile trading apps",
      "factor models weighting by change in target consensus",
      "IR decks highlighting analyst coverage breadth",
      "chatbots answering price-target questions",
      "compliance checks against aggressive price claims"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "lastMonthCount": "The number of analyst price targets issued in the last month. Example: 1. (Number)",
      "lastMonthAvgPriceTarget": "The average of analyst price targets published in the last month. Example: 200.75. (Number)",
      "lastQuarterCount": "The number of analyst price targets issued in the last quarter. Example: 3. (Number)",
      "lastQuarterAvgPriceTarget": "The average of analyst price targets published in the last quarter. Example: 204.2. (Number)",
      "lastYearCount": "The number of analyst price targets issued in the last year. Example: 48. (Number)",
      "lastYearAvgPriceTarget": "The average of analyst price targets published in the last year. Example: 232.99. (Number)",
      "allTimeCount": "The total number of analyst price targets ever issued for the company. Example: 167. (Number)",
      "allTimeAvgPriceTarget": "The average of all analyst price targets ever issued for the company. Example: 201.21. (Number)",
      "publishers": "An array of publishers or sources contributing to analyst price targets. Example: [\"Benzinga\",\"StreetInsider\",...]. (Array of Strings)"
    }
  },
  {
    "name": "Price Target Consensus API",
    "description": "Price Target Consensus API (category: analyst_sentiment) bundles high, low, median, and consensus price objectives into a single payload, giving a point-blank read on sell-side conviction. Required parameter **symbol** specifies the equity; no optional inputs keep integration frictionless. Ideal for upside/downside widgets, pre-trade risk gates, valuation models cross-checking internal DCF outputs, alerting engines that flag consensus shifts, and chatbots answering “Where do analysts see this stock going?” The response schema—{\"symbol\",\"targetHigh\",\"targetLow\",\"targetConsensus\",\"targetMedian\"}—covers the entire dispersion curve. Example: {\"symbol\":\"AAPL\",\"targetHigh\":300,\"targetLow\":200,\"targetConsensus\":251.7,\"targetMedian\":258}. Plug it into dashboards, factor screens, or compliance checks wherever clear-cut market expectations matter.",
    "category": "analyst_sentiment",
    "use_cases": [
      "display consensus upside in investor portals",
      "rank stocks by spread between high and low targets",
      "trigger alerts when consensus diverges from spot price",
      "validate internal valuations against street estimates",
      "feed sentiment factors into quantitative models"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "targetHigh": "The highest analyst price target for the company. Example: 300. (Number)",
      "targetLow": "The lowest analyst price target for the company. Example: 200. (Number)",
      "targetConsensus": "The consensus analyst price target, typically a weighted or mean value. Example: 251.7. (Number)",
      "targetMedian": "The median analyst price target for the company. Example: 258. (Number)"
    }
  },
  {
    "name": "Price Target Consensus API",
    "description": "The Price Target Consensus API distills analyst views into four headline numbers—high, low, median, and consensus—so portfolio managers can benchmark current prices against market expectations in milliseconds. Classified under analyst_sentiment, it needs only **symbol** to return a five-field JSON object: symbol, targetHigh, targetLow, targetConsensus, targetMedian. Core deployments include momentum screens filtering for widening target spreads, research dashboards summarizing sentiment in earnings previews, client reports showing upside potential, compliance teams checking promotional statements, and AI assistants answering “What’s the street’s median target for AAPL?”. Sample output illustrates Apple Inc.: targetHigh 300, targetLow 200, consensus 251.7, median 258. Point this endpoint at any workflow requiring clean, authoritative target data with zero transformation overhead.",
    "category": "analyst_sentiment",
    "use_cases": [
      "momentum screens using widening target dispersion",
      "earnings-preview decks citing consensus price",
      "client reports quantifying upside potential",
      "compliance validation of price-target claims",
      "chatbot responses on analyst expectations"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "targetHigh": "The highest analyst price target for the company. Example: 300. (Number)",
      "targetLow": "The lowest analyst price target for the company. Example: 200. (Number)",
      "targetConsensus": "The consensus analyst price target, typically a weighted or mean value. Example: 251.7. (Number)",
      "targetMedian": "The median analyst price target for the company. Example: 258. (Number)"
    }
  },
  {
    "name": "Price Target News API",
    "description": "Price Target News API (category: analyst_sentiment) streams real-time analyst price-target updates alongside headline metadata, publisher, analyst name, brokerage, the quoted target (raw and adjusted), and the spot price when the note hit the tape. Required parameter **symbol** identifies the equity; optional **limit** and **page** support cursor-based navigation. Typical integrations include news tickers that overlay fresh price-target calls, alert engines that ping when targets cross thresholds, dashboards summarizing daily analyst chatter, and chatbots answering “Who just raised AAPL’s target and why?”. The response schema—symbol, publishedDate, newsURL, newsTitle, analystName, priceTarget, adjPriceTarget, priceWhenPosted, newsPublisher, newsBaseURL, analystCompany—arrives fully normalized for downstream analytics. Example row: {\"symbol\":\"AAPL\",\"publishedDate\":\"2025-01-21T01:24:32.000Z\",\"newsURL\":\"https://…\",\"newsTitle\":\"Apple Gets Rare Downgrade From Jefferies…\",\"analystName\":\"Edison Lee\",\"priceTarget\":200.75,\"adjPriceTarget\":200.75,\"priceWhenPosted\":229.98,\"newsPublisher\":\"Benzinga\",\"newsBaseURL\":\"benzinga.com\",\"analystCompany\":\"Jefferies\"}. Deploy this feed wherever immediate visibility into sell-side target changes drives trading or research workflows.",
    "category": "analyst_sentiment",
    "use_cases": [
      "real-time alerting on new or revised price targets",
      "news widgets summarizing latest analyst moves",
      "factor models tracking sentiment momentum",
      "IR dashboards monitoring broker coverage trends",
      "chatbots answering user questions on target-price news"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {
        "limit": "An integer cap on the number of results returned by the endpoint. Example: 50 to restrict output to the top 50 matches. Must be ≥1 and ≤1000. (Integer, optional; defaults to 100)",
        "page": "A zero-based integer page index for paginated endpoints. Example: 2 to return the third page of results, given the configured `limit`. (Integer, optional; defaults to 0)"
      }
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "publishedDate": "The date and time when the news article or analyst report was published, in ISO 8601 format. Example: \"2025-01-21T01:24:32.000Z\". (String, DateTime)",
      "newsURL": "The URL to the full news article or analyst report. Example: \"https://www.benzinga.com/markets/equities/25/01/43087992/apple-gets-rare-downgrade-%20-from-jefferies-analyst...\". (String, URL)",
      "newsTitle": "The headline or title of the news article or analyst report. Example: \"Apple Gets Rare Downgrade From Jefferies, Analyst Warns On Slowing Revenue Growth, Missed Forecasts, And Falling iPhone Demand\". (String)",
      "analystName": "The full name of the analyst who authored the report or set the target. Example: \"Edison Lee\". (String)",
      "priceTarget": "The price target set by the analyst at the time of publication. Example: 200.75. (Number)",
      "adjPriceTarget": "The adjusted price target after any post-publication revisions. Example: 200.75. (Number)",
      "priceWhenPosted": "The market price of the security at the exact time the news or report was published. Example: 229.98. (Number)",
      "newsPublisher": "The publisher or media outlet that released the news article. Example: \"Benzinga\". (String)",
      "newsBaseURL": "The base domain of the news publisher, used to verify source authenticity. Example: \"benzinga.com\". (String)",
      "analystCompany": "The brokerage, investment bank, or research firm the analyst is affiliated with. Example: \"Jefferies\". (String)"
    }
  },
  {
    "name": "Price Target News API",
    "description": "The Price Target News API delivers timestamped analyst price-target headlines, enabling rapid sentiment digestion and audit-ready insight into brokerage calls. Classified under analyst_sentiment, it needs only **symbol** to return the latest items; **limit** and **page** let developers throttle volume or scroll history. Core workflows: trading desks mapping target changes to intraday price reactions, portfolio-risk systems logging downgrades, client apps surfacing ‘Street moves’ sections, and NLP pipelines that classify bullish versus bearish commentary. Each payload includes publication details (newsURL, newsTitle, newsPublisher, newsBaseURL), analyst identity (analystName, analystCompany), numeric targets (priceTarget, adjPriceTarget), and the live quote at publish time (priceWhenPosted), plus ISO8601 **publishedDate** for sequencing. Example for Apple on 2025-01-21 shows Jefferies cutting targets to 200.75 with the share price at 229.98. Integrate this endpoint upstream of alert engines, dashboards, or machine-learning features that rely on the freshest analyst signals.",
    "category": "analyst_sentiment",
    "use_cases": [
      "intraday trading signals from target revisions",
      "risk logs recording downgrades and upgrades",
      "client-facing ‘Street moves’ newsfeeds",
      "NLP sentiment classification on analyst coverage",
      "research portals linking directly to full articles"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {
        "limit": "An integer cap on the number of results returned by the endpoint. Example: 50 to restrict output to the top 50 matches. Must be ≥1 and ≤1000. (Integer, optional; defaults to 100)",
        "page": "A zero-based integer page index for paginated endpoints. Example: 2 to return the third page of results, given the configured `limit`. (Integer, optional; defaults to 0)"
      }
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "publishedDate": "The date and time when the news article or analyst report was published, in ISO 8601 format. Example: \"2025-01-21T01:24:32.000Z\". (String, DateTime)",
      "newsURL": "The URL to the full news article or analyst report. Example: \"https://www.benzinga.com/markets/equities/25/01/43087992/apple-gets-rare-downgrade-%20-from-jefferies-analyst...\". (String, URL)",
      "newsTitle": "The headline or title of the news article or analyst report. Example: \"Apple Gets Rare Downgrade From Jefferies, Analyst Warns On Slowing Revenue Growth, Missed Forecasts, And Falling iPhone Demand\". (String)",
      "analystName": "The full name of the analyst who authored the report or set the target. Example: \"Edison Lee\". (String)",
      "priceTarget": "The price target set by the analyst at the time of publication. Example: 200.75. (Number)",
      "adjPriceTarget": "The adjusted price target after any post-publication revisions. Example: 200.75. (Number)",
      "priceWhenPosted": "The market price of the security at the exact time the news or report was published. Example: 229.98. (Number)",
      "newsPublisher": "The publisher or media outlet that released the news article. Example: \"Benzinga\". (String)",
      "newsBaseURL": "The base domain of the news publisher, used to verify source authenticity. Example: \"benzinga.com\". (String)",
      "analystCompany": "The brokerage, investment bank, or research firm the analyst is affiliated with. Example: \"Jefferies\". (String)"
    }
  },
  {
    "name": "Price Target Latest News API",
    "description": "Price Target Latest News API (category: analyst_sentiment) streams the freshest analyst price-target headlines across the entire coverage universe—no symbol filter required. It supports optional pagination controls **limit** and **page** (up to 1 000 rows, 100 pages) so downstream systems can throttle volume. Common deployments include real-time ‘Street Moves’ tickers, alert engines that push target changes to traders, sentiment overlays in mobile apps, and NLP pipelines that extract bullish-versus-bearish tone. Each record ships with publication metadata (publishedDate, newsURL, newsTitle, newsPublisher, newsBaseURL), analyst identity (analystName, analystCompany), and market context (priceTarget, adjPriceTarget, priceWhenPosted). Example payload: {\"symbol\":\"OLN\",\"publishedDate\":\"2025-02-03T18:23:58.000Z\",\"newsURL\":\"https://www.benzinga.com/25/02/43444520/these-analysts-cut-their-forecasts-on-olin-after-q4-earnings\",\"newsTitle\":\"These Analysts Cut Their Forecasts On Olin After Q4 Earnings\",\"analystName\":\"Peter Osterland\",\"priceTarget\":32,\"adjPriceTarget\":32,\"priceWhenPosted\":27.76,\"newsPublisher\":\"Benzinga\",\"newsBaseURL\":\"benzinga.com\",\"analystCompany\":\"Truist Financial\"}. Plug this feed into any workflow that equates speed on analyst revisions with trading edge.",
    "category": "analyst_sentiment",
    "use_cases": [
      "real-time alerting on new price-target releases",
      "news tickers aggregating latest analyst moves",
      "sentiment dashboards tracking bullish/bearish flow",
      "risk logs recording downgrades and upgrades",
      "NLP pipelines classifying tone and impact"
    ],
    "parameters": {
      "required": {},
      "optional": {
        "limit": "An integer cap on the number of results returned by the endpoint. Example: 50 to restrict output to the top 50 matches. Must be ≥1 and ≤1000. (Integer, optional; defaults to 100)",
        "page": "A zero-based integer page index for paginated endpoints. Example: 2 to return the third page of results, given the configured `limit`. (Integer, optional; defaults to 0)"
      }
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "publishedDate": "The date and time when the news article or analyst report was published, in ISO 8601 format. Example: \"2025-01-21T01:24:32.000Z\". (String, DateTime)",
      "newsURL": "The URL to the full news article or analyst report. Example: \"https://www.benzinga.com/markets/equities/25/01/43087992/apple-gets-rare-downgrade-%20-from-jefferies-analyst...\". (String, URL)",
      "newsTitle": "The headline or title of the news article or analyst report. Example: \"Apple Gets Rare Downgrade From Jefferies, Analyst Warns On Slowing Revenue Growth, Missed Forecasts, And Falling iPhone Demand\". (String)",
      "analystName": "The full name of the analyst who authored the report or set the target. Example: \"Edison Lee\". (String)",
      "priceTarget": "The price target set by the analyst at the time of publication. Example: 200.75. (Number)",
      "adjPriceTarget": "The adjusted price target after any post-publication revisions. Example: 200.75. (Number)",
      "priceWhenPosted": "The market price of the security at the exact time the news or report was published. Example: 229.98. (Number)",
      "newsPublisher": "The publisher or media outlet that released the news article. Example: \"Benzinga\". (String)",
      "newsBaseURL": "The base domain of the news publisher, used to verify source authenticity. Example: \"benzinga.com\". (String)",
      "analystCompany": "The brokerage, investment bank, or research firm the analyst is affiliated with. Example: \"Jefferies\". (String)"
    }
  },
  {
    "name": "Price Target Latest News API",
    "description": "The Price Target Latest News API provides a continuous firehose of analyst target-price updates, delivering publication timestamp, headline, brokerage details, and the numeric target alongside the live market quote at release. Classified under analyst_sentiment, it requires no mandatory parameters; optional **limit** and **page** enable batch retrieval while respecting the 1 000-row, 100-page ceilings. Typical use cases: trading dashboards measuring intraday sentiment velocity, portfolio-monitoring tools that flag coverage changes, compliance workflows archiving research actions, and AI assistants answering “What new targets hit the tape today?”. Response schema includes symbol, publishedDate, newsURL, newsTitle, analystName, priceTarget, adjPriceTarget, priceWhenPosted, newsPublisher, newsBaseURL, and analystCompany—ready for immediate ingestion without transformation. Example row for OLN demonstrates Jefferies-led downgrade with a target of 32 when shares traded at 27.76. Integrate this endpoint wherever time-sensitive analyst intelligence powers investment decisions.",
    "category": "analyst_sentiment",
    "use_cases": [
      "intraday sentiment heat-maps for trading desks",
      "portfolio alerts when coverage changes or targets shift",
      "research portals archiving analyst actions",
      "chatbots summarizing daily target-price flow",
      "machine-learning features based on target revisions"
    ],
    "parameters": {
      "required": {},
      "optional": {
        "limit": "An integer cap on the number of results returned by the endpoint. Example: 50 to restrict output to the top 50 matches. Must be ≥1 and ≤1000. (Integer, optional; defaults to 100)",
        "page": "A zero-based integer page index for paginated endpoints. Example: 2 to return the third page of results, given the configured `limit`. (Integer, optional; defaults to 0)"
      }
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "publishedDate": "The date and time when the news article or analyst report was published, in ISO 8601 format. Example: \"2025-01-21T01:24:32.000Z\". (String, DateTime)",
      "newsURL": "The URL to the full news article or analyst report. Example: \"https://www.benzinga.com/markets/equities/25/01/43087992/apple-gets-rare-downgrade-%20-from-jefferies-analyst...\". (String, URL)",
      "newsTitle": "The headline or title of the news article or analyst report. Example: \"Apple Gets Rare Downgrade From Jefferies, Analyst Warns On Slowing Revenue Growth, Missed Forecasts, And Falling iPhone Demand\". (String)",
      "analystName": "The full name of the analyst who authored the report or set the target. Example: \"Edison Lee\". (String)",
      "priceTarget": "The price target set by the analyst at the time of publication. Example: 200.75. (Number)",
      "adjPriceTarget": "The adjusted price target after any post-publication revisions. Example: 200.75. (Number)",
      "priceWhenPosted": "The market price of the security at the exact time the news or report was published. Example: 229.98. (Number)",
      "newsPublisher": "The publisher or media outlet that released the news article. Example: \"Benzinga\". (String)",
      "newsBaseURL": "The base domain of the news publisher, used to verify source authenticity. Example: \"benzinga.com\". (String)",
      "analystCompany": "The brokerage, investment bank, or research firm the analyst is affiliated with. Example: \"Jefferies\". (String)"
    }
  },
  {
    "name": "Stock Grades API",
    "description": "Stock Grades API (category: analyst_sentiment) captures upgrades, downgrades, and maintained ratings from major brokerages, allowing investors to monitor how expert opinions on a company evolve. Required parameter **symbol** identifies the equity. Typical implementations include risk dashboards flagging fresh downgrades, screeners that filter for newly upgraded names, alert engines that notify when grades change, and chatbots answering “Who just upgraded AAPL?” Each record returns the **date** of the call, **gradingCompany**, **previousGrade**, **newGrade**, and **action** (upgrade, downgrade, maintain). Example payload: {\"symbol\":\"AAPL\",\"date\":\"2025-01-31\",\"gradingCompany\":\"Morgan Stanley\",\"previousGrade\":\"Overweight\",\"newGrade\":\"Overweight\",\"action\":\"maintain\"}. Integrate this feed wherever timely analyst-grade shifts drive investment strategy or compliance logging.",
    "category": "analyst_sentiment",
    "use_cases": [
      "trigger alerts on upgrades or downgrades",
      "filter screens for stocks recently upgraded",
      "track brokerage sentiment trends over time",
      "power chatbot responses on analyst grade history",
      "feed quantitative models that weight grade momentum"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "gradingCompany": "The institution or firm providing the financial grade or rating (e.g., \"Morgan Stanley\"). (String)",
      "previousGrade": "The prior rating or grade assigned before the most recent change. Example: \"Overweight\". (String)",
      "newGrade": "The current rating or grade assigned after the most recent change. Example: \"Overweight\". (String)",
      "action": "The action taken by the analyst or institution, such as \"upgrade\", \"downgrade\", or \"maintain\". Example: \"maintain\". (String)"
    }
  },
  {
    "name": "Stock Grades API",
    "description": "The Stock Grades API delivers broker-driven rating actions in a simple JSON format, enabling portfolio managers to audit sentiment shifts at the analyst-house level. Classified under analyst_sentiment, it requires only **symbol**; no pagination or limits complicate usage. Core applications include compliance logs documenting grade changes, research portals displaying a timeline of brokerage opinions, quantitative models that test performance following upgrades, and investor-relation dashboards benchmarking coverage quality. Output schema—symbol, date, gradingCompany, previousGrade, newGrade, action—arrives ready for ingestion. Example row illustrates Morgan Stanley reiterating ‘Overweight’ on AAPL, tagged with action ‘maintain’. Deploy this endpoint upstream of alerting systems, sentiment analytics, or historical grade-trend visualizations.",
    "category": "analyst_sentiment",
    "use_cases": [
      "compliance archives of analyst actions",
      "visual timelines of brokerage recommendations",
      "quant back-tests on post-upgrade performance",
      "IR decks summarizing analyst coverage quality",
      "chatbots answering grade-change queries"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "gradingCompany": "The institution or firm providing the financial grade or rating (e.g., \"Morgan Stanley\"). (String)",
      "previousGrade": "The prior rating or grade assigned before the most recent change. Example: \"Overweight\". (String)",
      "newGrade": "The current rating or grade assigned after the most recent change. Example: \"Overweight\". (String)",
      "action": "The action taken by the analyst or institution, such as \"upgrade\", \"downgrade\", or \"maintain\". Example: \"maintain\". (String)"
    }
  },
  {
    "name": "Historical Stock Grades API",
    "description": "Historical Stock Grades API (category: analyst_sentiment) supplies a longitudinal record of brokerage opinions so quants can back-test the impact of rating drift and IR teams can benchmark coverage trends. Required parameter **symbol** targets the equity; optional **limit** (max 1 000) paginates the series. Primary use cases span sentiment-momentum factors, risk systems that flag deteriorating consensus, dashboards plotting buy/hold/sell ratios, and chatbots answering questions like “How did analysts view AAPL in 2023 versus 2025?”. Each row returns **date**, and counts of **analystRatingsBuy**, **analystRatingsHold**, **analystRatingsSell**, **analystRatingsStrongSell**. Example payload: {\"symbol\":\"AAPL\",\"date\":\"2025-02-01\",\"analystRatingsBuy\":8,\"analystRatingsHold\":14,\"analystRatingsSell\":2,\"analystRatingsStrongSell\":2}. Integrate this endpoint wherever time-series analyst sentiment drives screening, reporting, or compliance logging.",
    "category": "analyst_sentiment",
    "use_cases": [
      "build factors that weight recent upgrades vs. downgrades",
      "plot multi-year analyst sentiment charts in research portals",
      "trigger alerts when buy-ratings trend reverses",
      "benchmark coverage quality for investor-relations teams",
      "feed NLP models predicting price action from rating shifts"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {
        "limit": "An integer cap on the number of results returned by the endpoint. Example: 50 to restrict output to the top 50 matches. Must be ≥1 and ≤1000. (Integer, optional; defaults to 100)"
      }
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "analystRatingsBuy": "The total number of analysts recommending a 'Buy' rating. Example: 8. (Number)",
      "analystRatingsHold": "The total number of analysts recommending a 'Hold' rating. Example: 14. (Number)",
      "analystRatingsSell": "The total number of analysts recommending a 'Sell' rating. Example: 2. (Number)",
      "analystRatingsStrongSell": "The total number of analysts recommending a 'Strong Sell' rating. Example: 2. (Number)"
    }
  },
  {
    "name": "Historical Stock Grades API",
    "description": "The Historical Stock Grades API archives daily brokerage stance counts—buy, hold, sell, strong-sell—enabling analysts to quantify sentiment cycles and correlate upgrades with price performance. Categorized under analyst_sentiment, it demands only the **symbol**; **limit** optionally caps rows up to one thousand per request. Key deployments include momentum screens that react to improving buy-rate, compliance audits tracing rating trajectories, academic research on analyst herding, and AI assistants responding to “Show me the trend in sell calls for AAPL over the last decade.” Output schema matches the snapshot format but is time-stamped: symbol, date, analystRatingsBuy, analystRatingsHold, analystRatingsSell, analystRatingsStrongSell. Sample object for Apple on 2025-02-01 shows 8 buys, 14 holds, 2 sells, 2 strong sells. Use this endpoint wherever granular, historical analyst sentiment is a critical input to decision frameworks.",
    "category": "analyst_sentiment",
    "use_cases": [
      "momentum strategies based on improving buy ratios",
      "compliance tools archiving long-term rating histories",
      "academic studies on analyst herding behavior",
      "chatbots answering historical rating distribution queries",
      "risk dashboards correlating sentiment trends with volatility"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {
        "limit": "An integer cap on the number of results returned by the endpoint. Example: 50 to restrict output to the top 50 matches. Must be ≥1 and ≤1000. (Integer, optional; defaults to 100)"
      }
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "analystRatingsBuy": "The total number of analysts recommending a 'Buy' rating. Example: 8. (Number)",
      "analystRatingsHold": "The total number of analysts recommending a 'Hold' rating. Example: 14. (Number)",
      "analystRatingsSell": "The total number of analysts recommending a 'Sell' rating. Example: 2. (Number)",
      "analystRatingsStrongSell": "The total number of analysts recommending a 'Strong Sell' rating. Example: 2. (Number)"
    }
  },
  {
    "name": "Stock Grades Summary API",
    "description": "Stock Grades Summary API (category: analyst_sentiment) delivers a single-row snapshot of market consensus by aggregating counts of strong buy, buy, hold, sell, and strong sell recommendations for a given equity. Required parameter **symbol** pins the stock. Typical use cases include sentiment-weighted factor screens, portfolio dashboards displaying consensus at a glance, risk engines flagging deteriorating opinion mix, and chatbots answering “What’s Wall Street’s stance on AAPL right now?”. The schema returns each rating bucket plus an overall **consensus** text label. Example: {\"symbol\":\"AAPL\",\"strongBuy\":1,\"buy\":29,\"hold\":11,\"sell\":4,\"strongSell\":0,\"consensus\":\"Buy\"}. Integrate this endpoint wherever a concise, up-to-date view of analyst conviction informs allocation or compliance decisions.",
    "category": "analyst_sentiment",
    "use_cases": [
      "display consensus rating in watchlists or dashboards",
      "filter screens to include only stocks with Buy or better",
      "alert when consensus shifts from Buy to Hold",
      "augment factor models with sentiment weights",
      "chatbots answering analyst-consensus questions"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "strongBuy": "The number of 'Strong Buy' recommendations currently issued. Example: 1. (Number)",
      "buy": "The total number of 'Buy' recommendations. Example: 29. (Number)",
      "hold": "The total number of 'Hold' recommendations. Example: 11. (Number)",
      "sell": "The total number of 'Sell' recommendations. Example: 4. (Number)",
      "strongSell": "The total number of 'Strong Sell' recommendations. Example: 0. (Number)",
      "consensus": "The aggregated consensus rating or recommendation for the security (e.g., 'Buy', 'Hold', or 'Sell'). Example: \"Buy\". (String)"
    }
  },
  {
    "name": "Stock Grades Summary API",
    "description": "The Stock Grades Summary API consolidates broker recommendations into five numeric buckets and a headline consensus, offering an immediate read on analyst sentiment. Classified under analyst_sentiment, it requires only the **symbol** parameter and returns fields strongBuy, buy, hold, sell, strongSell, and consensus. Key integrations include portfolio-monitoring tools that benchmark holdings against Street opinion, compliance reports comparing marketing language to consensus, quantitative models that adjust weightings based on sentiment, and IR dashboards tracking changes in sell-side conviction. Sample output for Apple shows 1 strong buy, 29 buys, 11 holds, 4 sells, 0 strong sells, yielding a consensus of “Buy”. Use this endpoint when you need a concise, authoritative snapshot of how analysts collectively view a stock.",
    "category": "analyst_sentiment",
    "use_cases": [
      "benchmark holdings against Street consensus",
      "compliance checks on marketing claims",
      "sentiment factors in quantitative strategies",
      "IR dashboards monitoring analyst conviction",
      "chatbot explanations of overall analyst outlook"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "strongBuy": "The number of 'Strong Buy' recommendations currently issued. Example: 1. (Number)",
      "buy": "The total number of 'Buy' recommendations. Example: 29. (Number)",
      "hold": "The total number of 'Hold' recommendations. Example: 11. (Number)",
      "sell": "The total number of 'Sell' recommendations. Example: 4. (Number)",
      "strongSell": "The total number of 'Strong Sell' recommendations. Example: 0. (Number)",
      "consensus": "The aggregated consensus rating or recommendation for the security (e.g., 'Buy', 'Hold', or 'Sell'). Example: \"Buy\". (String)"
    }
  },
  {
    "name": "Stock Grade News API",
    "description": "Stock Grade News API (category: analyst_sentiment) pushes real-time brokerage rating actions—upgrades, downgrades, initiations, and reiterations—alongside the headline, publisher, analyst house, and at-publication share price. Required parameter **symbol** filters by equity; optional **page** and **limit** (≤100) handle pagination. Typical deployments: alert engines that ping traders on fresh grade changes, dashboards tracking daily sentiment flow, compliance logs archiving rating shifts, and chatbots answering “Who just changed AAPL’s rating and why?”. The response delivers symbol, publishedDate (ISO-8601), newsURL, newsTitle, newsBaseURL, newsPublisher, newGrade, previousGrade, gradingCompany, action, and priceWhenPosted—ready for downstream analytics with zero transformation. Example: {\"symbol\":\"AAPL\",\"publishedDate\":\"2025-01-31T10:11:47.000Z\",\"newsURL\":\"https://…\",\"newsTitle\":\"Why Apple Shares Are Trading Higher…\",\"newsBaseURL\":\"benzinga.com\",\"newsPublisher\":\"Benzinga\",\"newGrade\":\"Buy\",\"previousGrade\":\"Hold\",\"gradingCompany\":\"Maxim Group\",\"action\":\"initialise\",\"priceWhenPosted\":237.59}. Wire this feed wherever immediacy on analyst grade moves informs trading, research, or governance workflows.",
    "category": "analyst_sentiment",
    "use_cases": [
      "real-time alerts on rating upgrades or downgrades",
      "dashboards summarizing daily grade activity",
      "risk systems flagging deteriorating analyst stance",
      "chatbots answering questions on latest analyst grades",
      "compliance archives of rating-change news"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {
        "page": "A zero-based integer page index for paginated endpoints. Example: 2 to return the third page of results, given the configured `limit`. (Integer, optional; defaults to 0)",
        "limit": "An integer cap on the number of results returned by the endpoint. Example: 50 to restrict output to the top 50 matches. Must be ≥1 and ≤1000. (Integer, optional; defaults to 100)"
      }
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "publishedDate": "The date and time when the news article or analyst report was published, in ISO 8601 format. Example: \"2025-01-21T01:24:32.000Z\". (String, DateTime)",
      "newsURL": "The URL to the full news article or analyst report. Example: \"https://www.benzinga.com/markets/equities/25/01/43087992/apple-gets-rare-downgrade-%20-from-jefferies-analyst...\". (String, URL)",
      "newsTitle": "The headline or title of the news article or analyst report. Example: \"Apple Gets Rare Downgrade From Jefferies, Analyst Warns On Slowing Revenue Growth, Missed Forecasts, And Falling iPhone Demand\". (String)",
      "newsBaseURL": "The base domain of the news publisher, used to verify source authenticity. Example: \"benzinga.com\". (String)",
      "newsPublisher": "The publisher or media outlet that released the news article. Example: \"Benzinga\". (String)",
      "newGrade": "The current rating or grade assigned after the most recent change. Example: \"Overweight\". (String)",
      "previousGrade": "The prior rating or grade assigned before the most recent change. Example: \"Overweight\". (String)",
      "gradingCompany": "The institution or firm providing the financial grade or rating (e.g., \"Morgan Stanley\"). (String)",
      "action": "The action taken by the analyst or institution, such as \"upgrade\", \"downgrade\", or \"maintain\". Example: \"maintain\". (String)",
      "priceWhenPosted": "The market price of the security at the exact time the news or report was published. Example: 229.98. (Number)"
    }
  },
  {
    "name": "Stock Grade News API",
    "description": "The Stock Grade News API aggregates live analyst-grade headlines into a structured JSON feed, providing a fast lane to brokerage opinion changes. Under analyst_sentiment, it mandates **symbol**; **page** and **limit** optionally throttle volume (max 100 records/request). Core integrations include trading desks mapping rating shifts to intraday price action, investor-relations dashboards monitoring broker coverage, NLP pipelines classifying bullish vs. bearish tone, and compliance tools storing a tamper-proof log of analyst actions. Each item returns the publication timestamp, full news URL, headline, publishing outlet, analyst firm, previous vs. new grade, action type, and contemporaneous share price—arming downstream models with context and numeric grounding. Sample output for Apple illustrates Maxim Group initiating with ‘Buy’ while shares traded at 237.59. Leverage this endpoint wherever time-sensitive grading intel powers decision making or regulatory reporting.",
    "category": "analyst_sentiment",
    "use_cases": [
      "intraday trading signals derived from grade moves",
      "coverage-monitor dashboards for IR teams",
      "NLP sentiment classification on analyst commentary",
      "machine-learning features capturing grade-change momentum",
      "regulatory reporting of analyst recommendation activity"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {
        "page": "A zero-based integer page index for paginated endpoints. Example: 2 to return the third page of results, given the configured `limit`. (Integer, optional; defaults to 0)",
        "limit": "An integer cap on the number of results returned by the endpoint. Example: 50 to restrict output to the top 50 matches. Must be ≥1 and ≤1000. (Integer, optional; defaults to 100)"
      }
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "publishedDate": "The date and time when the news article or analyst report was published, in ISO 8601 format. Example: \"2025-01-21T01:24:32.000Z\". (String, DateTime)",
      "newsURL": "The URL to the full news article or analyst report. Example: \"https://www.benzinga.com/markets/equities/25/01/43087992/apple-gets-rare-downgrade-%20-from-jefferies-analyst...\". (String, URL)",
      "newsTitle": "The headline or title of the news article or analyst report. Example: \"Apple Gets Rare Downgrade From Jefferies, Analyst Warns On Slowing Revenue Growth, Missed Forecasts, And Falling iPhone Demand\". (String)",
      "newsBaseURL": "The base domain of the news publisher, used to verify source authenticity. Example: \"benzinga.com\". (String)",
      "newsPublisher": "The publisher or media outlet that released the news article. Example: \"Benzinga\". (String)",
      "newGrade": "The current rating or grade assigned after the most recent change. Example: \"Overweight\". (String)",
      "previousGrade": "The prior rating or grade assigned before the most recent change. Example: \"Overweight\". (String)",
      "gradingCompany": "The institution or firm providing the financial grade or rating (e.g., \"Morgan Stanley\"). (String)",
      "action": "The action taken by the analyst or institution, such as \"upgrade\", \"downgrade\", or \"maintain\". Example: \"maintain\". (String)",
      "priceWhenPosted": "The market price of the security at the exact time the news or report was published. Example: 229.98. (Number)"
    }
  },
  {
    "name": "Stock Grade Latest News API",
    "description": "Stock Grade Latest News API (category: analyst_sentiment) delivers a live firehose of brokerage rating headlines across all covered symbols—no ticker filter required. Typical deployments: trade-floor alert engines, sentiment dashboards showing real-time grade flow, NLP pipelines classifying bullish vs. bearish tone, and compliance archives capturing recommendation changes. Parameters: optional **page** (0-99) and **limit** (≤1 000) for pagination; omit them to pull the default first page. The payload arrives normalized with symbol, publishedDate (ISO-8601), newsURL, newsTitle, newsPublisher, newsBaseURL, newGrade, previousGrade, gradingCompany, action, and priceWhenPosted, giving downstream systems instant context and numeric anchoring. Example row: {\"symbol\":\"PYPL\",\"publishedDate\":\"2025-02-04T19:18:04.000Z\",\"newsURL\":\"https://…\",\"newsTitle\":\"PayPal Transaction Margins and Payment Volume Drive Growth…\",\"newsBaseURL\":\"benzinga.com\",\"newsPublisher\":\"Benzinga\",\"newGrade\":\"Overweight\",\"previousGrade\":\"Overweight\",\"gradingCompany\":\"J.P. Morgan\",\"action\":\"hold\",\"priceWhenPosted\":77.725}. Wire this endpoint into any workflow where speed to the latest analyst grade moves is a competitive edge.",
    "category": "analyst_sentiment",
    "use_cases": [
      "real-time alerts on rating actions across the market",
      "dashboard widgets summarizing daily upgrade/downgrade flow",
      "NLP sentiment classification of analyst commentary",
      "risk logs archiving brokerage recommendations",
      "machine-learning features based on grade-change velocity"
    ],
    "parameters": {
      "required": {},
      "optional": {
        "page": "A zero-based integer page index for paginated endpoints. Example: 2 to return the third page of results, given the configured `limit`. (Integer, optional; defaults to 0)",
        "limit": "An integer cap on the number of results returned by the endpoint. Example: 50 to restrict output to the top 50 matches. Must be ≥1 and ≤1000. (Integer, optional; defaults to 100)"
      }
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "publishedDate": "The date and time when the news article or analyst report was published, in ISO 8601 format. Example: \"2025-01-21T01:24:32.000Z\". (String, DateTime)",
      "newsURL": "The URL to the full news article or analyst report. Example: \"https://www.benzinga.com/markets/equities/25/01/43087992/apple-gets-rare-downgrade-%20-from-jefferies-analyst...\". (String, URL)",
      "newsTitle": "The headline or title of the news article or analyst report. Example: \"Apple Gets Rare Downgrade From Jefferies, Analyst Warns On Slowing Revenue Growth, Missed Forecasts, And Falling iPhone Demand\". (String)",
      "newsBaseURL": "The base domain of the news publisher, used to verify source authenticity. Example: \"benzinga.com\". (String)",
      "newsPublisher": "The publisher or media outlet that released the news article. Example: \"Benzinga\". (String)",
      "newGrade": "The current rating or grade assigned after the most recent change. Example: \"Overweight\". (String)",
      "previousGrade": "The prior rating or grade assigned before the most recent change. Example: \"Overweight\". (String)",
      "gradingCompany": "The institution or firm providing the financial grade or rating (e.g., \"Morgan Stanley\"). (String)",
      "action": "The action taken by the analyst or institution, such as \"upgrade\", \"downgrade\", or \"maintain\". Example: \"maintain\". (String)",
      "priceWhenPosted": "The market price of the security at the exact time the news or report was published. Example: 229.98. (Number)"
    }
  },
  {
    "name": "Stock Grade Latest News API",
    "description": "The Stock Grade Latest News API aggregates the most recent analyst rating headlines—upgrades, downgrades, initiations, and reiterations—into a single high-velocity feed. Classified under analyst_sentiment, it requires no mandatory parameters; optional **page** and **limit** manage batch size up to 1 000 records per call. Core integrations include intraday trading dashboards correlating grade shifts with price moves, portfolio-monitoring tools flagging coverage changes, AI assistants answering “What grade changes hit the tape today?”, and compliance systems logging research actions. Returned fields: symbol, publishedDate, newsURL, newsTitle, newsPublisher, newsBaseURL, newGrade, previousGrade, gradingCompany, action, and priceWhenPosted. Example: the PYPL record above shows J.P. Morgan reaffirming ‘Overweight’ while shares traded at 77.73. Embed this endpoint upstream of sentiment analytics, alert frameworks, or historical-event stores whenever real-time analyst intelligence is mission-critical.",
    "category": "analyst_sentiment",
    "use_cases": [
      "intraday trading signals from grade headlines",
      "portfolio alerts on brokerage coverage shifts",
      "chatbot answers summarizing latest analyst moves",
      "compliance audit trails of rating actions",
      "back-testing grade momentum vs. price performance"
    ],
    "parameters": {
      "required": {},
      "optional": {
        "page": "A zero-based integer page index for paginated endpoints. Example: 2 to return the third page of results, given the configured `limit`. (Integer, optional; defaults to 0)",
        "limit": "An integer cap on the number of results returned by the endpoint. Example: 50 to restrict output to the top 50 matches. Must be ≥1 and ≤1000. (Integer, optional; defaults to 100)"
      }
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "publishedDate": "The date and time when the news article or analyst report was published, in ISO 8601 format. Example: \"2025-01-21T01:24:32.000Z\". (String, DateTime)",
      "newsURL": "The URL to the full news article or analyst report. Example: \"https://www.benzinga.com/markets/equities/25/01/43087992/apple-gets-rare-downgrade-%20-from-jefferies-analyst...\". (String, URL)",
      "newsTitle": "The headline or title of the news article or analyst report. Example: \"Apple Gets Rare Downgrade From Jefferies, Analyst Warns On Slowing Revenue Growth, Missed Forecasts, And Falling iPhone Demand\". (String)",
      "newsBaseURL": "The base domain of the news publisher, used to verify source authenticity. Example: \"benzinga.com\". (String)",
      "newsPublisher": "The publisher or media outlet that released the news article. Example: \"Benzinga\". (String)",
      "newGrade": "The current rating or grade assigned after the most recent change. Example: \"Overweight\". (String)",
      "previousGrade": "The prior rating or grade assigned before the most recent change. Example: \"Overweight\". (String)",
      "gradingCompany": "The institution or firm providing the financial grade or rating (e.g., \"Morgan Stanley\"). (String)",
      "action": "The action taken by the analyst or institution, such as \"upgrade\", \"downgrade\", or \"maintain\". Example: \"maintain\". (String)",
      "priceWhenPosted": "The market price of the security at the exact time the news or report was published. Example: 229.98. (Number)"
    }
  },
  {
    "name": "Dividends Company API",
    "description": "Dividends Company API (category: corporate_actions) exposes a company’s full dividend schedule—declaration, record, and payment dates—along with the announced cash amount, adjusted amount, indicated forward yield, and payout frequency. Required parameter **symbol** identifies the equity; optional **limit** (≤1 000 rows) paginates results. Core use-cases include portfolio-income forecasting, ex-dividend alerting, yield-factor screening, dividend-discount valuation models, and IR dashboards tracking payout history. The schema returns symbol, date (ex-dividend), recordDate, paymentDate, declarationDate, adjDividend, dividend, yield, and frequency. Example: {\"symbol\":\"AAPL\",\"date\":\"2025-02-10\",\"recordDate\":\"2025-02-10\",\"paymentDate\":\"2025-02-13\",\"declarationDate\":\"2025-01-30\",\"adjDividend\":0.25,\"dividend\":0.25,\"yield\":0.42955326460481097,\"frequency\":\"Quarterly\"}. Integrate this endpoint wherever accurate dividend event data drives cash-flow planning or valuation analysis.",
    "category": "corporate_actions",
    "use_cases": [
      "forecast portfolio cash income and reinvestment dates",
      "trigger alerts before ex-dividend and record dates",
      "screen for high-yield or dividend-growth stocks",
      "populate dividend-discount or Gordon-growth valuation models",
      "historical payout analysis for investor-relations reporting"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {
        "limit": "An integer cap on the number of results returned by the endpoint. Example: 50 to restrict output to the top 50 matches. Must be ≥1 and ≤1000. (Integer, optional; defaults to 100)"
      }
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "recordDate": "The date on which a specific corporate record is taken, such as for dividends or proxy voting. Example: \"2025-02-10\". (String, Date)",
      "paymentDate": "The date on which a payment, such as a dividend, is made to shareholders. Example: \"2025-02-13\". (String, Date)",
      "declarationDate": "The date on which a company officially declares a dividend or corporate action. Example: \"2025-01-30\". (String, Date)",
      "adjDividend": "The dividend amount per share adjusted for corporate actions (e.g., splits). Example: 0.25. (Number)",
      "dividend": "The raw dividend amount per share before any adjustments. Example: 0.25. (Number)",
      "yield": "The dividend yield expressed as a percentage of the share price. Example: 0.42955326460481097 (representing ~0.43%). (Number)",
      "frequency": "The frequency of the dividend or corporate action, such as \"Quarterly\" or \"Annually\". Example: \"Quarterly\". (String)"
    }
  },
  {
    "name": "Dividends Company API",
    "description": "The Dividends Company API delivers structured dividend events for an individual stock, enabling investors and applications to monitor upcoming cash distributions and analyze historical payout trends. Categorized under corporate_actions, it requires **symbol** and optionally accepts **limit** to cap output at up to 1 000 rows. Typical integrations include cash-flow dashboards displaying next payment dates, tax-planning tools calculating dividend income, quant screens ranking equities by forward yield, and chatbots answering questions like “When does AAPL pay its dividend?”. Each record provides ex-dividend **date**, **recordDate**, **paymentDate**, **declarationDate**, raw and adjusted **dividend** amounts, computed **yield**, and payout **frequency**. Sample row for Apple shows a quarterly cash distribution of 0.25 USD with payment on 2025-02-13. Use this endpoint wherever reliable dividend timing and yield metrics are critical inputs to investment or advisory workflows.",
    "category": "corporate_actions",
    "use_cases": [
      "display next dividend payment in brokerage apps",
      "calculate tax liabilities from dividend income",
      "rank stocks by five-year dividend-growth rate",
      "chatbots answering dividend schedule questions",
      "feed machine-learning models predicting dividend sustainability"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {
        "limit": "An integer cap on the number of results returned by the endpoint. Example: 50 to restrict output to the top 50 matches. Must be ≥1 and ≤1000. (Integer, optional; defaults to 100)"
      }
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "recordDate": "The date on which a specific corporate record is taken, such as for dividends or proxy voting. Example: \"2025-02-10\". (String, Date)",
      "paymentDate": "The date on which a payment, such as a dividend, is made to shareholders. Example: \"2025-02-13\". (String, Date)",
      "declarationDate": "The date on which a company officially declares a dividend or corporate action. Example: \"2025-01-30\". (String, Date)",
      "adjDividend": "The dividend amount per share adjusted for corporate actions (e.g., splits). Example: 0.25. (Number)",
      "dividend": "The raw dividend amount per share before any adjustments. Example: 0.25. (Number)",
      "yield": "The dividend yield expressed as a percentage of the share price. Example: 0.42955326460481097 (representing ~0.43%). (Number)",
      "frequency": "The frequency of the dividend or corporate action, such as \"Quarterly\" or \"Annually\". Example: \"Quarterly\". (String)"
    }
  },
  {
    "name": "Dividends Calendar API",
    "description": "Dividends Calendar API (category: corporate_actions) publishes a forward-looking schedule of cash-distribution events across every listed security. Supplying the required **from** and **to** dates (ISO-8601, ≤ 90-day span) returns up to 4 000 dividend records, each containing ex-dividend **date**, **recordDate**, **paymentDate**, **declarationDate**, raw and adjusted **dividend** amounts, computed **yield**, and payout **frequency**. Integrate the feed into income-forecast dashboards, ex-dividend alert systems, yield-factor screeners, and chatbots answering questions like “Which stocks go ex-dividend next week?”. Example row: {\"symbol\":\"1D0.SI\",\"date\":\"2025-02-04\",\"recordDate\":\"\",\"paymentDate\":\"\",\"declarationDate\":\"\",\"adjDividend\":0.01,\"dividend\":0.01,\"yield\":6.25,\"frequency\":\"Semi-Annual\"}. Use this endpoint whenever precise dividend-event timing is critical for cash-flow planning or strategy testing.",
    "category": "corporate_actions",
    "use_cases": [
      "build upcoming ex-dividend calendars in brokerage apps",
      "trigger portfolio alerts before record and payment dates",
      "screen for stocks with high forward yield",
      "forecast dividend cash flows for portfolio re-investment",
      "feed quantitative models that trade ex-dividend anomalies"
    ],
    "parameters": {
      "required": {
        "from": "The ISO 8601 date (YYYY-MM-DD) indicating the start of a time range filter. Example: \"2025-01-01\" to include only data from January 1, 2025 onward. Must be ≤ `to`. (String, Date, optional)",
        "to": "The ISO 8601 date (YYYY-MM-DD) indicating the end of a time range filter. Example: \"2025-12-31\" to include only data up to December 31, 2025. Must be ≥ `from`. (String, Date, optional)"
      },
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "recordDate": "The date on which a specific corporate record is taken, such as for dividends or proxy voting. Example: \"2025-02-10\". (String, Date)",
      "paymentDate": "The date on which a payment, such as a dividend, is made to shareholders. Example: \"2025-02-13\". (String, Date)",
      "declarationDate": "The date on which a company officially declares a dividend or corporate action. Example: \"2025-01-30\". (String, Date)",
      "adjDividend": "The dividend amount per share adjusted for corporate actions (e.g., splits). Example: 0.25. (Number)",
      "dividend": "The raw dividend amount per share before any adjustments. Example: 0.25. (Number)",
      "yield": "The dividend yield expressed as a percentage of the share price. Example: 0.42955326460481097 (representing ~0.43%). (Number)",
      "frequency": "The frequency of the dividend or corporate action, such as \"Quarterly\" or \"Annually\". Example: \"Quarterly\". (String)"
    }
  },
  {
    "name": "Dividends Calendar API",
    "description": "The Dividends Calendar API offers a market-wide timeline of dividend events, enabling investors and applications to monitor upcoming payouts without filtering by symbol. Classified under corporate_actions, it requires **from** and **to** date parameters (maximum 90-day window) and returns up to 4 000 rows per request. Typical workflows include cash-income forecasting, tax-planning tools tallying dividend receipts, screener back-ends ranking equities by near-term yield, and AI assistants answering “Show me every stock going ex-dividend this month.” Each record supplies symbol, event **date** (ex-dividend), key corporate dates, dividend amounts (raw and adjusted), forward **yield**, and **frequency**. Sample output for Singapore-listed 1D0.SI illustrates a semi-annual 0.01 dividend with a 6.25 % yield. Deploy this endpoint upstream of alert engines, portfolio dashboards, or research portals whenever a consolidated, date-driven view of dividend activity is required.",
    "category": "corporate_actions",
    "use_cases": [
      "cash-flow planning for dividend portfolios",
      "generate ex-dividend watchlists for swing traders",
      "rank equities by near-term income potential",
      "chatbots answering calendar-based dividend queries",
      "tax-planning dashboards estimating dividend income"
    ],
    "parameters": {
      "required": {
        "from": "The ISO 8601 date (YYYY-MM-DD) indicating the start of a time range filter. Example: \"2025-01-01\" to include only data from January 1, 2025 onward. Must be ≤ `to`. (String, Date, optional)",
        "to": "The ISO 8601 date (YYYY-MM-DD) indicating the end of a time range filter. Example: \"2025-12-31\" to include only data up to December 31, 2025. Must be ≥ `from`. (String, Date, optional)"
      },
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "recordDate": "The date on which a specific corporate record is taken, such as for dividends or proxy voting. Example: \"2025-02-10\". (String, Date)",
      "paymentDate": "The date on which a payment, such as a dividend, is made to shareholders. Example: \"2025-02-13\". (String, Date)",
      "declarationDate": "The date on which a company officially declares a dividend or corporate action. Example: \"2025-01-30\". (String, Date)",
      "adjDividend": "The dividend amount per share adjusted for corporate actions (e.g., splits). Example: 0.25. (Number)",
      "dividend": "The raw dividend amount per share before any adjustments. Example: 0.25. (Number)",
      "yield": "The dividend yield expressed as a percentage of the share price. Example: 0.42955326460481097 (representing ~0.43%). (Number)",
      "frequency": "The frequency of the dividend or corporate action, such as \"Quarterly\" or \"Annually\". Example: \"Quarterly\". (String)"
    }
  },
  {
    "name": "Earnings Report API",
    "description": "Earnings Report API (category: earnings) surfaces scheduled and historical earnings details for a single equity. By supplying the required **symbol** and optional **limit** (≤ 1 000 rows), developers receive the report **date**, actual and estimated **EPS** and **revenue**, plus the **lastUpdated** stamp. Common integrations include earnings-season dashboards, alert engines that remind users ahead of release, valuation models that compare consensus versus results, risk monitors watching revenue surprises, and chatbots answering “When does AAPL next report earnings?” The response schema—symbol, date, epsActual, epsEstimated, revenueActual, revenueEstimated, lastUpdated—arrives normalized for downstream analytics. Example row: {\"symbol\":\"AAPL\",\"date\":\"2025-10-29\",\"epsActual\":null,\"epsEstimated\":null,\"revenueActual\":null,\"revenueEstimated\":null,\"lastUpdated\":\"2025-02-04\"}. Use this endpoint wherever timely earnings visibility drives investment or compliance workflows.",
    "category": "earnings",
    "use_cases": [
      "build earnings-calendar widgets in brokerage apps",
      "trigger alerts ahead of earnings dates",
      "compare reported vs. estimated EPS in research reports",
      "feed risk models that react to revenue surprises",
      "chatbots answering company earnings-date queries"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {
        "limit": "An integer cap on the number of results returned by the endpoint. Example: 50 to restrict output to the top 50 matches. Must be ≥1 and ≤1000. (Integer, optional; defaults to 100)"
      }
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "epsActual": "The actual reported Earnings Per Share (EPS) for the period, as reported by the company. Example: \"None\" or 3.25. (Number or String)",
      "epsEstimated": "The consensus estimated EPS for the period, typically drawn from analyst forecasts. Example: \"None\" or 3.40. (Number or String)",
      "revenueActual": "The actual reported revenue for the period. Example: \"None\" or 100000000. (Number or String)",
      "revenueEstimated": "The consensus estimated revenue for the period. Example: \"None\" or 105000000. (Number or String)",
      "lastUpdated": "The last date and time when this dataset or data field was updated in the system. Example: \"2025-02-04\". (String, Date)"
    }
  },
  {
    "name": "Earnings Report API",
    "description": "The Earnings Report API delivers a concise feed of upcoming and historical earnings information—report dates, EPS estimates versus actuals, and revenue projections—for any supported stock. Classified as earnings, it requires only **symbol**; optional **limit** lets you paginate large histories. Key deployments include pre-earnings research dashboards, automated PDF earnings previews, trading systems that adjust exposure ahead of results, and AI assistants answering “What EPS does the market expect from AAPL next quarter?” Returned fields mirror the sample schema: symbol, date, epsActual, epsEstimated, revenueActual, revenueEstimated, lastUpdated. The sample for Apple lists the 2025-10-29 event with placeholders until results post. Integrate this endpoint upstream of valuation models, event-driven strategies, or investor-relations tools whenever accurate earnings timing and expectation data are essential.",
    "category": "earnings",
    "use_cases": [
      "generate pre-earnings preview reports",
      "automate exposure adjustments in event-driven strategies",
      "update valuation models with actual results post-release",
      "visualize EPS and revenue beats vs. misses over time",
      "answer natural-language queries on earnings history"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {
        "limit": "An integer cap on the number of results returned by the endpoint. Example: 50 to restrict output to the top 50 matches. Must be ≥1 and ≤1000. (Integer, optional; defaults to 100)"
      }
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "epsActual": "The actual reported Earnings Per Share (EPS) for the period, as reported by the company. Example: \"None\" or 3.25. (Number or String)",
      "epsEstimated": "The consensus estimated EPS for the period, typically drawn from analyst forecasts. Example: \"None\" or 3.40. (Number or String)",
      "revenueActual": "The actual reported revenue for the period. Example: \"None\" or 100000000. (Number or String)",
      "revenueEstimated": "The consensus estimated revenue for the period. Example: \"None\" or 105000000. (Number or String)",
      "lastUpdated": "The last date and time when this dataset or data field was updated in the system. Example: \"2025-02-04\". (String, Date)"
    }
  },
  {
    "name": "Earnings Calendar API",
    "description": "Earnings Calendar API (category: earnings) supplies a rolling, date-bounded feed of upcoming and historical earnings events across the market. Developers pass **from** and **to** (ISO-8601, ≤ 90-day span) to retrieve up to 4 000 rows containing report **date**, **symbol**, estimated and actual **EPS**, estimated and actual **revenue**, plus **lastUpdated** for data-freshness checks. Prime use cases include brokerage calendar widgets, alert engines that remind traders before releases, factor screens built on earnings-surprise data, and chatbots answering “Which companies report next week?” The normalized schema—symbol, date, epsActual, epsEstimated, revenueActual, revenueEstimated, lastUpdated—drops straight into downstream analytics without re-mapping. Example: {\"symbol\":\"KEC.NS\",\"date\":\"2024-11-04\",\"epsActual\":3.32,\"epsEstimated\":4.97,\"revenueActual\":51133100000,\"revenueEstimated\":44687400000,\"lastUpdated\":\"2024-12-08\"}. Integrate wherever precise earnings timing and expectation deltas drive investment workflows.",
    "category": "earnings",
    "use_cases": [
      "populate earnings-calendar dashboards",
      "trigger pre-earnings alerts for portfolio holdings",
      "rank stocks by surprise magnitude post-release",
      "feed event-driven trading strategies",
      "answer chat queries on upcoming earnings dates"
    ],
    "parameters": {
      "required": {
        "from": "The ISO 8601 date (YYYY-MM-DD) indicating the start of a time range filter. Example: \"2025-01-01\" to include only data from January 1, 2025 onward. Must be ≤ `to`. (String, Date, optional)",
        "to": "The ISO 8601 date (YYYY-MM-DD) indicating the end of a time range filter. Example: \"2025-12-31\" to include only data up to December 31, 2025. Must be ≥ `from`. (String, Date, optional)"
      },
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "epsActual": "The actual reported Earnings Per Share (EPS) for the period, as reported by the company. Example: \"None\" or 3.25. (Number or String)",
      "epsEstimated": "The consensus estimated EPS for the period, typically drawn from analyst forecasts. Example: \"None\" or 3.40. (Number or String)",
      "revenueActual": "The actual reported revenue for the period. Example: \"None\" or 100000000. (Number or String)",
      "revenueEstimated": "The consensus estimated revenue for the period. Example: \"None\" or 105000000. (Number or String)",
      "lastUpdated": "The last date and time when this dataset or data field was updated in the system. Example: \"2025-02-04\". (String, Date)"
    }
  },
  {
    "name": "Earnings Calendar API",
    "description": "The Earnings Calendar API delivers a market-wide schedule of earnings announcements, enabling investors to track reporting cadence without symbol filters. Classified under earnings, it demands **from** and **to** dates (maximum 90 days) and returns a high-volume payload ideal for risk dashboards, PDF research reports, and ML pipelines predicting post-earnings drift. Each record provides the announcement **date**, consensus vs. actual **EPS** and **revenue**, and a **lastUpdated** timestamp for audit compliance. Sample row for KEC.NS shows a November-4 report with EPS beat and revenue beat. Typical integrations: income-statement models that auto-update after releases, portfolio risk tools throttling exposure ahead of volatile events, and compliance archives storing historical releases. Use this endpoint wherever a consolidated, time-bounded view of earnings events is mission-critical.",
    "category": "earnings",
    "use_cases": [
      "risk tools adjusting position sizes pre-event",
      "research PDFs summarizing next week’s reporting slate",
      "machine-learning features based on earnings timing",
      "compliance archives of historical earnings data",
      "chatbots listing companies reporting within a date range"
    ],
    "parameters": {
      "required": {
        "from": "The ISO 8601 date (YYYY-MM-DD) indicating the start of a time range filter. Example: \"2025-01-01\" to include only data from January 1, 2025 onward. Must be ≤ `to`. (String, Date, optional)",
        "to": "The ISO 8601 date (YYYY-MM-DD) indicating the end of a time range filter. Example: \"2025-12-31\" to include only data up to December 31, 2025. Must be ≥ `from`. (String, Date, optional)"
      },
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "epsActual": "The actual reported Earnings Per Share (EPS) for the period, as reported by the company. Example: \"None\" or 3.25. (Number or String)",
      "epsEstimated": "The consensus estimated EPS for the period, typically drawn from analyst forecasts. Example: \"None\" or 3.40. (Number or String)",
      "revenueActual": "The actual reported revenue for the period. Example: \"None\" or 100000000. (Number or String)",
      "revenueEstimated": "The consensus estimated revenue for the period. Example: \"None\" or 105000000. (Number or String)",
      "lastUpdated": "The last date and time when this dataset or data field was updated in the system. Example: \"2025-02-04\". (String, Date)"
    }
  },
  {
    "name": "IPOs Calendar API",
    "description": "IPOs Calendar API (category: corporate_actions) returns a date-bounded list of companies planning to go public. Provide **from** and **to** (ISO-8601, ≤ 90-day span) to retrieve each deal’s **symbol**, **date**, company name, listing **exchange**, status (**actions** field), share count, price range, and indicative market cap. Use cases include IPO-watch dashboards, email alerts ahead of debut dates, screening tools that track deal flow, and chatbots answering “Which IPOs are coming next month?”. The normalized schema—symbol, date, daa (deal-announcement timestamp), company, exchange, actions, shares, priceRange, marketCap—drops directly into calendars or analytics pipes. Example row: {\"symbol\":\"PEVC\",\"date\":\"2025-02-03\",\"daa\":\"2025-02-03T05:00:00.000Z\",\"company\":\"Pacer Funds Trust\",\"exchange\":\"NYSE\",\"actions\":\"Expected\",\"shares\":null,\"priceRange\":null,\"marketCap\":null}. Integrate wherever timely visibility on new-listing supply guides trading or research decisions.",
    "category": "corporate_actions",
    "use_cases": [
      "build upcoming-IPO calendars in brokerage portals",
      "trigger portfolio alerts when watch-list sectors file to list",
      "analyze monthly deal volume and pricing trends",
      "feed syndicate desks tracking exchange-specific pipelines",
      "chatbots answering user queries on forthcoming IPOs"
    ],
    "parameters": {
      "required": {
        "from": "The ISO 8601 date (YYYY-MM-DD) indicating the start of a time range filter. Example: \"2025-01-01\" to include only data from January 1, 2025 onward. Must be ≤ `to`. (String, Date, optional)",
        "to": "The ISO 8601 date (YYYY-MM-DD) indicating the end of a time range filter. Example: \"2025-12-31\" to include only data up to December 31, 2025. Must be ≥ `from`. (String, Date, optional)"
      },
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "daa": "The date and time when the data was acquired or announced, in ISO 8601 format. Example: \"2025-02-03T05:00:00.000Z\". (String, DateTime)",
      "company": "The official name of the company or fund associated with this data. Example: \"Pacer Funds Trust\". (String)",
      "exchange": "The abbreviated code or name of the exchange where the security is traded. Example: \"NASDAQ\". (String)",
      "actions": "Expected or actual corporate actions such as \"Expected\", \"Completed\", or \"Announced\". Example: \"Expected\". (String)",
      "shares": "The number of shares involved in a transaction or corporate event. Example: \"None\" or 1000000. (Number or String)",
      "priceRange": "The price range for a security or transaction, usually expressed as low–high. Example: \"None\" or \"100.00–110.00\". (String or Number)",
      "marketCap": "The market capitalization of the company, calculated as share price multiplied by total shares outstanding. Example: \"None\" or 1500000000000 (1.5 trillion). (Number or String)"
    }
  },
  {
    "name": "IPOs Calendar API",
    "description": "The IPOs Calendar API delivers a forward-looking timetable of initial public offerings, enabling investors to monitor fresh equity supply without ticker filters. Classified under corporate_actions, it requires **from** and **to** date parameters (max 90 days). Returned fields include planned listing **date**, **symbol**, issuer **company**, target **exchange**, deal **actions** (Expected, Priced, Withdrawn), tentative share count, **priceRange**, and estimated **marketCap**. Core integrations: syndicate desks compiling pipeline reports, quant models correlating IPO volume with market liquidity, research newsletters summarizing weekly listings, and AI assistants answering “What IPOs price this quarter?”. Sample payload shows NYSE listing PEVC expected on 2025-02-03. Incorporate this endpoint upstream of dashboards, alert engines, or historical deal databases whenever granular visibility into the new-issues calendar is required.",
    "category": "corporate_actions",
    "use_cases": [
      "syndicate pipeline monitoring and reporting",
      "liquidity models using IPO volume as input",
      "investor newsletters on weekly public-market debuts",
      "chatbots listing IPOs within a custom date range",
      "compliance archives of historical offering data"
    ],
    "parameters": {
      "required": {
        "from": "The ISO 8601 date (YYYY-MM-DD) indicating the start of a time range filter. Example: \"2025-01-01\" to include only data from January 1, 2025 onward. Must be ≤ `to`. (String, Date, optional)",
        "to": "The ISO 8601 date (YYYY-MM-DD) indicating the end of a time range filter. Example: \"2025-12-31\" to include only data up to December 31, 2025. Must be ≥ `from`. (String, Date, optional)"
      },
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "daa": "The date and time when the data was acquired or announced, in ISO 8601 format. Example: \"2025-02-03T05:00:00.000Z\". (String, DateTime)",
      "company": "The official name of the company or fund associated with this data. Example: \"Pacer Funds Trust\". (String)",
      "exchange": "The abbreviated code or name of the exchange where the security is traded. Example: \"NASDAQ\". (String)",
      "actions": "Expected or actual corporate actions such as \"Expected\", \"Completed\", or \"Announced\". Example: \"Expected\". (String)",
      "shares": "The number of shares involved in a transaction or corporate event. Example: \"None\" or 1000000. (Number or String)",
      "priceRange": "The price range for a security or transaction, usually expressed as low–high. Example: \"None\" or \"100.00–110.00\". (String or Number)",
      "marketCap": "The market capitalization of the company, calculated as share price multiplied by total shares outstanding. Example: \"None\" or 1500000000000 (1.5 trillion). (Number or String)"
    }
  },
  {
    "name": "IPOs Disclosure API",
    "description": "IPOs Disclosure API (category: corporate_actions) returns SEC filing data for companies on the path to going public. Pass the required **from** and **to** dates (ISO-8601, ≤ 90-day span) to receive each deal’s **symbol**, the registration **filingDate**, EDGAR **acceptedDate**, **effectivenessDate**, issuer **cik**, filing **form** (e.g., S-1, CERT, F-1/A), and a direct **url** linking to the official document. This data set is essential for desks tracking registration progress, compliance teams validating effectiveness, and research portals that summarize daily IPO activity. Example payload: {\"symbol\":\"SCHM\",\"filingDate\":\"2025-02-03\",\"acceptedDate\":\"2025-02-03\",\"effectivenessDate\":\"2025-02-03\",\"cik\":\"0001454889\",\"form\":\"CERT\",\"url\":\"https://www.sec.gov/Archives/edgar/data/1454889/000114336225000044/SCCR020325.pdf\"}. Integrate wherever timely regulatory-filing visibility drives underwriting, investment, or governance workflows.",
    "category": "corporate_actions",
    "use_cases": [
      "syndicate desks monitoring registration status",
      "compliance checks on form effectiveness dates",
      "research dashboards summarizing IPO filing flow",
      "alert systems pinging new S-1 or F-1 submissions",
      "chatbots answering regulatory-filing queries"
    ],
    "parameters": {
      "required": {
        "from": "The ISO 8601 date (YYYY-MM-DD) indicating the start of a time range filter. Example: \"2025-01-01\" to include only data from January 1, 2025 onward. Must be ≤ `to`. (String, Date, optional)",
        "to": "The ISO 8601 date (YYYY-MM-DD) indicating the end of a time range filter. Example: \"2025-12-31\" to include only data up to December 31, 2025. Must be ≥ `from`. (String, Date, optional)"
      },
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "filingDate": "The date on which a regulatory filing was submitted (e.g., with the SEC), in ISO 8601 format. Example: \"2025-02-03\". (String, Date)",
      "acceptedDate": "The date on which a filing or document was accepted by the regulatory authority. Example: \"2025-02-03\". (String, Date)",
      "effectivenessDate": "The date on which a regulatory filing or corporate action became effective. Example: \"2025-02-03\". (String, Date)",
      "cik": "The Central Index Key, a unique nine-digit identifier assigned by the SEC to entities. Example: \"0001454889\". (String)",
      "form": "The specific type or identifier of a regulatory filing. Example: \"10-K\" or \"CERT\". (String)",
      "url": "The URL linking to the full document, filing, or resource, often on a regulatory or official site. Example: \"https://www.sec.gov/Archives/edgar/data/1454889/000114336225000044/SCCR020325.pdf\". (String, URL)"
    }
  },
  {
    "name": "IPOs Disclosure API",
    "description": "The IPOs Disclosure API delivers a date-range list of IPO-related SEC submissions—registrations, amendments, and certification forms—so market participants can track each issuer’s regulatory milestones. Classified under corporate_actions, it requires **from** and **to** date filters (max 90 days) and outputs symbol, filingDate, acceptedDate, effectivenessDate, registrant **cik**, filing **form** type, and the EDGAR document **url**. Key integrations include pipeline reports for investment-bank syndicate teams, automated compliance archives, analytics that correlate filing cadence with eventual pricing, and AI assistants responding to “Show me all IPO disclosures filed this quarter.” Sample record for SCHM on 2025-02-03 shows a CERT filing with instant EDGAR access. Use this feed wherever granular disclosure tracking informs due-diligence, risk management, or research workflows.",
    "category": "corporate_actions",
    "use_cases": [
      "investment-bank pipeline reporting",
      "automated compliance archiving of filings",
      "analytics correlating filing cadence with pricing",
      "risk tools monitoring delays in effectiveness",
      "chatbot summaries of quarterly IPO disclosures"
    ],
    "parameters": {
      "required": {
        "from": "The ISO 8601 date (YYYY-MM-DD) indicating the start of a time range filter. Example: \"2025-01-01\" to include only data from January 1, 2025 onward. Must be ≤ `to`. (String, Date, optional)",
        "to": "The ISO 8601 date (YYYY-MM-DD) indicating the end of a time range filter. Example: \"2025-12-31\" to include only data up to December 31, 2025. Must be ≥ `from`. (String, Date, optional)"
      },
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "filingDate": "The date on which a regulatory filing was submitted (e.g., with the SEC), in ISO 8601 format. Example: \"2025-02-03\". (String, Date)",
      "acceptedDate": "The date on which a filing or document was accepted by the regulatory authority. Example: \"2025-02-03\". (String, Date)",
      "effectivenessDate": "The date on which a regulatory filing or corporate action became effective. Example: \"2025-02-03\". (String, Date)",
      "cik": "The Central Index Key, a unique nine-digit identifier assigned by the SEC to entities. Example: \"0001454889\". (String)",
      "form": "The specific type or identifier of a regulatory filing. Example: \"10-K\" or \"CERT\". (String)",
      "url": "The URL linking to the full document, filing, or resource, often on a regulatory or official site. Example: \"https://www.sec.gov/Archives/edgar/data/1454889/000114336225000044/SCCR020325.pdf\". (String, URL)"
    }
  },
  {
    "name": "IPOs Prospectus API",
    "description": "IPOs Prospectus API (category: corporate_actions) returns full prospectus metadata for companies preparing to list. Required date filters **from** and **to** (ISO-8601, 90-day window max) produce each deal’s **symbol**, SEC **filingDate** and **acceptedDate**, historical **ipoDate** if priced, issuer **cik**, pricing economics (pricePublicPerShare, pricePublicTotal, discountsAndCommissionsPerShare/Total, proceedsBeforeExpensesPerShare/Total), filing **form** (e.g., 424B4, F-1/A), and the direct **url** to the SEC document. Core use-cases include underwriting desks modelling fee take-outs, research portals summarizing pricing terms, compliance teams archiving prospectus updates, factor models tracking listing proceeds, and chatbots answering “What were the gross proceeds in ATAK’s latest prospectus?” Example record: {\"symbol\":\"ATAK\",\"acceptedDate\":\"2025-02-03\",\"filingDate\":\"2025-02-03\",\"ipoDate\":\"2022-03-20\",\"cik\":\"0001883788\",\"pricePublicPerShare\":0.78,\"pricePublicTotal\":4649936.72,\"discountsAndCommissionsPerShare\":0.04,\"discountsAndCommissionsTotal\":254909.67,\"proceedsBeforeExpensesPerShare\":0.74,\"proceedsBeforeExpensesTotal\":4395207.05,\"form\":\"424B4\",\"url\":\"https://www.sec.gov/Archives/edgar/data/1883788/000149315225004604/form424b4.htm\"}. Integrate wherever granular IPO pricing details are required for due-diligence, valuation, or regulatory reporting.",
    "category": "corporate_actions",
    "use_cases": [
      "underwriting models calculating fees and net proceeds",
      "research dashboards summarizing IPO pricing terms",
      "due-diligence workflows extracting prospectus data",
      "alert engines tracking new prospectus filings",
      "chatbots answering questions on offering economics"
    ],
    "parameters": {
      "required": {
        "from": "The ISO 8601 date (YYYY-MM-DD) indicating the start of a time range filter. Example: \"2025-01-01\" to include only data from January 1, 2025 onward. Must be ≤ `to`. (String, Date, optional)",
        "to": "The ISO 8601 date (YYYY-MM-DD) indicating the end of a time range filter. Example: \"2025-12-31\" to include only data up to December 31, 2025. Must be ≥ `from`. (String, Date, optional)"
      },
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "acceptedDate": "The date on which a filing or document was accepted by the regulatory authority. Example: \"2025-02-03\". (String, Date)",
      "filingDate": "The date on which a regulatory filing was submitted (e.g., with the SEC), in ISO 8601 format. Example: \"2025-02-03\". (String, Date)",
      "ipoDate": "The date on which the company completed its Initial Public Offering (IPO). Example: \"2022-03-20\". (String, Date)",
      "cik": "The Central Index Key, a unique nine-digit identifier assigned by the SEC to entities. Example: \"0001454889\". (String)",
      "pricePublicPerShare": "The public offering price per share during an IPO, in the offering currency. Example: 0.78. (Number)",
      "pricePublicTotal": "The total gross proceeds raised in the public offering, before deductions. Example: 4649936.72. (Number)",
      "discountsAndCommissionsPerShare": "The amount of underwriting discounts and commissions per share in an offering. Example: 0.04. (Number)",
      "discountsAndCommissionsTotal": "The total amount of underwriting discounts and commissions in an offering. Example: 254909.67. (Number)",
      "proceedsBeforeExpensesPerShare": "The proceeds per share before any offering expenses are deducted. Example: 0.74. (Number)",
      "proceedsBeforeExpensesTotal": "The total proceeds before expenses are deducted. Example: 4395207.05. (Number)",
      "form": "The specific type or identifier of a regulatory filing. Example: \"10-K\" or \"CERT\". (String)",
      "url": "The URL linking to the full document, filing, or resource, often on a regulatory or official site. Example: \"https://www.sec.gov/Archives/edgar/data/1454889/000114336225000044/SCCR020325.pdf\". (String, URL)"
    }
  },
  {
    "name": "IPOs Prospectus API",
    "description": "The IPOs Prospectus API delivers transaction-level prospectus details so analysts can dissect every component of an upcoming public offering. Categorised under corporate_actions, it takes **from** and **to** date parameters (each request covers up to 90 days) and returns a structured payload: symbol, filingDate, acceptedDate, ipoDate, cik, per-share and aggregate public offer price, underwriting discounts and commissions, proceeds before expenses, SEC form type, and a clickable url to the primary filing. Typical integrations include pipeline reports for investment-bank syndicate teams, valuation models benchmarking discount levels, compliance systems archiving prospectus iterations, and AI assistants responding to “Show me proceeds before expenses for every IPO filed this month.” Sample Apple-Tech Acquisition Corp. (ATAK) entry illustrates a 0.78 USD offer price with 4.65 M USD total raise and 0.04 USD per-share commission. Deploy this endpoint wherever granular prospectus economics inform pricing analysis, regulatory review, or market-supply monitoring.",
    "category": "corporate_actions",
    "use_cases": [
      "syndicate pipeline dashboards tracking prospectus economics",
      "valuation teams comparing discount percentages across deals",
      "compliance archives of prospectus amendments",
      "research newsletters highlighting IPO pricing statistics",
      "chatbots retrieving filing URLs for user download"
    ],
    "parameters": {
      "required": {
        "from": "The ISO 8601 date (YYYY-MM-DD) indicating the start of a time range filter. Example: \"2025-01-01\" to include only data from January 1, 2025 onward. Must be ≤ `to`. (String, Date, optional)",
        "to": "The ISO 8601 date (YYYY-MM-DD) indicating the end of a time range filter. Example: \"2025-12-31\" to include only data up to December 31, 2025. Must be ≥ `from`. (String, Date, optional)"
      },
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "acceptedDate": "The date on which a filing or document was accepted by the regulatory authority. Example: \"2025-02-03\". (String, Date)",
      "filingDate": "The date on which a regulatory filing was submitted (e.g., with the SEC), in ISO 8601 format. Example: \"2025-02-03\". (String, Date)",
      "ipoDate": "The date on which the company completed its Initial Public Offering (IPO). Example: \"2022-03-20\". (String, Date)",
      "cik": "The Central Index Key, a unique nine-digit identifier assigned by the SEC to entities. Example: \"0001454889\". (String)",
      "pricePublicPerShare": "The public offering price per share during an IPO, in the offering currency. Example: 0.78. (Number)",
      "pricePublicTotal": "The total gross proceeds raised in the public offering, before deductions. Example: 4649936.72. (Number)",
      "discountsAndCommissionsPerShare": "The amount of underwriting discounts and commissions per share in an offering. Example: 0.04. (Number)",
      "discountsAndCommissionsTotal": "The total amount of underwriting discounts and commissions in an offering. Example: 254909.67. (Number)",
      "proceedsBeforeExpensesPerShare": "The proceeds per share before any offering expenses are deducted. Example: 0.74. (Number)",
      "proceedsBeforeExpensesTotal": "The total proceeds before expenses are deducted. Example: 4395207.05. (Number)",
      "form": "The specific type or identifier of a regulatory filing. Example: \"10-K\" or \"CERT\". (String)",
      "url": "The URL linking to the full document, filing, or resource, often on a regulatory or official site. Example: \"https://www.sec.gov/Archives/edgar/data/1454889/000114336225000044/SCCR020325.pdf\". (String, URL)"
    }
  },
  {
    "name": "Stock Split Details API",
    "description": "Stock Split Details API (category: corporate_actions) delivers the full history of share-count changes for a single equity. By supplying the required **symbol** and optional **limit** (≤ 1 000 rows), users obtain the split **date** plus split **ratio**—expressed as numerator and denominator—allowing accurate share-adjusted price charts, per-share metric normalization, and historical index rebalancing. Ideal integrations include data pipelines recalculating earnings-per-share after splits, portfolio-management systems tracking cost-basis adjustments, factor models requiring continuous price series, and chatbots answering “When did AAPL last split and at what ratio?”. Example payload: {\"symbol\":\"AAPL\",\"date\":\"2020-08-31\",\"numerator\":4,\"denominator\":1}. Drop this endpoint anywhere precise split history drives valuation, analytics, or compliance reporting.",
    "category": "corporate_actions",
    "use_cases": [
      "re-scale historical price and volume data after splits",
      "adjust earnings-per-share and valuation multiples",
      "alert investors ahead of announced split implementation",
      "feed index-rebalancing engines with share-count changes",
      "chatbots answering stock-split history queries"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {
        "limit": "An integer cap on the number of results returned by the endpoint. Example: 50 to restrict output to the top 50 matches. Must be ≥1 and ≤1000. (Integer, optional; defaults to 100)"
      }
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "numerator": "The numerator component of a ratio or calculation, used in ratios like P/E, ROE, etc. Example: 4. (Number)",
      "denominator": "The denominator component of a ratio or calculation. Example: 1. (Number)"
    }
  },
  {
    "name": "Stock Split Details API",
    "description": "The Stock Split Details API returns a company’s split ledger—each entry lists the effective **date** and the exact split **ratio** so analysts can reconstruct share counts and adjust historical performance metrics. Classified under corporate_actions, it accepts **symbol** (required) and **limit** (optional) to paginate up to 1 000 results. Core workflows: adjusting portfolio cost basis, back-testing strategies on split-adjusted series, auditing per-share KPI trends, and powering IR dashboards that visualize corporate-action history. Response fields are symbol, date, numerator, denominator; the sample for Apple shows a 4-for-1 split on 31-Aug-2020. Integrate this feed upstream of valuation models, charting libraries, or compliance archives whenever an accurate record of share-structure changes is mandatory.",
    "category": "corporate_actions",
    "use_cases": [
      "update portfolio cost basis after splits",
      "generate split-adjusted historical charts",
      "back-test trading strategies on adjusted data",
      "visualize corporate-action timelines in IR portals",
      "automate compliance archives of corporate actions"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {
        "limit": "An integer cap on the number of results returned by the endpoint. Example: 50 to restrict output to the top 50 matches. Must be ≥1 and ≤1000. (Integer, optional; defaults to 100)"
      }
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "numerator": "The numerator component of a ratio or calculation, used in ratios like P/E, ROE, etc. Example: 4. (Number)",
      "denominator": "The denominator component of a ratio or calculation. Example: 1. (Number)"
    }
  },
  {
    "name": "Stock Splits Calendar API",
    "description": "Stock Splits Calendar API (category: corporate_actions) returns a market-wide timetable of announced share splits within a user-defined window. Supply **from** and **to** dates (ISO-8601, maximum 90-day span) to receive each company’s **symbol**, effective **date**, and split **ratio** expressed as numerator/denominator. Integrate this feed into brokerage dashboards flagging upcoming splits, alert engines that notify investors before record dates, factor screens exploiting pre-split momentum, and chatbots answering “Which stocks are splitting next month?” Example record: {\"symbol\":\"EYEN\",\"date\":\"2025-02-03\",\"numerator\":1,\"denominator\":80}. Use it wherever forward visibility on share-structure changes informs trading, portfolio rebalancing, or compliance workflows.",
    "category": "corporate_actions",
    "use_cases": [
      "display upcoming split events in trading platforms",
      "trigger investor alerts ahead of split implementation",
      "screen for stocks exhibiting pre-split price behavior",
      "update portfolio models for pending share-count changes",
      "chatbots answering calendar-based split queries"
    ],
    "parameters": {
      "required": {
        "from": "The ISO 8601 date (YYYY-MM-DD) indicating the start of a time range filter. Example: \"2025-01-01\" to include only data from January 1, 2025 onward. Must be ≤ `to`. (String, Date, optional)",
        "to": "The ISO 8601 date (YYYY-MM-DD) indicating the end of a time range filter. Example: \"2025-12-31\" to include only data up to December 31, 2025. Must be ≥ `from`. (String, Date, optional)"
      },
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "numerator": "The numerator component of a ratio or calculation, used in ratios like P/E, ROE, etc. Example: 4. (Number)",
      "denominator": "The denominator component of a ratio or calculation. Example: 1. (Number)"
    }
  },
  {
    "name": "Stock Splits Calendar API",
    "description": "The Stock Splits Calendar API delivers a consolidated schedule of forthcoming stock-split actions across global exchanges. Classified under corporate_actions, it requires **from** and **to** date filters (≤ 90 days) and returns up to 4 000 rows per call. Returned fields—symbol, date, numerator, denominator—enable portfolio managers to adjust models before effective dates, risk systems to recalculate position sizes, and research teams to publish weekly split outlooks. Example payload shows EYEN executing a 1-for-80 split on 3-Feb-2025. Leverage this endpoint in any workflow that depends on accurate, forward-looking split information for trading strategy, investor communication, or regulatory reporting.",
    "category": "corporate_actions",
    "use_cases": [
      "generate weekly split-outlook reports for clients",
      "recalculate position sizing ahead of share-count changes",
      "feed quantitative models seeking split-related anomalies",
      "maintain compliance logs of announced corporate actions",
      "provide instant answers in AI assistants about future splits"
    ],
    "parameters": {
      "required": {
        "from": "The ISO 8601 date (YYYY-MM-DD) indicating the start of a time range filter. Example: \"2025-01-01\" to include only data from January 1, 2025 onward. Must be ≤ `to`. (String, Date, optional)",
        "to": "The ISO 8601 date (YYYY-MM-DD) indicating the end of a time range filter. Example: \"2025-12-31\" to include only data up to December 31, 2025. Must be ≥ `from`. (String, Date, optional)"
      },
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "numerator": "The numerator component of a ratio or calculation, used in ratios like P/E, ROE, etc. Example: 4. (Number)",
      "denominator": "The denominator component of a ratio or calculation. Example: 1. (Number)"
    }
  },
  {
    "name": "Company Profile Data API",
    "description": "Company Profile Data API (category: reference) returns a single-shot packet of operational, identification, and market data for an equity. By supplying the **symbol** parameter you get price, market-cap, beta, dividend, trading range, latest change metrics, company identifiers (CIK, ISIN, CUSIP), listing venue, sector/industry tags, CEO, full address, website, head-count, IPO date, and activity flags (ETF, ADR, actively trading). Typical use cases: populate quote pages, preload financial models with cap-table inputs, feed entity-resolution engines, fuel chatbot answers like “What’s Apple’s market cap?”, and drive screening tools that filter on industry or beta. Required parameter: symbol; no optional fields. Returned object mirrors the example below for AAPL.",
    "category": "reference",
    "use_cases": [
      "populate stock-detail pages with live fundamentals",
      "entity resolution for data pipelines using CIK / ISIN / CUSIP",
      "screening dashboards filtering by industry or market-cap",
      "chatbots answering company-profile questions",
      "pre-fill valuation models with base company data"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "price": "The last traded price or intrinsic value of the security or asset. Example: 130.75. (Number)",
      "marketCap": "The market capitalization of the company, calculated as share price multiplied by total shares outstanding. Example: \"None\" or 1500000000000 (1.5 trillion). (Number or String)",
      "beta": "A measure of the stock's volatility relative to the overall market; beta > 1 indicates higher volatility. Example: 1.20. (Number)",
      "lastDividend": "The amount of the most recent dividend paid per share. Example: 0.22. (Number)",
      "range": "The trading range (low–high) for the security during the trading session. Example: \"129.50–131.00\". (String)",
      "change": "The absolute change in price or value compared to the previous close. Example: \"+1.25\". (String)",
      "changePercentage": "The percentage change in price or value compared to the previous close. Example: \"+0.97%\". (Number, Percentage)",
      "volume": "The total number of shares or contracts traded during a given period (typically daily). Example: 105000000. (Number)",
      "averageVolume": "The average number of shares or contracts traded over a predefined period (e.g., 30 days). Example: 95000000. (Number)",
      "companyName": "The registered legal name of the company. Example: \"Apple Inc.\". (String)",
      "currency": "The ISO 4217 three-letter currency code representing the trading currency of the security. Example: \"USD\" for US Dollars. (String)",
      "cik": "The Central Index Key, a unique nine-digit identifier assigned by the SEC to entities. Example: \"0001454889\". (String)",
      "isin": "The International Securities Identification Number, a 12-character alphanumeric code for identifying securities. Example: \"US0378331005\". (String)",
      "cusip": "The Committee on Uniform Securities Identification Procedures number, a unique 9-character identifier for U.S. securities. Example: \"037833100\". (String)",
      "exchangeFullName": "The full name of the stock exchange where the security is listed. Example: \"NASDAQ Global Select\". (String)",
      "exchange": "The abbreviated code or name of the exchange where the security is traded. Example: \"NASDAQ\". (String)",
      "industry": "The primary industry classification of the company, typically using NAICS or SIC nomenclature. Example: \"Technology\". (String)",
      "website": "The official corporate website URL of the company. Example: \"https://www.apple.com\". (String, URL)",
      "description": "A brief description of the company’s business model, product lines, or the context of the data point. Example: \"Apple Inc. designs, manufactures, and markets smartphones, personal computers, tablets, wearables, and accessories worldwide.\". (String)",
      "ceo": "The name of the Chief Executive Officer of the company. Example: \"Tim Cook\". (String)",
      "sector": "The broad sector classification for the company, often aligned with GICS sectors. Example: \"Information Technology\". (String)",
      "country": "The country where the company is headquartered or primarily operates, using the ISO 3166-1 alpha-2 code. Example: \"US\". (String)",
      "fullTimeEmployees": "The total number of full-time employees at the company. Example: 164000. (Number)",
      "phone": "The primary contact phone number for the company’s investor relations or corporate headquarters. Example: \"(408) 996-1010\". (String)",
      "address": "The registered address of the company’s corporate headquarters. Example: \"One Apple Park Way\". (String)",
      "city": "The city where the company’s headquarters is located. Example: \"Cupertino\". (String)",
      "state": "The state or region where the company’s headquarters is located. Example: \"CA\". (String)",
      "zip": "The postal or ZIP code for the company’s headquarters. Example: \"95014\". (String)",
      "image": "A URL pointing to the company’s logo or representative image. Example: \"https://images.financialmodelingprep.com/symbol/AAPL.png\". (String, URL)",
      "ipoDate": "The date on which the company completed its Initial Public Offering (IPO). Example: \"2022-03-20\". (String, Date)",
      "defaultImage": "Boolean flag indicating whether the returned image is a default placeholder (true) or a custom company logo (false). Example: false. (Boolean)",
      "isEtf": "Boolean flag indicating if the security is an Exchange-Traded Fund (ETF). Example: false. (Boolean)",
      "isActivelyTrading": "Boolean flag indicating if the security is currently trading on the exchange. Example: true. (Boolean)",
      "isAdr": "Boolean flag indicating if the security is an American Depositary Receipt (ADR). Example: false. (Boolean)",
      "isFund": "Boolean flag indicating if the security is a mutual fund or other investment fund. Example: false. (Boolean)"
    }
  },
  {
    "name": "Company Profile Data API",
    "description": "The Company Profile Data API delivers a full-stack company card keyed off **symbol**. It blends live quote fields (price, change %, volume) with structural identifiers (CIK, ISIN, CUSIP), corporate metadata (sector, industry, CEO, head-count, headquarters address), and trading-status flags. Category: reference. Parameter set is minimal—symbol only—making it ideal for low-latency lookups within quote tickers, onboarding forms, or analytics that need market-cap and beta on demand. The response example for Apple (AAPL) demonstrates the 30+ fields returned.",
    "category": "reference",
    "use_cases": [
      "quote tickers showing live price and change",
      "onboarding KYC forms that require CIK/ISIN lookup",
      "dynamic dashboards ranking companies by beta",
      "knowledge-graph enrichment with corporate metadata",
      "val-tech pipelines fetching fresh market-cap values"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "price": "The last traded price or intrinsic value of the security or asset. Example: 130.75. (Number)",
      "marketCap": "The market capitalization of the company, calculated as share price multiplied by total shares outstanding. Example: \"None\" or 1500000000000 (1.5 trillion). (Number or String)",
      "beta": "A measure of the stock's volatility relative to the overall market; beta > 1 indicates higher volatility. Example: 1.20. (Number)",
      "lastDividend": "The amount of the most recent dividend paid per share. Example: 0.22. (Number)",
      "range": "The trading range (low–high) for the security during the trading session. Example: \"129.50–131.00\". (String)",
      "change": "The absolute change in price or value compared to the previous close. Example: \"+1.25\". (String)",
      "changePercentage": "The percentage change in price or value compared to the previous close. Example: \"+0.97%\". (Number, Percentage)",
      "volume": "The total number of shares or contracts traded during a given period (typically daily). Example: 105000000. (Number)",
      "averageVolume": "The average number of shares or contracts traded over a predefined period (e.g., 30 days). Example: 95000000. (Number)",
      "companyName": "The registered legal name of the company. Example: \"Apple Inc.\". (String)",
      "currency": "The ISO 4217 three-letter currency code representing the trading currency of the security. Example: \"USD\" for US Dollars. (String)",
      "cik": "The Central Index Key, a unique nine-digit identifier assigned by the SEC to entities. Example: \"0001454889\". (String)",
      "isin": "The International Securities Identification Number, a 12-character alphanumeric code for identifying securities. Example: \"US0378331005\". (String)",
      "cusip": "The Committee on Uniform Securities Identification Procedures number, a unique 9-character identifier for U.S. securities. Example: \"037833100\". (String)",
      "exchangeFullName": "The full name of the stock exchange where the security is listed. Example: \"NASDAQ Global Select\". (String)",
      "exchange": "The abbreviated code or name of the exchange where the security is traded. Example: \"NASDAQ\". (String)",
      "industry": "The primary industry classification of the company, typically using NAICS or SIC nomenclature. Example: \"Technology\". (String)",
      "website": "The official corporate website URL of the company. Example: \"https://www.apple.com\". (String, URL)",
      "description": "A brief description of the company’s business model, product lines, or the context of the data point. Example: \"Apple Inc. designs, manufactures, and markets smartphones, personal computers, tablets, wearables, and accessories worldwide.\". (String)",
      "ceo": "The name of the Chief Executive Officer of the company. Example: \"Tim Cook\". (String)",
      "sector": "The broad sector classification for the company, often aligned with GICS sectors. Example: \"Information Technology\". (String)",
      "country": "The country where the company is headquartered or primarily operates, using the ISO 3166-1 alpha-2 code. Example: \"US\". (String)",
      "fullTimeEmployees": "The total number of full-time employees at the company. Example: 164000. (Number)",
      "phone": "The primary contact phone number for the company’s investor relations or corporate headquarters. Example: \"(408) 996-1010\". (String)",
      "address": "The registered address of the company’s corporate headquarters. Example: \"One Apple Park Way\". (String)",
      "city": "The city where the company’s headquarters is located. Example: \"Cupertino\". (String)",
      "state": "The state or region where the company’s headquarters is located. Example: \"CA\". (String)",
      "zip": "The postal or ZIP code for the company’s headquarters. Example: \"95014\". (String)",
      "image": "A URL pointing to the company’s logo or representative image. Example: \"https://images.financialmodelingprep.com/symbol/AAPL.png\". (String, URL)",
      "ipoDate": "The date on which the company completed its Initial Public Offering (IPO). Example: \"2022-03-20\". (String, Date)",
      "defaultImage": "Boolean flag indicating whether the returned image is a default placeholder (true) or a custom company logo (false). Example: false. (Boolean)",
      "isEtf": "Boolean flag indicating if the security is an Exchange-Traded Fund (ETF). Example: false. (Boolean)",
      "isActivelyTrading": "Boolean flag indicating if the security is currently trading on the exchange. Example: true. (Boolean)",
      "isAdr": "Boolean flag indicating if the security is an American Depositary Receipt (ADR). Example: false. (Boolean)",
      "isFund": "Boolean flag indicating if the security is a mutual fund or other investment fund. Example: false. (Boolean)"
    }
  },
  {
    "name": "Company Profile by CIK API",
    "description": "Company Profile by CIK API (category: reference) mirrors the profile endpoint but indexes on the SEC’s Central Index Key. Pass the **cik** parameter to return price, market-cap, identifiers, listing details, corporate description, and management metadata—perfect for workflows where the CIK is the primary key (e.g., EDGAR-centric archives, regulatory filings, or multi-share-class resolutions). Use it to join SEC filings with market data, enrich compliance dashboards, and answer chatbot queries like “Which company corresponds to CIK 320193?”.",
    "category": "reference",
    "use_cases": [
      "map EDGAR filings to live market data",
      "entity-resolution between multiple share classes",
      "compliance tools keyed off CIK identifiers",
      "chatbots converting CIK to trading symbol",
      "analytics joining SEC disclosures with quote metrics"
    ],
    "parameters": {
      "required": {
        "cik": "The nine-digit Central Index Key assigned by the SEC, used to filter or look up specific filers. Example: \"0000320193\" for Apple Inc. (String, optional)"
      },
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "price": "The last traded price or intrinsic value of the security or asset. Example: 130.75. (Number)",
      "marketCap": "The market capitalization of the company, calculated as share price multiplied by total shares outstanding. Example: \"None\" or 1500000000000 (1.5 trillion). (Number or String)",
      "beta": "A measure of the stock's volatility relative to the overall market; beta > 1 indicates higher volatility. Example: 1.20. (Number)",
      "lastDividend": "The amount of the most recent dividend paid per share. Example: 0.22. (Number)",
      "range": "The trading range (low–high) for the security during the trading session. Example: \"129.50–131.00\". (String)",
      "change": "The absolute change in price or value compared to the previous close. Example: \"+1.25\". (String)",
      "changePercentage": "The percentage change in price or value compared to the previous close. Example: \"+0.97%\". (Number, Percentage)",
      "volume": "The total number of shares or contracts traded during a given period (typically daily). Example: 105000000. (Number)",
      "averageVolume": "The average number of shares or contracts traded over a predefined period (e.g., 30 days). Example: 95000000. (Number)",
      "companyName": "The registered legal name of the company. Example: \"Apple Inc.\". (String)",
      "currency": "The ISO 4217 three-letter currency code representing the trading currency of the security. Example: \"USD\" for US Dollars. (String)",
      "cik": "The Central Index Key, a unique nine-digit identifier assigned by the SEC to entities. Example: \"0001454889\". (String)",
      "isin": "The International Securities Identification Number, a 12-character alphanumeric code for identifying securities. Example: \"US0378331005\". (String)",
      "cusip": "The Committee on Uniform Securities Identification Procedures number, a unique 9-character identifier for U.S. securities. Example: \"037833100\". (String)",
      "exchangeFullName": "The full name of the stock exchange where the security is listed. Example: \"NASDAQ Global Select\". (String)",
      "exchange": "The abbreviated code or name of the exchange where the security is traded. Example: \"NASDAQ\". (String)",
      "industry": "The primary industry classification of the company, typically using NAICS or SIC nomenclature. Example: \"Technology\". (String)",
      "website": "The official corporate website URL of the company. Example: \"https://www.apple.com\". (String, URL)",
      "description": "A brief description of the company’s business model, product lines, or the context of the data point. Example: \"Apple Inc. designs, manufactures, and markets smartphones, personal computers, tablets, wearables, and accessories worldwide.\". (String)",
      "ceo": "The name of the Chief Executive Officer of the company. Example: \"Tim Cook\". (String)",
      "sector": "The broad sector classification for the company, often aligned with GICS sectors. Example: \"Information Technology\". (String)",
      "country": "The country where the company is headquartered or primarily operates, using the ISO 3166-1 alpha-2 code. Example: \"US\". (String)",
      "fullTimeEmployees": "The total number of full-time employees at the company. Example: 164000. (Number)",
      "phone": "The primary contact phone number for the company’s investor relations or corporate headquarters. Example: \"(408) 996-1010\". (String)",
      "address": "The registered address of the company’s corporate headquarters. Example: \"One Apple Park Way\". (String)",
      "city": "The city where the company’s headquarters is located. Example: \"Cupertino\". (String)",
      "state": "The state or region where the company’s headquarters is located. Example: \"CA\". (String)",
      "zip": "The postal or ZIP code for the company’s headquarters. Example: \"95014\". (String)",
      "image": "A URL pointing to the company’s logo or representative image. Example: \"https://images.financialmodelingprep.com/symbol/AAPL.png\". (String, URL)",
      "ipoDate": "The date on which the company completed its Initial Public Offering (IPO). Example: \"2022-03-20\". (String, Date)",
      "defaultImage": "Boolean flag indicating whether the returned image is a default placeholder (true) or a custom company logo (false). Example: false. (Boolean)",
      "isEtf": "Boolean flag indicating if the security is an Exchange-Traded Fund (ETF). Example: false. (Boolean)",
      "isActivelyTrading": "Boolean flag indicating if the security is currently trading on the exchange. Example: true. (Boolean)",
      "isAdr": "Boolean flag indicating if the security is an American Depositary Receipt (ADR). Example: false. (Boolean)",
      "isFund": "Boolean flag indicating if the security is a mutual fund or other investment fund. Example: false. (Boolean)"
    }
  },
  {
    "name": "Company Profile by CIK API",
    "description": "The Company Profile by CIK API unlocks the same rich metadata available from the symbol-based endpoint but keyed exclusively on **cik**. Category: reference. It’s purpose-built for EDGAR workflows, legal-entity mapping, and multi-class share tracking. Required parameter: cik; no optionals. Response fields duplicate the symbol profile schema, making joins seamless. Example for CIK 320193 (Apple Inc.) shown below.",
    "category": "reference",
    "use_cases": [
      "link SEC filings to market-cap data in one hop",
      "resolve corporate actions across share classes",
      "feed governance dashboards keyed by CIK",
      "generate regulatory reports where CIK is mandatory",
      "assist chatbots in translating CIK to stock symbol"
    ],
    "parameters": {
      "required": {
        "cik": "The nine-digit Central Index Key assigned by the SEC, used to filter or look up specific filers. Example: \"0000320193\" for Apple Inc. (String, optional)"
      },
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "price": "The last traded price or intrinsic value of the security or asset. Example: 130.75. (Number)",
      "marketCap": "The market capitalization of the company, calculated as share price multiplied by total shares outstanding. Example: \"None\" or 1500000000000 (1.5 trillion). (Number or String)",
      "beta": "A measure of the stock's volatility relative to the overall market; beta > 1 indicates higher volatility. Example: 1.20. (Number)",
      "lastDividend": "The amount of the most recent dividend paid per share. Example: 0.22. (Number)",
      "range": "The trading range (low–high) for the security during the trading session. Example: \"129.50–131.00\". (String)",
      "change": "The absolute change in price or value compared to the previous close. Example: \"+1.25\". (String)",
      "changePercentage": "The percentage change in price or value compared to the previous close. Example: \"+0.97%\". (Number, Percentage)",
      "volume": "The total number of shares or contracts traded during a given period (typically daily). Example: 105000000. (Number)",
      "averageVolume": "The average number of shares or contracts traded over a predefined period (e.g., 30 days). Example: 95000000. (Number)",
      "companyName": "The registered legal name of the company. Example: \"Apple Inc.\". (String)",
      "currency": "The ISO 4217 three-letter currency code representing the trading currency of the security. Example: \"USD\" for US Dollars. (String)",
      "cik": "The Central Index Key, a unique nine-digit identifier assigned by the SEC to entities. Example: \"0001454889\". (String)",
      "isin": "The International Securities Identification Number, a 12-character alphanumeric code for identifying securities. Example: \"US0378331005\". (String)",
      "cusip": "The Committee on Uniform Securities Identification Procedures number, a unique 9-character identifier for U.S. securities. Example: \"037833100\". (String)",
      "exchangeFullName": "The full name of the stock exchange where the security is listed. Example: \"NASDAQ Global Select\". (String)",
      "exchange": "The abbreviated code or name of the exchange where the security is traded. Example: \"NASDAQ\". (String)",
      "industry": "The primary industry classification of the company, typically using NAICS or SIC nomenclature. Example: \"Technology\". (String)",
      "website": "The official corporate website URL of the company. Example: \"https://www.apple.com\". (String, URL)",
      "description": "A brief description of the company’s business model, product lines, or the context of the data point. Example: \"Apple Inc. designs, manufactures, and markets smartphones, personal computers, tablets, wearables, and accessories worldwide.\". (String)",
      "ceo": "The name of the Chief Executive Officer of the company. Example: \"Tim Cook\". (String)",
      "sector": "The broad sector classification for the company, often aligned with GICS sectors. Example: \"Information Technology\". (String)",
      "country": "The country where the company is headquartered or primarily operates, using the ISO 3166-1 alpha-2 code. Example: \"US\". (String)",
      "fullTimeEmployees": "The total number of full-time employees at the company. Example: 164000. (Number)",
      "phone": "The primary contact phone number for the company’s investor relations or corporate headquarters. Example: \"(408) 996-1010\". (String)",
      "address": "The registered address of the company’s corporate headquarters. Example: \"One Apple Park Way\". (String)",
      "city": "The city where the company’s headquarters is located. Example: \"Cupertino\". (String)",
      "state": "The state or region where the company’s headquarters is located. Example: \"CA\". (String)",
      "zip": "The postal or ZIP code for the company’s headquarters. Example: \"95014\". (String)",
      "image": "A URL pointing to the company’s logo or representative image. Example: \"https://images.financialmodelingprep.com/symbol/AAPL.png\". (String, URL)",
      "ipoDate": "The date on which the company completed its Initial Public Offering (IPO). Example: \"2022-03-20\". (String, Date)",
      "defaultImage": "Boolean flag indicating whether the returned image is a default placeholder (true) or a custom company logo (false). Example: false. (Boolean)",
      "isEtf": "Boolean flag indicating if the security is an Exchange-Traded Fund (ETF). Example: false. (Boolean)",
      "isActivelyTrading": "Boolean flag indicating if the security is currently trading on the exchange. Example: true. (Boolean)",
      "isAdr": "Boolean flag indicating if the security is an American Depositary Receipt (ADR). Example: false. (Boolean)",
      "isFund": "Boolean flag indicating if the security is a mutual fund or other investment fund. Example: false. (Boolean)"
    }
  },
  {
    "name": "Company Notes API",
    "description": "Company Notes API (category: fixed_income) lists outstanding and historical note issues for an equity. Pass the **symbol** parameter to obtain CIK, note title (coupon, maturity), and listing exchange. Use cases: bond desks mapping parent-equity to listed notes, credit-research dashboards cataloging term debt, and chatbots answering questions like “Does AAPL have notes due 2027?”.",
    "category": "fixed_income",
    "use_cases": [
      "bond desk mapping equity to note securities",
      "credit-research catalog of corporate notes",
      "chatbots providing quick note summaries",
      "reg-tech compliance linking notes to issuers",
      "portfolio systems tying bonds to parent equity"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {}
    },
    "response_example": {
      "cik": "The Central Index Key, a unique nine-digit identifier assigned by the SEC to entities. Example: \"0001454889\". (String)",
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "title": "The full title or designation of a fixed-income instrument, bond, or note. Example: \"1.000% Notes due 2022\". (String)",
      "exchange": "The abbreviated code or name of the exchange where the security is traded. Example: \"NASDAQ\". (String)"
    }
  },
  {
    "name": "Company Notes API",
    "description": "The Company Notes API surfaces note securities issued by a company—useful for cross-asset coverage and capital-structure analysis. Category: fixed_income. Required parameter: symbol. The endpoint returns CIK, trading symbol, descriptive title (coupon + maturity), and listing exchange. Integrate with corporate-bond screeners, debt-maturity wall dashboards, and KYC checks linking notes to the underlying issuer.",
    "category": "fixed_income",
    "use_cases": [
      "corporate bond screeners showing issuer equity link",
      "debt maturity-wall visualizations",
      "cross-asset research reports",
      "KYC checks on fixed-income instruments",
      "chatbots answering note-specific questions"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {}
    },
    "response_example": {
      "cik": "The Central Index Key, a unique nine-digit identifier assigned by the SEC to entities. Example: \"0001454889\". (String)",
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "title": "The full title or designation of a fixed-income instrument, bond, or note. Example: \"1.000% Notes due 2022\". (String)",
      "exchange": "The abbreviated code or name of the exchange where the security is traded. Example: \"NASDAQ\". (String)"
    }
  },
  {
    "name": "Stock Peer Comparison API",
    "description": "Stock Peer Comparison API (category: analytics) returns a curated peer list for the requested **symbol**, including each peer’s price and market-cap, enabling quick benchmarking across the same exchange and sector. Apply it in valuation comps tables, relative-strength dashboards, and AI assistants answering “Who are Apple’s closest peers by cap?”. Parameter: symbol (required).",
    "category": "analytics",
    "use_cases": [
      "valuation comps models",
      "relative performance dashboards",
      "ETF construction tools clustering by peers",
      "chatbots offering peer lists",
      "risk systems measuring sector exposure"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "companyName": "The registered legal name of the company. Example: \"Apple Inc.\". (String)",
      "price": "The last traded price or intrinsic value of the security or asset. Example: 130.75. (Number)",
      "mktCap": "The market capitalization of the company expressed in the reporting currency; equivalent to total shares outstanding multiplied by current share price. Example: 152173717000. (Number or String)"
    }
  },
  {
    "name": "Stock Peer Comparison API",
    "description": "The Stock Peer Comparison API helps analysts benchmark a company against sector-matched, similar-cap constituents on the same exchange. Category: analytics. Input: **symbol** only. Output fields include peer symbol, name, latest price, and market-cap—ready for import into dashboards, comps spreadsheets, and screening tools.",
    "category": "analytics",
    "use_cases": [
      "screen for undervalued peers",
      "plot peer dispersion charts",
      "feed ML models with peer fundamentals",
      "investor presentations comparing rivals",
      "chatbots serving quick peer tables"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "companyName": "The registered legal name of the company. Example: \"Apple Inc.\". (String)",
      "price": "The last traded price or intrinsic value of the security or asset. Example: 130.75. (Number)",
      "mktCap": "The market capitalization of the company expressed in the reporting currency; equivalent to total shares outstanding multiplied by current share price. Example: 152173717000. (Number or String)"
    }
  },
  {
    "name": "Delisted Companies API",
    "description": "Delisted Companies API (category: market_status) provides a paginated list of securities removed from US exchanges, returning symbol, companyName, exchange, ipoDate, and delistedDate. Required params: **page**, **limit** (≤100). Use it to avoid trading inactive tickers, back-test survivorship bias, and power compliance screens that forbid delisted securities.",
    "category": "market_status",
    "use_cases": [
      "survivorship-bias-free back-testing datasets",
      "compliance filters blocking delisted tickers",
      "historical research on delisting trends",
      "chatbots warning users about inactive stocks",
      "risk reports on portfolio exposure to delistings"
    ],
    "parameters": {
      "required": {
        "page": "A zero-based integer page index for paginated endpoints. Example: 2 to return the third page of results, given the configured `limit`. (Integer, optional; defaults to 0)",
        "limit": "An integer cap on the number of results returned by the endpoint. Example: 50 to restrict output to the top 50 matches. Must be ≥1 and ≤1000. (Integer, optional; defaults to 100)"
      },
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "companyName": "The registered legal name of the company. Example: \"Apple Inc.\". (String)",
      "exchange": "The abbreviated code or name of the exchange where the security is traded. Example: \"NASDAQ\". (String)",
      "ipoDate": "The date on which the company completed its Initial Public Offering (IPO). Example: \"2022-03-20\". (String, Date)",
      "delistedDate": "The date on which the security was officially delisted from its primary exchange, in ISO 8601 format. Example: \"2025-02-03\". (String, Date)"
    }
  },
  {
    "name": "Delisted Companies API",
    "description": "The Delisted Companies API catalogs stocks that have been removed from trading on US venues, enabling analysts to cleanse datasets and monitor corporate-action outcomes. Category: market_status. Parameters: **page** and **limit** (max 100) for pagination. Returned data—symbol, companyName, exchange, ipoDate, delistedDate—supports audit trails, survivorship-bias studies, and risk controls.",
    "category": "market_status",
    "use_cases": [
      "dataset cleansing for quantitative models",
      "audit trails of delisted securities",
      "studies on delisting frequency by sector",
      "risk controls preventing orders in inactive names",
      "chatbots identifying delisted tickers"
    ],
    "parameters": {
      "required": {
        "page": "A zero-based integer page index for paginated endpoints. Example: 2 to return the third page of results, given the configured `limit`. (Integer, optional; defaults to 0)",
        "limit": "An integer cap on the number of results returned by the endpoint. Example: 50 to restrict output to the top 50 matches. Must be ≥1 and ≤1000. (Integer, optional; defaults to 100)"
      },
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "companyName": "The registered legal name of the company. Example: \"Apple Inc.\". (String)",
      "exchange": "The abbreviated code or name of the exchange where the security is traded. Example: \"NASDAQ\". (String)",
      "ipoDate": "The date on which the company completed its Initial Public Offering (IPO). Example: \"2022-03-20\". (String, Date)",
      "delistedDate": "The date on which the security was officially delisted from its primary exchange, in ISO 8601 format. Example: \"2025-02-03\". (String, Date)"
    }
  },
  {
    "name": "Company Employee Count API",
    "description": "Company Employee Count API (category: fundamentals) returns the most recent workforce figure a company reported to the SEC. Required parameter **symbol** pinpoints the issuer; optional **limit** (≤ 10 000) paginates disclosures. The payload includes CIK, acceptance timestamp, report period, filing date and form, head-count, and the EDGAR source URL—supporting head-count monitoring, labor-cost modelling, ESG dashboards, and chatbots answering “How many people does AAPL employ now?”.",
    "category": "fundamentals",
    "use_cases": [
      "update workforce KPIs in ESG dashboards",
      "feed cost-of-labor models with current head-count",
      "alert when employee numbers jump or fall materially",
      "answer natural-language queries about company size",
      "audit HR disclosures via direct SEC links"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {
        "limit": "An integer cap on the number of results returned by the endpoint. Example: 50 to restrict output to the top 50 matches. Must be ≥1 and ≤1000. (Integer, optional; defaults to 100)"
      }
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "cik": "The Central Index Key, a unique nine-digit identifier assigned by the SEC to entities. Example: \"0001454889\". (String)",
      "acceptanceTime": "The exact timestamp when a regulatory filing or corporate event was accepted by the authority. Example: \"2024-11-01 06:01:36\". (String, DateTime)",
      "periodOfReport": "The period covered by a financial report or regulatory filing; typically denoted by end date in ISO 8601 format. Example: \"2024-09-28\". (String, Date)",
      "companyName": "The registered legal name of the company. Example: \"Apple Inc.\". (String)",
      "formType": "The type or designation of a regulatory filing (e.g., \"10-K\", \"10-Q\"). Example: \"10-K\". (String)",
      "filingDate": "The date on which a regulatory filing was submitted (e.g., with the SEC), in ISO 8601 format. Example: \"2025-02-03\". (String, Date)",
      "employeeCount": "The total number of employees working at the company as reported in regulatory disclosures. Example: 164000. (Number or String)",
      "source": "The origin or URL of the data or document, often referencing official regulatory or third-party data providers. Example: \"https://www.sec.gov/Archives/edgar/data/320193/000032019324000123/0000320193-24-000123-index.htm\". (String, URL)"
    }
  },
  {
    "name": "Company Employee Count API",
    "description": "The Company Employee Count API delivers up-to-date head-count directly from a company’s latest 10-K or 10-Q. Category fundamentals. Pass **symbol**; add **limit** to collect multiple historical filings in one call. Output fields—employeeCount, periodOfReport, filingDate, formType, CIK, and SEC URL—slot straight into labor-trend charts, HR benchmarking tools, and compliance checks that align revenue per employee with reported filings.",
    "category": "fundamentals",
    "use_cases": [
      "plot revenue-per-employee ratios over time",
      "benchmark staffing versus peers",
      "link head-count changes to cost-reduction news",
      "supply HR datasets for AI cost models",
      "store verifiable head-count in compliance archives"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {
        "limit": "An integer cap on the number of results returned by the endpoint. Example: 50 to restrict output to the top 50 matches. Must be ≥1 and ≤1000. (Integer, optional; defaults to 100)"
      }
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "cik": "The Central Index Key, a unique nine-digit identifier assigned by the SEC to entities. Example: \"0001454889\". (String)",
      "acceptanceTime": "The exact timestamp when a regulatory filing or corporate event was accepted by the authority. Example: \"2024-11-01 06:01:36\". (String, DateTime)",
      "periodOfReport": "The period covered by a financial report or regulatory filing; typically denoted by end date in ISO 8601 format. Example: \"2024-09-28\". (String, Date)",
      "companyName": "The registered legal name of the company. Example: \"Apple Inc.\". (String)",
      "formType": "The type or designation of a regulatory filing (e.g., \"10-K\", \"10-Q\"). Example: \"10-K\". (String)",
      "filingDate": "The date on which a regulatory filing was submitted (e.g., with the SEC), in ISO 8601 format. Example: \"2025-02-03\". (String, Date)",
      "employeeCount": "The total number of employees working at the company as reported in regulatory disclosures. Example: 164000. (Number or String)",
      "source": "The origin or URL of the data or document, often referencing official regulatory or third-party data providers. Example: \"https://www.sec.gov/Archives/edgar/data/320193/000032019324000123/0000320193-24-000123-index.htm\". (String, URL)"
    }
  },
  {
    "name": "Company Historical Employee Count API",
    "description": "Company Historical Employee Count API (category: fundamentals) provides a time-series of workforce disclosures so analysts can track hiring or downsizing trends. Required **symbol** plus optional **limit** (≤ 10 000) returns rows with employeeCount, report period, filing metadata and SEC links. Perfect for growth-rate calculations, long-horizon ESG analyses, and chatbots answering “How has Apple’s staff grown since 2010?”.",
    "category": "fundamentals",
    "use_cases": [
      "calculate 5-year employee CAGR",
      "correlate head-count with revenue growth",
      "visualize hiring waves in research dashboards",
      "detect workforce reductions signalling restructurings",
      "feed ML models forecasting labor expense"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {
        "limit": "An integer cap on the number of results returned by the endpoint. Example: 50 to restrict output to the top 50 matches. Must be ≥1 and ≤1000. (Integer, optional; defaults to 100)"
      }
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "cik": "The Central Index Key, a unique nine-digit identifier assigned by the SEC to entities. Example: \"0001454889\". (String)",
      "acceptanceTime": "The exact timestamp when a regulatory filing or corporate event was accepted by the authority. Example: \"2024-11-01 06:01:36\". (String, DateTime)",
      "periodOfReport": "The period covered by a financial report or regulatory filing; typically denoted by end date in ISO 8601 format. Example: \"2024-09-28\". (String, Date)",
      "companyName": "The registered legal name of the company. Example: \"Apple Inc.\". (String)",
      "formType": "The type or designation of a regulatory filing (e.g., \"10-K\", \"10-Q\"). Example: \"10-K\". (String)",
      "filingDate": "The date on which a regulatory filing was submitted (e.g., with the SEC), in ISO 8601 format. Example: \"2025-02-03\". (String, Date)",
      "employeeCount": "The total number of employees working at the company as reported in regulatory disclosures. Example: 164000. (Number or String)",
      "source": "The origin or URL of the data or document, often referencing official regulatory or third-party data providers. Example: \"https://www.sec.gov/Archives/edgar/data/320193/000032019324000123/0000320193-24-000123-index.htm\". (String, URL)"
    }
  },
  {
    "name": "Company Historical Employee Count API",
    "description": "The Historical Employee Count API returns SEC-filed head-count back to a company’s first disclosure. Category fundamentals. Input: **symbol** (required) and **limit** for pagination. Response mirrors the latest-count schema but is date-stamped, enabling multi-period trend charts, HR cost analysis, and compliance comparisons across filings.",
    "category": "fundamentals",
    "use_cases": [
      "headline graphs of head-count growth/decline",
      "back-test staffing changes against share price",
      "validate management hiring claims",
      "load training data for labor-efficiency models",
      "chatbots explaining workforce evolution"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {
        "limit": "An integer cap on the number of results returned by the endpoint. Example: 50 to restrict output to the top 50 matches. Must be ≥1 and ≤1000. (Integer, optional; defaults to 100)"
      }
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "cik": "The Central Index Key, a unique nine-digit identifier assigned by the SEC to entities. Example: \"0001454889\". (String)",
      "acceptanceTime": "The exact timestamp when a regulatory filing or corporate event was accepted by the authority. Example: \"2024-11-01 06:01:36\". (String, DateTime)",
      "periodOfReport": "The period covered by a financial report or regulatory filing; typically denoted by end date in ISO 8601 format. Example: \"2024-09-28\". (String, Date)",
      "companyName": "The registered legal name of the company. Example: \"Apple Inc.\". (String)",
      "formType": "The type or designation of a regulatory filing (e.g., \"10-K\", \"10-Q\"). Example: \"10-K\". (String)",
      "filingDate": "The date on which a regulatory filing was submitted (e.g., with the SEC), in ISO 8601 format. Example: \"2025-02-03\". (String, Date)",
      "employeeCount": "The total number of employees working at the company as reported in regulatory disclosures. Example: 164000. (Number or String)",
      "source": "The origin or URL of the data or document, often referencing official regulatory or third-party data providers. Example: \"https://www.sec.gov/Archives/edgar/data/320193/000032019324000123/0000320193-24-000123-index.htm\". (String, URL)"
    }
  },
  {
    "name": "Company Market Cap API",
    "description": "Company Market Cap API (category: valuation) returns the latest market capitalization for a single equity. Required parameter **symbol**; response fields symbol, date, and marketCap (trading currency). Use it in valuation dashboards, screening filters, and chatbots answering “What’s Apple’s current market cap?”.",
    "category": "valuation",
    "use_cases": [
      "populate market-cap columns in watchlists",
      "rank stocks by size within a sector",
      "feed EV/EBITDA calculations with up-to-date cap",
      "alert when a company enters/exits megacap territory",
      "chatbots providing instant cap figures"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "marketCap": "The market capitalization of the company, calculated as share price multiplied by total shares outstanding. Example: \"None\" or 1500000000000 (1.5 trillion). (Number or String)"
    }
  },
  {
    "name": "Company Market Cap API",
    "description": "The Company Market Cap API supplies spot market capitalization derived from latest share count × price. Category valuation. Pass **symbol**; no other params. Ideal for valuations, index-weight calculations, and KPI dashboards that refresh intraday.",
    "category": "valuation",
    "use_cases": [
      "index-weight computation for passive funds",
      "automate megacap vs. small-cap bucketing",
      "track market-cap milestones (1 T, 2 T, etc.)",
      "drive real-time valuation multiples",
      "answer NLP queries on company size"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "marketCap": "The market capitalization of the company, calculated as share price multiplied by total shares outstanding. Example: \"None\" or 1500000000000 (1.5 trillion). (Number or String)"
    }
  },
  {
    "name": "Batch Market Cap API",
    "description": "Batch Market Cap API (category: valuation) retrieves market-cap for multiple tickers in one call. Required **symbols** list (comma-separated). Perfect for screener back-ends, multi-company dashboards, and risk systems recalculating exposure snapshots.",
    "category": "valuation",
    "use_cases": [
      "build sortable multi-ticker cap tables",
      "compare size across peer set instantly",
      "feed portfolio exposure analysis",
      "bulk update valuation multiples in spreadsheets",
      "chatbots summarizing caps for several names"
    ],
    "parameters": {
      "required": {
        "symbols": "A comma-separated list of ticker symbols used to request data for multiple securities in a single call. Example: \"AAPL,MSFT,GOOGL\". (String, optional)"
      },
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "marketCap": "The market capitalization of the company, calculated as share price multiplied by total shares outstanding. Example: \"None\" or 1500000000000 (1.5 trillion). (Number or String)"
    }
  },
  {
    "name": "Batch Market Cap API",
    "description": "The Batch Market Cap API allows one-shot retrieval of market-capitalization values for any ticker list. Category valuation. Provide **symbols**; receive an array of {symbol, date, marketCap}. Ideal for multi-asset analytics, comparison charts, and bulk database refreshes.",
    "category": "valuation",
    "use_cases": [
      "refresh watchlist market-caps nightly",
      "drive heat-maps of cap distribution",
      "speed up peer-group valuation screens",
      "populate dashboards comparing FAANG caps",
      "answer user questions on several caps at once"
    ],
    "parameters": {
      "required": {
        "symbols": "A comma-separated list of ticker symbols used to request data for multiple securities in a single call. Example: \"AAPL,MSFT,GOOGL\". (String, optional)"
      },
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "marketCap": "The market capitalization of the company, calculated as share price multiplied by total shares outstanding. Example: \"None\" or 1500000000000 (1.5 trillion). (Number or String)"
    }
  },
  {
    "name": "Historical Market Cap API",
    "description": "Historical Market Cap API (category: valuation) returns a date-series of capitalization for a single company. Required **symbol**; optional **limit**, **from**, **to** bound volume (≤ 5 000 rows). Employ it for growth-trajectory charts, back-tests that normalize returns by size, and chatbots answering “How did Apple’s market cap change in 2024?”.",
    "category": "valuation",
    "use_cases": [
      "plot market-cap growth curves",
      "back-test factor returns vs. size buckets",
      "detect inflection points in valuation history",
      "audit historical size classifications (small → large)",
      "fuel ML models predicting cap evolution"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {
        "limit": "An integer cap on the number of results returned by the endpoint. Example: 50 to restrict output to the top 50 matches. Must be ≥1 and ≤1000. (Integer, optional; defaults to 100)",
        "from": "The ISO 8601 date (YYYY-MM-DD) indicating the start of a time range filter. Example: \"2025-01-01\" to include only data from January 1, 2025 onward. Must be ≤ `to`. (String, Date, optional)",
        "to": "The ISO 8601 date (YYYY-MM-DD) indicating the end of a time range filter. Example: \"2025-12-31\" to include only data up to December 31, 2025. Must be ≥ `from`. (String, Date, optional)"
      }
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "marketCap": "The market capitalization of the company, calculated as share price multiplied by total shares outstanding. Example: \"None\" or 1500000000000 (1.5 trillion). (Number or String)"
    }
  },
  {
    "name": "Historical Market Cap API",
    "description": "The Historical Market Cap API supplies daily (or event-driven) snapshots of a company’s valuation over time. Category valuation. Parameters: **symbol** (required) plus **limit**, **from**, **to** for range control. Output enables long-term trend analysis, CAGR calculations, and research on valuation cycles.",
    "category": "valuation",
    "use_cases": [
      "calculate multi-year market-cap CAGR",
      "compare valuation cycles across peers",
      "back-test strategies triggered by cap thresholds",
      "drive time-series visualizations in investor decks",
      "chatbots explaining past valuation milestones"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {
        "limit": "An integer cap on the number of results returned by the endpoint. Example: 50 to restrict output to the top 50 matches. Must be ≥1 and ≤1000. (Integer, optional; defaults to 100)",
        "from": "The ISO 8601 date (YYYY-MM-DD) indicating the start of a time range filter. Example: \"2025-01-01\" to include only data from January 1, 2025 onward. Must be ≤ `to`. (String, Date, optional)",
        "to": "The ISO 8601 date (YYYY-MM-DD) indicating the end of a time range filter. Example: \"2025-12-31\" to include only data up to December 31, 2025. Must be ≥ `from`. (String, Date, optional)"
      }
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "marketCap": "The market capitalization of the company, calculated as share price multiplied by total shares outstanding. Example: \"None\" or 1500000000000 (1.5 trillion). (Number or String)"
    }
  },
  {
    "name": "Company Share Float & Liquidity API",
    "description": "Company Share Float & Liquidity API (category: market_structure) returns current float statistics for a single equity—free-float percentage, floatShares, and outstandingShares—so traders can assess liquidity and potential volatility. Pass the required **symbol**; the endpoint comes back with symbol-stamped **date**, **freeFloat** (percent), **floatShares**, and **outstandingShares**. Useful for short-interest screens, float-weighted index calculations, and chatbots answering “How many freely tradable shares does AAPL have right now?”.",
    "category": "market_structure",
    "use_cases": [
      "size positions relative to free float",
      "screen for low-float squeeze candidates",
      "calculate float-adjusted index weights",
      "compare float percentage across peers",
      "chatbots answering float-related questions"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "freeFloat": "The percentage of a company’s shares that are publicly available for trading (excluding restricted shares held by insiders). Example: 99.9095. (Number)",
      "floatShares": "The number of shares available for public trading (free float). Example: 15024290700. (Number)",
      "outstandingShares": "The total number of shares currently outstanding, including restricted and publicly traded shares. Example: 15037900000. (Number)"
    }
  },
  {
    "name": "Company Share Float & Liquidity API",
    "description": "The Share Float & Liquidity API delivers a real-time snapshot of how many shares are actually available to trade, keyed off **symbol**. Category market_structure. Output fields—freeFloat %, floatShares count, outstandingShares—drop directly into liquidity dashboards, risk models, and compliance checks that cap position size as a percent of float.",
    "category": "market_structure",
    "use_cases": [
      "liquidity dashboards for execution desks",
      "risk limits based on % of float held",
      "back-tests linking float size to volatility",
      "reg-tech tools monitoring float changes",
      "AI assistants comparing float across tickers"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "freeFloat": "The percentage of a company’s shares that are publicly available for trading (excluding restricted shares held by insiders). Example: 99.9095. (Number)",
      "floatShares": "The number of shares available for public trading (free float). Example: 15024290700. (Number)",
      "outstandingShares": "The total number of shares currently outstanding, including restricted and publicly traded shares. Example: 15037900000. (Number)"
    }
  },
  {
    "name": "All Shares Float API",
    "description": "All Shares Float API (category: market_structure) streams float data for every covered ticker in bulk. Required pagination parameters **limit** (≤5 000) and **page** (0-based) return an array with symbol, timestamped **date**, freeFloat %, floatShares, and outstandingShares—ideal for cross-market liquidity scans, universe construction, and risk aggregation.",
    "category": "market_structure",
    "use_cases": [
      "build market-wide float heat maps",
      "identify low-float pockets across exchanges",
      "feed factor models using float as an input",
      "bulk refresh of float data in databases",
      "chatbots listing smallest-float stocks"
    ],
    "parameters": {
      "required": {
        "limit": "An integer cap on the number of results returned by the endpoint. Example: 50 to restrict output to the top 50 matches. Must be ≥1 and ≤1000. (Integer, optional; defaults to 100)",
        "page": "A zero-based integer page index for paginated endpoints. Example: 2 to return the third page of results, given the configured `limit`. (Integer, optional; defaults to 0)"
      },
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "freeFloat": "The percentage of a company’s shares that are publicly available for trading (excluding restricted shares held by insiders). Example: 99.9095. (Number)",
      "floatShares": "The number of shares available for public trading (free float). Example: 15024290700. (Number)",
      "outstandingShares": "The total number of shares currently outstanding, including restricted and publicly traded shares. Example: 15037900000. (Number)"
    }
  },
  {
    "name": "All Shares Float API",
    "description": "The All Shares Float API bulk-delivers free-float metrics across the entire coverage universe. Classified under market_structure, it requires **limit** and **page** for paginated pulls. Consume it in screener back-ends, portfolio-wide liquidity assessments, or compliance checks that restrict holdings in micro-float names.",
    "category": "market_structure",
    "use_cases": [
      "universe-level liquidity screening",
      "portfolio exposure reports by float tier",
      "research on float vs. realized volatility",
      "data vendors refreshing float datasets",
      "assistant answers on market-wide float statistics"
    ],
    "parameters": {
      "required": {
        "limit": "An integer cap on the number of results returned by the endpoint. Example: 50 to restrict output to the top 50 matches. Must be ≥1 and ≤1000. (Integer, optional; defaults to 100)",
        "page": "A zero-based integer page index for paginated endpoints. Example: 2 to return the third page of results, given the configured `limit`. (Integer, optional; defaults to 0)"
      },
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "freeFloat": "The percentage of a company’s shares that are publicly available for trading (excluding restricted shares held by insiders). Example: 99.9095. (Number)",
      "floatShares": "The number of shares available for public trading (free float). Example: 15024290700. (Number)",
      "outstandingShares": "The total number of shares currently outstanding, including restricted and publicly traded shares. Example: 15037900000. (Number)"
    }
  },
  {
    "name": "Latest Mergers & Acquisitions API",
    "description": "Latest Mergers & Acquisitions API (category: m_and_a) pushes the most recent M&A filings in real time. Required **page** and **limit** parameters (≤1 000) paginate the feed. Each record includes acquirer **symbol**/companyName/CIK, target details, **transactionDate**, EDGAR **acceptedDate**, and a filing **link**. Deploy in event-driven trading engines, deal-flow dashboards, and chatbots answering “What deals hit the tape today?”.",
    "category": "m_and_a",
    "use_cases": [
      "deal-flow monitoring for advisory desks",
      "alert traders when a portfolio name becomes a target",
      "populate M&A news widgets in research portals",
      "machine-learning models predicting merger arbitrage",
      "compliance archives of M&A filings"
    ],
    "parameters": {
      "required": {
        "page": "A zero-based integer page index for paginated endpoints. Example: 2 to return the third page of results, given the configured `limit`. (Integer, optional; defaults to 0)",
        "limit": "An integer cap on the number of results returned by the endpoint. Example: 50 to restrict output to the top 50 matches. Must be ≥1 and ≤1000. (Integer, optional; defaults to 100)"
      },
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "companyName": "The registered legal name of the company. Example: \"Apple Inc.\". (String)",
      "cik": "The Central Index Key, a unique nine-digit identifier assigned by the SEC to entities. Example: \"0001454889\". (String)",
      "targetedCompanyName": "The name of the company being targeted in a corporate transaction or event. Example: \"MoneyLion Inc.\". (String)",
      "targetedCik": "The Central Index Key (CIK) of the targeted company in a corporate action. Example: \"0001807846\". (String)",
      "targetedSymbol": "The stock ticker symbol of the targeted company. Example: \"ML\". (String)",
      "transactionDate": "The effective date of a specific corporate transaction or event. Example: \"2025-02-03\". (String, Date)",
      "acceptedDate": "The date on which a filing or document was accepted by the regulatory authority. Example: \"2025-02-03\". (String, Date)",
      "link": "A URL linking to supporting documentation or filings for the corporate event or transaction. Example: \"https://www.sec.gov/Archives/edgar/data/849399/000114036125002752/ny20039778x6_s4.htm\". (String, URL)"
    }
  },
  {
    "name": "Latest Mergers & Acquisitions API",
    "description": "The Latest M&A API delivers a live ticker of merger and acquisition registrations and S-4 proxy filings. Category m_and_a. Pagination via **page** and **limit** lets users throttle intake. Fields cover both acquirer and target identifiers, dates, and direct SEC links—ready for arbitrage screens, legal-compliance workflows, and market-moving news alerts.",
    "category": "m_and_a",
    "use_cases": [
      "arbitrage desks sourcing fresh targets",
      "legal teams tracking S-4 effectiveness",
      "research emails summarizing daily M&A",
      "AI assistants explaining current deal landscape",
      "risk engines flagging portfolio companies in deals"
    ],
    "parameters": {
      "required": {
        "page": "A zero-based integer page index for paginated endpoints. Example: 2 to return the third page of results, given the configured `limit`. (Integer, optional; defaults to 0)",
        "limit": "An integer cap on the number of results returned by the endpoint. Example: 50 to restrict output to the top 50 matches. Must be ≥1 and ≤1000. (Integer, optional; defaults to 100)"
      },
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "companyName": "The registered legal name of the company. Example: \"Apple Inc.\". (String)",
      "cik": "The Central Index Key, a unique nine-digit identifier assigned by the SEC to entities. Example: \"0001454889\". (String)",
      "targetedCompanyName": "The name of the company being targeted in a corporate transaction or event. Example: \"MoneyLion Inc.\". (String)",
      "targetedCik": "The Central Index Key (CIK) of the targeted company in a corporate action. Example: \"0001807846\". (String)",
      "targetedSymbol": "The stock ticker symbol of the targeted company. Example: \"ML\". (String)",
      "transactionDate": "The effective date of a specific corporate transaction or event. Example: \"2025-02-03\". (String, Date)",
      "acceptedDate": "The date on which a filing or document was accepted by the regulatory authority. Example: \"2025-02-03\". (String, Date)",
      "link": "A URL linking to supporting documentation or filings for the corporate event or transaction. Example: \"https://www.sec.gov/Archives/edgar/data/849399/000114036125002752/ny20039778x6_s4.htm\". (String, URL)"
    }
  },
  {
    "name": "Search Mergers & Acquisitions API",
    "description": "Search Mergers & Acquisitions API (category: m_and_a) lets users query the M&A database by **name** (acquirer or target). It returns symbol, company/target names, CIKs, **transactionDate**, EDGAR **acceptedDate**, and filing **link**—enabling historical deal research, competitor analyses, and chatbots answering “Has Apple ever acquired Pineapple Energy?”.",
    "category": "m_and_a",
    "use_cases": [
      "deal-history look-ups by company name",
      "competitive-intelligence reports on acquisition strategy",
      "populate M&A timelines for investor decks",
      "academic research on takeover frequency",
      "assistant answers to user-specific M&A queries"
    ],
    "parameters": {
      "required": {
        "name": "A free-form string representing a full or partial company or fund name used for filtering or lookup. Example: \"Apple Inc.\" to match the exact legal name. (String, optional)"
      },
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "companyName": "The registered legal name of the company. Example: \"Apple Inc.\". (String)",
      "cik": "The Central Index Key, a unique nine-digit identifier assigned by the SEC to entities. Example: \"0001454889\". (String)",
      "targetedCompanyName": "The name of the company being targeted in a corporate transaction or event. Example: \"MoneyLion Inc.\". (String)",
      "targetedCik": "The Central Index Key (CIK) of the targeted company in a corporate action. Example: \"0001807846\". (String)",
      "targetedSymbol": "The stock ticker symbol of the targeted company. Example: \"ML\". (String)",
      "transactionDate": "The effective date of a specific corporate transaction or event. Example: \"2025-02-03\". (String, Date)",
      "acceptedDate": "The date on which a filing or document was accepted by the regulatory authority. Example: \"2025-02-03\". (String, Date)",
      "link": "A URL linking to supporting documentation or filings for the corporate event or transaction. Example: \"https://www.sec.gov/Archives/edgar/data/849399/000114036125002752/ny20039778x6_s4.htm\". (String, URL)"
    }
  },
  {
    "name": "Search Mergers & Acquisitions API",
    "description": "The M&A Search API retrieves merger and acquisition records filtered by **name**, covering both acquirer and target entities. Category m_and_a. Output fields allow analysts to trace specific company deal activity with direct access to SEC filing URLs—supporting due-diligence, strategy reviews, and NLP assistants pulling deal facts on demand.",
    "category": "m_and_a",
    "use_cases": [
      "due-diligence checks on acquisition history",
      "strategy teams analysing rivals’ deal patterns",
      "knowledge-graph enrichment with M&A links",
      "newsrooms pulling deal details for articles",
      "chatbots summarizing a firm’s M&A track record"
    ],
    "parameters": {
      "required": {
        "name": "A free-form string representing a full or partial company or fund name used for filtering or lookup. Example: \"Apple Inc.\" to match the exact legal name. (String, optional)"
      },
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "companyName": "The registered legal name of the company. Example: \"Apple Inc.\". (String)",
      "cik": "The Central Index Key, a unique nine-digit identifier assigned by the SEC to entities. Example: \"0001454889\". (String)",
      "targetedCompanyName": "The name of the company being targeted in a corporate transaction or event. Example: \"MoneyLion Inc.\". (String)",
      "targetedCik": "The Central Index Key (CIK) of the targeted company in a corporate action. Example: \"0001807846\". (String)",
      "targetedSymbol": "The stock ticker symbol of the targeted company. Example: \"ML\". (String)",
      "transactionDate": "The effective date of a specific corporate transaction or event. Example: \"2025-02-03\". (String, Date)",
      "acceptedDate": "The date on which a filing or document was accepted by the regulatory authority. Example: \"2025-02-03\". (String, Date)",
      "link": "A URL linking to supporting documentation or filings for the corporate event or transaction. Example: \"https://www.sec.gov/Archives/edgar/data/849399/000114036125002752/ny20039778x6_s4.htm\". (String, URL)"
    }
  },
  {
    "name": "Company Executives API",
    "description": "Company Executives API (category: corporate_governance) lists a firm’s senior leadership team, returning each executive’s name, formal title, cash compensation (if disclosed), pay currency, gender, birth year, and active-status flag. Supply **symbol** (required) and optionally filter with **active**=*true* to receive only current officers. Ideal for org-chart widgets, ESG dashboards, gender-diversity screens, and chatbots answering “Who runs Apple’s global sales?”.",
    "category": "corporate_governance",
    "use_cases": [
      "build dynamic org-charts in investor portals",
      "screen for gender diversity at the C-suite level",
      "cross-check executive tenure versus performance",
      "feed compensation analytics with leadership titles",
      "answer NLP queries about current company officers"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {
        "active": "A Boolean filter indicating to include only currently active securities or items. Example: true to exclude delisted or inactive names. (Boolean, optional)"
      }
    },
    "response_example": {
      "title": "The full title or designation of a fixed-income instrument, bond, or note. Example: \"1.000% Notes due 2022\". (String)",
      "name": "The full legal or common name of the company. Example: \"Apple Inc.\" (String)",
      "pay": "The total amount of compensation or pay associated with a transaction or event. Example: \"None\" or 1000000. (Number or String)",
      "currencyPay": "The currency code used for the pay or compensation amount. Example: \"USD\". (String)",
      "gender": "The gender of an individual referenced in a corporate filing or report. Example: \"male\". (String)",
      "yearBorn": "The year of birth for an individual referenced in a filing. Example: \"None\" or 1980. (Number or String)",
      "active": "Boolean flag indicating whether the referenced entity or individual is currently active. Example: null or true. (Boolean or Null)"
    }
  },
  {
    "name": "Company Executives API",
    "description": "The Company Executives API returns granular leadership metadata keyed by **symbol**. Optional **active** lets users pull current officers only. Response fields—title, name, pay, currencyPay, gender, yearBorn, active—drop directly into governance scorecards, diversity compliance reports, and KYC checks linking individuals to issuers.",
    "category": "corporate_governance",
    "use_cases": [
      "governance scorecards tracking board/executive mix",
      "diversity and equality compliance dashboards",
      "KYC workflows linking officers to public filings",
      "research reports summarizing leadership changes",
      "chatbots providing executive-roster look-ups"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {
        "active": "A Boolean filter indicating to include only currently active securities or items. Example: true to exclude delisted or inactive names. (Boolean, optional)"
      }
    },
    "response_example": {
      "title": "The full title or designation of a fixed-income instrument, bond, or note. Example: \"1.000% Notes due 2022\". (String)",
      "name": "The full legal or common name of the company. Example: \"Apple Inc.\" (String)",
      "pay": "The total amount of compensation or pay associated with a transaction or event. Example: \"None\" or 1000000. (Number or String)",
      "currencyPay": "The currency code used for the pay or compensation amount. Example: \"USD\". (String)",
      "gender": "The gender of an individual referenced in a corporate filing or report. Example: \"male\". (String)",
      "yearBorn": "The year of birth for an individual referenced in a filing. Example: \"None\" or 1980. (Number or String)",
      "active": "Boolean flag indicating whether the referenced entity or individual is currently active. Example: null or true. (Boolean or Null)"
    }
  },
  {
    "name": "Executive Compensation API",
    "description": "Executive Compensation API (category: corporate_governance) pulls the pay table straight from a company’s most recent proxy or 10-K. Required **symbol** returns CIK, officer name/position, fiscal **year**, salary, bonus, stock and option awards, incentive comp, other comp, total pay, plus filing and acceptance dates with an SEC **link**. Deploy in say-on-pay trend analysis, peer pay benchmarking, and chatbots answering “What did Apple’s GC earn last year?”.",
    "category": "corporate_governance",
    "use_cases": [
      "compare CEO pay versus peer group medians",
      "flag outsized pay packages for ESG funds",
      "feed say-on-pay vote recommendation models",
      "audit compensation changes year over year",
      "chatbots retrieving individual pay details"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {}
    },
    "response_example": {
      "cik": "The Central Index Key, a unique nine-digit identifier assigned by the SEC to entities. Example: \"0001454889\". (String)",
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "companyName": "The registered legal name of the company. Example: \"Apple Inc.\". (String)",
      "filingDate": "The date on which a regulatory filing was submitted (e.g., with the SEC), in ISO 8601 format. Example: \"2025-02-03\". (String, Date)",
      "acceptedDate": "The date on which a filing or document was accepted by the regulatory authority. Example: \"2025-02-03\". (String, Date)",
      "nameAndPosition": "The full name and job title or position of an individual. Example: \"Kate Adams Senior Vice President, General Counsel and Secretary\". (String)",
      "year": "The calendar year associated with a data point or report. Example: 2023. (Number or String)",
      "salary": "The reported salary amount for an individual in a regulatory filing. Example: 1000000. (Number)",
      "bonus": "The bonus component of compensation for an individual. Example: 0. (Number)",
      "stockAward": "The dollar value of stock awards granted to an individual. Example: 22323641. (Number)",
      "optionAward": "The dollar value of stock option awards granted. Example: 0. (Number)",
      "incentivePlanCompensation": "The total value of incentive-based plan compensation awarded to an individual. Example: 3571150. (Number)",
      "allOtherCompensation": "The aggregate value of all other non-salary, non-stock-based compensation to an individual. Example: 46914. (Number)",
      "total": "The total combined compensation amount for an individual. Example: 26941705. (Number)",
      "link": "A URL linking to supporting documentation or filings for the corporate event or transaction. Example: \"https://www.sec.gov/Archives/edgar/data/849399/000114036125002752/ny20039778x6_s4.htm\". (String, URL)"
    }
  },
  {
    "name": "Executive Compensation API",
    "description": "The Executive Compensation API delivers SEC-filed pay breakdowns—salary, cash bonus, equity grants, incentives, and fringe—along with total compensation for each named officer. Category: corporate_governance. One parameter (**symbol**) produces audit-ready rows that plug into pay-versus-performance studies, proxy-advisory engines, or investor dashboards scrutinizing C-suite rewards.",
    "category": "corporate_governance",
    "use_cases": [
      "pay-versus-performance correlation analysis",
      "proxy advisory vote recommendations",
      "institutional screens on equity-to-cash mix",
      "media reports on executive-pay headlines",
      "AI assistants comparing compensation across firms"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {}
    },
    "response_example": {
      "cik": "The Central Index Key, a unique nine-digit identifier assigned by the SEC to entities. Example: \"0001454889\". (String)",
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "companyName": "The registered legal name of the company. Example: \"Apple Inc.\". (String)",
      "filingDate": "The date on which a regulatory filing was submitted (e.g., with the SEC), in ISO 8601 format. Example: \"2025-02-03\". (String, Date)",
      "acceptedDate": "The date on which a filing or document was accepted by the regulatory authority. Example: \"2025-02-03\". (String, Date)",
      "nameAndPosition": "The full name and job title or position of an individual. Example: \"Kate Adams Senior Vice President, General Counsel and Secretary\". (String)",
      "year": "The calendar year associated with a data point or report. Example: 2023. (Number or String)",
      "salary": "The reported salary amount for an individual in a regulatory filing. Example: 1000000. (Number)",
      "bonus": "The bonus component of compensation for an individual. Example: 0. (Number)",
      "stockAward": "The dollar value of stock awards granted to an individual. Example: 22323641. (Number)",
      "optionAward": "The dollar value of stock option awards granted. Example: 0. (Number)",
      "incentivePlanCompensation": "The total value of incentive-based plan compensation awarded to an individual. Example: 3571150. (Number)",
      "allOtherCompensation": "The aggregate value of all other non-salary, non-stock-based compensation to an individual. Example: 46914. (Number)",
      "total": "The total combined compensation amount for an individual. Example: 26941705. (Number)",
      "link": "A URL linking to supporting documentation or filings for the corporate event or transaction. Example: \"https://www.sec.gov/Archives/edgar/data/849399/000114036125002752/ny20039778x6_s4.htm\". (String, URL)"
    }
  },
  {
    "name": "Executive Compensation Benchmark API",
    "description": "Executive Compensation Benchmark API (category: corporate_governance) aggregates average total pay by industry for the requested **year**, giving investors a quick yardstick to judge whether a company’s leaders are paid above or below sector norms. Returned fields: industryTitle, year, averageCompensation. Use it in peer pay reports, ESG dashboards, and chatbots answering “What is the average exec comp in Consumer Electronics for 2023?”.",
    "category": "corporate_governance",
    "use_cases": [
      "benchmark CEO pay against industry averages",
      "highlight outlier compensation in proxy materials",
      "support compensation committee analyses",
      "feed ESG score calculations on pay fairness",
      "answer NLP queries on industry pay norms"
    ],
    "parameters": {
      "required": {
        "year": "A four-digit calendar year or fiscal year number to filter period-based endpoints. Example: 2024 to retrieve data for the 2024 fiscal or calendar year. (Number or String, optional)"
      },
      "optional": {}
    },
    "response_example": {
      "industryTitle": "The textual title or name of the industry in which the company operates. Example: \"Technology Hardware, Storage & Peripherals\". (String)",
      "year": "The calendar year associated with a data point or report. Example: 2023. (Number or String)",
      "averageCompensation": "The average total compensation paid to executives or employees in a specified group. Example: 5000000. (Number)"
    }
  },
  {
    "name": "Executive Compensation Benchmark API",
    "description": "The Exec Compensation Benchmark API provides average total remuneration per industry for a selected **year**, enabling quick relative-pay assessments across sectors. Category corporate_governance. With a single **year** parameter, the endpoint returns industryTitle and averageCompensation—ready for heat-maps, pay-gap studies, and governance scorecards.",
    "category": "corporate_governance",
    "use_cases": [
      "heat-map visuals of pay by sector",
      "governance scorecards scoring companies vs. peers",
      "academic research on compensation trends",
      "audit committees referencing external pay data",
      "chatbots comparing sector pay benchmarks"
    ],
    "parameters": {
      "required": {
        "year": "A four-digit calendar year or fiscal year number to filter period-based endpoints. Example: 2024 to retrieve data for the 2024 fiscal or calendar year. (Number or String, optional)"
      },
      "optional": {}
    },
    "response_example": {
      "industryTitle": "The textual title or name of the industry in which the company operates. Example: \"Technology Hardware, Storage & Peripherals\". (String)",
      "year": "The calendar year associated with a data point or report. Example: 2023. (Number or String)",
      "averageCompensation": "The average total compensation paid to executives or employees in a specified group. Example: 5000000. (Number)"
    }
  },
  {
    "name": "COT Report API",
    "description": "COT Report API (category: derivatives) returns the weekly Commitment of Traders dataset straight from the CFTC. Users pass **from** and **to** dates (≤ 90 days) and may filter by **symbol** to receive long-form records covering open interest, long/short positioning by participant class, percentage-of-OI metrics, trader counts, and concentration ratios. Deploy this feed in sentiment dashboards, commodity/fx positioning studies, or chatbots answering “What’s the latest net spec length in Coffee futures?”.",
    "category": "derivatives",
    "use_cases": [
      "build bullish/bearish dashboards for commodities & FX",
      "quant models weighting trades by net-position changes",
      "alert desks when commercial short interest spikes",
      "academic research on hedger vs. spec positioning",
      "chatbots retrieving granular COT data by contract"
    ],
    "parameters": {
      "required": {
        "from": "The ISO 8601 date (YYYY-MM-DD) indicating the start of a time range filter. Example: \"2025-01-01\" to include only data from January 1, 2025 onward. Must be ≤ `to`. (String, Date, optional)",
        "to": "The ISO 8601 date (YYYY-MM-DD) indicating the end of a time range filter. Example: \"2025-12-31\" to include only data up to December 31, 2025. Must be ≥ `from`. (String, Date, optional)"
      },
      "optional": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      }
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "name": "The full legal or common name of the company. Example: \"Apple Inc.\" (String)",
      "sector": "The broad sector classification for the company, often aligned with GICS sectors. Example: \"Information Technology\". (String)",
      "marketAndExchangeNames": "Full name of the market and exchange where an asset or commodity is traded. Example: \"COFFEE C - ICE FUTURES U.S.\". (String, optional)",
      "cftcContractMarketCode": "A unique code assigned by the Commodity Futures Trading Commission (CFTC) representing the contract market. Example: \"083731\" for Coffee C. (String)",
      "cftcMarketCode": "The CFTC-designated code representing a specific market. Example: \"ICUS\" for ICE Futures U.S. (String)",
      "cftcRegionCode": "A numeric or string identifier used by the CFTC to indicate the geographic region of the market. Example: \"1\" for North America. (String or Number)",
      "cftcCommodityCode": "A unique code assigned by the CFTC to identify the commodity. Example: \"83\" for Coffee. (String)",
      "openInterestAll": "The total open interest across all contracts for a given futures or options market. Example: 120000. (Number)",
      "noncommPositionsLongAll": "The aggregate number of non-commercial (speculators) long positions in a futures or options market. Example: 45000. (Number)",
      "noncommPositionsShortAll": "The aggregate number of non-commercial (speculators) short positions. Example: 30000. (Number)",
      "noncommPositionsSpreadAll": "Total non-commercial spread positions (long and short simultaneously for arbitrage). Example: 47072. (Number, optional)",
      "commPositionsLongAll": "The total number of commercial (hedgers) long positions. Example: 15000. (Number)",
      "commPositionsShortAll": "The total number of commercial (hedgers) short positions. Example: 10000. (Number)",
      "totReptPositionsLongAll": "Total reportable long positions, all contract types (COT data). Example: 202092. (Number, optional)",
      "totReptPositionsShortAll": "Total reportable short positions, all contract types. Example: 202816. (Number, optional)",
      "nonreptPositionsLongAll": "Non-reportable (small trader) long positions, all contract types. Example: 7361. (Number, optional)",
      "nonreptPositionsShortAll": "Non-reportable short positions, all contract types. Example: 6637. (Number, optional)",
      "openInterestOld": "Open interest in 'old' contracts. Example: 179986. (Number, optional)",
      "noncommPositionsLongOld": "Non-commercial long positions in 'old' (previously open) contracts. Example: 75483. (Number, optional)",
      "noncommPositionsShortOld": "Non-commercial short positions in 'old' contracts. Example: 35395. (Number, optional)",
      "noncommPositionsSpreadOld": "Non-commercial spread positions in 'old' contracts. Example: 27067. (Number, optional)",
      "commPositionsLongOld": "Long positions held by commercial traders in previous reporting categories. (Number)",
      "commPositionsShortOld": "Short positions held by commercial traders in previous reporting categories. (Number)",
      "totReptPositionsLongOld": "Total reportable long positions, old contracts. Example: 173243. (Number, optional)",
      "totReptPositionsShortOld": "Total reportable short positions, old contracts. Example: 174128. (Number, optional)",
      "nonreptPositionsLongOld": "Non-reportable long positions, old contracts. Example: 6743. (Number, optional)",
      "nonreptPositionsShortOld": "Non-reportable short positions, old contracts. Example: 5858. (Number, optional)",
      "openInterestOther": "Open interest in other contract types. Example: 29467. (Number, optional)",
      "noncommPositionsLongOther": "Non-commercial long positions in other (e.g., new or special) contracts. Example: 18754. (Number, optional)",
      "noncommPositionsShortOther": "Non-commercial short positions in other contracts. Example: 7142. (Number, optional)",
      "noncommPositionsSpreadOther": "Non-commercial spread positions in other contracts. Example: 1098. (Number, optional)",
      "commPositionsLongOther": "Long positions by commercial traders in 'other' categories. (Number)",
      "commPositionsShortOther": "Short positions by commercial traders in 'other' categories. (Number)",
      "totReptPositionsLongOther": "Total reportable long positions, other contracts. Example: 28849. (Number, optional)",
      "totReptPositionsShortOther": "Total reportable short positions, other contracts. Example: 28688. (Number, optional)",
      "nonreptPositionsLongOther": "Non-reportable long positions, other contracts. Example: 618. (Number, optional)",
      "nonreptPositionsShortOther": "Non-reportable short positions, other contracts. Example: 779. (Number, optional)",
      "changeInOpenInterestAll": "Net change in open interest (contracts outstanding) for all traders since the previous period. Example: 2,957. (Number)",
      "changeInNoncommLongAll": "Change in long positions for non-commercial traders for all categories. (Number)",
      "changeInNoncommShortAll": "Change in short positions for non-commercial traders for all categories. (Number)",
      "changeInNoncommSpeadAll": "Change in spread positions for non-commercial traders for all categories. (Number)",
      "changeInCommLongAll": "Change in long positions for commercial traders for all categories. (Number)",
      "changeInCommShortAll": "Change in short positions for commercial traders for all categories. (Number)",
      "changeInTotReptLongAll": "Change in total reported long positions across all trader types. (Number)",
      "changeInTotReptShortAll": "Change in total reported short positions across all trader types. (Number)",
      "changeInNonreptLongAll": "Change in long positions held by non-reporting traders. (Number)",
      "changeInNonreptShortAll": "Change in short positions held by non-reporting traders. (Number)",
      "pctOfOpenInterestAll": "Percentage of open interest attributed to all trader types. (Number, percent)",
      "pctOfOiNoncommLongAll": "Percent of open interest represented by non-commercial long positions. (Number, percent)",
      "pctOfOiNoncommShortAll": "Percent of open interest represented by non-commercial short positions. (Number, percent)",
      "pctOfOiNoncommSpreadAll": "Percent of open interest from non-commercial spread positions. (Number, percent)",
      "pctOfOiCommLongAll": "Percent of open interest from commercial long positions. (Number, percent)",
      "pctOfOiCommShortAll": "Percent of open interest from commercial short positions. (Number, percent)",
      "pctOfOiTotReptLongAll": "Percent of open interest from all reported long positions. (Number, percent)",
      "pctOfOiTotReptShortAll": "Percent of open interest from all reported short positions. (Number, percent)",
      "pctOfOiNonreptLongAll": "Percent of open interest from non-reporting long positions. (Number, percent)",
      "pctOfOiNonreptShortAll": "Percent of open interest from non-reporting short positions. (Number, percent)",
      "pctOfOpenInterestOl": "Percentage of open interest accounted for by all positions in the 'old' category, as a proportion of total contracts. (Number, percent)",
      "pctOfOiNoncommLongOl": "Percent of open interest from non-commercial (speculator) long positions in the 'old' category. (Number, percent)",
      "pctOfOiNoncommShortOl": "Percent of open interest from non-commercial short positions in the 'old' category. (Number, percent)",
      "pctOfOiNoncommSpreadOl": "Percent of open interest from non-commercial spread positions in the 'old' category. (Number, percent)",
      "pctOfOiCommLongOl": "Percent of open interest from commercial (hedger) long positions in the 'old' category. (Number, percent)",
      "pctOfOiCommShortOl": "Percent of open interest from commercial short positions in the 'old' category. (Number, percent)",
      "pctOfOiTotReptLongOl": "Percent of total reported long positions (all traders) in the 'old' category relative to open interest. (Number, percent)",
      "pctOfOiTotReptShortOl": "Percent of total reported short positions (all traders) in the 'old' category relative to open interest. (Number, percent)",
      "pctOfOiNonreptLongOl": "Percent of non-reportable long positions in 'old' category relative to total open interest. (Number, percent)",
      "pctOfOiNonreptShortOl": "Percent of non-reportable short positions in 'old' category relative to total open interest. (Number, percent)",
      "pctOfOpenInterestOther": "Percentage of open interest attributed to the 'other' trader group. (Number, percent)",
      "pctOfOiNoncommLongOther": "Percent of open interest from non-commercial long positions in 'other' category. (Number, percent)",
      "pctOfOiNoncommShortOther": "Percent of open interest from non-commercial short positions in 'other' category. (Number, percent)",
      "pctOfOiNoncommSpreadOther": "Percent of open interest from non-commercial spread positions in 'other' category. (Number, percent)",
      "pctOfOiCommLongOther": "Percent of open interest from commercial long positions in 'other' category. (Number, percent)",
      "pctOfOiCommShortOther": "Percent of open interest from commercial short positions in 'other' category. (Number, percent)",
      "pctOfOiTotReptLongOther": "Percent of total reported long positions (all traders) in 'other' category. (Number, percent)",
      "pctOfOiTotReptShortOther": "Percent of total reported short positions (all traders) in 'other' category. (Number, percent)",
      "pctOfOiNonreptLongOther": "Percent of non-reportable long positions in 'other' category. (Number, percent)",
      "pctOfOiNonreptShortOther": "Percent of non-reportable short positions in 'other' category. (Number, percent)",
      "tradersTotAll": "Total number of reportable traders (all types) across all contracts. Example: 357. (Number, optional)",
      "tradersNoncommLongAll": "Number of non-commercial traders (speculators) holding reportable long positions (COT). Example: 132. (Number, optional)",
      "tradersNoncommShortAll": "Number of non-commercial traders with reportable short positions across all contracts. Example: 77. (Number, optional)",
      "tradersNoncommSpreadAll": "Number of non-commercial traders engaged in spread positions across all contracts (COT). Example: 94. (Number, optional)",
      "tradersCommLongAll": "Number of commercial traders holding reportable long positions across all contracts (COT). Example: 106. (Number, optional)",
      "tradersCommShortAll": "Number of commercial traders with reportable short positions across all contracts (COT). Example: 119. (Number, optional)",
      "tradersTotReptLongAll": "Total traders with reportable long positions (all contract types). Example: 286. (Number, optional)",
      "tradersTotReptShortAll": "Total traders with reportable short positions (all contracts). Example: 250. (Number, optional)",
      "tradersTotOl": "Total number of reportable traders in 'old' contracts. Example: 351. (Number, optional)",
      "tradersNoncommLongOl": "Non-commercial traders with long positions in 'old' contracts. Example: 136. (Number, optional)",
      "tradersNoncommShortOl": "Non-commercial traders with short positions in 'old' contracts. Example: 72. (Number, optional)",
      "tradersNoncommSpeadOl": "Non-commercial traders engaged in spread positions in 'old' contracts. Example: 88. (Number, optional)",
      "tradersCommLongOl": "Number of commercial traders with reportable long positions in 'old' contracts. Example: 94. (Number, optional)",
      "tradersCommShortOl": "Number of commercial traders with reportable short positions in 'old' contracts. Example: 114. (Number, optional)",
      "tradersTotReptLongOl": "Total traders with reportable long positions in 'old' contracts. Example: 269. (Number, optional)",
      "tradersTotReptShortOl": "Total traders with reportable short positions in 'old' contracts. Example: 239. (Number, optional)",
      "tradersTotOther": "Total number of reportable traders in 'other' contracts. Example: 164. (Number, optional)",
      "tradersNoncommLongOther": "Non-commercial traders with long positions in 'other' contracts. Example: 31. (Number, optional)",
      "tradersNoncommShortOther": "Non-commercial traders with short positions in 'other' contracts. Example: 34. (Number, optional)",
      "tradersNoncommSpreadOther": "Non-commercial traders engaged in spread positions in 'other' contracts. Example: 16. (Number, optional)",
      "tradersCommLongOther": "Number of commercial traders with reportable long positions in 'other' contracts. Example: 59. (Number, optional)",
      "tradersCommShortOther": "Number of commercial traders with reportable short positions in 'other' contracts. Example: 68. (Number, optional)",
      "tradersTotReptLongOther": "Total traders with reportable long positions in 'other' contracts. Example: 102. (Number, optional)",
      "tradersTotReptShortOther": "Total traders with reportable short positions in 'other' contracts. Example: 106. (Number, optional)",
      "concGrossLe4TdrLongAll": "Concentration of the gross position for the four largest traders on the long side, as a percentage of open interest. (Number, percent)",
      "concGrossLe4TdrShortAll": "Concentration of the gross position for the four largest traders on the short side, as a percentage of open interest. (Number, percent)",
      "concGrossLe8TdrLongAll": "Concentration of the gross position for the eight largest traders on the long side, as a percentage of open interest. (Number, percent)",
      "concGrossLe8TdrShortAll": "Concentration of the gross position for the eight largest traders on the short side, as a percentage of open interest. (Number, percent)",
      "concNetLe4TdrLongAll": "Concentration of the net position for the four largest traders on the long side. (Number, percent)",
      "concNetLe4TdrShortAll": "Concentration of the net position for the four largest traders on the short side. (Number, percent)",
      "concNetLe8TdrLongAll": "Concentration of the net position for the eight largest traders on the long side. (Number, percent)",
      "concNetLe8TdrShortAll": "Concentration of the net position for the eight largest traders on the short side. (Number, percent)",
      "concGrossLe4TdrLongOl": "Concentration of gross long positions for the top 4 traders in the 'old' category. (Number, percent)",
      "concGrossLe4TdrShortOl": "Concentration of gross short positions for the top 4 traders in the 'old' category. (Number, percent)",
      "concGrossLe8TdrLongOl": "Concentration of gross long positions for the top 8 traders in the 'old' category. (Number, percent)",
      "concGrossLe8TdrShortOl": "Concentration of gross short positions for the top 8 traders in the 'old' category. (Number, percent)",
      "concNetLe4TdrLongOl": "Concentration of net long positions for the top 4 traders in the 'old' category. (Number, percent)",
      "concNetLe4TdrShortOl": "Concentration of net short positions for the top 4 traders in the 'old' category. (Number, percent)",
      "concNetLe8TdrLongOl": "Concentration of net long positions for the top 8 traders in the 'old' category. (Number, percent)",
      "concNetLe8TdrShortOl": "Concentration of net short positions for the top 8 traders in the 'old' category. (Number, percent)",
      "concGrossLe4TdrLongOther": "Concentration of gross long positions for the top 4 traders in the 'other' category. (Number, percent)",
      "concGrossLe4TdrShortOther": "Concentration of gross short positions for the top 4 traders in the 'other' category. (Number, percent)",
      "concGrossLe8TdrLongOther": "Concentration of gross long positions for the top 8 traders in the 'other' category. (Number, percent)",
      "concGrossLe8TdrShortOther": "Concentration of gross short positions for the top 8 traders in the 'other' category. (Number, percent)",
      "concNetLe4TdrLongOther": "Concentration of net long positions for the top 4 traders in the 'other' category. (Number, percent)",
      "concNetLe4TdrShortOther": "Concentration of net short positions for the top 4 traders in the 'other' category. (Number, percent)",
      "concNetLe8TdrLongOther": "Concentration of net long positions for the top 8 traders in the 'other' category. (Number, percent)",
      "concNetLe8TdrShortOther": "Concentration of net short positions for the top 8 traders in the 'other' category. (Number, percent)",
      "contractUnits": "The official contract size for a listed derivative or future. Example: \"(CONTRACTS OF 37,500 POUNDS)\" for Coffee C contracts. (String, optional)"
    }
  },
  {
    "name": "COT Report API",
    "description": "The Commitment-of-Traders Report API delivers the full CFTC breakdown—specs, commercials, spreads, non-reportables—plus trader-count and concentration stats for every contract in the requested window. Required date filters **from** / **to** (max 90 days) gate the dataset; optional **symbol** zooms in on a single market. Perfect for futures desks tracking positioning imbalances, risk teams measuring crowding, and NLP assistants supplying COT details on demand.",
    "category": "derivatives",
    "use_cases": [
      "futures desks monitoring weekly position shifts",
      "crowding-risk heat maps across asset classes",
      "research PDFs summarising COT moves by sector",
      "machine-learning features predicting price reversals",
      "assistant answers on trader-class positioning"
    ],
    "parameters": {
      "required": {
        "from": "The ISO 8601 date (YYYY-MM-DD) indicating the start of a time range filter. Example: \"2025-01-01\" to include only data from January 1, 2025 onward. Must be ≤ `to`. (String, Date, optional)",
        "to": "The ISO 8601 date (YYYY-MM-DD) indicating the end of a time range filter. Example: \"2025-12-31\" to include only data up to December 31, 2025. Must be ≥ `from`. (String, Date, optional)"
      },
      "optional": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      }
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "name": "The full legal or common name of the company. Example: \"Apple Inc.\" (String)",
      "sector": "The broad sector classification for the company, often aligned with GICS sectors. Example: \"Information Technology\". (String)",
      "marketAndExchangeNames": "Full name of the market and exchange where an asset or commodity is traded. Example: \"COFFEE C - ICE FUTURES U.S.\". (String, optional)",
      "cftcContractMarketCode": "A unique code assigned by the Commodity Futures Trading Commission (CFTC) representing the contract market. Example: \"083731\" for Coffee C. (String)",
      "cftcMarketCode": "The CFTC-designated code representing a specific market. Example: \"ICUS\" for ICE Futures U.S. (String)",
      "cftcRegionCode": "A numeric or string identifier used by the CFTC to indicate the geographic region of the market. Example: \"1\" for North America. (String or Number)",
      "cftcCommodityCode": "A unique code assigned by the CFTC to identify the commodity. Example: \"83\" for Coffee. (String)",
      "openInterestAll": "The total open interest across all contracts for a given futures or options market. Example: 120000. (Number)",
      "noncommPositionsLongAll": "The aggregate number of non-commercial (speculators) long positions in a futures or options market. Example: 45000. (Number)",
      "noncommPositionsShortAll": "The aggregate number of non-commercial (speculators) short positions. Example: 30000. (Number)",
      "noncommPositionsSpreadAll": "Total non-commercial spread positions (long and short simultaneously for arbitrage). Example: 47072. (Number, optional)",
      "commPositionsLongAll": "The total number of commercial (hedgers) long positions. Example: 15000. (Number)",
      "commPositionsShortAll": "The total number of commercial (hedgers) short positions. Example: 10000. (Number)",
      "totReptPositionsLongAll": "Total reportable long positions, all contract types (COT data). Example: 202092. (Number, optional)",
      "totReptPositionsShortAll": "Total reportable short positions, all contract types. Example: 202816. (Number, optional)",
      "nonreptPositionsLongAll": "Non-reportable (small trader) long positions, all contract types. Example: 7361. (Number, optional)",
      "nonreptPositionsShortAll": "Non-reportable short positions, all contract types. Example: 6637. (Number, optional)",
      "openInterestOld": "Open interest in 'old' contracts. Example: 179986. (Number, optional)",
      "noncommPositionsLongOld": "Non-commercial long positions in 'old' (previously open) contracts. Example: 75483. (Number, optional)",
      "noncommPositionsShortOld": "Non-commercial short positions in 'old' contracts. Example: 35395. (Number, optional)",
      "noncommPositionsSpreadOld": "Non-commercial spread positions in 'old' contracts. Example: 27067. (Number, optional)",
      "commPositionsLongOld": "Long positions held by commercial traders in previous reporting categories. (Number)",
      "commPositionsShortOld": "Short positions held by commercial traders in previous reporting categories. (Number)",
      "totReptPositionsLongOld": "Total reportable long positions, old contracts. Example: 173243. (Number, optional)",
      "totReptPositionsShortOld": "Total reportable short positions, old contracts. Example: 174128. (Number, optional)",
      "nonreptPositionsLongOld": "Non-reportable long positions, old contracts. Example: 6743. (Number, optional)",
      "nonreptPositionsShortOld": "Non-reportable short positions, old contracts. Example: 5858. (Number, optional)",
      "openInterestOther": "Open interest in other contract types. Example: 29467. (Number, optional)",
      "noncommPositionsLongOther": "Non-commercial long positions in other (e.g., new or special) contracts. Example: 18754. (Number, optional)",
      "noncommPositionsShortOther": "Non-commercial short positions in other contracts. Example: 7142. (Number, optional)",
      "noncommPositionsSpreadOther": "Non-commercial spread positions in other contracts. Example: 1098. (Number, optional)",
      "commPositionsLongOther": "Long positions by commercial traders in 'other' categories. (Number)",
      "commPositionsShortOther": "Short positions by commercial traders in 'other' categories. (Number)",
      "totReptPositionsLongOther": "Total reportable long positions, other contracts. Example: 28849. (Number, optional)",
      "totReptPositionsShortOther": "Total reportable short positions, other contracts. Example: 28688. (Number, optional)",
      "nonreptPositionsLongOther": "Non-reportable long positions, other contracts. Example: 618. (Number, optional)",
      "nonreptPositionsShortOther": "Non-reportable short positions, other contracts. Example: 779. (Number, optional)",
      "changeInOpenInterestAll": "Net change in open interest (contracts outstanding) for all traders since the previous period. Example: 2,957. (Number)",
      "changeInNoncommLongAll": "Change in long positions for non-commercial traders for all categories. (Number)",
      "changeInNoncommShortAll": "Change in short positions for non-commercial traders for all categories. (Number)",
      "changeInNoncommSpeadAll": "Change in spread positions for non-commercial traders for all categories. (Number)",
      "changeInCommLongAll": "Change in long positions for commercial traders for all categories. (Number)",
      "changeInCommShortAll": "Change in short positions for commercial traders for all categories. (Number)",
      "changeInTotReptLongAll": "Change in total reported long positions across all trader types. (Number)",
      "changeInTotReptShortAll": "Change in total reported short positions across all trader types. (Number)",
      "changeInNonreptLongAll": "Change in long positions held by non-reporting traders. (Number)",
      "changeInNonreptShortAll": "Change in short positions held by non-reporting traders. (Number)",
      "pctOfOpenInterestAll": "Percentage of open interest attributed to all trader types. (Number, percent)",
      "pctOfOiNoncommLongAll": "Percent of open interest represented by non-commercial long positions. (Number, percent)",
      "pctOfOiNoncommShortAll": "Percent of open interest represented by non-commercial short positions. (Number, percent)",
      "pctOfOiNoncommSpreadAll": "Percent of open interest from non-commercial spread positions. (Number, percent)",
      "pctOfOiCommLongAll": "Percent of open interest from commercial long positions. (Number, percent)",
      "pctOfOiCommShortAll": "Percent of open interest from commercial short positions. (Number, percent)",
      "pctOfOiTotReptLongAll": "Percent of open interest from all reported long positions. (Number, percent)",
      "pctOfOiTotReptShortAll": "Percent of open interest from all reported short positions. (Number, percent)",
      "pctOfOiNonreptLongAll": "Percent of open interest from non-reporting long positions. (Number, percent)",
      "pctOfOiNonreptShortAll": "Percent of open interest from non-reporting short positions. (Number, percent)",
      "pctOfOpenInterestOl": "Percentage of open interest accounted for by all positions in the 'old' category, as a proportion of total contracts. (Number, percent)",
      "pctOfOiNoncommLongOl": "Percent of open interest from non-commercial (speculator) long positions in the 'old' category. (Number, percent)",
      "pctOfOiNoncommShortOl": "Percent of open interest from non-commercial short positions in the 'old' category. (Number, percent)",
      "pctOfOiNoncommSpreadOl": "Percent of open interest from non-commercial spread positions in the 'old' category. (Number, percent)",
      "pctOfOiCommLongOl": "Percent of open interest from commercial (hedger) long positions in the 'old' category. (Number, percent)",
      "pctOfOiCommShortOl": "Percent of open interest from commercial short positions in the 'old' category. (Number, percent)",
      "pctOfOiTotReptLongOl": "Percent of total reported long positions (all traders) in the 'old' category relative to open interest. (Number, percent)",
      "pctOfOiTotReptShortOl": "Percent of total reported short positions (all traders) in the 'old' category relative to open interest. (Number, percent)",
      "pctOfOiNonreptLongOl": "Percent of non-reportable long positions in 'old' category relative to total open interest. (Number, percent)",
      "pctOfOiNonreptShortOl": "Percent of non-reportable short positions in 'old' category relative to total open interest. (Number, percent)",
      "pctOfOpenInterestOther": "Percentage of open interest attributed to the 'other' trader group. (Number, percent)",
      "pctOfOiNoncommLongOther": "Percent of open interest from non-commercial long positions in 'other' category. (Number, percent)",
      "pctOfOiNoncommShortOther": "Percent of open interest from non-commercial short positions in 'other' category. (Number, percent)",
      "pctOfOiNoncommSpreadOther": "Percent of open interest from non-commercial spread positions in 'other' category. (Number, percent)",
      "pctOfOiCommLongOther": "Percent of open interest from commercial long positions in 'other' category. (Number, percent)",
      "pctOfOiCommShortOther": "Percent of open interest from commercial short positions in 'other' category. (Number, percent)",
      "pctOfOiTotReptLongOther": "Percent of total reported long positions (all traders) in 'other' category. (Number, percent)",
      "pctOfOiTotReptShortOther": "Percent of total reported short positions (all traders) in 'other' category. (Number, percent)",
      "pctOfOiNonreptLongOther": "Percent of non-reportable long positions in 'other' category. (Number, percent)",
      "pctOfOiNonreptShortOther": "Percent of non-reportable short positions in 'other' category. (Number, percent)",
      "tradersTotAll": "Total number of reportable traders (all types) across all contracts. Example: 357. (Number, optional)",
      "tradersNoncommLongAll": "Number of non-commercial traders (speculators) holding reportable long positions (COT). Example: 132. (Number, optional)",
      "tradersNoncommShortAll": "Number of non-commercial traders with reportable short positions across all contracts. Example: 77. (Number, optional)",
      "tradersNoncommSpreadAll": "Number of non-commercial traders engaged in spread positions across all contracts (COT). Example: 94. (Number, optional)",
      "tradersCommLongAll": "Number of commercial traders holding reportable long positions across all contracts (COT). Example: 106. (Number, optional)",
      "tradersCommShortAll": "Number of commercial traders with reportable short positions across all contracts (COT). Example: 119. (Number, optional)",
      "tradersTotReptLongAll": "Total traders with reportable long positions (all contract types). Example: 286. (Number, optional)",
      "tradersTotReptShortAll": "Total traders with reportable short positions (all contracts). Example: 250. (Number, optional)",
      "tradersTotOl": "Total number of reportable traders in 'old' contracts. Example: 351. (Number, optional)",
      "tradersNoncommLongOl": "Non-commercial traders with long positions in 'old' contracts. Example: 136. (Number, optional)",
      "tradersNoncommShortOl": "Non-commercial traders with short positions in 'old' contracts. Example: 72. (Number, optional)",
      "tradersNoncommSpeadOl": "Non-commercial traders engaged in spread positions in 'old' contracts. Example: 88. (Number, optional)",
      "tradersCommLongOl": "Number of commercial traders with reportable long positions in 'old' contracts. Example: 94. (Number, optional)",
      "tradersCommShortOl": "Number of commercial traders with reportable short positions in 'old' contracts. Example: 114. (Number, optional)",
      "tradersTotReptLongOl": "Total traders with reportable long positions in 'old' contracts. Example: 269. (Number, optional)",
      "tradersTotReptShortOl": "Total traders with reportable short positions in 'old' contracts. Example: 239. (Number, optional)",
      "tradersTotOther": "Total number of reportable traders in 'other' contracts. Example: 164. (Number, optional)",
      "tradersNoncommLongOther": "Non-commercial traders with long positions in 'other' contracts. Example: 31. (Number, optional)",
      "tradersNoncommShortOther": "Non-commercial traders with short positions in 'other' contracts. Example: 34. (Number, optional)",
      "tradersNoncommSpreadOther": "Non-commercial traders engaged in spread positions in 'other' contracts. Example: 16. (Number, optional)",
      "tradersCommLongOther": "Number of commercial traders with reportable long positions in 'other' contracts. Example: 59. (Number, optional)",
      "tradersCommShortOther": "Number of commercial traders with reportable short positions in 'other' contracts. Example: 68. (Number, optional)",
      "tradersTotReptLongOther": "Total traders with reportable long positions in 'other' contracts. Example: 102. (Number, optional)",
      "tradersTotReptShortOther": "Total traders with reportable short positions in 'other' contracts. Example: 106. (Number, optional)",
      "concGrossLe4TdrLongAll": "Concentration of the gross position for the four largest traders on the long side, as a percentage of open interest. (Number, percent)",
      "concGrossLe4TdrShortAll": "Concentration of the gross position for the four largest traders on the short side, as a percentage of open interest. (Number, percent)",
      "concGrossLe8TdrLongAll": "Concentration of the gross position for the eight largest traders on the long side, as a percentage of open interest. (Number, percent)",
      "concGrossLe8TdrShortAll": "Concentration of the gross position for the eight largest traders on the short side, as a percentage of open interest. (Number, percent)",
      "concNetLe4TdrLongAll": "Concentration of the net position for the four largest traders on the long side. (Number, percent)",
      "concNetLe4TdrShortAll": "Concentration of the net position for the four largest traders on the short side. (Number, percent)",
      "concNetLe8TdrLongAll": "Concentration of the net position for the eight largest traders on the long side. (Number, percent)",
      "concNetLe8TdrShortAll": "Concentration of the net position for the eight largest traders on the short side. (Number, percent)",
      "concGrossLe4TdrLongOl": "Concentration of gross long positions for the top 4 traders in the 'old' category. (Number, percent)",
      "concGrossLe4TdrShortOl": "Concentration of gross short positions for the top 4 traders in the 'old' category. (Number, percent)",
      "concGrossLe8TdrLongOl": "Concentration of gross long positions for the top 8 traders in the 'old' category. (Number, percent)",
      "concGrossLe8TdrShortOl": "Concentration of gross short positions for the top 8 traders in the 'old' category. (Number, percent)",
      "concNetLe4TdrLongOl": "Concentration of net long positions for the top 4 traders in the 'old' category. (Number, percent)",
      "concNetLe4TdrShortOl": "Concentration of net short positions for the top 4 traders in the 'old' category. (Number, percent)",
      "concNetLe8TdrLongOl": "Concentration of net long positions for the top 8 traders in the 'old' category. (Number, percent)",
      "concNetLe8TdrShortOl": "Concentration of net short positions for the top 8 traders in the 'old' category. (Number, percent)",
      "concGrossLe4TdrLongOther": "Concentration of gross long positions for the top 4 traders in the 'other' category. (Number, percent)",
      "concGrossLe4TdrShortOther": "Concentration of gross short positions for the top 4 traders in the 'other' category. (Number, percent)",
      "concGrossLe8TdrLongOther": "Concentration of gross long positions for the top 8 traders in the 'other' category. (Number, percent)",
      "concGrossLe8TdrShortOther": "Concentration of gross short positions for the top 8 traders in the 'other' category. (Number, percent)",
      "concNetLe4TdrLongOther": "Concentration of net long positions for the top 4 traders in the 'other' category. (Number, percent)",
      "concNetLe4TdrShortOther": "Concentration of net short positions for the top 4 traders in the 'other' category. (Number, percent)",
      "concNetLe8TdrLongOther": "Concentration of net long positions for the top 8 traders in the 'other' category. (Number, percent)",
      "concNetLe8TdrShortOther": "Concentration of net short positions for the top 8 traders in the 'other' category. (Number, percent)",
      "contractUnits": "The official contract size for a listed derivative or future. Example: \"(CONTRACTS OF 37,500 POUNDS)\" for Coffee C contracts. (String, optional)"
    }
  },
  {
    "name": "COT Analysis By Dates API",
    "description": "COT Analysis By Dates API (category: derivatives) summarises raw COT data into digestible sentiment fields—current vs. previous market situation, net position, change in net, bullish/bearish classification, and reversal-trend flag—across a user-supplied **from**/**to** window (≤ 90 days). Optional **symbol** narrows the lens. Ideal for quick-look dashboards, alert engines flagging sentiment flips, and chatbots explaining “Is British Pound positioning turning bullish?”.",
    "category": "derivatives",
    "use_cases": [
      "generate sentiment scorecards for each futures contract",
      "trigger alerts on bullish-to-bearish reversals",
      "overlay net-position changes on price charts",
      "feed quant factors with sentiment momentum",
      "answer NLP questions on current COT sentiment"
    ],
    "parameters": {
      "required": {
        "from": "The ISO 8601 date (YYYY-MM-DD) indicating the start of a time range filter. Example: \"2025-01-01\" to include only data from January 1, 2025 onward. Must be ≤ `to`. (String, Date, optional)",
        "to": "The ISO 8601 date (YYYY-MM-DD) indicating the end of a time range filter. Example: \"2025-12-31\" to include only data up to December 31, 2025. Must be ≥ `from`. (String, Date, optional)"
      },
      "optional": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      }
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "name": "The full legal or common name of the company. Example: \"Apple Inc.\" (String)",
      "sector": "The broad sector classification for the company, often aligned with GICS sectors. Example: \"Information Technology\". (String)",
      "exchange": "The abbreviated code or name of the exchange where the security is traded. Example: \"NASDAQ\". (String)",
      "currentLongMarketSituation": "The percentage or value representing current long positions in the market. Example: \"55%\". (String or Number)",
      "currentShortMarketSituation": "The percentage or value representing current short positions in the market. Example: \"45%\". (String or Number)",
      "marketSituation": "A high-level description of current market conditions or sentiment, often qualitative. Example: \"Bullish\". (String)",
      "previousLongMarketSituation": "Long market position (percentage or score) from the previous period for currencies/futures. Example: 67.97. (Number, optional)",
      "previousShortMarketSituation": "Short market position (percentage or score) from the previous period. Example: 32.03. (Number, optional)",
      "previousMarketSituation": "Market situation or trend (e.g., bullish, bearish) from the prior period. Example: \"Bullish\". (String, optional)",
      "netPostion": "The aggregate net position value for a set of market participants or a portfolio. Example: 10000. (Number)",
      "previousNetPosition": "Net position value (long minus short) from the previous period for COT or market sentiment data. Example: 46312. (Number, optional)",
      "changeInNetPosition": "The net change in total positions (long minus short) over a specified period. Example: 5000. (Number)",
      "marketSentiment": "A composite metric or qualitative gauge of overall market sentiment, such as \"Neutral\" or \"Optimistic\". (String)",
      "reversalTrend": "Boolean flag indicating whether a reversal trend has been detected based on analysis. Example: false. (Boolean)"
    }
  },
  {
    "name": "COT Analysis By Dates API",
    "description": "The COT Report Analysis endpoint converts weekly positioning figures into actionable indicators—bullish/​bearish tags, long-short ratios, net-position deltas, and reversal signals—for any contract within a 90-day window. Pass **from** and **to** (required) and optional **symbol** to streamline output. Plug it into strategy dashboards, risk monitors, or conversational agents that need an at-a-glance read on futures sentiment.",
    "category": "derivatives",
    "use_cases": [
      "strategy dashboards highlighting sentiment extremes",
      "risk systems watching for sudden net-position swings",
      "client newsletters citing bullish/​bearish shifts",
      "back-tests on reversal-trend flag efficacy",
      "assistant summaries of sentiment trajectory"
    ],
    "parameters": {
      "required": {
        "from": "The ISO 8601 date (YYYY-MM-DD) indicating the start of a time range filter. Example: \"2025-01-01\" to include only data from January 1, 2025 onward. Must be ≤ `to`. (String, Date, optional)",
        "to": "The ISO 8601 date (YYYY-MM-DD) indicating the end of a time range filter. Example: \"2025-12-31\" to include only data up to December 31, 2025. Must be ≥ `from`. (String, Date, optional)"
      },
      "optional": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      }
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "name": "The full legal or common name of the company. Example: \"Apple Inc.\" (String)",
      "sector": "The broad sector classification for the company, often aligned with GICS sectors. Example: \"Information Technology\". (String)",
      "exchange": "The abbreviated code or name of the exchange where the security is traded. Example: \"NASDAQ\". (String)",
      "currentLongMarketSituation": "The percentage or value representing current long positions in the market. Example: \"55%\". (String or Number)",
      "currentShortMarketSituation": "The percentage or value representing current short positions in the market. Example: \"45%\". (String or Number)",
      "marketSituation": "A high-level description of current market conditions or sentiment, often qualitative. Example: \"Bullish\". (String)",
      "previousLongMarketSituation": "Long market position (percentage or score) from the previous period for currencies/futures. Example: 67.97. (Number, optional)",
      "previousShortMarketSituation": "Short market position (percentage or score) from the previous period. Example: 32.03. (Number, optional)",
      "previousMarketSituation": "Market situation or trend (e.g., bullish, bearish) from the prior period. Example: \"Bullish\". (String, optional)",
      "netPostion": "The aggregate net position value for a set of market participants or a portfolio. Example: 10000. (Number)",
      "previousNetPosition": "Net position value (long minus short) from the previous period for COT or market sentiment data. Example: 46312. (Number, optional)",
      "changeInNetPosition": "The net change in total positions (long minus short) over a specified period. Example: 5000. (Number)",
      "marketSentiment": "A composite metric or qualitative gauge of overall market sentiment, such as \"Neutral\" or \"Optimistic\". (String)",
      "reversalTrend": "Boolean flag indicating whether a reversal trend has been detected based on analysis. Example: false. (Boolean)"
    }
  },
  {
    "name": "COT Report List API",
    "description": "COT Report List API (category: derivatives) returns the master directory of available COT contracts—each with **symbol** and descriptive **name**—so developers can populate drop-downs, validate inputs, or iterate programmatically through every market segment.",
    "category": "derivatives",
    "use_cases": [
      "populate contract selectors in UI widgets",
      "iterate through all COT symbols for batch pulls",
      "validate user input against supported contracts",
      "map sector coverage for research portals",
      "chatbots listing available COT instruments"
    ],
    "parameters": {
      "required": {},
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "name": "The full legal or common name of the company. Example: \"Apple Inc.\" (String)"
    }
  },
  {
    "name": "COT Report List API",
    "description": "The COT Report List endpoint supplies a concise catalogue of every commodity, currency, and index covered in the Commitment-of-Traders programme. No parameters needed—simply call and receive symbol–name pairs ready for look-ups, contract mapping, or UI auto-completion.",
    "category": "derivatives",
    "use_cases": [
      "UI auto-complete for contract search",
      "build contract-code to friendly-name mapping tables",
      "quick audit of COT universe coverage",
      "loop through symbols to seed a local database",
      "assistant answers to “Which futures have COT data?”"
    ],
    "parameters": {
      "required": {},
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "name": "The full legal or common name of the company. Example: \"Apple Inc.\" (String)"
    }
  },
  {
    "name": "DCF Valuation API",
    "description": "DCF Valuation API (category: valuation) calculates an unlevered discounted-cash-flow estimate for a single equity using FMP’s default forecast assumptions. Required **symbol** returns the valuation **dcf** figure, the calculation **date**, and the contemporaneous **Stock Price**, enabling quick intrinsic-value checks, valuation-gap screens, and chatbots answering “What’s Apple’s DCF value today?”.",
    "category": "valuation",
    "use_cases": [
      "compare intrinsic value to market price in research dashboards",
      "rank stocks by upside to DCF in factor models",
      "feed ESG fair-value overlays in portfolio tools",
      "trigger alerts when price crosses DCF estimate",
      "answer user queries on current DCF valuation"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "dcf": "The calculated Discounted Cash Flow (DCF) valuation for the company, representing the present value of projected cash flows. Example: 2500000000000. (Number)",
      "Stock Price": "The current live market price of the stock, updated in real-time or near real-time. Example: 130.75. (Number)"
    }
  },
  {
    "name": "DCF Valuation API",
    "description": "The DCF Valuation endpoint delivers a fast intrinsic-value snapshot by discounting projected free cash flows at a standard WACC. Category valuation. Single parameter **symbol** returns date-stamped DCF value alongside live stock price—ideal for watch-list tooling, value-versus-price heat-maps, or AI assistants explaining valuation gaps.",
    "category": "valuation",
    "use_cases": [
      "display valuation gap columns in screens",
      "generate alerts when valuation gap narrows",
      "benchmark management guidance to intrinsic value",
      "feed robo-advisors with fair-value metrics",
      "produce valuation-gap charts for research notes"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "dcf": "The calculated Discounted Cash Flow (DCF) valuation for the company, representing the present value of projected cash flows. Example: 2500000000000. (Number)",
      "Stock Price": "The current live market price of the stock, updated in real-time or near real-time. Example: 130.75. (Number)"
    }
  },
  {
    "name": "Levered DCF API",
    "description": "Levered DCF API (category: valuation) prices a company with debt effects included—discounting free cash flow to equity at the cost of equity. Required **symbol** returns levered **dcf** value, valuation **date**, and live **Stock Price**. Apply it when capital-structure leverage materially skews equity value, in banking models or chatbots answering “What’s Apple’s levered DCF?”.",
    "category": "valuation",
    "use_cases": [
      "banking pitch books emphasising equity value post-debt",
      "compare levered vs. unlevered valuations in dashboards",
      "alert when market price diverges from levered DCF",
      "feed equity cost-of-capital studies",
      "answer NLP queries on debt-adjusted value"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "dcf": "The calculated Discounted Cash Flow (DCF) valuation for the company, representing the present value of projected cash flows. Example: 2500000000000. (Number)",
      "Stock Price": "The current live market price of the stock, updated in real-time or near real-time. Example: 130.75. (Number)"
    }
  },
  {
    "name": "Levered DCF API",
    "description": "The Levered DCF endpoint discounts cash flows available to equity holders after servicing debt, yielding a debt-inclusive intrinsic price per share. Category valuation. Single **symbol** parameter; response mirrors the unlevered schema for direct comparison. Ideal for LBO screens, high-debt sectors, and compliance checks on fair-value disclosures.",
    "category": "valuation",
    "use_cases": [
      "LBO modelling and leverage stress tests",
      "valuation dashboards for capital-intensive sectors",
      "automated fairness-opinion checks",
      "factor screens on levered upside",
      "assistant explanations of levered vs. unlevered value"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "dcf": "The calculated Discounted Cash Flow (DCF) valuation for the company, representing the present value of projected cash flows. Example: 2500000000000. (Number)",
      "Stock Price": "The current live market price of the stock, updated in real-time or near real-time. Example: 130.75. (Number)"
    }
  },
  {
    "name": "Custom DCF Advanced API",
    "description": "Custom DCF Advanced API (category: valuation) lets analysts override every major driver—revenue growth, margins, cap-ex, WACC inputs, tax rate, terminal growth—via granular percentage and rate parameters. Required **symbol** plus the listed assumption fields return a projection table and equity-value per share. Use it for scenario analysis, sensitivity testing, and educational tools demonstrating how each lever changes value.",
    "category": "valuation",
    "use_cases": [
      "run bull/base/bear scenario valuations programmatically",
      "embed interactive valuation sliders in client portals",
      "teach valuation mechanics in finance courses",
      "generate sensitivity tables for investment memos",
      "chatbots generating customised DCF outputs"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {
        "revenueGrowthPct": "A percentage threshold to filter on year-over-year revenue growth rate. Example: 15.0 to include only companies growing revenue ≥15%. (Number, optional)",
        "ebitdaPct": "A percentage threshold to filter on EBITDA margin. Example: 20.0 to include only companies with EBITDA margin ≥20%. (Number, optional)",
        "depreciationAndAmortizationPct": "A percentage threshold of depreciation & amortization (D&A) as a percentage of revenue. Example: 5.0 to include only names where D&A ≤5% of revenue. (Number, optional)",
        "cashAndShortTermInvestmentsPct": "A percentage threshold for cash & short-term investments relative to total assets. Example: 10.0 to include only companies with ≥10% of assets in cash. (Number, optional)",
        "receivablesPct": "A percentage threshold for accounts receivable relative to revenue or assets. Example: 8.0 to include companies where receivables ≤8% of revenue. (Number, optional)",
        "inventoriesPct": "A percentage threshold for inventory as a percentage of revenue or assets. Example: 6.0 to include companies holding ≤6% of assets in inventory. (Number, optional)",
        "payablePct": "A percentage threshold for accounts payable relative to revenue or assets. Example: 4.0 to include companies where payables ≤4% of revenue. (Number, optional)",
        "ebitPct": "A percentage threshold for EBIT margin. Example: 18.0 to include only companies with EBIT margin ≥18%. (Number, optional)",
        "capitalExpenditurePct": "A percentage threshold for capital expenditures relative to revenue or assets. Example: 5.0 to include only companies investing ≤5% of revenue in capex. (Number, optional)",
        "operatingCashFlowPct": "A percentage threshold for operating cash flow relative to revenue or assets. Example: 12.0 to include only companies generating ≥12% of revenue in operating cash flow. (Number, optional)",
        "sellingGeneralAndAdministrativeExpensesPct": "A percentage threshold for SG&A expenses relative to revenue. Example: 15.0 to include only companies with SG&A ≤15% of revenue. (Number, optional)",
        "taxRate": "A numeric percentage filter for effective tax rate. Example: 25.0 to include only companies whose effective tax rate ≤25%. (Number, optional)",
        "longTermGrowthRate": "A percentage estimate of a company’s projected long-term growth, used in DCF or target models. Example: 3.5 to select names with long-term growth ≥3.5%. (Number, optional)",
        "costOfDebt": "A decimal or percentage representing the company’s average cost of debt. Example: 4.0 to include only companies with cost of debt ≤4%. (Number or Percentage, optional)",
        "costOfEquity": "A decimal or percentage representing the company’s cost of equity. Example: 8.5 to include only companies whose cost of equity ≤8.5%. (Number or Percentage, optional)",
        "marketRiskPremium": "A percentage representing the assumed equity risk premium used in CAPM or WACC calculations. Example: 5.5 to filter names priced with a market risk premium ≥5.5%. (Number or Percentage, optional)",
        "beta": "A numeric filter for stock beta, representing volatility relative to the market. Example: 1.0 to include only stocks with beta ≥1.0. (Number, optional)",
        "riskFreeRate": "A percentage value representing the risk-free rate used in CAPM calculations. Example: 2.5 to include only names priced with a risk-free rate ≤2.5%. (Number or Percentage, optional)"
      }
    },
    "response_example": {
      "year": "The calendar year associated with a data point or report. Example: 2023. (Number or String)",
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "revenue": "The total revenue value reported or projected for the period. Example: 100000000. (Number)",
      "revenuePercentage": "A line item’s percentage contribution to total revenue, useful for segment breakdowns. Example: 0.37 means 37% from iPhone sales. (Number, decimal or percent, segment reporting)",
      "ebitda": "The EBITDA value (Earnings Before Interest, Taxes, Depreciation, and Amortization) reported for the period. Example: 22000000. (Number)",
      "ebitdaPercentage": "EBITDA as a percentage of a selected base (e.g., revenue). (Number, percent)",
      "ebit": "The actual reported Earnings Before Interest and Taxes for the period. Example: 22000000. (Number)",
      "ebitPercentage": "EBIT as a percentage of a selected base, such as total assets or revenue. (Number, percent)",
      "depreciation": "Total depreciation expense recorded for the period, reducing the value of tangible fixed assets. (Number, currency)",
      "depreciationPercentage": "Annual depreciation as a percentage of the gross value of relevant fixed assets. (Number, percent)",
      "totalCash": "Total amount of cash and cash equivalents held. Example: 50,000,000,000 as liquidity buffer. (Number, top-level liquidity metric)",
      "totalCashPercentage": "Cash as a percentage of total assets or portfolio value. Example: 0.12 for 12%. (Number, cash allocation ratio)",
      "receivables": "Total value of amounts owed to the company by customers or others, before allowances. (Number, optional)",
      "receivablesPercentage": "Receivables as a percentage of a base metric (e.g., total assets or revenue). (Number, percent, optional)",
      "inventories": "The total value of a company’s inventory at period end. Example: 10202330691 for $10.2B in inventory. (Number, optional)",
      "inventoriesPercentage": "Inventories as a percentage of revenue or assets. Example: 1.55 for 1.55%. (Number, optional)",
      "payable": "Total accounts payable (trade creditors) owed by the company. Example: 106124867281. (Number, optional)",
      "payablePercentage": "Accounts payable as a percentage of revenue or assets. Example: 16.15 for 16.15%. (Number, optional)",
      "capitalExpenditure": "The capital expenditure value, representing funds used to acquire or upgrade long-term assets. Example: 5000000. (Number)",
      "capitalExpenditurePercentage": "Capital expenditures expressed as a percentage of some base metric (usually revenue, assets, or cash flow). (Percent)",
      "price": "The last traded price or intrinsic value of the security or asset. Example: 130.75. (Number)",
      "beta": "A measure of the stock's volatility relative to the overall market; beta > 1 indicates higher volatility. Example: 1.20. (Number)",
      "dilutedSharesOutstanding": "Weighted average number of diluted shares outstanding during the period, including convertible securities. (Number, shares)",
      "costofDebt": "Effective interest rate paid by the company on its debt, before or after taxes. (Percent)",
      "taxRate": "Effective tax rate as a percentage of pre-tax income. Example: 0.23 for 23%. (Number, key for profit modeling)",
      "afterTaxCostOfDebt": "Company's cost of debt financing after taking into account the tax deductibility of interest expense. (Percent, e.g., 3.5%)",
      "riskFreeRate": "Risk-free interest rate used in financial calculations (e.g., CAPM), typically based on Treasury rates. Example: 3.64. (Number, optional)",
      "marketRiskPremium": "Percentage value for the assumed equity risk premium used in CAPM/WACC calculations. Example: 5.5 for 5.5% market risk premium. (Number or Percentage, optional)",
      "costOfEquity": "Required rate of return by equity investors, often calculated using the CAPM model. (Percent)",
      "totalDebt": "The total debt value, including short-term and long-term liabilities. Example: 30000000. (Number)",
      "totalEquity": "The total equity value, representing shareholders’ equity. Example: 90000000. (Number)",
      "totalCapital": "Sum of all capital employed (debt + equity) in the company. Example: 250,000,000,000 for a Fortune 500 firm. (Number, balance sheet capital)",
      "debtWeighting": "Weight of debt in the company's capital structure, often used in WACC calculation. (Number, percent)",
      "equityWeighting": "Percentage of equity in the company’s capital structure. (Number, percent)",
      "wacc": "The company's Weighted Average Cost of Capital, expressed as a percentage. Example: 7.5. (Number, Percentage)",
      "taxRateCash": "Cash taxes paid as a raw number (not a percent). Example: 14919580. (Number, optional)",
      "ebiat": "Earnings Before Interest After Tax. Measures core profitability excluding financing cost but after taxes. (Number, currency)",
      "ufcf": "Unlevered Free Cash Flow, representing cash available to all capital providers before accounting for debt. Example: 5000000000. (Number)",
      "sumPvUfcf": "Sum of present values of unlevered free cash flows. Example: 616840860880. (Number, optional)",
      "longTermGrowthRate": "Projected or assumed annualized long-term growth rate, often used in discounted cash flow or terminal value calculations. Example: 4 for 4% annual growth. (Number, optional)",
      "terminalValue": "The projected Terminal Value in a DCF model, estimating value beyond the explicit forecast period. Example: 100000000000. (Number)",
      "presentTerminalValue": "The present value of the projected Terminal Value, discounted back to today. Example: 80000000000. (Number)",
      "enterpriseValue": "The total Enterprise Value, calculated as market capitalization plus net debt and minority interest, minus cash and equivalents. Example: 2500000000000. (Number)",
      "netDebt": "Total debt minus cash and cash equivalents, representing the company's net leverage. Example: 76686000000 for $76.7B net debt. (Number, optional)",
      "equityValue": "Total value of the company's equity (market capitalization or book value). (Number, currency)",
      "equityValuePerShare": "Calculated equity value per share, derived by dividing total equity by total shares outstanding. Example: 25.67. (Number)",
      "freeCashFlowT1": "Free cash flow in the latest (T1) reporting period. (Number, currency)"
    }
  },
  {
    "name": "Custom DCF Advanced API",
    "description": "The Advanced Custom DCF endpoint offers full-stack parameterisation for power users—analysts can feed bespoke growth curves, margin assumptions, and capital-structure inputs to output a tailored valuation down to equityValuePerShare. Category valuation. Beyond **symbol**, every major valuation driver is overridable, making it perfect for Monte-Carlo engines, investment-committee sensitivity packs, and conversational AI generating on-the-fly bespoke models.",
    "category": "valuation",
    "use_cases": [
      "Monte-Carlo valuation simulations",
      "investment-committee scenario hand-outs",
      "API-driven valuation apps for retail investors",
      "reg-tech tools validating prospectus assumptions",
      "assistant-led custom DCF walkthroughs"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {
        "revenueGrowthPct": "A percentage threshold to filter on year-over-year revenue growth rate. Example: 15.0 to include only companies growing revenue ≥15%. (Number, optional)",
        "ebitdaPct": "A percentage threshold to filter on EBITDA margin. Example: 20.0 to include only companies with EBITDA margin ≥20%. (Number, optional)",
        "depreciationAndAmortizationPct": "A percentage threshold of depreciation & amortization (D&A) as a percentage of revenue. Example: 5.0 to include only names where D&A ≤5% of revenue. (Number, optional)",
        "cashAndShortTermInvestmentsPct": "A percentage threshold for cash & short-term investments relative to total assets. Example: 10.0 to include only companies with ≥10% of assets in cash. (Number, optional)",
        "receivablesPct": "A percentage threshold for accounts receivable relative to revenue or assets. Example: 8.0 to include companies where receivables ≤8% of revenue. (Number, optional)",
        "inventoriesPct": "A percentage threshold for inventory as a percentage of revenue or assets. Example: 6.0 to include companies holding ≤6% of assets in inventory. (Number, optional)",
        "payablePct": "A percentage threshold for accounts payable relative to revenue or assets. Example: 4.0 to include companies where payables ≤4% of revenue. (Number, optional)",
        "ebitPct": "A percentage threshold for EBIT margin. Example: 18.0 to include only companies with EBIT margin ≥18%. (Number, optional)",
        "capitalExpenditurePct": "A percentage threshold for capital expenditures relative to revenue or assets. Example: 5.0 to include only companies investing ≤5% of revenue in capex. (Number, optional)",
        "operatingCashFlowPct": "A percentage threshold for operating cash flow relative to revenue or assets. Example: 12.0 to include only companies generating ≥12% of revenue in operating cash flow. (Number, optional)",
        "sellingGeneralAndAdministrativeExpensesPct": "A percentage threshold for SG&A expenses relative to revenue. Example: 15.0 to include only companies with SG&A ≤15% of revenue. (Number, optional)",
        "taxRate": "A numeric percentage filter for effective tax rate. Example: 25.0 to include only companies whose effective tax rate ≤25%. (Number, optional)",
        "longTermGrowthRate": "A percentage estimate of a company’s projected long-term growth, used in DCF or target models. Example: 3.5 to select names with long-term growth ≥3.5%. (Number, optional)",
        "costOfDebt": "A decimal or percentage representing the company’s average cost of debt. Example: 4.0 to include only companies with cost of debt ≤4%. (Number or Percentage, optional)",
        "costOfEquity": "A decimal or percentage representing the company’s cost of equity. Example: 8.5 to include only companies whose cost of equity ≤8.5%. (Number or Percentage, optional)",
        "marketRiskPremium": "A percentage representing the assumed equity risk premium used in CAPM or WACC calculations. Example: 5.5 to filter names priced with a market risk premium ≥5.5%. (Number or Percentage, optional)",
        "beta": "A numeric filter for stock beta, representing volatility relative to the market. Example: 1.0 to include only stocks with beta ≥1.0. (Number, optional)",
        "riskFreeRate": "A percentage value representing the risk-free rate used in CAPM calculations. Example: 2.5 to include only names priced with a risk-free rate ≤2.5%. (Number or Percentage, optional)"
      }
    },
    "response_example": {
      "year": "The calendar year associated with a data point or report. Example: 2023. (Number or String)",
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "revenue": "The total revenue value reported or projected for the period. Example: 100000000. (Number)",
      "revenuePercentage": "A line item’s percentage contribution to total revenue, useful for segment breakdowns. Example: 0.37 means 37% from iPhone sales. (Number, decimal or percent, segment reporting)",
      "ebitda": "The EBITDA value (Earnings Before Interest, Taxes, Depreciation, and Amortization) reported for the period. Example: 22000000. (Number)",
      "ebitdaPercentage": "EBITDA as a percentage of a selected base (e.g., revenue). (Number, percent)",
      "ebit": "The actual reported Earnings Before Interest and Taxes for the period. Example: 22000000. (Number)",
      "ebitPercentage": "EBIT as a percentage of a selected base, such as total assets or revenue. (Number, percent)",
      "depreciation": "Total depreciation expense recorded for the period, reducing the value of tangible fixed assets. (Number, currency)",
      "depreciationPercentage": "Annual depreciation as a percentage of the gross value of relevant fixed assets. (Number, percent)",
      "totalCash": "Total amount of cash and cash equivalents held. Example: 50,000,000,000 as liquidity buffer. (Number, top-level liquidity metric)",
      "totalCashPercentage": "Cash as a percentage of total assets or portfolio value. Example: 0.12 for 12%. (Number, cash allocation ratio)",
      "receivables": "Total value of amounts owed to the company by customers or others, before allowances. (Number, optional)",
      "receivablesPercentage": "Receivables as a percentage of a base metric (e.g., total assets or revenue). (Number, percent, optional)",
      "inventories": "The total value of a company’s inventory at period end. Example: 10202330691 for $10.2B in inventory. (Number, optional)",
      "inventoriesPercentage": "Inventories as a percentage of revenue or assets. Example: 1.55 for 1.55%. (Number, optional)",
      "payable": "Total accounts payable (trade creditors) owed by the company. Example: 106124867281. (Number, optional)",
      "payablePercentage": "Accounts payable as a percentage of revenue or assets. Example: 16.15 for 16.15%. (Number, optional)",
      "capitalExpenditure": "The capital expenditure value, representing funds used to acquire or upgrade long-term assets. Example: 5000000. (Number)",
      "capitalExpenditurePercentage": "Capital expenditures expressed as a percentage of some base metric (usually revenue, assets, or cash flow). (Percent)",
      "price": "The last traded price or intrinsic value of the security or asset. Example: 130.75. (Number)",
      "beta": "A measure of the stock's volatility relative to the overall market; beta > 1 indicates higher volatility. Example: 1.20. (Number)",
      "dilutedSharesOutstanding": "Weighted average number of diluted shares outstanding during the period, including convertible securities. (Number, shares)",
      "costofDebt": "Effective interest rate paid by the company on its debt, before or after taxes. (Percent)",
      "taxRate": "Effective tax rate as a percentage of pre-tax income. Example: 0.23 for 23%. (Number, key for profit modeling)",
      "afterTaxCostOfDebt": "Company's cost of debt financing after taking into account the tax deductibility of interest expense. (Percent, e.g., 3.5%)",
      "riskFreeRate": "Risk-free interest rate used in financial calculations (e.g., CAPM), typically based on Treasury rates. Example: 3.64. (Number, optional)",
      "marketRiskPremium": "Percentage value for the assumed equity risk premium used in CAPM/WACC calculations. Example: 5.5 for 5.5% market risk premium. (Number or Percentage, optional)",
      "costOfEquity": "Required rate of return by equity investors, often calculated using the CAPM model. (Percent)",
      "totalDebt": "The total debt value, including short-term and long-term liabilities. Example: 30000000. (Number)",
      "totalEquity": "The total equity value, representing shareholders’ equity. Example: 90000000. (Number)",
      "totalCapital": "Sum of all capital employed (debt + equity) in the company. Example: 250,000,000,000 for a Fortune 500 firm. (Number, balance sheet capital)",
      "debtWeighting": "Weight of debt in the company's capital structure, often used in WACC calculation. (Number, percent)",
      "equityWeighting": "Percentage of equity in the company’s capital structure. (Number, percent)",
      "wacc": "The company's Weighted Average Cost of Capital, expressed as a percentage. Example: 7.5. (Number, Percentage)",
      "taxRateCash": "Cash taxes paid as a raw number (not a percent). Example: 14919580. (Number, optional)",
      "ebiat": "Earnings Before Interest After Tax. Measures core profitability excluding financing cost but after taxes. (Number, currency)",
      "ufcf": "Unlevered Free Cash Flow, representing cash available to all capital providers before accounting for debt. Example: 5000000000. (Number)",
      "sumPvUfcf": "Sum of present values of unlevered free cash flows. Example: 616840860880. (Number, optional)",
      "longTermGrowthRate": "Projected or assumed annualized long-term growth rate, often used in discounted cash flow or terminal value calculations. Example: 4 for 4% annual growth. (Number, optional)",
      "terminalValue": "The projected Terminal Value in a DCF model, estimating value beyond the explicit forecast period. Example: 100000000000. (Number)",
      "presentTerminalValue": "The present value of the projected Terminal Value, discounted back to today. Example: 80000000000. (Number)",
      "enterpriseValue": "The total Enterprise Value, calculated as market capitalization plus net debt and minority interest, minus cash and equivalents. Example: 2500000000000. (Number)",
      "netDebt": "Total debt minus cash and cash equivalents, representing the company's net leverage. Example: 76686000000 for $76.7B net debt. (Number, optional)",
      "equityValue": "Total value of the company's equity (market capitalization or book value). (Number, currency)",
      "equityValuePerShare": "Calculated equity value per share, derived by dividing total equity by total shares outstanding. Example: 25.67. (Number)",
      "freeCashFlowT1": "Free cash flow in the latest (T1) reporting period. (Number, currency)"
    }
  },
  {
    "name": "Custom Levered DCF API",
    "description": "Custom Levered DCF API (category: valuation) produces an equity-to-equity valuation where users control growth, margin, capital-structure, cost-of-capital, and tax assumptions. Required **symbol** and detailed input set output year-by-year projections, WACC, equityValuePerShare, and levered cash-flow figures—vital for highly-leveraged models and educational scenario builders.",
    "category": "valuation",
    "use_cases": [
      "tailored levered scenarios for capital-intensive companies",
      "compare management guidance with custom debt assumptions",
      "educational demos of leverage impact on equity value",
      "bulk scenario generation for valuation fairness opinions",
      "chatbots providing what-if levered DCF outputs"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {
        "revenueGrowthPct": "A percentage threshold to filter on year-over-year revenue growth rate. Example: 15.0 to include only companies growing revenue ≥15%. (Number, optional)",
        "ebitdaPct": "A percentage threshold to filter on EBITDA margin. Example: 20.0 to include only companies with EBITDA margin ≥20%. (Number, optional)",
        "depreciationAndAmortizationPct": "A percentage threshold of depreciation & amortization (D&A) as a percentage of revenue. Example: 5.0 to include only names where D&A ≤5% of revenue. (Number, optional)",
        "cashAndShortTermInvestmentsPct": "A percentage threshold for cash & short-term investments relative to total assets. Example: 10.0 to include only companies with ≥10% of assets in cash. (Number, optional)",
        "receivablesPct": "A percentage threshold for accounts receivable relative to revenue or assets. Example: 8.0 to include companies where receivables ≤8% of revenue. (Number, optional)",
        "inventoriesPct": "A percentage threshold for inventory as a percentage of revenue or assets. Example: 6.0 to include companies holding ≤6% of assets in inventory. (Number, optional)",
        "payablePct": "A percentage threshold for accounts payable relative to revenue or assets. Example: 4.0 to include companies where payables ≤4% of revenue. (Number, optional)",
        "ebitPct": "A percentage threshold for EBIT margin. Example: 18.0 to include only companies with EBIT margin ≥18%. (Number, optional)",
        "capitalExpenditurePct": "A percentage threshold for capital expenditures relative to revenue or assets. Example: 5.0 to include only companies investing ≤5% of revenue in capex. (Number, optional)",
        "operatingCashFlowPct": "A percentage threshold for operating cash flow relative to revenue or assets. Example: 12.0 to include only companies generating ≥12% of revenue in operating cash flow. (Number, optional)",
        "sellingGeneralAndAdministrativeExpensesPct": "A percentage threshold for SG&A expenses relative to revenue. Example: 15.0 to include only companies with SG&A ≤15% of revenue. (Number, optional)",
        "taxRate": "A numeric percentage filter for effective tax rate. Example: 25.0 to include only companies whose effective tax rate ≤25%. (Number, optional)",
        "longTermGrowthRate": "A percentage estimate of a company’s projected long-term growth, used in DCF or target models. Example: 3.5 to select names with long-term growth ≥3.5%. (Number, optional)",
        "costOfDebt": "A decimal or percentage representing the company’s average cost of debt. Example: 4.0 to include only companies with cost of debt ≤4%. (Number or Percentage, optional)",
        "costOfEquity": "A decimal or percentage representing the company’s cost of equity. Example: 8.5 to include only companies whose cost of equity ≤8.5%. (Number or Percentage, optional)",
        "marketRiskPremium": "A percentage representing the assumed equity risk premium used in CAPM or WACC calculations. Example: 5.5 to filter names priced with a market risk premium ≥5.5%. (Number or Percentage, optional)",
        "beta": "A numeric filter for stock beta, representing volatility relative to the market. Example: 1.0 to include only stocks with beta ≥1.0. (Number, optional)",
        "riskFreeRate": "A percentage value representing the risk-free rate used in CAPM calculations. Example: 2.5 to include only names priced with a risk-free rate ≤2.5%. (Number or Percentage, optional)"
      }
    },
    "response_example": {
      "year": "The calendar year associated with a data point or report. Example: 2023. (Number or String)",
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "revenue": "The total revenue value reported or projected for the period. Example: 100000000. (Number)",
      "revenuePercentage": "A line item’s percentage contribution to total revenue, useful for segment breakdowns. Example: 0.37 means 37% from iPhone sales. (Number, decimal or percent, segment reporting)",
      "capitalExpenditure": "The capital expenditure value, representing funds used to acquire or upgrade long-term assets. Example: 5000000. (Number)",
      "capitalExpenditurePercentage": "Capital expenditures expressed as a percentage of some base metric (usually revenue, assets, or cash flow). (Percent)",
      "price": "The last traded price or intrinsic value of the security or asset. Example: 130.75. (Number)",
      "beta": "A measure of the stock's volatility relative to the overall market; beta > 1 indicates higher volatility. Example: 1.20. (Number)",
      "dilutedSharesOutstanding": "Weighted average number of diluted shares outstanding during the period, including convertible securities. (Number, shares)",
      "costofDebt": "Effective interest rate paid by the company on its debt, before or after taxes. (Percent)",
      "taxRate": "Effective tax rate as a percentage of pre-tax income. Example: 0.23 for 23%. (Number, key for profit modeling)",
      "afterTaxCostOfDebt": "Company's cost of debt financing after taking into account the tax deductibility of interest expense. (Percent, e.g., 3.5%)",
      "riskFreeRate": "Risk-free interest rate used in financial calculations (e.g., CAPM), typically based on Treasury rates. Example: 3.64. (Number, optional)",
      "marketRiskPremium": "Percentage value for the assumed equity risk premium used in CAPM/WACC calculations. Example: 5.5 for 5.5% market risk premium. (Number or Percentage, optional)",
      "costOfEquity": "Required rate of return by equity investors, often calculated using the CAPM model. (Percent)",
      "totalDebt": "The total debt value, including short-term and long-term liabilities. Example: 30000000. (Number)",
      "totalEquity": "The total equity value, representing shareholders’ equity. Example: 90000000. (Number)",
      "totalCapital": "Sum of all capital employed (debt + equity) in the company. Example: 250,000,000,000 for a Fortune 500 firm. (Number, balance sheet capital)",
      "debtWeighting": "Weight of debt in the company's capital structure, often used in WACC calculation. (Number, percent)",
      "equityWeighting": "Percentage of equity in the company’s capital structure. (Number, percent)",
      "wacc": "The company's Weighted Average Cost of Capital, expressed as a percentage. Example: 7.5. (Number, Percentage)",
      "operatingCashFlow": "The operating cash flow value, representing cash generated from normal business operations. Example: 20000000. (Number)",
      "pvLfcf": "Present value of levered free cash flow for the period, discounted to today. Example: 134327365439. (Number, optional)",
      "sumPvLfcf": "The sum of the Present Value of Levered Free Cash Flows over the forecast period. Example: 15000000000. (Number)",
      "longTermGrowthRate": "Projected or assumed annualized long-term growth rate, often used in discounted cash flow or terminal value calculations. Example: 4 for 4% annual growth. (Number, optional)",
      "freeCashFlow": "The Free Cash Flow generated after capital expenditures, representing cash available to equity holders. Example: 2500000000. (Number)",
      "terminalValue": "The projected Terminal Value in a DCF model, estimating value beyond the explicit forecast period. Example: 100000000000. (Number)",
      "presentTerminalValue": "The present value of the projected Terminal Value, discounted back to today. Example: 80000000000. (Number)",
      "enterpriseValue": "The total Enterprise Value, calculated as market capitalization plus net debt and minority interest, minus cash and equivalents. Example: 2500000000000. (Number)",
      "netDebt": "Total debt minus cash and cash equivalents, representing the company's net leverage. Example: 76686000000 for $76.7B net debt. (Number, optional)",
      "equityValue": "Total value of the company's equity (market capitalization or book value). (Number, currency)",
      "equityValuePerShare": "Calculated equity value per share, derived by dividing total equity by total shares outstanding. Example: 25.67. (Number)",
      "freeCashFlowT1": "Free cash flow in the latest (T1) reporting period. (Number, currency)",
      "operatingCashFlowPercentage": "Operating cash flow as a percentage of revenue or another base metric. Indicates the company's ability to generate cash from operations. (Number, percent, optional)"
    }
  },
  {
    "name": "Custom Levered DCF API",
    "description": "The Custom Levered DCF endpoint mirrors the flexibility of the advanced unlevered version but discounts levered free cash flow, producing an equity-only valuation sensitive to debt costs and capital mix. Category valuation. Plug custom parameters to explore leverage scenarios, stress-test WACC, or drive interactive valuation widgets.",
    "category": "valuation",
    "use_cases": [
      "stress-test valuations with varying debt loads",
      "create interactive levered DCF calculators",
      "support board presentations on recap scenarios",
      "validate banker models with independent inputs",
      "assistant-guided levered valuation simulations"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {
        "revenueGrowthPct": "A percentage threshold to filter on year-over-year revenue growth rate. Example: 15.0 to include only companies growing revenue ≥15%. (Number, optional)",
        "ebitdaPct": "A percentage threshold to filter on EBITDA margin. Example: 20.0 to include only companies with EBITDA margin ≥20%. (Number, optional)",
        "depreciationAndAmortizationPct": "A percentage threshold of depreciation & amortization (D&A) as a percentage of revenue. Example: 5.0 to include only names where D&A ≤5% of revenue. (Number, optional)",
        "cashAndShortTermInvestmentsPct": "A percentage threshold for cash & short-term investments relative to total assets. Example: 10.0 to include only companies with ≥10% of assets in cash. (Number, optional)",
        "receivablesPct": "A percentage threshold for accounts receivable relative to revenue or assets. Example: 8.0 to include companies where receivables ≤8% of revenue. (Number, optional)",
        "inventoriesPct": "A percentage threshold for inventory as a percentage of revenue or assets. Example: 6.0 to include companies holding ≤6% of assets in inventory. (Number, optional)",
        "payablePct": "A percentage threshold for accounts payable relative to revenue or assets. Example: 4.0 to include companies where payables ≤4% of revenue. (Number, optional)",
        "ebitPct": "A percentage threshold for EBIT margin. Example: 18.0 to include only companies with EBIT margin ≥18%. (Number, optional)",
        "capitalExpenditurePct": "A percentage threshold for capital expenditures relative to revenue or assets. Example: 5.0 to include only companies investing ≤5% of revenue in capex. (Number, optional)",
        "operatingCashFlowPct": "A percentage threshold for operating cash flow relative to revenue or assets. Example: 12.0 to include only companies generating ≥12% of revenue in operating cash flow. (Number, optional)",
        "sellingGeneralAndAdministrativeExpensesPct": "A percentage threshold for SG&A expenses relative to revenue. Example: 15.0 to include only companies with SG&A ≤15% of revenue. (Number, optional)",
        "taxRate": "A numeric percentage filter for effective tax rate. Example: 25.0 to include only companies whose effective tax rate ≤25%. (Number, optional)",
        "longTermGrowthRate": "A percentage estimate of a company’s projected long-term growth, used in DCF or target models. Example: 3.5 to select names with long-term growth ≥3.5%. (Number, optional)",
        "costOfDebt": "A decimal or percentage representing the company’s average cost of debt. Example: 4.0 to include only companies with cost of debt ≤4%. (Number or Percentage, optional)",
        "costOfEquity": "A decimal or percentage representing the company’s cost of equity. Example: 8.5 to include only companies whose cost of equity ≤8.5%. (Number or Percentage, optional)",
        "marketRiskPremium": "A percentage representing the assumed equity risk premium used in CAPM or WACC calculations. Example: 5.5 to filter names priced with a market risk premium ≥5.5%. (Number or Percentage, optional)",
        "beta": "A numeric filter for stock beta, representing volatility relative to the market. Example: 1.0 to include only stocks with beta ≥1.0. (Number, optional)",
        "riskFreeRate": "A percentage value representing the risk-free rate used in CAPM calculations. Example: 2.5 to include only names priced with a risk-free rate ≤2.5%. (Number or Percentage, optional)"
      }
    },
    "response_example": {
      "year": "The calendar year associated with a data point or report. Example: 2023. (Number or String)",
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "revenue": "The total revenue value reported or projected for the period. Example: 100000000. (Number)",
      "revenuePercentage": "A line item’s percentage contribution to total revenue, useful for segment breakdowns. Example: 0.37 means 37% from iPhone sales. (Number, decimal or percent, segment reporting)",
      "capitalExpenditure": "The capital expenditure value, representing funds used to acquire or upgrade long-term assets. Example: 5000000. (Number)",
      "capitalExpenditurePercentage": "Capital expenditures expressed as a percentage of some base metric (usually revenue, assets, or cash flow). (Percent)",
      "price": "The last traded price or intrinsic value of the security or asset. Example: 130.75. (Number)",
      "beta": "A measure of the stock's volatility relative to the overall market; beta > 1 indicates higher volatility. Example: 1.20. (Number)",
      "dilutedSharesOutstanding": "Weighted average number of diluted shares outstanding during the period, including convertible securities. (Number, shares)",
      "costofDebt": "Effective interest rate paid by the company on its debt, before or after taxes. (Percent)",
      "taxRate": "Effective tax rate as a percentage of pre-tax income. Example: 0.23 for 23%. (Number, key for profit modeling)",
      "afterTaxCostOfDebt": "Company's cost of debt financing after taking into account the tax deductibility of interest expense. (Percent, e.g., 3.5%)",
      "riskFreeRate": "Risk-free interest rate used in financial calculations (e.g., CAPM), typically based on Treasury rates. Example: 3.64. (Number, optional)",
      "marketRiskPremium": "Percentage value for the assumed equity risk premium used in CAPM/WACC calculations. Example: 5.5 for 5.5% market risk premium. (Number or Percentage, optional)",
      "costOfEquity": "Required rate of return by equity investors, often calculated using the CAPM model. (Percent)",
      "totalDebt": "The total debt value, including short-term and long-term liabilities. Example: 30000000. (Number)",
      "totalEquity": "The total equity value, representing shareholders’ equity. Example: 90000000. (Number)",
      "totalCapital": "Sum of all capital employed (debt + equity) in the company. Example: 250,000,000,000 for a Fortune 500 firm. (Number, balance sheet capital)",
      "debtWeighting": "Weight of debt in the company's capital structure, often used in WACC calculation. (Number, percent)",
      "equityWeighting": "Percentage of equity in the company’s capital structure. (Number, percent)",
      "wacc": "The company's Weighted Average Cost of Capital, expressed as a percentage. Example: 7.5. (Number, Percentage)",
      "operatingCashFlow": "The operating cash flow value, representing cash generated from normal business operations. Example: 20000000. (Number)",
      "pvLfcf": "Present value of levered free cash flow for the period, discounted to today. Example: 134327365439. (Number, optional)",
      "sumPvLfcf": "The sum of the Present Value of Levered Free Cash Flows over the forecast period. Example: 15000000000. (Number)",
      "longTermGrowthRate": "Projected or assumed annualized long-term growth rate, often used in discounted cash flow or terminal value calculations. Example: 4 for 4% annual growth. (Number, optional)",
      "freeCashFlow": "The Free Cash Flow generated after capital expenditures, representing cash available to equity holders. Example: 2500000000. (Number)",
      "terminalValue": "The projected Terminal Value in a DCF model, estimating value beyond the explicit forecast period. Example: 100000000000. (Number)",
      "presentTerminalValue": "The present value of the projected Terminal Value, discounted back to today. Example: 80000000000. (Number)",
      "enterpriseValue": "The total Enterprise Value, calculated as market capitalization plus net debt and minority interest, minus cash and equivalents. Example: 2500000000000. (Number)",
      "netDebt": "Total debt minus cash and cash equivalents, representing the company's net leverage. Example: 76686000000 for $76.7B net debt. (Number, optional)",
      "equityValue": "Total value of the company's equity (market capitalization or book value). (Number, currency)",
      "equityValuePerShare": "Calculated equity value per share, derived by dividing total equity by total shares outstanding. Example: 25.67. (Number)",
      "freeCashFlowT1": "Free cash flow in the latest (T1) reporting period. (Number, currency)",
      "operatingCashFlowPercentage": "Operating cash flow as a percentage of revenue or another base metric. Indicates the company's ability to generate cash from operations. (Number, percent, optional)"
    }
  },
  {
    "name": "Treasury Rates API",
    "description": "Treasury Rates API (category: macro) supplies daily Treasury yields from 1-month bills to 30-year bonds. Developers specify **from** and **to** (ISO-8601, ≤ 90-day window) to receive a row-per-date array containing month1, month2, month3, month6, year1, year2, … year30 fields. Typical integrations: rate-sensitive discounting engines, yield-curve visualisations, duration-hedging dashboards, and chatbots answering “What was the 10-year yield on 29-Feb-2024?”.",
    "category": "macro",
    "use_cases": [
      "plot real-time yield curves in trading platforms",
      "calculate discount rates in valuation models",
      "monitor curve inversions for recession signals",
      "stress-test rate-sensitive portfolios",
      "chatbots providing specific maturity yields"
    ],
    "parameters": {
      "required": {
        "from": "The ISO 8601 date (YYYY-MM-DD) indicating the start of a time range filter. Example: \"2025-01-01\" to include only data from January 1, 2025 onward. Must be ≤ `to`. (String, Date, optional)",
        "to": "The ISO 8601 date (YYYY-MM-DD) indicating the end of a time range filter. Example: \"2025-12-31\" to include only data up to December 31, 2025. Must be ≥ `from`. (String, Date, optional)"
      },
      "optional": {}
    },
    "response_example": {
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "month1": "The metric value (e.g., return or performance) for the 1-month period. Example: 1.7. (Number)",
      "month2": "Yield or rate for 2-month U.S. Treasury bill. Example: 5.5 for 5.5% yield. (Number, optional)",
      "month3": "The metric value (e.g., return or performance) for the 3-month period. Example: 5.2. (Number)",
      "month6": "Yield or rate for 6-month U.S. Treasury bill. Example: 5.3 for 5.3% yield. (Number, optional)",
      "year1": "Yield or value for a 1-year maturity or period (e.g., Treasury yield curve). Example: 5.01. (Number, optional)",
      "year2": "Yield or value for a 2-year maturity or period. Example: 4.64. (Number, optional)",
      "year3": "Yield or value for a 3-year maturity or period. Example: 4.43. (Number, optional)",
      "year5": "The metric value (e.g., return or performance) for the 5-year period. Example: 60.3. (Number)",
      "year7": "Yield or value for a 7-year maturity or period. Example: 4.28. (Number, optional)",
      "year10": "The metric value (e.g., return or performance) for the 10-year period. Example: 120.5. (Number)",
      "year20": "The metric value (e.g., return or performance) for the 20-year period. Example: 220.0. (Number)",
      "year30": "The metric value (e.g., return or performance) for the 30-year period. Example: 350.0. (Number)"
    }
  },
  {
    "name": "Treasury Rates API",
    "description": "The Treasury Rates endpoint delivers time-series data for every U.S. Treasury maturity, empowering macro strategists to back-test yield-curve trades or feed VaR engines with historical term-structure inputs. Parameters **from** and **to** (max 90 days) gate output volume; the response returns a complete curve for each date, ready for PCA, butterfly-spread calculations, or conversational look-ups.",
    "category": "macro",
    "use_cases": [
      "yield-curve factor decomposition (level, slope, curvature)",
      "butterfly-trade back-testing",
      "portfolio VaR driven by historical rates",
      "economic research on term-premium trends",
      "voice assistants answering rate queries"
    ],
    "parameters": {
      "required": {
        "from": "The ISO 8601 date (YYYY-MM-DD) indicating the start of a time range filter. Example: \"2025-01-01\" to include only data from January 1, 2025 onward. Must be ≤ `to`. (String, Date, optional)",
        "to": "The ISO 8601 date (YYYY-MM-DD) indicating the end of a time range filter. Example: \"2025-12-31\" to include only data up to December 31, 2025. Must be ≥ `from`. (String, Date, optional)"
      },
      "optional": {}
    },
    "response_example": {
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "month1": "The metric value (e.g., return or performance) for the 1-month period. Example: 1.7. (Number)",
      "month2": "Yield or rate for 2-month U.S. Treasury bill. Example: 5.5 for 5.5% yield. (Number, optional)",
      "month3": "The metric value (e.g., return or performance) for the 3-month period. Example: 5.2. (Number)",
      "month6": "Yield or rate for 6-month U.S. Treasury bill. Example: 5.3 for 5.3% yield. (Number, optional)",
      "year1": "Yield or value for a 1-year maturity or period (e.g., Treasury yield curve). Example: 5.01. (Number, optional)",
      "year2": "Yield or value for a 2-year maturity or period. Example: 4.64. (Number, optional)",
      "year3": "Yield or value for a 3-year maturity or period. Example: 4.43. (Number, optional)",
      "year5": "The metric value (e.g., return or performance) for the 5-year period. Example: 60.3. (Number)",
      "year7": "Yield or value for a 7-year maturity or period. Example: 4.28. (Number, optional)",
      "year10": "The metric value (e.g., return or performance) for the 10-year period. Example: 120.5. (Number)",
      "year20": "The metric value (e.g., return or performance) for the 20-year period. Example: 220.0. (Number)",
      "year30": "The metric value (e.g., return or performance) for the 30-year period. Example: 350.0. (Number)"
    }
  },
  {
    "name": "Economic Indicators API",
    "description": "Economic Indicators API (category: macro) returns point-in-time values for key macro data series—GDP, CPI, unemployment, Fed funds, and more. Pass **name**, **from**, **to** (≤ 90 days) to retrieve date-value pairs. Use it in recession-probability models, inflation dashboards, and chatbots answering “What’s the latest U.S. GDP reading?”.",
    "category": "macro",
    "use_cases": [
      "build real-time macro dashboards",
      "feed econometric models forecasting growth",
      "trigger alerts when CPI exceeds threshold",
      "benchmark portfolio allocations to macro cycles",
      "chatbots providing indicator look-ups"
    ],
    "parameters": {
      "required": {
        "name": "A free-form string representing a full or partial company or fund name used for filtering or lookup. Example: \"Apple Inc.\" to match the exact legal name. (String, optional)",
        "from": "The ISO 8601 date (YYYY-MM-DD) indicating the start of a time range filter. Example: \"2025-01-01\" to include only data from January 1, 2025 onward. Must be ≤ `to`. (String, Date, optional)",
        "to": "The ISO 8601 date (YYYY-MM-DD) indicating the end of a time range filter. Example: \"2025-12-31\" to include only data up to December 31, 2025. Must be ≥ `from`. (String, Date, optional)"
      },
      "optional": {}
    },
    "response_example": {
      "name": "The full legal or common name of the company. Example: \"Apple Inc.\" (String)",
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "value": "A generic numeric or string value associated with a data point, context-dependent. Example: 12345.67. (Number or String)"
    }
  },
  {
    "name": "Economic Indicators API",
    "description": "The Economic Indicators endpoint offers on-demand access to dozens of FRED-style series—from retail sales to mortgage rates—indexed by **name**. Combined with **from**/**to**, it fuels macro-aware trading algos, academic research, and personal-finance apps needing authoritative data on inflation, jobs, and production.",
    "category": "macro",
    "use_cases": [
      "macro-aware factor investing screens",
      "economic-surprise index construction",
      "educational apps teaching macro concepts",
      "media dashboards embedding live indicator charts",
      "assistant explanations of indicator trends"
    ],
    "parameters": {
      "required": {
        "name": "A free-form string representing a full or partial company or fund name used for filtering or lookup. Example: \"Apple Inc.\" to match the exact legal name. (String, optional)",
        "from": "The ISO 8601 date (YYYY-MM-DD) indicating the start of a time range filter. Example: \"2025-01-01\" to include only data from January 1, 2025 onward. Must be ≤ `to`. (String, Date, optional)",
        "to": "The ISO 8601 date (YYYY-MM-DD) indicating the end of a time range filter. Example: \"2025-12-31\" to include only data up to December 31, 2025. Must be ≥ `from`. (String, Date, optional)"
      },
      "optional": {}
    },
    "response_example": {
      "name": "The full legal or common name of the company. Example: \"Apple Inc.\" (String)",
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "value": "A generic numeric or string value associated with a data point, context-dependent. Example: 12345.67. (Number or String)"
    }
  },
  {
    "name": "Economic Data Releases Calendar API",
    "description": "Economic Calendar API (category: macro) delivers a forward-looking schedule of data releases—event description, country code, currency, previous/estimate/actual values, impact score—within a **from**/**to** window (≤ 90 days). Integrate into trading desktops for event risk management, alert systems, or chatbots answering “What high-impact releases hit tomorrow?”.",
    "category": "macro",
    "use_cases": [
      "event-risk dashboards for FX desks",
      "pre-market newsletters listing daily releases",
      "algorithmic trading blackout windows",
      "back-test volatility around economic events",
      "assistant reminders of upcoming releases"
    ],
    "parameters": {
      "required": {
        "from": "The ISO 8601 date (YYYY-MM-DD) indicating the start of a time range filter. Example: \"2025-01-01\" to include only data from January 1, 2025 onward. Must be ≤ `to`. (String, Date, optional)",
        "to": "The ISO 8601 date (YYYY-MM-DD) indicating the end of a time range filter. Example: \"2025-12-31\" to include only data up to December 31, 2025. Must be ≥ `from`. (String, Date, optional)"
      },
      "optional": {}
    },
    "response_example": {
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "country": "The country where the company is headquartered or primarily operates, using the ISO 3166-1 alpha-2 code. Example: \"US\". (String)",
      "event": "The name or title of a corporate or market event, such as a stock split or earnings release. Example: \"Stock Split\". (String)",
      "currency": "The ISO 4217 three-letter currency code representing the trading currency of the security. Example: \"USD\" for US Dollars. (String)",
      "previous": "The value from the prior reporting period or event, used for comparison. Example: -0.112 in an auction/forecast context. (Number, optional)",
      "estimate": "Analyst or company estimate for a given field (such as revenue, EPS, etc.). (Number or String)",
      "actual": "The actual reported value or result, such as earnings or other financial outcomes. Example: \"2.45\". (Number or String)",
      "change": "The absolute change in price or value compared to the previous close. Example: \"+1.25\". (String)",
      "impact": "The impact or significance of an event, can be qualitative (\"Positive\", \"Negative\"). Example: \"Positive\". (String)",
      "changePercentage": "The percentage change in price or value compared to the previous close. Example: \"+0.97%\". (Number, Percentage)"
    }
  },
  {
    "name": "Economic Data Releases Calendar API",
    "description": "The Economic Releases Calendar endpoint aggregates scheduled macro events—CPI prints, payrolls, PMI, bond auctions—across countries. By submitting **from** and **to**, users receive a sortable feed ready for calendar widgets, risk matrices, or conversational delivery of upcoming economic catalysts.",
    "category": "macro",
    "use_cases": [
      "risk matrices aligning positions with event calendar",
      "calendar widgets in brokerage platforms",
      "research notes citing next week’s key releases",
      "real-time alerting prior to high-impact data",
      "AI assistants delivering event briefings"
    ],
    "parameters": {
      "required": {
        "from": "The ISO 8601 date (YYYY-MM-DD) indicating the start of a time range filter. Example: \"2025-01-01\" to include only data from January 1, 2025 onward. Must be ≤ `to`. (String, Date, optional)",
        "to": "The ISO 8601 date (YYYY-MM-DD) indicating the end of a time range filter. Example: \"2025-12-31\" to include only data up to December 31, 2025. Must be ≥ `from`. (String, Date, optional)"
      },
      "optional": {}
    },
    "response_example": {
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "country": "The country where the company is headquartered or primarily operates, using the ISO 3166-1 alpha-2 code. Example: \"US\". (String)",
      "event": "The name or title of a corporate or market event, such as a stock split or earnings release. Example: \"Stock Split\". (String)",
      "currency": "The ISO 4217 three-letter currency code representing the trading currency of the security. Example: \"USD\" for US Dollars. (String)",
      "previous": "The value from the prior reporting period or event, used for comparison. Example: -0.112 in an auction/forecast context. (Number, optional)",
      "estimate": "Analyst or company estimate for a given field (such as revenue, EPS, etc.). (Number or String)",
      "actual": "The actual reported value or result, such as earnings or other financial outcomes. Example: \"2.45\". (Number or String)",
      "change": "The absolute change in price or value compared to the previous close. Example: \"+1.25\". (String)",
      "impact": "The impact or significance of an event, can be qualitative (\"Positive\", \"Negative\"). Example: \"Positive\". (String)",
      "changePercentage": "The percentage change in price or value compared to the previous close. Example: \"+0.97%\". (Number, Percentage)"
    }
  },
  {
    "name": "Market Risk Premium API",
    "description": "Market Risk Premium API (category: valuation) returns country-level equity-risk premiums—**countryRiskPremium** and **totalEquityRiskPremium**—for use in cost-of-equity and WACC calculations. No parameters required; call once to hydrate valuation models, international CAPM worksheets, and chatbots answering “What’s Brazil’s ERP?”.",
    "category": "valuation",
    "use_cases": [
      "populate WACC inputs for international DCFs",
      "compare ERPs across regions in heat maps",
      "risk models adjusting hurdle rates by country",
      "academic studies on equity-risk premium dispersion",
      "assistant queries on specific country ERPs"
    ],
    "parameters": {
      "required": {},
      "optional": {}
    },
    "response_example": {
      "country": "The country where the company is headquartered or primarily operates, using the ISO 3166-1 alpha-2 code. Example: \"US\". (String)",
      "continent": "Continent associated with the issuer's headquarters or primary business location. Example: \"North America\".",
      "countryRiskPremium": "The additional risk premium attributed to investing in a specific country, expressed as a percentage. Example: 1.2. (Number, Percentage)",
      "totalEquityRiskPremium": "The total equity risk premium over the risk-free rate, reflecting expected equity returns. Example: 5.5. (Number, Percentage)"
    }
  },
  {
    "name": "Market Risk Premium API",
    "description": "The Market Risk Premium endpoint supplies a snapshot of country-specific equity-risk premiums derived from Professor Damodaran’s dataset—critical for adjusting discount rates in cross-border valuations. With no inputs, it returns a list of {country, continent, countryRiskPremium, totalEquityRiskPremium} records ready for valuation tools, dashboards, or chatbot look-ups.",
    "category": "valuation",
    "use_cases": [
      "dynamic cost-of-equity calculators",
      "international project hurdle-rate setting",
      "global macro dashboards tracking ERP shifts",
      "portfolio allocation models factoring geographic risk",
      "voice assistants providing ERP comparisons"
    ],
    "parameters": {
      "required": {},
      "optional": {}
    },
    "response_example": {
      "country": "The country where the company is headquartered or primarily operates, using the ISO 3166-1 alpha-2 code. Example: \"US\". (String)",
      "continent": "Continent associated with the issuer's headquarters or primary business location. Example: \"North America\".",
      "countryRiskPremium": "The additional risk premium attributed to investing in a specific country, expressed as a percentage. Example: 1.2. (Number, Percentage)",
      "totalEquityRiskPremium": "The total equity risk premium over the risk-free rate, reflecting expected equity returns. Example: 5.5. (Number, Percentage)"
    }
  },
  {
    "name": "ESG Investment Search API",
    "description": "ESG Investment Search API (category: esg) surfaces the latest SEC-filed ESG disclosures—environmental, social, governance subscores plus aggregate ESGScore—alongside filing metadata. Required **symbol** returns date, acceptedDate, formType, scores, and the direct SEC filing **url**. Key uses: ESG-compliant portfolio filters, controversy screens, and chatbots answering “What is Apple’s most recent ESG disclosure score?”.",
    "category": "esg",
    "use_cases": [
      "filter portfolios by minimum ESGScore",
      "alert when new ESG filings post",
      "quant models penalising low governance scores",
      "controversy research linking to SEC forms",
      "assistants summarising latest ESG events"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {}
    },
    "response_example": {
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "acceptedDate": "The date on which a filing or document was accepted by the regulatory authority. Example: \"2025-02-03\". (String, Date)",
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "cik": "The Central Index Key, a unique nine-digit identifier assigned by the SEC to entities. Example: \"0001454889\". (String)",
      "companyName": "The registered legal name of the company. Example: \"Apple Inc.\". (String)",
      "formType": "The type or designation of a regulatory filing (e.g., \"10-K\", \"10-Q\"). Example: \"10-K\". (String)",
      "environmentalScore": "A numeric score reflecting a company’s environmental performance, typically on a scale (e.g., 0–100). Example: 85. (Number)",
      "socialScore": "A numeric score reflecting a company’s social responsibility performance. Example: 78. (Number)",
      "governanceScore": "A numeric score reflecting a company’s corporate governance practices. Example: 90. (Number)",
      "ESGScore": "The combined Environmental, Social, and Governance (ESG) score, aggregating E, S, and G metrics. Example: 84. (Number)",
      "url": "The URL linking to the full document, filing, or resource, often on a regulatory or official site. Example: \"https://www.sec.gov/Archives/edgar/data/1454889/000114336225000044/SCCR020325.pdf\". (String, URL)"
    }
  },
  {
    "name": "ESG Investment Search API",
    "description": "The ESG Investment Search endpoint delivers SEC-verified ESG subscores so asset managers can align holdings with ESG mandates. Input **symbol** (no optionals) and get a single disclosure record—date-stamped, CIK-tagged, with E, S, G, and total ESGScore—ready for risk dashboards, screening engines, and compliance audits.",
    "category": "esg",
    "use_cases": [
      "risk dashboards tracking ESGScore drift",
      "client reports highlighting ESG improvements",
      "compliance gates blocking low-ESG issuers",
      "academic research on ESG disclosure trends",
      "chatbots delivering disclosure links on request"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {}
    },
    "response_example": {
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "acceptedDate": "The date on which a filing or document was accepted by the regulatory authority. Example: \"2025-02-03\". (String, Date)",
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "cik": "The Central Index Key, a unique nine-digit identifier assigned by the SEC to entities. Example: \"0001454889\". (String)",
      "companyName": "The registered legal name of the company. Example: \"Apple Inc.\". (String)",
      "formType": "The type or designation of a regulatory filing (e.g., \"10-K\", \"10-Q\"). Example: \"10-K\". (String)",
      "environmentalScore": "A numeric score reflecting a company’s environmental performance, typically on a scale (e.g., 0–100). Example: 85. (Number)",
      "socialScore": "A numeric score reflecting a company’s social responsibility performance. Example: 78. (Number)",
      "governanceScore": "A numeric score reflecting a company’s corporate governance practices. Example: 90. (Number)",
      "ESGScore": "The combined Environmental, Social, and Governance (ESG) score, aggregating E, S, and G metrics. Example: 84. (Number)",
      "url": "The URL linking to the full document, filing, or resource, often on a regulatory or official site. Example: \"https://www.sec.gov/Archives/edgar/data/1454889/000114336225000044/SCCR020325.pdf\". (String, URL)"
    }
  },
  {
    "name": "ESG Ratings API",
    "description": "ESG Ratings API (category: esg) returns third-party risk ratings—letter-grade **ESGRiskRating** and **industryRank**—for a given equity. Required **symbol** produces fiscalYear, sector/industry, and CIK. Use cases: compare issuers within an industry, feed score-weighted factor models, or satisfy client requests like “Is Apple an ESG leader or laggard?”.",
    "category": "esg",
    "use_cases": [
      "industry-relative ESG leader/laggard tables",
      "factor models incorporating ESG risk grade",
      "marketing decks citing ESG ranks",
      "alert when rating downgrades occur",
      "assistants answering risk-rating queries"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "cik": "The Central Index Key, a unique nine-digit identifier assigned by the SEC to entities. Example: \"0001454889\". (String)",
      "companyName": "The registered legal name of the company. Example: \"Apple Inc.\". (String)",
      "industry": "The primary industry classification of the company, typically using NAICS or SIC nomenclature. Example: \"Technology\". (String)",
      "fiscalYear": "The fiscal year to which a financial data point pertains, typically in four-digit format. Example: 2023. (Number or String)",
      "ESGRiskRating": "The ESG risk rating category, indicating the level of ESG-related risk (e.g., \"Low\", \"Medium\", \"High\"). Example: \"Low\". (String)",
      "industryRank": "The ranking of the company within its industry based on performance or ESG criteria. Example: 3. (Number)"
    }
  },
  {
    "name": "ESG Ratings API",
    "description": "The ESG Ratings endpoint supplies a concise, comparability-ready snapshot—letter risk rating plus industry percentile—helping PMs overlay ESG risk into position-sizing rules. Input **symbol** only; output is ready for dashboards, compliance checks, and NLP answers on a company’s ESG standing.",
    "category": "esg",
    "use_cases": [
      "overlay ESG risk into sizing algorithms",
      "compliance audits of ESG-labelled funds",
      "peer comparisons in research notes",
      "dashboard badges showing ESG letter grade",
      "chatbots reporting rating and rank instantly"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "cik": "The Central Index Key, a unique nine-digit identifier assigned by the SEC to entities. Example: \"0001454889\". (String)",
      "companyName": "The registered legal name of the company. Example: \"Apple Inc.\". (String)",
      "industry": "The primary industry classification of the company, typically using NAICS or SIC nomenclature. Example: \"Technology\". (String)",
      "fiscalYear": "The fiscal year to which a financial data point pertains, typically in four-digit format. Example: 2023. (Number or String)",
      "ESGRiskRating": "The ESG risk rating category, indicating the level of ESG-related risk (e.g., \"Low\", \"Medium\", \"High\"). Example: \"Low\". (String)",
      "industryRank": "The ranking of the company within its industry based on performance or ESG criteria. Example: 3. (Number)"
    }
  },
  {
    "name": "ESG Benchmark Comparison API",
    "description": "ESG Benchmark Comparison API (category: esg) aggregates average E, S, G, and overall ESG scores by sector for a specified **year**. Investors use it to benchmark individual company scores against sector means, build heat-maps of ESG performance, and drive chatbots answering “What was the average ESG score in Apparel Retail for 2023?”.",
    "category": "esg",
    "use_cases": [
      "benchmark company scores vs. sector averages",
      "sector-level ESG heat-map visualisations",
      "quant factors penalising below-benchmark issuers",
      "reporting frameworks citing sector ESG norms",
      "assistant answers on sector ESG statistics"
    ],
    "parameters": {
      "required": {
        "year": "A four-digit calendar year or fiscal year number to filter period-based endpoints. Example: 2024 to retrieve data for the 2024 fiscal or calendar year. (Number or String, optional)"
      },
      "optional": {}
    },
    "response_example": {
      "fiscalYear": "The fiscal year to which a financial data point pertains, typically in four-digit format. Example: 2023. (Number or String)",
      "sector": "The broad sector classification for the company, often aligned with GICS sectors. Example: \"Information Technology\". (String)",
      "environmentalScore": "A numeric score reflecting a company’s environmental performance, typically on a scale (e.g., 0–100). Example: 85. (Number)",
      "socialScore": "A numeric score reflecting a company’s social responsibility performance. Example: 78. (Number)",
      "governanceScore": "A numeric score reflecting a company’s corporate governance practices. Example: 90. (Number)",
      "ESGScore": "The combined Environmental, Social, and Governance (ESG) score, aggregating E, S, and G metrics. Example: 84. (Number)"
    }
  },
  {
    "name": "ESG Benchmark Comparison API",
    "description": "The Benchmark Comparison endpoint delivers sector-average ESG subscores for any **year**, supplying a baseline for valuations, peer analysis, and regulatory reporting. Use it to visualise leaders vs. laggards, calibrate ESG factor weights, or have a conversational agent quote sector-level norms on demand.",
    "category": "esg",
    "use_cases": [
      "visual leader-laggard charts in ESG reports",
      "factor models scaling weights by sector average",
      "reg-tech disclosures requiring sector benchmarks",
      "investment-committee slides on ESG gaps",
      "chatbots relaying sector benchmark values"
    ],
    "parameters": {
      "required": {
        "year": "A four-digit calendar year or fiscal year number to filter period-based endpoints. Example: 2024 to retrieve data for the 2024 fiscal or calendar year. (Number or String, optional)"
      },
      "optional": {}
    },
    "response_example": {
      "fiscalYear": "The fiscal year to which a financial data point pertains, typically in four-digit format. Example: 2023. (Number or String)",
      "sector": "The broad sector classification for the company, often aligned with GICS sectors. Example: \"Information Technology\". (String)",
      "environmentalScore": "A numeric score reflecting a company’s environmental performance, typically on a scale (e.g., 0–100). Example: 85. (Number)",
      "socialScore": "A numeric score reflecting a company’s social responsibility performance. Example: 78. (Number)",
      "governanceScore": "A numeric score reflecting a company’s corporate governance practices. Example: 90. (Number)",
      "ESGScore": "The combined Environmental, Social, and Governance (ESG) score, aggregating E, S, and G metrics. Example: 84. (Number)"
    }
  },
  {
    "name": "ETF & Fund Holdings API",
    "description": "ETF & Fund Holdings API (category: funds) discloses position-level holdings for any ETF or mutual fund—ticker, security identifiers, share count, weight, and market value—refreshed as filings update. Required **symbol** (fund) returns an array of constituent assets, enabling look-through exposure analysis, portfolio-overlap heat maps, and chatbots answering “What’s SPY’s Apple weight today?”.",
    "category": "funds",
    "use_cases": [
      "look-through exposure in multi-asset risk dashboards",
      "peer-overlap calculations to avoid double-betting",
      "factor models decomposing ETF returns by holdings",
      "alert when single-name weights exceed thresholds",
      "assistant queries on specific fund constituents"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "asset": "The asset identifier, such as a stock ticker, ISIN, or unique code. Example: \"AAPL\". (String)",
      "name": "The full legal or common name of the company. Example: \"Apple Inc.\" (String)",
      "isin": "The International Securities Identification Number, a 12-character alphanumeric code for identifying securities. Example: \"US0378331005\". (String)",
      "securityCusip": "The CUSIP identifier of the security (9 characters for US/Canada securities). Example: \"037833100\" for Apple Inc. (String, optional)",
      "sharesNumber": "The number of shares held or reported in a specific context, such as a portfolio holding. Example: 1000. (Number)",
      "weightPercentage": "The percentage weight of an asset or holding within a portfolio. Example: 5.25. (Number, Percentage)",
      "marketValue": "The total market value of an asset or holding at the time of reporting, in the reporting currency. Example: 1500000. (Number)",
      "updatedAt": "The exact timestamp when the data record was last updated, in ISO 8601 format. Example: \"2025-02-04T15:30:00Z\". (String, DateTime)",
      "updated": "Timestamp or date when the record was most recently updated. Example: \"2025-02-04 19:02:31\". (String, DateTime, optional)"
    }
  },
  {
    "name": "ETF & Fund Holdings API",
    "description": "The Holdings endpoint furnishes a fund’s full security ladder—ticker, shares, CUSIP/ISIN, weight %, and mark-to-market value—in one call keyed by **symbol**. Use it for downstream look-through analytics, compliance caps on single stock exposure, and real-time disclosure widgets in client portals.",
    "category": "funds",
    "use_cases": [
      "single-stock exposure compliance checks",
      "generate real-time holdings maps for clients",
      "quant models mapping factor tilts via holdings",
      "update databases with end-of-day constituent weights",
      "chatbots listing top holdings by weight"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "asset": "The asset identifier, such as a stock ticker, ISIN, or unique code. Example: \"AAPL\". (String)",
      "name": "The full legal or common name of the company. Example: \"Apple Inc.\" (String)",
      "isin": "The International Securities Identification Number, a 12-character alphanumeric code for identifying securities. Example: \"US0378331005\". (String)",
      "securityCusip": "The CUSIP identifier of the security (9 characters for US/Canada securities). Example: \"037833100\" for Apple Inc. (String, optional)",
      "sharesNumber": "The number of shares held or reported in a specific context, such as a portfolio holding. Example: 1000. (Number)",
      "weightPercentage": "The percentage weight of an asset or holding within a portfolio. Example: 5.25. (Number, Percentage)",
      "marketValue": "The total market value of an asset or holding at the time of reporting, in the reporting currency. Example: 1500000. (Number)",
      "updatedAt": "The exact timestamp when the data record was last updated, in ISO 8601 format. Example: \"2025-02-04T15:30:00Z\". (String, DateTime)",
      "updated": "Timestamp or date when the record was most recently updated. Example: \"2025-02-04 19:02:31\". (String, DateTime, optional)"
    }
  },
  {
    "name": "ETF & Mutual Fund Information API",
    "description": "ETF & Mutual Fund Information API (category: funds) returns the master fund card—name, mandate description, ISIN, domicile, company, expense ratio, AUM, inception date, NAV, holdings count, sector list, and more—for the requested **symbol**. Deploy it in fund screener dashboards, expense-ratio comparison tools, and chatbots answering “What’s SPY’s AUM?”.",
    "category": "funds",
    "use_cases": [
      "expense-ratio benchmarking across peer ETFs",
      "populate fund fact sheets in research portals",
      "rank funds by AUM or inception date",
      "compliance checks on domicile restrictions",
      "assistant look-ups of fund basics"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {}
    },
    "response_example": [
      {
        "symbol": "SPY",
        "name": "SPDR S&P 500 ETF Trust",
        "description": "The Trust seeks to achieve its investment objective by holding a portfolio of the common stocks that are included in the index (the “Portfolio”), with the weight of each stock in the Portfolio substantially corresponding to the weight of such stock in the index.",
        "isin": "US78462F1030",
        "assetClass": "Equity",
        "securityCusip": "78462F103",
        "domicile": "US",
        "website": "https://www.ssga.com/us/en/institutional/etfs/spdr-sp-500-etf-trust-spy",
        "etfCompany": "SPDR",
        "expenseRatio": 0.0945,
        "assetsUnderManagement": 633120180000,
        "avgVolume": 46396400,
        "inceptionDate": "1993-01-22",
        "nav": 603.64,
        "navCurrency": "USD",
        "holdingsCount": 503,
        "updatedAt": "2024-12-03T20:32:48.873Z",
        "sectorsList": [
          {
            "industry": "Basic Materials",
            "exposure": 1.97
          },
          {
            "industry": "Communication Services",
            "exposure": 8.87
          },
          {
            "industry": "Consumer Cyclical",
            "exposure": 9.84
          }
        ]
      }
    ]
  },
  {
    "name": "ETF & Mutual Fund Information API",
    "description": "The Fund Info endpoint delivers a single-call snapshot of structural data—asset class, CUSIP, domicile, NAV, AUM, average volume, sector exposures—ideal for onboarding KYC forms, fund-selector drop-downs, and factor models adjusting risk by fund characteristics.",
    "category": "funds",
    "use_cases": [
      "populate fund selector UIs with live facts",
      "model liquidity via avgVolume stats",
      "heat-map sector exposure at the fund level",
      "KYC validation of fund domicile",
      "chatbots summarising fund details"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {}
    },
    "response_example": [
      {
        "symbol": "SPY",
        "name": "SPDR S&P 500 ETF Trust",
        "description": "The Trust seeks to achieve its investment objective by holding a portfolio of the common stocks that are included in the index (the “Portfolio”), with the weight of each stock in the Portfolio substantially corresponding to the weight of such stock in the index.",
        "isin": "US78462F1030",
        "assetClass": "Equity",
        "securityCusip": "78462F103",
        "domicile": "US",
        "website": "https://www.ssga.com/us/en/institutional/etfs/spdr-sp-500-etf-trust-spy",
        "etfCompany": "SPDR",
        "expenseRatio": 0.0945,
        "assetsUnderManagement": 633120180000,
        "avgVolume": 46396400,
        "inceptionDate": "1993-01-22",
        "nav": 603.64,
        "navCurrency": "USD",
        "holdingsCount": 503,
        "updatedAt": "2024-12-03T20:32:48.873Z",
        "sectorsList": [
          {
            "industry": "Basic Materials",
            "exposure": 1.97
          },
          {
            "industry": "Communication Services",
            "exposure": 8.87
          },
          {
            "industry": "Consumer Cyclical",
            "exposure": 9.84
          }
        ]
      }
    ]
  },
  {
    "name": "ETF & Fund Country Allocation API",
    "description": "ETF & Fund Country Allocation API (category: funds) breaks down geographic exposure by country for a given **symbol**, returning weightPercentage per country. Use it in macro-tilt dashboards, home-bias checks, and chatbots answering “What % of SPY is invested outside the U.S.?”.",
    "category": "funds",
    "use_cases": [
      "visualise country weights in interactive maps",
      "monitor home-bias in client portfolios",
      "hedge currency exposure based on country cut",
      "compare geographic tilts across similar funds",
      "assistant queries on country allocation"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {}
    },
    "response_example": {
      "country": "The country where the company is headquartered or primarily operates, using the ISO 3166-1 alpha-2 code. Example: \"US\". (String)",
      "weightPercentage": "The percentage weight of an asset or holding within a portfolio. Example: 5.25. (Number, Percentage)"
    }
  },
  {
    "name": "ETF & Fund Country Allocation API",
    "description": "The Country Weightings endpoint quantifies a fund’s regional footprint—returning country and weight %—so allocators can measure geographic diversification or screen for EM versus DM tilt. Input: **symbol** only; output is ready for pie charts, risk aggregation, and compliance country caps.",
    "category": "funds",
    "use_cases": [
      "pie-chart visuals of geographic split",
      "compliance on sanctioned-country exposure",
      "risk aggregation by currency bloc",
      "peer comparison of emerging-market weights",
      "chatbots listing top country exposures"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {}
    },
    "response_example": {
      "country": "The country where the company is headquartered or primarily operates, using the ISO 3166-1 alpha-2 code. Example: \"US\". (String)",
      "weightPercentage": "The percentage weight of an asset or holding within a portfolio. Example: 5.25. (Number, Percentage)"
    }
  },
  {
    "name": "ETF Asset Exposure API",
    "description": "ETF Asset Exposure API (category: funds) inverts the lens—given an **asset** symbol (e.g., AAPL), it lists every ETF that holds that asset along with share count, weight, and market value. Perfect for concentration-risk analysis, supply-demand studies, and chatbots answering “Which ETFs are overweight Apple?”.",
    "category": "funds",
    "use_cases": [
      "measure passive ownership concentration in a stock",
      "identify ETF vehicles for thematic exposure",
      "alert when ETF ownership of a small-cap spikETF Asset Exposure APIes",
      "supply-demand modelling around index rebalances",
      "assistant look-ups of ETFs holding a ticker"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "asset": "The asset identifier, such as a stock ticker, ISIN, or unique code. Example: \"AAPL\". (String)",
      "sharesNumber": "The number of shares held or reported in a specific context, such as a portfolio holding. Example: 1000. (Number)",
      "weightPercentage": "The percentage weight of an asset or holding within a portfolio. Example: 5.25. (Number, Percentage)",
      "marketValue": "The total market value of an asset or holding at the time of reporting, in the reporting currency. Example: 1500000. (Number)"
    }
  },
  {
    "name": "ETF Asset Exposure API",
    "description": "The Asset Exposure endpoint reveals the ETF ownership table for a given security—ETF ticker, shares, weight %, and market value—allowing traders to track passive flows, hedge index-inclusion moves, and satisfy compliance queries on fund concentration.",
    "category": "funds",
    "use_cases": [
      "track passive flow impact on single stocks",
      "hedge index-rebalance events",
      "compliance audits of fund concentration",
      "factor models adjusting for ETF ownership",
      "chatbots replying which funds hold a stock"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "asset": "The asset identifier, such as a stock ticker, ISIN, or unique code. Example: \"AAPL\". (String)",
      "sharesNumber": "The number of shares held or reported in a specific context, such as a portfolio holding. Example: 1000. (Number)",
      "weightPercentage": "The percentage weight of an asset or holding within a portfolio. Example: 5.25. (Number, Percentage)",
      "marketValue": "The total market value of an asset or holding at the time of reporting, in the reporting currency. Example: 1500000. (Number)"
    }
  },
  {
    "name": "ETF Sector Weighting API",
    "description": "ETF Sector Weighting API (category: funds) disaggregates a fund’s portfolio by GICS sector, returning weightPercentage per sector for the input **symbol**. Integrate into sector-tilt dashboards, thematic fund selection tools, and chatbots answering “What is SPY’s tech sector weight?”.",
    "category": "funds",
    "use_cases": [
      "compare sector tilts across index funds",
      "risk attribution by sector exposure",
      "thematic fund search by sector concentration",
      "alert when sector weight drifts beyond limits",
      "assistant sector-weight look-ups"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "sector": "The broad sector classification for the company, often aligned with GICS sectors. Example: \"Information Technology\". (String)",
      "weightPercentage": "The percentage weight of an asset or holding within a portfolio. Example: 5.25. (Number, Percentage)"
    }
  },
  {
    "name": "ETF Sector Weighting API",
    "description": "The Sector Weightings endpoint enumerates a fund’s sector allocation—sector label plus weight %—to guide factor tilts, compliance with mandate concentration limits, or user queries on fund sector exposure. Single parameter **symbol**; output aligns with holdings count for summing to 100 %.",
    "category": "funds",
    "use_cases": [
      "factor-tilt dashboards for advisors",
      "client reports detailing sector allocation drift",
      "screen funds by desired sector overweight",
      "link sector weights to performance attribution",
      "chatbots providing sector weight breakdowns"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "sector": "The broad sector classification for the company, often aligned with GICS sectors. Example: \"Information Technology\". (String)",
      "weightPercentage": "The percentage weight of an asset or holding within a portfolio. Example: 5.25. (Number, Percentage)"
    }
  },
  {
    "name": "Mutual Fund & ETF Disclosure API",
    "description": "Mutual Fund & ETF Disclosure API (category: funds) streams the most recent N-PORT/N-CSR filings listing a fund’s top equity holdings and weight moves in real time. Required **symbol** (underlying asset) returns filing-level data for each holder—CIK, fund name, shares, weightPercent, change since prior filing, and dateReported. Prime uses: passive-ownership surveillance, event-driven alerts when big ETF complexes adjust stakes, and chatbots answering “Which funds just updated their Apple position?”.",
    "category": "funds",
    "use_cases": [
      "monitor passive-ownership trends around single stocks",
      "alert desks when Vanguard/BlackRock increases or trims",
      "feed concentration-risk models with up-to-date holders",
      "satisfy 13F/N-PORT reporting compliance checks",
      "assistant queries on latest fund disclosures for a ticker"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {}
    },
    "response_example": {
      "cik": "The Central Index Key, a unique nine-digit identifier assigned by the SEC to entities. Example: \"0001454889\". (String)",
      "holder": "The name of the entity or individual holding the asset. Example: \"Vanguard Group Inc.\". (String)",
      "shares": "The number of shares involved in a transaction or corporate event. Example: \"None\" or 1000000. (Number or String)",
      "dateReported": "The date on which a value or metric was formally reported, in ISO 8601 format. Example: \"2025-01-31\". (String, Date)",
      "change": "The absolute change in price or value compared to the previous close. Example: \"+1.25\". (String)",
      "weightPercent": "The weight of an asset or holding expressed as a percentage. Example: 2.75. (Number, Percentage)"
    }
  },
  {
    "name": "Mutual Fund & ETF Disclosure API",
    "description": "The Disclosure-Holders-Latest endpoint delivers a one-shot snapshot of which funds currently hold a stock, how many shares they report, and the percentage each holding represents of their portfolio. Category funds. Input: **symbol** only; output is a ready-made ownership table for risk dashboards, sell-side flow notes, or NLP assistants summarising passive exposure dynamics.",
    "category": "funds",
    "use_cases": [
      "sell-side notes on passive-flow impact",
      "ownership tables in client fact sheets",
      "risk reports on fund concentration",
      "research portals flagging holder additions/deletions",
      "chatbots listing top fund holders and weights"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {}
    },
    "response_example": {
      "cik": "The Central Index Key, a unique nine-digit identifier assigned by the SEC to entities. Example: \"0001454889\". (String)",
      "holder": "The name of the entity or individual holding the asset. Example: \"Vanguard Group Inc.\". (String)",
      "shares": "The number of shares involved in a transaction or corporate event. Example: \"None\" or 1000000. (Number or String)",
      "dateReported": "The date on which a value or metric was formally reported, in ISO 8601 format. Example: \"2025-01-31\". (String, Date)",
      "change": "The absolute change in price or value compared to the previous close. Example: \"+1.25\". (String)",
      "weightPercent": "The weight of an asset or holding expressed as a percentage. Example: 2.75. (Number, Percentage)"
    }
  },
  {
    "name": "Mutual Fund Disclosures API",
    "description": "Mutual Fund Disclosures API (category: funds) lets users dive into a specific fund’s quarterly or annual filing—N-PORT, N-CSR, NSAR—by **symbol**, **year**, and **quarter**. Each line item enumerates security titles, balances, valuation, country, asset category, payoff profile, and fair-value level. Deploy this feed for deep-dive portfolio audits, ESG screens on fund holdings, or chatbots answering “What Chinese equities did VWO own in Q4-2023?”.",
    "category": "funds",
    "use_cases": [
      "audit-grade look-through of fund portfolios",
      "ESG and sanctions screening on fund assets",
      "generate attribution reports for financial advisors",
      "academic studies on fund country/sector shifts",
      "assistant responses detailing fund constituents by period"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)",
        "year": "A four-digit calendar year or fiscal year number to filter period-based endpoints. Example: 2024 to retrieve data for the 2024 fiscal or calendar year. (Number or String, optional)",
        "quarter": "A fiscal quarter identifier, typically \"Q1\", \"Q2\", \"Q3\", or \"Q4\". Example: \"Q3\" to filter data to the third quarter of the specified year. (String, optional)"
      },
      "optional": {
        "cik": "The nine-digit Central Index Key assigned by the SEC, used to filter or look up specific filers. Example: \"0000320193\" for Apple Inc. (String, optional)"
      }
    },
    "response_example": {
      "cik": "The Central Index Key, a unique nine-digit identifier assigned by the SEC to entities. Example: \"0001454889\". (String)",
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "acceptedDate": "The date on which a filing or document was accepted by the regulatory authority. Example: \"2025-02-03\". (String, Date)",
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "name": "The full legal or common name of the company. Example: \"Apple Inc.\" (String)",
      "lei": "Legal Entity Identifier (LEI) code, a unique international identifier for legal entities participating in financial transactions. Example: \"3003009W045RIKRBZI44\". (String, optional)",
      "title": "The full title or designation of a fixed-income instrument, bond, or note. Example: \"1.000% Notes due 2022\". (String)",
      "cusip": "The Committee on Uniform Securities Identification Procedures number, a unique 9-character identifier for U.S. securities. Example: \"037833100\". (String)",
      "isin": "The International Securities Identification Number, a 12-character alphanumeric code for identifying securities. Example: \"US0378331005\". (String)",
      "balance": "A balance value or amount, such as account balance or cash balance. Example: 100000. (Number or String)",
      "units": "Measurement unit (e.g., 'NS' for number of shares). Example: \"NS\". (String, optional)",
      "cur_cd": "Currency code for reporting (usually ISO 4217 standard). Example: \"CNY\" for Chinese Yuan. (String, optional)",
      "valUsd": "The value expressed in U.S. Dollars, often used to normalize multi-currency portfolios. Example: 50000. (Number)",
      "pctVal": "The percentage representation of a value relative to a benchmark or total. Example: 12.5. (Number, Percentage)",
      "payoffProfile": "Describes the risk/reward profile of an asset or position (e.g., long, short, covered call). Example: \"Long\". (String, optional)",
      "assetCat": "The asset category, such as \"Equity\", \"Bond\", or \"Commodity\". Example: \"Equity\". (String)",
      "issuerCat": "Category of issuer (e.g., \"CORP\" for corporation). (String, optional)",
      "invCountry": "The country of investment, typically as an ISO 3166-1 alpha-2 code. Example: \"JP\". (String)",
      "isRestrictedSec": "Boolean flag indicating whether the security is restricted from public trading. Example: 'Y' or 'N'. (String, optional)",
      "fairValLevel": "The accounting-level classification of fair value (1, 2, or 3), based on pricing source and liquidity. Example: \"2\". (String or Number, optional)",
      "isCashCollateral": "Boolean indicating if the collateral provided is cash. Example: \"N\". (String or Boolean, optional)",
      "isNonCashCollateral": "Boolean indicating if the collateral provided is non-cash. Example: \"N\". (String or Boolean, optional)",
      "isLoanByFund": "Boolean indicating if the security is on loan from a fund (for securities lending). Example: \"N\". (String or Boolean, optional)"
    }
  },
  {
    "name": "Mutual Fund Disclosures API",
    "description": "The Fund Disclosure endpoint unpacks a specific filing period for any U.S. mutual fund—returning full security ledger with valuation and classification tags. Category funds. Key parameters: **symbol**, **year**, **quarter** (+ optional **cik**). Perfect for transparency dashboards, peer-group overlap checks, and compliance reviews of fund holdings.",
    "category": "funds",
    "use_cases": [
      "peer overlap & diversification analysis",
      "factor tilts derived from actual holdings",
      "reg-tech verification of N-PORT completeness",
      "client-ready portfolio transparency reports",
      "chatbots retrieving holdings for a given period"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)",
        "year": "A four-digit calendar year or fiscal year number to filter period-based endpoints. Example: 2024 to retrieve data for the 2024 fiscal or calendar year. (Number or String, optional)",
        "quarter": "A fiscal quarter identifier, typically \"Q1\", \"Q2\", \"Q3\", or \"Q4\". Example: \"Q3\" to filter data to the third quarter of the specified year. (String, optional)"
      },
      "optional": {
        "cik": "The nine-digit Central Index Key assigned by the SEC, used to filter or look up specific filers. Example: \"0000320193\" for Apple Inc. (String, optional)"
      }
    },
    "response_example": {
      "cik": "The Central Index Key, a unique nine-digit identifier assigned by the SEC to entities. Example: \"0001454889\". (String)",
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "acceptedDate": "The date on which a filing or document was accepted by the regulatory authority. Example: \"2025-02-03\". (String, Date)",
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "name": "The full legal or common name of the company. Example: \"Apple Inc.\" (String)",
      "lei": "Legal Entity Identifier (LEI) code, a unique international identifier for legal entities participating in financial transactions. Example: \"3003009W045RIKRBZI44\". (String, optional)",
      "title": "The full title or designation of a fixed-income instrument, bond, or note. Example: \"1.000% Notes due 2022\". (String)",
      "cusip": "The Committee on Uniform Securities Identification Procedures number, a unique 9-character identifier for U.S. securities. Example: \"037833100\". (String)",
      "isin": "The International Securities Identification Number, a 12-character alphanumeric code for identifying securities. Example: \"US0378331005\". (String)",
      "balance": "A balance value or amount, such as account balance or cash balance. Example: 100000. (Number or String)",
      "units": "Measurement unit (e.g., 'NS' for number of shares). Example: \"NS\". (String, optional)",
      "cur_cd": "Currency code for reporting (usually ISO 4217 standard). Example: \"CNY\" for Chinese Yuan. (String, optional)",
      "valUsd": "The value expressed in U.S. Dollars, often used to normalize multi-currency portfolios. Example: 50000. (Number)",
      "pctVal": "The percentage representation of a value relative to a benchmark or total. Example: 12.5. (Number, Percentage)",
      "payoffProfile": "Describes the risk/reward profile of an asset or position (e.g., long, short, covered call). Example: \"Long\". (String, optional)",
      "assetCat": "The asset category, such as \"Equity\", \"Bond\", or \"Commodity\". Example: \"Equity\". (String)",
      "issuerCat": "Category of issuer (e.g., \"CORP\" for corporation). (String, optional)",
      "invCountry": "The country of investment, typically as an ISO 3166-1 alpha-2 code. Example: \"JP\". (String)",
      "isRestrictedSec": "Boolean flag indicating whether the security is restricted from public trading. Example: 'Y' or 'N'. (String, optional)",
      "fairValLevel": "The accounting-level classification of fair value (1, 2, or 3), based on pricing source and liquidity. Example: \"2\". (String or Number, optional)",
      "isCashCollateral": "Boolean indicating if the collateral provided is cash. Example: \"N\". (String or Boolean, optional)",
      "isNonCashCollateral": "Boolean indicating if the collateral provided is non-cash. Example: \"N\". (String or Boolean, optional)",
      "isLoanByFund": "Boolean indicating if the security is on loan from a fund (for securities lending). Example: \"N\". (String or Boolean, optional)"
    }
  },
  {
    "name": "Mutual Fund & ETF Disclosure Name Search API",
    "description": "Disclosure Name Search API (category: funds) converts a plain-language fund name to its identifiers—ticker, CIK, seriesId, classId—and filing file number. Required **name** parameter supports fuzzy matching, streamlining entity resolution for KYC onboarding, research portals, and chatbots fielding “Find the filings for Federated Hermes Government Income Securities”.",
    "category": "funds",
    "use_cases": [
      "auto-complete search bars in fund databases",
      "entity-resolution pipelines mapping names to IDs",
      "generate quick links to filing archives",
      "client onboarding forms validating fund names",
      "assistant look-ups of fund identifiers"
    ],
    "parameters": {
      "required": {
        "name": "A free-form string representing a full or partial company or fund name used for filtering or lookup. Example: \"Apple Inc.\" to match the exact legal name. (String, optional)"
      },
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "cik": "The Central Index Key, a unique nine-digit identifier assigned by the SEC to entities. Example: \"0001454889\". (String)",
      "classId": "Unique identifier for a security class or share class, typically used in filings or portfolio tracking.",
      "seriesId": "Unique identifier for a series (batch) of securities or data entries. Example: 'SER12345'. (String, required for data lineage or tracking)",
      "entityName": "The name of the entity associated with the data, such as a company or fund. Example: \"Apple Inc.\". (String)",
      "entityOrgType": "Type of legal entity (e.g., Corporation, LLC, Partnership, Trust). (String)",
      "seriesName": "Descriptive name for the series. Example: 'Q1 2025 Convertible Bonds'. (String, batch/series reporting)",
      "className": "The class designation of the security, such as \"Class A\" or \"Series B\". Example: \"Class A\". (String)",
      "reportingFileNumber": "The file number used in regulatory reporting, as assigned by regulators. Example: \"001-36786\". (String)",
      "address": "The registered address of the company’s corporate headquarters. Example: \"One Apple Park Way\". (String)",
      "city": "The city where the company’s headquarters is located. Example: \"Cupertino\". (String)",
      "zipCode": "Postal code for the entity's registered address. Example: '95014'. (String, compliance/documentation)",
      "state": "The state or region where the company’s headquarters is located. Example: \"CA\". (String)"
    }
  },
  {
    "name": "Mutual Fund & ETF Disclosure Name Search API",
    "description": "The Disclosure-Holders-Search endpoint maps a full or partial fund name to its SEC metadata—symbol, CIK, series and class IDs, address—accelerating workflows that start with a brand name rather than a ticker. Category funds. Single **name** parameter; response data slots neatly into disclosure pull-through pipelines.",
    "category": "funds",
    "use_cases": [
      "name-to-ticker resolution for back-office systems",
      "populate dropdowns after user types fund name",
      "quick-access links to N-PORT filings",
      "research notes citing formal fund identifiers",
      "chatbots returning ticker/CIK from fund names"
    ],
    "parameters": {
      "required": {
        "name": "A free-form string representing a full or partial company or fund name used for filtering or lookup. Example: \"Apple Inc.\" to match the exact legal name. (String, optional)"
      },
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "cik": "The Central Index Key, a unique nine-digit identifier assigned by the SEC to entities. Example: \"0001454889\". (String)",
      "classId": "Unique identifier for a security class or share class, typically used in filings or portfolio tracking.",
      "seriesId": "Unique identifier for a series (batch) of securities or data entries. Example: 'SER12345'. (String, required for data lineage or tracking)",
      "entityName": "The name of the entity associated with the data, such as a company or fund. Example: \"Apple Inc.\". (String)",
      "entityOrgType": "Type of legal entity (e.g., Corporation, LLC, Partnership, Trust). (String)",
      "seriesName": "Descriptive name for the series. Example: 'Q1 2025 Convertible Bonds'. (String, batch/series reporting)",
      "className": "The class designation of the security, such as \"Class A\" or \"Series B\". Example: \"Class A\". (String)",
      "reportingFileNumber": "The file number used in regulatory reporting, as assigned by regulators. Example: \"001-36786\". (String)",
      "address": "The registered address of the company’s corporate headquarters. Example: \"One Apple Park Way\". (String)",
      "city": "The city where the company’s headquarters is located. Example: \"Cupertino\". (String)",
      "zipCode": "Postal code for the entity's registered address. Example: '95014'. (String, compliance/documentation)",
      "state": "The state or region where the company’s headquarters is located. Example: \"CA\". (String)"
    }
  },
  {
    "name": "Fund & ETF Disclosures by Date API",
    "description": "Fund & ETF Disclosures by Date API (category: funds) lists every filing date available for a given **symbol**, optionally filtered by **cik**, returning the fiscal **year** and **quarter** pairing. Use it to iterate programmatically over historical filings, power disclosure timelines, and feed chatbots answering “Which quarters does VWO have filings for?”.",
    "category": "funds",
    "use_cases": [
      "build disclosure-timeline charts",
      "loop through dates to download sequential filings",
      "audit completeness of fund reporting history",
      "trigger alerts when latest quarter posts",
      "assistant queries on available filing periods"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {
        "cik": "The nine-digit Central Index Key assigned by the SEC, used to filter or look up specific filers. Example: \"0000320193\" for Apple Inc. (String, optional)"
      }
    },
    "response_example": {
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "year": "The calendar year associated with a data point or report. Example: 2023. (Number or String)",
      "quarter": "The fiscal quarter associated with the data point, typically \"Q1\", \"Q2\", \"Q3\", or \"Q4\". Example: \"Q4\". (String)"
    }
  },
  {
    "name": "Fund & ETF Disclosures by Date API",
    "description": "The Disclosure-Dates endpoint functions as an index—returning year/quarter combos for each fund filing on record. Category funds. Input **symbol** (plus optional **cik**) and receive a concise calendar ready to drive automated download jobs, risk timelines, or conversational exposure on historical filing cadence.",
    "category": "funds",
    "use_cases": [
      "schedule automated pulls of new filings",
      "visualise gaps or delays in fund disclosures",
      "create historical performance to filing cadence studies",
      "compliance monitoring of reporting punctuality",
      "chatbots listing available filing dates"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {
        "cik": "The nine-digit Central Index Key assigned by the SEC, used to filter or look up specific filers. Example: \"0000320193\" for Apple Inc. (String, optional)"
      }
    },
    "response_example": {
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "year": "The calendar year associated with a data point or report. Example: 2023. (Number or String)",
      "quarter": "The fiscal quarter associated with the data point, typically \"Q1\", \"Q2\", \"Q3\", or \"Q4\". Example: \"Q4\". (String)"
    }
  },
  {
    "name": "Commodities List API",
    "description": "Commodities List API (category: commodity_data) enumerates every commodity contract FMP tracks—symbol, descriptive name, exchange code, trade month, and pricing currency. Call with no parameters to hydrate drop-down selectors, universe scanners, or chatbots answering “What’s the ticker for lean hogs futures?”.",
    "category": "commodity_data",
    "use_cases": [
      "populate contract selectors in trading UIs",
      "validate commodity symbols before quote calls",
      "build universe lists for back-testing commodity baskets",
      "map contract codes to friendly names in dashboards",
      "assistant look-ups of commodity identifiers"
    ],
    "parameters": {
      "required": {},
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "name": "The full legal or common name of the company. Example: \"Apple Inc.\" (String)",
      "exchange": "The abbreviated code or name of the exchange where the security is traded. Example: \"NASDAQ\". (String)",
      "tradeMonth": "The month in which a trade or data point occurred, formatted as \"YYYY-MM\". Example: \"2025-01\". (String)",
      "currency": "The ISO 4217 three-letter currency code representing the trading currency of the security. Example: \"USD\" for US Dollars. (String)"
    }
  },
  {
    "name": "Commodities List API",
    "description": "The Commodities List endpoint delivers a master roster of energy, metal, softs, and grain contracts—each with symbol, trade month, and currency—so developers can iterate programmatically through all markets or display a searchable directory in research portals.",
    "category": "commodity_data",
    "use_cases": [
      "iterate through symbols to pull quotes in bulk",
      "display commodity directory with sector filters",
      "auto-complete search for contract lookup",
      "maintain internal mapping tables for analytics",
      "chatbots listing available commodity tickers"
    ],
    "parameters": {
      "required": {},
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "name": "The full legal or common name of the company. Example: \"Apple Inc.\" (String)",
      "exchange": "The abbreviated code or name of the exchange where the security is traded. Example: \"NASDAQ\". (String)",
      "tradeMonth": "The month in which a trade or data point occurred, formatted as \"YYYY-MM\". Example: \"2025-01\". (String)",
      "currency": "The ISO 4217 three-letter currency code representing the trading currency of the security. Example: \"USD\" for US Dollars. (String)"
    }
  },
  {
    "name": "Commodities Quote API",
    "description": "Commodities Quote API (category: commodity_data) streams full-detail, real-time quotes for a single contract—price, day/52-week ranges, change %, volume, open, previous close, timestamp. Required **symbol** lets traders monitor live markets and feed chart engines or chatbots answering “Where is gold trading now?”.",
    "category": "commodity_data",
    "use_cases": [
      "live quote panels in commodity trading platforms",
      "trigger alerts when price breaches key levels",
      "feed technical-analysis charting libraries",
      "compare intraday performance across commodities",
      "assistant queries on real-time commodity prices"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "name": "The full legal or common name of the company. Example: \"Apple Inc.\" (String)",
      "price": "The last traded price or intrinsic value of the security or asset. Example: 130.75. (Number)",
      "changePercentage": "The percentage change in price or value compared to the previous close. Example: \"+0.97%\". (Number, Percentage)",
      "change": "The absolute change in price or value compared to the previous close. Example: \"+1.25\". (String)",
      "volume": "The total number of shares or contracts traded during a given period (typically daily). Example: 105000000. (Number)",
      "dayLow": "The lowest price recorded for the security during that trading day. Example: 129.50. (Number)",
      "dayHigh": "The highest price recorded for the security during that trading day. Example: 131.00. (Number)",
      "yearHigh": "The highest price recorded for the security over the trailing 52-week period. Example: 150.25. (Number)",
      "yearLow": "The lowest price recorded for the security over the trailing 52-week period. Example: 110.25. (Number)",
      "marketCap": "The market capitalization of the company, calculated as share price multiplied by total shares outstanding. Example: \"None\" or 1500000000000 (1.5 trillion). (Number or String)",
      "priceAvg50": "The 50-day moving average price of the security. Example: 127.50. (Number)",
      "priceAvg200": "The 200-day moving average price of the security. Example: 125.75. (Number)",
      "exchange": "The abbreviated code or name of the exchange where the security is traded. Example: \"NASDAQ\". (String)",
      "open": "The opening price of the security at the start of the trading session. Example: 130.00. (Number)",
      "previousClose": "The closing price of the security from the prior trading session. Example: 129.50. (Number)",
      "timestamp": "The exact timestamp of the data point, typically in Unix epoch time. Example: 1629475200. (Number)"
    }
  },
  {
    "name": "Commodities Quote API",
    "description": "The Global Commodities Quotes endpoint returns a rich quote object—current price, intraday stats, 50- and 200-day averages—for any futures or spot symbol specified via **symbol**. Plug it into risk dashboards, portfolio valuation routines, or conversational agents delivering price updates.",
    "category": "commodity_data",
    "use_cases": [
      "portfolio valuation using live commodity marks",
      "risk dashboards highlighting biggest movers",
      "mobile widgets displaying gold/oil quotes",
      "algorithmic strategies sourcing price feed",
      "chatbots announcing intraday commodity changes"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "name": "The full legal or common name of the company. Example: \"Apple Inc.\" (String)",
      "price": "The last traded price or intrinsic value of the security or asset. Example: 130.75. (Number)",
      "changePercentage": "The percentage change in price or value compared to the previous close. Example: \"+0.97%\". (Number, Percentage)",
      "change": "The absolute change in price or value compared to the previous close. Example: \"+1.25\". (String)",
      "volume": "The total number of shares or contracts traded during a given period (typically daily). Example: 105000000. (Number)",
      "dayLow": "The lowest price recorded for the security during that trading day. Example: 129.50. (Number)",
      "dayHigh": "The highest price recorded for the security during that trading day. Example: 131.00. (Number)",
      "yearHigh": "The highest price recorded for the security over the trailing 52-week period. Example: 150.25. (Number)",
      "yearLow": "The lowest price recorded for the security over the trailing 52-week period. Example: 110.25. (Number)",
      "marketCap": "The market capitalization of the company, calculated as share price multiplied by total shares outstanding. Example: \"None\" or 1500000000000 (1.5 trillion). (Number or String)",
      "priceAvg50": "The 50-day moving average price of the security. Example: 127.50. (Number)",
      "priceAvg200": "The 200-day moving average price of the security. Example: 125.75. (Number)",
      "exchange": "The abbreviated code or name of the exchange where the security is traded. Example: \"NASDAQ\". (String)",
      "open": "The opening price of the security at the start of the trading session. Example: 130.00. (Number)",
      "previousClose": "The closing price of the security from the prior trading session. Example: 129.50. (Number)",
      "timestamp": "The exact timestamp of the data point, typically in Unix epoch time. Example: 1629475200. (Number)"
    }
  },
  {
    "name": "Commodities Quote Short API",
    "description": "Commodities Quote Short API (category: commodity_data) provides a lightweight snapshot—price, raw change, volume—for latency-sensitive screens or bandwidth-constrained environments. Required **symbol**. Ideal for watch-list tickers, mobile apps, and chatbots needing quick answers.",
    "category": "commodity_data",
    "use_cases": [
      "ultra-fast watch-list updates",
      "mobile push notifications on price spikes",
      "sparkline widgets requiring minimal data",
      "reduce bandwidth on IoT price displays",
      "assistant quick-fire price responses"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "price": "The last traded price or intrinsic value of the security or asset. Example: 130.75. (Number)",
      "change": "The absolute change in price or value compared to the previous close. Example: \"+1.25\". (String)",
      "volume": "The total number of shares or contracts traded during a given period (typically daily). Example: 105000000. (Number)"
    }
  },
  {
    "name": "Commodities Quote Short API",
    "description": "The Quick Quote endpoint strips quotes down to essentials—price, change, volume—delivering maximum speed and minimum payload. Perfect for real-time tickers, embedded devices, or API cost optimization when full detail isn’t required.",
    "category": "commodity_data",
    "use_cases": [
      "scrolling marquee tickers on websites",
      "smartwatch or IoT displays",
      "cost-efficient polling in high-frequency dashboards",
      "fallback feed when full quote service degrades",
      "chatbots returning terse price snippets"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "price": "The last traded price or intrinsic value of the security or asset. Example: 130.75. (Number)",
      "change": "The absolute change in price or value compared to the previous close. Example: \"+1.25\". (String)",
      "volume": "The total number of shares or contracts traded during a given period (typically daily). Example: 105000000. (Number)"
    }
  },
  {
    "name": "All Commodities Quotes API",
    "description": "All Commodities Quotes API (category: commodity_data) delivers a batch feed of live prices for every tracked commodity. Optional **short**=true trims each object to price, change, volume; omit to receive full detail. Use cases: market screener grids, heat-map visualisations, and chatbots answering “Show me today’s commodity moves.”",
    "category": "commodity_data",
    "use_cases": [
      "build real-time commodity heat maps",
      "bulk update price caches in databases",
      "identify top gainers/losers across asset classes",
      "drive watch-list tables with a single call",
      "assistant summaries of multi-commodity performance"
    ],
    "parameters": {
      "required": {
        "short": "A Boolean or flag string indicating whether to return a compact or abbreviated set of fields. Example: true to retrieve only key metrics (symbol, price). (Boolean or String, optional)"
      },
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "price": "The last traded price or intrinsic value of the security or asset. Example: 130.75. (Number)",
      "change": "The absolute change in price or value compared to the previous close. Example: \"+1.25\". (String)",
      "volume": "The total number of shares or contracts traded during a given period (typically daily). Example: 105000000. (Number)"
    }
  },
  {
    "name": "All Commodities Quotes API",
    "description": "The Batch Commodities Quotes endpoint streams real-time prices for the entire commodity universe in one response—toggle **short**=true for lean payloads. Ideal for market-overview pages, risk engines ingesting cross-asset prices, and conversational UIs reporting broad commodity moves.",
    "category": "commodity_data",
    "use_cases": [
      "risk engines needing synchronous price snaps",
      "market dashboards covering energy, metals, ags",
      "data vendors refreshing commodity price tables",
      "portfolio analytics with multi-asset coverage",
      "chatbots summarising overall commodity direction"
    ],
    "parameters": {
      "required": {
        "short": "A Boolean or flag string indicating whether to return a compact or abbreviated set of fields. Example: true to retrieve only key metrics (symbol, price). (Boolean or String, optional)"
      },
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "price": "The last traded price or intrinsic value of the security or asset. Example: 130.75. (Number)",
      "change": "The absolute change in price or value compared to the previous close. Example: \"+1.25\". (String)",
      "volume": "The total number of shares or contracts traded during a given period (typically daily). Example: 105000000. (Number)"
    }
  },
  {
    "name": "Light Chart API",
    "description": "Light Chart API (category: commodity_data) returns a lean end-of-day dataset—date, closing price, and volume—for fast historical checks. Feed it a **symbol** plus optional **from**/​**to** (ISO-8601, ≤ 90-day span) to power lightweight price-trend widgets, data-science notebooks, and chatbots answering “What was gold’s closing price on 4-Feb-2025?”.",
    "category": "commodity_data",
    "use_cases": [
      "quick historical look-ups for dashboards",
      "train regression models on clean daily closes",
      "plot sparkline charts with minimal payload",
      "mobile apps needing low-bandwidth history",
      "chatbots returning recent daily prices"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {
        "from": "The ISO 8601 date (YYYY-MM-DD) indicating the start of a time range filter. Example: \"2025-01-01\" to include only data from January 1, 2025 onward. Must be ≤ `to`. (String, Date, optional)",
        "to": "The ISO 8601 date (YYYY-MM-DD) indicating the end of a time range filter. Example: \"2025-12-31\" to include only data up to December 31, 2025. Must be ≥ `from`. (String, Date, optional)"
      }
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "price": "The last traded price or intrinsic value of the security or asset. Example: 130.75. (Number)",
      "volume": "The total number of shares or contracts traded during a given period (typically daily). Example: 105000000. (Number)"
    }
  },
  {
    "name": "Light Chart API",
    "description": "The Light Historical Price endpoint strips historical data to its essentials—close and volume—optimised for speed. Category commodity_data. Parameters: **symbol** (mandatory) with optional **from**/**to** for date slicing. Ideal for watch-list back-fills, bandwidth-sensitive devices, and NLP agents delivering fast price history.",
    "category": "commodity_data",
    "use_cases": [
      "refresh watch-list history nightly",
      "embed charts in email newsletters",
      "IoT screens displaying last-30-day closes",
      "reduce data cost in high-polling apps",
      "assistant needs daily close & volume only"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {
        "from": "The ISO 8601 date (YYYY-MM-DD) indicating the start of a time range filter. Example: \"2025-01-01\" to include only data from January 1, 2025 onward. Must be ≤ `to`. (String, Date, optional)",
        "to": "The ISO 8601 date (YYYY-MM-DD) indicating the end of a time range filter. Example: \"2025-12-31\" to include only data up to December 31, 2025. Must be ≥ `from`. (String, Date, optional)"
      }
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "price": "The last traded price or intrinsic value of the security or asset. Example: 130.75. (Number)",
      "volume": "The total number of shares or contracts traded during a given period (typically daily). Example: 105000000. (Number)"
    }
  },
  {
    "name": "Full Chart API",
    "description": "Full Chart API (category: commodity_data) delivers a complete end-of-day record—open, high, low, close, change %, volume, VWAP—for any commodity symbol. Add optional **from**/​**to** to constrain the window. Use it for technical-analysis back-tests, risk models, and chatbots answering “Show me gold’s OHLC for February 4th 2025.”",
    "category": "commodity_data",
    "use_cases": [
      "technical indicator calculation (RSI, MACD)",
      "back-test breakout strategies on commodity futures",
      "generate OHLC candlestick charts",
      "risk engines marking positions to close",
      "assistant providing full daily bar data"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {
        "from": "The ISO 8601 date (YYYY-MM-DD) indicating the start of a time range filter. Example: \"2025-01-01\" to include only data from January 1, 2025 onward. Must be ≤ `to`. (String, Date, optional)",
        "to": "The ISO 8601 date (YYYY-MM-DD) indicating the end of a time range filter. Example: \"2025-12-31\" to include only data up to December 31, 2025. Must be ≥ `from`. (String, Date, optional)"
      }
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "open": "The opening price of the security at the start of the trading session. Example: 130.00. (Number)",
      "high": "The highest intraday price recorded for the security. Example: 131.25. (Number)",
      "low": "The lowest intraday price recorded for the security. Example: 129.75. (Number)",
      "close": "The closing price of the security at the end of the trading session. Example: 130.75. (Number)",
      "volume": "The total number of shares or contracts traded during a given period (typically daily). Example: 105000000. (Number)",
      "change": "The absolute change in price or value compared to the previous close. Example: \"+1.25\". (String)",
      "changePercent": "The percentage change in value over a specified period, such as daily or yearly. Example: 2.5. (Number, Percentage)",
      "vwap": "The Volume-Weighted Average Price, representing the average price at which the security traded weighted by volume. Example: 130.82. (Number)"
    }
  },
  {
    "name": "Full Chart API",
    "description": "The Comprehensive Historical Price endpoint furnishes full OHLCV plus derived fields (change, changePercent, VWAP) for robust analytics. Category commodity_data. Required **symbol**, optional date filters. Perfect for quantitative research, volatility studies, and compliance archives that require complete daily bars.",
    "category": "commodity_data",
    "use_cases": [
      "volatility surface construction",
      "generate compliance audit trails",
      "feed machine-learning price-prediction models",
      "create printable research charts",
      "assistant summarising daily bar stats"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {
        "from": "The ISO 8601 date (YYYY-MM-DD) indicating the start of a time range filter. Example: \"2025-01-01\" to include only data from January 1, 2025 onward. Must be ≤ `to`. (String, Date, optional)",
        "to": "The ISO 8601 date (YYYY-MM-DD) indicating the end of a time range filter. Example: \"2025-12-31\" to include only data up to December 31, 2025. Must be ≥ `from`. (String, Date, optional)"
      }
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "open": "The opening price of the security at the start of the trading session. Example: 130.00. (Number)",
      "high": "The highest intraday price recorded for the security. Example: 131.25. (Number)",
      "low": "The lowest intraday price recorded for the security. Example: 129.75. (Number)",
      "close": "The closing price of the security at the end of the trading session. Example: 130.75. (Number)",
      "volume": "The total number of shares or contracts traded during a given period (typically daily). Example: 105000000. (Number)",
      "change": "The absolute change in price or value compared to the previous close. Example: \"+1.25\". (String)",
      "changePercent": "The percentage change in value over a specified period, such as daily or yearly. Example: 2.5. (Number, Percentage)",
      "vwap": "The Volume-Weighted Average Price, representing the average price at which the security traded weighted by volume. Example: 130.82. (Number)"
    }
  },
  {
    "name": "1-Minute Interval Commodities Chart API",
    "description": "1-Minute Chart API (category: commodity_data) streams intraday bars at 60-second granularity—open, high, low, close, volume—within a **from**/​**to** window (≤ 90 days). Deploy for scalping dashboards, real-time alert engines, and chatbots answering “What was gold doing at 19:19 on Feb 4?”.",
    "category": "commodity_data",
    "use_cases": [
      "high-frequency trading dashboards",
      "trigger price-level alerts within the minute",
      "calculate micro-structure stats (VWAP, spread)",
      "replay intraday sessions for training AI models",
      "assistant intraday bar look-ups"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {
        "from": "The ISO 8601 date (YYYY-MM-DD) indicating the start of a time range filter. Example: \"2025-01-01\" to include only data from January 1, 2025 onward. Must be ≤ `to`. (String, Date, optional)",
        "to": "The ISO 8601 date (YYYY-MM-DD) indicating the end of a time range filter. Example: \"2025-12-31\" to include only data up to December 31, 2025. Must be ≥ `from`. (String, Date, optional)"
      }
    },
    "response_example": {
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "open": "The opening price of the security at the start of the trading session. Example: 130.00. (Number)",
      "low": "The lowest intraday price recorded for the security. Example: 129.75. (Number)",
      "high": "The highest intraday price recorded for the security. Example: 131.25. (Number)",
      "close": "The closing price of the security at the end of the trading session. Example: 130.75. (Number)",
      "volume": "The total number of shares or contracts traded during a given period (typically daily). Example: 105000000. (Number)"
    }
  },
  {
    "name": "1-Minute Interval Commodities Chart API",
    "description": "The 1-Minute Historical Chart endpoint offers fine-grained intraday data for precision back-testing and real-time monitoring. Category commodity_data. Parameters: **symbol**, optional **from**/**to**. Ideal for algorithms calibrating entry/exit rules and micro-timing price moves.",
    "category": "commodity_data",
    "use_cases": [
      "back-test minute-level momentum strategies",
      "visualise tick charts in trading GUIs",
      "feed ML models detecting micro-patterns",
      "verify execution quality versus market prints",
      "assistant delivering minute-level bars"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {
        "from": "The ISO 8601 date (YYYY-MM-DD) indicating the start of a time range filter. Example: \"2025-01-01\" to include only data from January 1, 2025 onward. Must be ≤ `to`. (String, Date, optional)",
        "to": "The ISO 8601 date (YYYY-MM-DD) indicating the end of a time range filter. Example: \"2025-12-31\" to include only data up to December 31, 2025. Must be ≥ `from`. (String, Date, optional)"
      }
    },
    "response_example": {
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "open": "The opening price of the security at the start of the trading session. Example: 130.00. (Number)",
      "low": "The lowest intraday price recorded for the security. Example: 129.75. (Number)",
      "high": "The highest intraday price recorded for the security. Example: 131.25. (Number)",
      "close": "The closing price of the security at the end of the trading session. Example: 130.75. (Number)",
      "volume": "The total number of shares or contracts traded during a given period (typically daily). Example: 105000000. (Number)"
    }
  },
  {
    "name": "5-Minute Interval Commodities Chart API",
    "description": "5-Minute Chart API (category: commodity_data) supplies intraday OHLCV bars aggregated to five-minute buckets. Required **symbol**; optional **from**/**to**. Use cases include short-term trend analysis, day-trade strategy back-testing, and chatbots responding with recent five-minute bars.",
    "category": "commodity_data",
    "use_cases": [
      "plot five-minute candlesticks on web terminals",
      "compute intraday VWAP benchmarks",
      "identify breakout setups within the session",
      "feed risk dashboards with near-real-time volatility",
      "assistant quick intraday snapshots"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {
        "from": "The ISO 8601 date (YYYY-MM-DD) indicating the start of a time range filter. Example: \"2025-01-01\" to include only data from January 1, 2025 onward. Must be ≤ `to`. (String, Date, optional)",
        "to": "The ISO 8601 date (YYYY-MM-DD) indicating the end of a time range filter. Example: \"2025-12-31\" to include only data up to December 31, 2025. Must be ≥ `from`. (String, Date, optional)"
      }
    },
    "response_example": {
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "open": "The opening price of the security at the start of the trading session. Example: 130.00. (Number)",
      "low": "The lowest intraday price recorded for the security. Example: 129.75. (Number)",
      "high": "The highest intraday price recorded for the security. Example: 131.25. (Number)",
      "close": "The closing price of the security at the end of the trading session. Example: 130.75. (Number)",
      "volume": "The total number of shares or contracts traded during a given period (typically daily). Example: 105000000. (Number)"
    }
  },
  {
    "name": "5-Minute Interval Commodities Chart API",
    "description": "The 5-Minute Historical Chart endpoint aggregates tick data into five-minute intervals—balancing granularity and data volume. Category commodity_data. Great for intraday swing traders, volatility atlases, and conversational interfaces summarising last 5-minute moves.",
    "category": "commodity_data",
    "use_cases": [
      "intraday swing-trading strategy design",
      "build volatility atlases for option pricing",
      "reduce data storage versus 1-minute feed",
      "monitor key support/resistance in near real time",
      "assistant providing recent five-minute bar info"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {
        "from": "The ISO 8601 date (YYYY-MM-DD) indicating the start of a time range filter. Example: \"2025-01-01\" to include only data from January 1, 2025 onward. Must be ≤ `to`. (String, Date, optional)",
        "to": "The ISO 8601 date (YYYY-MM-DD) indicating the end of a time range filter. Example: \"2025-12-31\" to include only data up to December 31, 2025. Must be ≥ `from`. (String, Date, optional)"
      }
    },
    "response_example": {
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "open": "The opening price of the security at the start of the trading session. Example: 130.00. (Number)",
      "low": "The lowest intraday price recorded for the security. Example: 129.75. (Number)",
      "high": "The highest intraday price recorded for the security. Example: 131.25. (Number)",
      "close": "The closing price of the security at the end of the trading session. Example: 130.75. (Number)",
      "volume": "The total number of shares or contracts traded during a given period (typically daily). Example: 105000000. (Number)"
    }
  },
  {
    "name": "1-Hour Interval Commodities Chart API",
    "description": "1-Hour Chart API (category: commodity_data) returns hourly OHLCV bars for commodities—ideal for swing-trade dashboards, mid-term strategy testing, and chatbots answering “What was gold’s price in the 19:00 hour?”. Required **symbol**; optional date bounds.",
    "category": "commodity_data",
    "use_cases": [
      "swing-trading dashboards with hourly resolution",
      "back-test multi-hour breakout systems",
      "calculate rolling hourly volatility",
      "overlay hourly bars on daily charts for context",
      "assistant hourly-bar look-ups"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {
        "from": "The ISO 8601 date (YYYY-MM-DD) indicating the start of a time range filter. Example: \"2025-01-01\" to include only data from January 1, 2025 onward. Must be ≤ `to`. (String, Date, optional)",
        "to": "The ISO 8601 date (YYYY-MM-DD) indicating the end of a time range filter. Example: \"2025-12-31\" to include only data up to December 31, 2025. Must be ≥ `from`. (String, Date, optional)"
      }
    },
    "response_example": {
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "open": "The opening price of the security at the start of the trading session. Example: 130.00. (Number)",
      "low": "The lowest intraday price recorded for the security. Example: 129.75. (Number)",
      "high": "The highest intraday price recorded for the security. Example: 131.25. (Number)",
      "close": "The closing price of the security at the end of the trading session. Example: 130.75. (Number)",
      "volume": "The total number of shares or contracts traded during a given period (typically daily). Example: 105000000. (Number)"
    }
  },
  {
    "name": "1-Hour Interval Commodities Chart API",
    "description": "The Hourly Historical Chart endpoint aggregates trades into 60-minute bars, balancing detail with manageable data size. Category commodity_data. Parameters: **symbol** plus optional **from**/**to**. Use it for session-structure studies, options gamma models, and voice assistants providing hourly summaries.",
    "category": "commodity_data",
    "use_cases": [
      "session-structure and micro-seasonality analysis",
      "gamma models needing hour-level inputs",
      "reduce storage requirements vs. minute data",
      "client reports showing intraday hourly trends",
      "assistant hourly trend explanations"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {
        "from": "The ISO 8601 date (YYYY-MM-DD) indicating the start of a time range filter. Example: \"2025-01-01\" to include only data from January 1, 2025 onward. Must be ≤ `to`. (String, Date, optional)",
        "to": "The ISO 8601 date (YYYY-MM-DD) indicating the end of a time range filter. Example: \"2025-12-31\" to include only data up to December 31, 2025. Must be ≥ `from`. (String, Date, optional)"
      }
    },
    "response_example": {
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "open": "The opening price of the security at the start of the trading session. Example: 130.00. (Number)",
      "low": "The lowest intraday price recorded for the security. Example: 129.75. (Number)",
      "high": "The highest intraday price recorded for the security. Example: 131.25. (Number)",
      "close": "The closing price of the security at the end of the trading session. Example: 130.75. (Number)",
      "volume": "The total number of shares or contracts traded during a given period (typically daily). Example: 105000000. (Number)"
    }
  },
  {
    "name": "Latest Crowdfunding Campaigns API",
    "description": "Latest Crowdfunding Campaigns API (category: fundraising) streams the newest Reg-CF filings, returning issuer metadata, offering terms, SAFE/ equity type, over-subscription rules, deadline, and headline financials. Required pagination keys **page** and **limit** (≤ 1 000) make it simple to ingest the full feed into deal-flow dashboards, compliance monitors, or chatbots answering “Which offerings went live today?”.",
    "category": "fundraising",
    "use_cases": [
      "deal-flow trackers for angel networks",
      "alert when SAFE terms or max raises change",
      "feed robo-advisor screens for retail investment",
      "compliance engines scanning issuer jurisdictions",
      "assistants summarising brand-new campaigns"
    ],
    "parameters": {
      "required": {
        "page": "A zero-based integer page index for paginated endpoints. Example: 2 to return the third page of results, given the configured `limit`. (Integer, optional; defaults to 0)",
        "limit": "An integer cap on the number of results returned by the endpoint. Example: 50 to restrict output to the top 50 matches. Must be ≥1 and ≤1000. (Integer, optional; defaults to 100)"
      },
      "optional": {}
    },
    "response_example": {
      "cik": "The Central Index Key, a unique nine-digit identifier assigned by the SEC to entities. Example: \"0001454889\". (String)",
      "companyName": "The registered legal name of the company. Example: \"Apple Inc.\". (String)",
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "filingDate": "The date on which a regulatory filing was submitted (e.g., with the SEC), in ISO 8601 format. Example: \"2025-02-03\". (String, Date)",
      "acceptedDate": "The date on which a filing or document was accepted by the regulatory authority. Example: \"2025-02-03\". (String, Date)",
      "formType": "The type or designation of a regulatory filing (e.g., \"10-K\", \"10-Q\"). Example: \"10-K\". (String)",
      "formSignification": "A textual description or definition of the form type filed with regulators. Example: \"Offering Statement Amendment\". (String, optional)",
      "nameOfIssuer": "The official name of the entity issuing the securities, typically the corporate issuer. Example: \"Acme Corp.\". (String)",
      "legalStatusForm": "The legal structure or status of the issuing entity, such as \"Corporation\", \"LLC\", or \"Partnership\". Example: \"Corporation\". (String)",
      "jurisdictionOrganization": "Legal jurisdiction of incorporation or registration. (String, optional)",
      "issuerStreet": "Street address for the issuer's principal office. Example: \"1614 PUGHTOWN RD\". (String, optional)",
      "issuerCity": "The city where the issuer’s headquarters is located. Example: \"San Francisco\". (String)",
      "issuerStateOrCountry": "State or country of issuer's incorporation. Example: \"CA\" for California, \"US\" for United States. (String, optional)",
      "issuerZipCode": "Zip or postal code of issuer's address. Example: \"19460\". (String, optional)",
      "issuerWebsite": "The official website of the issuer, providing additional information about the offering. Example: \"https://www.acmecorp.com\". (String, URL)",
      "intermediaryCompanyName": "The name of the intermediary or underwriting firm facilitating the securities offering. Example: \"Prime Brokerage LLC\". (String)",
      "intermediaryCommissionCik": "CIK code of the intermediary facilitating the offering. (String, optional)",
      "intermediaryCommissionFileNumber": "SEC file number of the intermediary. (String, optional)",
      "compensationAmount": "Description of intermediary or commission compensation structure for the offering. (String, optional)",
      "financialInterest": "Disclosure of any financial interest held by the intermediary, principal, or related parties. (String, optional)",
      "securityOfferedType": "Type of security offered in a capital raise or regulatory filing. Example: \"Other\". (String, optional)",
      "securityOfferedOtherDescription": "A descriptive field detailing other types of securities or instruments being offered outside of the primary equity or debt. Example: \"Warrants and convertible notes included\". (String)",
      "numberOfSecurityOffered": "Number of securities (shares, units, etc.) offered in a regulatory filing. Example: 124000. (Number, optional)",
      "offeringPrice": "The price at which the securities are being offered to investors per share or per unit. Example: 10.50. (Number)",
      "offeringAmount": "The total amount being offered in a securities offering, usually in monetary terms. Example: 100000000. (Number)",
      "overSubscriptionAccepted": "A flag indicating whether the offering allows oversubscription (accepting more funds than the initial target). Example: \"Y\" for yes, \"N\" for no. (String, optional)",
      "overSubscriptionAllocationType": "Describes how oversubscriptions are handled—e.g., pro-rata, first-come, or other method. Example: \"First-come, first-served basis\". (String, optional)",
      "maximumOfferingAmount": "The maximum total amount of securities the issuer plans to offer, often used in shelf registrations. Example: 10000000. (Number)",
      "offeringDeadlineDate": "The final date by which investors must commit funds to participate in a securities offering, in ISO 8601 format. Example: \"2025-06-30\". (String, Date)",
      "currentNumberOfEmployees": "Reported headcount of employees at the time of filing. (Number, optional)",
      "totalAssetMostRecentFiscalYear": "Total assets as of the most recent fiscal year end. Example: 193,070. (Number, optional)",
      "totalAssetPriorFiscalYear": "Total assets as of the prior fiscal year end. Example: 0. (Number, optional)",
      "cashAndCashEquiValentMostRecentFiscalYear": "Cash and equivalents at year-end for most recent fiscal year. (Number, optional)",
      "cashAndCashEquiValentPriorFiscalYear": "Cash and equivalents at year-end for prior fiscal year. (Number, optional)",
      "accountsReceivableMostRecentFiscalYear": "Year-end accounts receivable for the most recent fiscal year. (Number, optional)",
      "accountsReceivablePriorFiscalYear": "Year-end accounts receivable for the prior fiscal year. (Number, optional)",
      "shortTermDebtMostRecentFiscalYear": "Short-term debt for the most recent fiscal year. Example: 0. (Number, optional)",
      "shortTermDebtPriorFiscalYear": "Short-term debt for the prior fiscal year, used in YoY comparisons. Example: 0. (Number, optional)",
      "longTermDebtMostRecentFiscalYear": "Long-term debt at year-end for the most recent fiscal year. (Number, optional)",
      "longTermDebtPriorFiscalYear": "Long-term debt at year-end for the prior fiscal year. (Number, optional)",
      "revenueMostRecentFiscalYear": "Total revenue reported for the most recent fiscal year. (Number, optional)",
      "revenuePriorFiscalYear": "Total revenue reported for the prior fiscal year. (Number, optional)",
      "costGoodsSoldMostRecentFiscalYear": "Cost of goods sold (COGS) for the most recent fiscal year. (Number, optional)",
      "costGoodsSoldPriorFiscalYear": "Cost of goods sold (COGS) for the prior fiscal year. (Number, optional)",
      "taxesPaidMostRecentFiscalYear": "Income taxes paid for the most recent fiscal year. (Number, optional)",
      "taxesPaidPriorFiscalYear": "Income taxes paid for the prior fiscal year. (Number, optional)",
      "netIncomeMostRecentFiscalYear": "Net income for the most recent fiscal year. (Number, optional)",
      "netIncomePriorFiscalYear": "Net income for the prior fiscal year. (Number, optional)"
    }
  },
  {
    "name": "Latest Crowdfunding Campaigns API",
    "description": "The Crowdfunding-Offerings-Latest endpoint delivers a rolling tape of Reg-CF Form C, C/A, and C-U filings. Pagination via **page**/​**limit** pushes each issuer’s SAFE/ equity terms, cap table snapshot, and financial highlights—perfect for VC scouting tools, retail platforms comparing fee structures, and NLP bots listing the day’s filings.",
    "category": "fundraising",
    "use_cases": [
      "VC scouting dashboards surfacing fresh listings",
      "retail platforms ranking campaigns by financials",
      "research reports on crowdfunding trends",
      "KYC checks on issuer legal structure",
      "assistant Q&A on newest Reg-CF filings"
    ],
    "parameters": {
      "required": {
        "page": "A zero-based integer page index for paginated endpoints. Example: 2 to return the third page of results, given the configured `limit`. (Integer, optional; defaults to 0)",
        "limit": "An integer cap on the number of results returned by the endpoint. Example: 50 to restrict output to the top 50 matches. Must be ≥1 and ≤1000. (Integer, optional; defaults to 100)"
      },
      "optional": {}
    },
    "response_example": {
      "cik": "The Central Index Key, a unique nine-digit identifier assigned by the SEC to entities. Example: \"0001454889\". (String)",
      "companyName": "The registered legal name of the company. Example: \"Apple Inc.\". (String)",
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "filingDate": "The date on which a regulatory filing was submitted (e.g., with the SEC), in ISO 8601 format. Example: \"2025-02-03\". (String, Date)",
      "acceptedDate": "The date on which a filing or document was accepted by the regulatory authority. Example: \"2025-02-03\". (String, Date)",
      "formType": "The type or designation of a regulatory filing (e.g., \"10-K\", \"10-Q\"). Example: \"10-K\". (String)",
      "formSignification": "A textual description or definition of the form type filed with regulators. Example: \"Offering Statement Amendment\". (String, optional)",
      "nameOfIssuer": "The official name of the entity issuing the securities, typically the corporate issuer. Example: \"Acme Corp.\". (String)",
      "legalStatusForm": "The legal structure or status of the issuing entity, such as \"Corporation\", \"LLC\", or \"Partnership\". Example: \"Corporation\". (String)",
      "jurisdictionOrganization": "Legal jurisdiction of incorporation or registration. (String, optional)",
      "issuerStreet": "Street address for the issuer's principal office. Example: \"1614 PUGHTOWN RD\". (String, optional)",
      "issuerCity": "The city where the issuer’s headquarters is located. Example: \"San Francisco\". (String)",
      "issuerStateOrCountry": "State or country of issuer's incorporation. Example: \"CA\" for California, \"US\" for United States. (String, optional)",
      "issuerZipCode": "Zip or postal code of issuer's address. Example: \"19460\". (String, optional)",
      "issuerWebsite": "The official website of the issuer, providing additional information about the offering. Example: \"https://www.acmecorp.com\". (String, URL)",
      "intermediaryCompanyName": "The name of the intermediary or underwriting firm facilitating the securities offering. Example: \"Prime Brokerage LLC\". (String)",
      "intermediaryCommissionCik": "CIK code of the intermediary facilitating the offering. (String, optional)",
      "intermediaryCommissionFileNumber": "SEC file number of the intermediary. (String, optional)",
      "compensationAmount": "Description of intermediary or commission compensation structure for the offering. (String, optional)",
      "financialInterest": "Disclosure of any financial interest held by the intermediary, principal, or related parties. (String, optional)",
      "securityOfferedType": "Type of security offered in a capital raise or regulatory filing. Example: \"Other\". (String, optional)",
      "securityOfferedOtherDescription": "A descriptive field detailing other types of securities or instruments being offered outside of the primary equity or debt. Example: \"Warrants and convertible notes included\". (String)",
      "numberOfSecurityOffered": "Number of securities (shares, units, etc.) offered in a regulatory filing. Example: 124000. (Number, optional)",
      "offeringPrice": "The price at which the securities are being offered to investors per share or per unit. Example: 10.50. (Number)",
      "offeringAmount": "The total amount being offered in a securities offering, usually in monetary terms. Example: 100000000. (Number)",
      "overSubscriptionAccepted": "A flag indicating whether the offering allows oversubscription (accepting more funds than the initial target). Example: \"Y\" for yes, \"N\" for no. (String, optional)",
      "overSubscriptionAllocationType": "Describes how oversubscriptions are handled—e.g., pro-rata, first-come, or other method. Example: \"First-come, first-served basis\". (String, optional)",
      "maximumOfferingAmount": "The maximum total amount of securities the issuer plans to offer, often used in shelf registrations. Example: 10000000. (Number)",
      "offeringDeadlineDate": "The final date by which investors must commit funds to participate in a securities offering, in ISO 8601 format. Example: \"2025-06-30\". (String, Date)",
      "currentNumberOfEmployees": "Reported headcount of employees at the time of filing. (Number, optional)",
      "totalAssetMostRecentFiscalYear": "Total assets as of the most recent fiscal year end. Example: 193,070. (Number, optional)",
      "totalAssetPriorFiscalYear": "Total assets as of the prior fiscal year end. Example: 0. (Number, optional)",
      "cashAndCashEquiValentMostRecentFiscalYear": "Cash and equivalents at year-end for most recent fiscal year. (Number, optional)",
      "cashAndCashEquiValentPriorFiscalYear": "Cash and equivalents at year-end for prior fiscal year. (Number, optional)",
      "accountsReceivableMostRecentFiscalYear": "Year-end accounts receivable for the most recent fiscal year. (Number, optional)",
      "accountsReceivablePriorFiscalYear": "Year-end accounts receivable for the prior fiscal year. (Number, optional)",
      "shortTermDebtMostRecentFiscalYear": "Short-term debt for the most recent fiscal year. Example: 0. (Number, optional)",
      "shortTermDebtPriorFiscalYear": "Short-term debt for the prior fiscal year, used in YoY comparisons. Example: 0. (Number, optional)",
      "longTermDebtMostRecentFiscalYear": "Long-term debt at year-end for the most recent fiscal year. (Number, optional)",
      "longTermDebtPriorFiscalYear": "Long-term debt at year-end for the prior fiscal year. (Number, optional)",
      "revenueMostRecentFiscalYear": "Total revenue reported for the most recent fiscal year. (Number, optional)",
      "revenuePriorFiscalYear": "Total revenue reported for the prior fiscal year. (Number, optional)",
      "costGoodsSoldMostRecentFiscalYear": "Cost of goods sold (COGS) for the most recent fiscal year. (Number, optional)",
      "costGoodsSoldPriorFiscalYear": "Cost of goods sold (COGS) for the prior fiscal year. (Number, optional)",
      "taxesPaidMostRecentFiscalYear": "Income taxes paid for the most recent fiscal year. (Number, optional)",
      "taxesPaidPriorFiscalYear": "Income taxes paid for the prior fiscal year. (Number, optional)",
      "netIncomeMostRecentFiscalYear": "Net income for the most recent fiscal year. (Number, optional)",
      "netIncomePriorFiscalYear": "Net income for the prior fiscal year. (Number, optional)"
    }
  },
  {
    "name": "Crowdfunding Campaign Search API",
    "description": "Crowdfunding Campaign Search API (category: fundraising) converts a fuzzy **name** query into core identifiers—CIK, issuer name, latest filing date—enabling investors to jump straight to campaign details. Ideal for search bars, entity-resolution pipelines, and chatbots fielding “Find Enotap’s Reg-CF filing.”",
    "category": "fundraising",
    "use_cases": [
      "search-box autocomplete for crowdfunding portals",
      "entity resolution from brand name to CIK",
      "link user queries to campaign pages",
      "research notebooks reconciling issuer names",
      "assistant look-ups of campaign identifiers"
    ],
    "parameters": {
      "required": {
        "name": "A free-form string representing a full or partial company or fund name used for filtering or lookup. Example: \"Apple Inc.\" to match the exact legal name. (String, optional)"
      },
      "optional": {}
    },
    "response_example": {
      "cik": "The Central Index Key, a unique nine-digit identifier assigned by the SEC to entities. Example: \"0001454889\". (String)",
      "name": "The full legal or common name of the company. Example: \"Apple Inc.\" (String)",
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)"
    }
  },
  {
    "name": "Crowdfunding Campaign Search API",
    "description": "The Crowdfunding-Offerings-Search endpoint resolves company or project names to their Reg-CF identifiers—returning CIK and filing recency—so developers can bridge user input to the Latest Crowdfunding feed or issuer landing pages in one hop.",
    "category": "fundraising",
    "use_cases": [
      "bridge free-text search to structured Reg-CF data",
      "populate dropdowns after user typing",
      "build cross-reference tables for analytics",
      "filter watch lists by keyword match",
      "assistant answers converting name to CIK"
    ],
    "parameters": {
      "required": {
        "name": "A free-form string representing a full or partial company or fund name used for filtering or lookup. Example: \"Apple Inc.\" to match the exact legal name. (String, optional)"
      },
      "optional": {}
    },
    "response_example": {
      "cik": "The Central Index Key, a unique nine-digit identifier assigned by the SEC to entities. Example: \"0001454889\". (String)",
      "name": "The full legal or common name of the company. Example: \"Apple Inc.\" (String)",
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)"
    }
  },
  {
    "name": "Crowdfunding By CIK API",
    "description": "Crowdfunding By CIK API (category: fundraising) returns every Reg-CF filing tied to a single issuer’s **cik**—Form C, amendments, and progress updates—complete with share/SAFE terms, raise amounts, and audited financial snapshots. Use it to build issuer timelines, audit disclosure evolutions, or answer “Show all Reg-CF docs for OYO Fitness.”",
    "category": "fundraising",
    "use_cases": [
      "issuer-specific fundraising history charts",
      "audit disclosure changes across amendments",
      "calculate cumulative funds raised per issuer",
      "due-diligence packs for angel investors",
      "chatbots returning full issuer filing history"
    ],
    "parameters": {
      "required": {
        "cik": "The nine-digit Central Index Key assigned by the SEC, used to filter or look up specific filers. Example: \"0000320193\" for Apple Inc. (String, optional)"
      },
      "optional": {}
    },
    "response_example": {
      "cik": "The Central Index Key, a unique nine-digit identifier assigned by the SEC to entities. Example: \"0001454889\". (String)",
      "companyName": "The registered legal name of the company. Example: \"Apple Inc.\". (String)",
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "filingDate": "The date on which a regulatory filing was submitted (e.g., with the SEC), in ISO 8601 format. Example: \"2025-02-03\". (String, Date)",
      "acceptedDate": "The date on which a filing or document was accepted by the regulatory authority. Example: \"2025-02-03\". (String, Date)",
      "formType": "The type or designation of a regulatory filing (e.g., \"10-K\", \"10-Q\"). Example: \"10-K\". (String)",
      "formSignification": "A textual description or definition of the form type filed with regulators. Example: \"Offering Statement Amendment\". (String, optional)",
      "nameOfIssuer": "The official name of the entity issuing the securities, typically the corporate issuer. Example: \"Acme Corp.\". (String)",
      "legalStatusForm": "The legal structure or status of the issuing entity, such as \"Corporation\", \"LLC\", or \"Partnership\". Example: \"Corporation\". (String)",
      "jurisdictionOrganization": "Legal jurisdiction of incorporation or registration. (String, optional)",
      "issuerStreet": "Street address for the issuer's principal office. Example: \"1614 PUGHTOWN RD\". (String, optional)",
      "issuerCity": "The city where the issuer’s headquarters is located. Example: \"San Francisco\". (String)",
      "issuerStateOrCountry": "State or country of issuer's incorporation. Example: \"CA\" for California, \"US\" for United States. (String, optional)",
      "issuerZipCode": "Zip or postal code of issuer's address. Example: \"19460\". (String, optional)",
      "issuerWebsite": "The official website of the issuer, providing additional information about the offering. Example: \"https://www.acmecorp.com\". (String, URL)",
      "intermediaryCompanyName": "The name of the intermediary or underwriting firm facilitating the securities offering. Example: \"Prime Brokerage LLC\". (String)",
      "intermediaryCommissionCik": "CIK code of the intermediary facilitating the offering. (String, optional)",
      "intermediaryCommissionFileNumber": "SEC file number of the intermediary. (String, optional)",
      "compensationAmount": "Description of intermediary or commission compensation structure for the offering. (String, optional)",
      "financialInterest": "Disclosure of any financial interest held by the intermediary, principal, or related parties. (String, optional)",
      "securityOfferedType": "Type of security offered in a capital raise or regulatory filing. Example: \"Other\". (String, optional)",
      "securityOfferedOtherDescription": "A descriptive field detailing other types of securities or instruments being offered outside of the primary equity or debt. Example: \"Warrants and convertible notes included\". (String)",
      "numberOfSecurityOffered": "Number of securities (shares, units, etc.) offered in a regulatory filing. Example: 124000. (Number, optional)",
      "offeringPrice": "The price at which the securities are being offered to investors per share or per unit. Example: 10.50. (Number)",
      "offeringAmount": "The total amount being offered in a securities offering, usually in monetary terms. Example: 100000000. (Number)",
      "overSubscriptionAccepted": "A flag indicating whether the offering allows oversubscription (accepting more funds than the initial target). Example: \"Y\" for yes, \"N\" for no. (String, optional)",
      "overSubscriptionAllocationType": "Describes how oversubscriptions are handled—e.g., pro-rata, first-come, or other method. Example: \"First-come, first-served basis\". (String, optional)",
      "maximumOfferingAmount": "The maximum total amount of securities the issuer plans to offer, often used in shelf registrations. Example: 10000000. (Number)",
      "offeringDeadlineDate": "The final date by which investors must commit funds to participate in a securities offering, in ISO 8601 format. Example: \"2025-06-30\". (String, Date)",
      "currentNumberOfEmployees": "Reported headcount of employees at the time of filing. (Number, optional)",
      "totalAssetMostRecentFiscalYear": "Total assets as of the most recent fiscal year end. Example: 193,070. (Number, optional)",
      "totalAssetPriorFiscalYear": "Total assets as of the prior fiscal year end. Example: 0. (Number, optional)",
      "cashAndCashEquiValentMostRecentFiscalYear": "Cash and equivalents at year-end for most recent fiscal year. (Number, optional)",
      "cashAndCashEquiValentPriorFiscalYear": "Cash and equivalents at year-end for prior fiscal year. (Number, optional)",
      "accountsReceivableMostRecentFiscalYear": "Year-end accounts receivable for the most recent fiscal year. (Number, optional)",
      "accountsReceivablePriorFiscalYear": "Year-end accounts receivable for the prior fiscal year. (Number, optional)",
      "shortTermDebtMostRecentFiscalYear": "Short-term debt for the most recent fiscal year. Example: 0. (Number, optional)",
      "shortTermDebtPriorFiscalYear": "Short-term debt for the prior fiscal year, used in YoY comparisons. Example: 0. (Number, optional)",
      "longTermDebtMostRecentFiscalYear": "Long-term debt at year-end for the most recent fiscal year. (Number, optional)",
      "longTermDebtPriorFiscalYear": "Long-term debt at year-end for the prior fiscal year. (Number, optional)",
      "revenueMostRecentFiscalYear": "Total revenue reported for the most recent fiscal year. (Number, optional)",
      "revenuePriorFiscalYear": "Total revenue reported for the prior fiscal year. (Number, optional)",
      "costGoodsSoldMostRecentFiscalYear": "Cost of goods sold (COGS) for the most recent fiscal year. (Number, optional)",
      "costGoodsSoldPriorFiscalYear": "Cost of goods sold (COGS) for the prior fiscal year. (Number, optional)",
      "taxesPaidMostRecentFiscalYear": "Income taxes paid for the most recent fiscal year. (Number, optional)",
      "taxesPaidPriorFiscalYear": "Income taxes paid for the prior fiscal year. (Number, optional)",
      "netIncomeMostRecentFiscalYear": "Net income for the most recent fiscal year. (Number, optional)",
      "netIncomePriorFiscalYear": "Net income for the prior fiscal year. (Number, optional)"
    }
  },
  {
    "name": "Crowdfunding By CIK API",
    "description": "The Crowdfunding-Offerings endpoint keyed by **cik** delivers a chronological ledger of all Reg-CF documents for one company—progress updates, amendments, and final closings—enabling timeline visualisations, capital-raise tracking, and conversational transparency for investors.",
    "category": "fundraising",
    "use_cases": [
      "timeline visualisations of capital raises",
      "track SAFE versus equity mix over rounds",
      "investor relations portals showing raise progress",
      "researchers studying crowdfunding success rates",
      "assistants recounting issuer raise milestones"
    ],
    "parameters": {
      "required": {
        "cik": "The nine-digit Central Index Key assigned by the SEC, used to filter or look up specific filers. Example: \"0000320193\" for Apple Inc. (String, optional)"
      },
      "optional": {}
    },
    "response_example": {
      "cik": "The Central Index Key, a unique nine-digit identifier assigned by the SEC to entities. Example: \"0001454889\". (String)",
      "companyName": "The registered legal name of the company. Example: \"Apple Inc.\". (String)",
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "filingDate": "The date on which a regulatory filing was submitted (e.g., with the SEC), in ISO 8601 format. Example: \"2025-02-03\". (String, Date)",
      "acceptedDate": "The date on which a filing or document was accepted by the regulatory authority. Example: \"2025-02-03\". (String, Date)",
      "formType": "The type or designation of a regulatory filing (e.g., \"10-K\", \"10-Q\"). Example: \"10-K\". (String)",
      "formSignification": "A textual description or definition of the form type filed with regulators. Example: \"Offering Statement Amendment\". (String, optional)",
      "nameOfIssuer": "The official name of the entity issuing the securities, typically the corporate issuer. Example: \"Acme Corp.\". (String)",
      "legalStatusForm": "The legal structure or status of the issuing entity, such as \"Corporation\", \"LLC\", or \"Partnership\". Example: \"Corporation\". (String)",
      "jurisdictionOrganization": "Legal jurisdiction of incorporation or registration. (String, optional)",
      "issuerStreet": "Street address for the issuer's principal office. Example: \"1614 PUGHTOWN RD\". (String, optional)",
      "issuerCity": "The city where the issuer’s headquarters is located. Example: \"San Francisco\". (String)",
      "issuerStateOrCountry": "State or country of issuer's incorporation. Example: \"CA\" for California, \"US\" for United States. (String, optional)",
      "issuerZipCode": "Zip or postal code of issuer's address. Example: \"19460\". (String, optional)",
      "issuerWebsite": "The official website of the issuer, providing additional information about the offering. Example: \"https://www.acmecorp.com\". (String, URL)",
      "intermediaryCompanyName": "The name of the intermediary or underwriting firm facilitating the securities offering. Example: \"Prime Brokerage LLC\". (String)",
      "intermediaryCommissionCik": "CIK code of the intermediary facilitating the offering. (String, optional)",
      "intermediaryCommissionFileNumber": "SEC file number of the intermediary. (String, optional)",
      "compensationAmount": "Description of intermediary or commission compensation structure for the offering. (String, optional)",
      "financialInterest": "Disclosure of any financial interest held by the intermediary, principal, or related parties. (String, optional)",
      "securityOfferedType": "Type of security offered in a capital raise or regulatory filing. Example: \"Other\". (String, optional)",
      "securityOfferedOtherDescription": "A descriptive field detailing other types of securities or instruments being offered outside of the primary equity or debt. Example: \"Warrants and convertible notes included\". (String)",
      "numberOfSecurityOffered": "Number of securities (shares, units, etc.) offered in a regulatory filing. Example: 124000. (Number, optional)",
      "offeringPrice": "The price at which the securities are being offered to investors per share or per unit. Example: 10.50. (Number)",
      "offeringAmount": "The total amount being offered in a securities offering, usually in monetary terms. Example: 100000000. (Number)",
      "overSubscriptionAccepted": "A flag indicating whether the offering allows oversubscription (accepting more funds than the initial target). Example: \"Y\" for yes, \"N\" for no. (String, optional)",
      "overSubscriptionAllocationType": "Describes how oversubscriptions are handled—e.g., pro-rata, first-come, or other method. Example: \"First-come, first-served basis\". (String, optional)",
      "maximumOfferingAmount": "The maximum total amount of securities the issuer plans to offer, often used in shelf registrations. Example: 10000000. (Number)",
      "offeringDeadlineDate": "The final date by which investors must commit funds to participate in a securities offering, in ISO 8601 format. Example: \"2025-06-30\". (String, Date)",
      "currentNumberOfEmployees": "Reported headcount of employees at the time of filing. (Number, optional)",
      "totalAssetMostRecentFiscalYear": "Total assets as of the most recent fiscal year end. Example: 193,070. (Number, optional)",
      "totalAssetPriorFiscalYear": "Total assets as of the prior fiscal year end. Example: 0. (Number, optional)",
      "cashAndCashEquiValentMostRecentFiscalYear": "Cash and equivalents at year-end for most recent fiscal year. (Number, optional)",
      "cashAndCashEquiValentPriorFiscalYear": "Cash and equivalents at year-end for prior fiscal year. (Number, optional)",
      "accountsReceivableMostRecentFiscalYear": "Year-end accounts receivable for the most recent fiscal year. (Number, optional)",
      "accountsReceivablePriorFiscalYear": "Year-end accounts receivable for the prior fiscal year. (Number, optional)",
      "shortTermDebtMostRecentFiscalYear": "Short-term debt for the most recent fiscal year. Example: 0. (Number, optional)",
      "shortTermDebtPriorFiscalYear": "Short-term debt for the prior fiscal year, used in YoY comparisons. Example: 0. (Number, optional)",
      "longTermDebtMostRecentFiscalYear": "Long-term debt at year-end for the most recent fiscal year. (Number, optional)",
      "longTermDebtPriorFiscalYear": "Long-term debt at year-end for the prior fiscal year. (Number, optional)",
      "revenueMostRecentFiscalYear": "Total revenue reported for the most recent fiscal year. (Number, optional)",
      "revenuePriorFiscalYear": "Total revenue reported for the prior fiscal year. (Number, optional)",
      "costGoodsSoldMostRecentFiscalYear": "Cost of goods sold (COGS) for the most recent fiscal year. (Number, optional)",
      "costGoodsSoldPriorFiscalYear": "Cost of goods sold (COGS) for the prior fiscal year. (Number, optional)",
      "taxesPaidMostRecentFiscalYear": "Income taxes paid for the most recent fiscal year. (Number, optional)",
      "taxesPaidPriorFiscalYear": "Income taxes paid for the prior fiscal year. (Number, optional)",
      "netIncomeMostRecentFiscalYear": "Net income for the most recent fiscal year. (Number, optional)",
      "netIncomePriorFiscalYear": "Net income for the prior fiscal year. (Number, optional)"
    }
  },
  {
    "name": "Equity Offering Updates API",
    "description": "Equity Offering Updates API (category: fundraising) publishes the most recent Form D and Form D/A filings—covering exempt private placements, pooled-fund launches, and other unregistered offerings. Parameters **page** and **limit** (≤ 1 000) paginate the stream; optional **cik** filters to one issuer. Use it for private-market data terminals, capital-raise alerts, and chatbots replying with fresh Form D filings.",
    "category": "fundraising",
    "use_cases": [
      "private-placement deal flow monitoring",
      "alert wealth desks when new LP funds file",
      "map fundraising trends across industry groups",
      "reg-tech screening exempt offerings for compliance",
      "assistant summaries of today’s Form D filings"
    ],
    "parameters": {
      "required": {
        "page": "A zero-based integer page index for paginated endpoints. Example: 2 to return the third page of results, given the configured `limit`. (Integer, optional; defaults to 0)",
        "limit": "An integer cap on the number of results returned by the endpoint. Example: 50 to restrict output to the top 50 matches. Must be ≥1 and ≤1000. (Integer, optional; defaults to 100)"
      },
      "optional": {
        "cik": "The nine-digit Central Index Key assigned by the SEC, used to filter or look up specific filers. Example: \"0000320193\" for Apple Inc. (String, optional)"
      }
    },
    "response_example": {
      "cik": "The Central Index Key, a unique nine-digit identifier assigned by the SEC to entities. Example: \"0001454889\". (String)",
      "companyName": "The registered legal name of the company. Example: \"Apple Inc.\". (String)",
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "filingDate": "The date on which a regulatory filing was submitted (e.g., with the SEC), in ISO 8601 format. Example: \"2025-02-03\". (String, Date)",
      "acceptedDate": "The date on which a filing or document was accepted by the regulatory authority. Example: \"2025-02-03\". (String, Date)",
      "formType": "The type or designation of a regulatory filing (e.g., \"10-K\", \"10-Q\"). Example: \"10-K\". (String)",
      "formSignification": "A textual description or definition of the form type filed with regulators. Example: \"Offering Statement Amendment\". (String, optional)",
      "entityName": "The name of the entity associated with the data, such as a company or fund. Example: \"Apple Inc.\". (String)",
      "issuerStreet": "Street address for the issuer's principal office. Example: \"1614 PUGHTOWN RD\". (String, optional)",
      "issuerCity": "The city where the issuer’s headquarters is located. Example: \"San Francisco\". (String)",
      "issuerStateOrCountry": "State or country of issuer's incorporation. Example: \"CA\" for California, \"US\" for United States. (String, optional)",
      "issuerStateOrCountryDescription": "Full state or country name of issuer’s incorporation. Example: \"CALIFORNIA\". (String, optional)",
      "issuerZipCode": "Zip or postal code of issuer's address. Example: \"19460\". (String, optional)",
      "issuerPhoneNumber": "Contact phone number of the issuing company. Example: \"201-961-3356\". (String, optional)",
      "jurisdictionOfIncorporation": "Legal jurisdiction of company incorporation. Example: \"DELAWARE\". (String, optional)",
      "entityType": "The formal legal structure of the entity (e.g., Corporation, Limited Partnership, LLC). Example: \"Limited Partnership\". (String, optional)",
      "incorporatedWithinFiveYears": "Boolean indicating if an entity was incorporated within the last five years. Example: true. (Boolean, optional)",
      "yearOfIncorporation": "Year the company was legally formed. Example: 1976 for Apple Inc. (Number, company history)",
      "relatedPersonFirstName": "The first name of a person related to the securities offering or corporate action. Example: \"John\". (String)",
      "relatedPersonLastName": "The last name of a person related to the offerings or filings. Example: \"Doe\". (String)",
      "relatedPersonStreet": "Street address of the related person as listed in filings. Example: '1 Apple Park Way'. (String, compliance/audit)",
      "relatedPersonCity": "City of residence or operation for a related party (insider, major shareholder, director) disclosed in regulatory filings. Example: 'Cupertino' for an Apple executive. (String, compliance reporting)",
      "relatedPersonStateOrCountry": "State or country associated with the related person. Example: 'CA' or 'United States'. (String, compliance reporting)",
      "relatedPersonStateOrCountryDescription": "Full description of the related person's state or country. Example: 'California, United States'. (String, expanded compliance field)",
      "relatedPersonZipCode": "Postal code for the related person's address. Example: '95014' for Cupertino. (String, compliance reporting)",
      "relatedPersonRelationship": "Nature of the relationship between the reporting entity and the related person. Example: 'CEO', 'Director', or '10% Owner'. (String, required for disclosures)",
      "industryGroupType": "The broader industry group category to which the issuer belongs. Example: \"Technology\". (String)",
      "revenueRange": "Range of reported revenues for an entity (often used in private offerings or surveys). Example: null or \"$10M–$20M\". (String or Null, optional)",
      "federalExemptionsExclusions": "Any federal exemptions or exclusions applicable to the securities offering, such as Regulation D. Example: \"Regulation D\". (String)",
      "isAmendment": "Boolean flag (true/false) indicating if the filing is an amendment of a prior filing. Example: true. (Boolean, optional)",
      "dateOfFirstSale": "The official date when the first sale of the security, asset, or product occurred. Typically used in IPO or new issuance filings. (String, format: YYYY-MM-DD)",
      "durationOfOfferingIsMoreThanYear": "Boolean flag (true/false) indicating whether the securities offering period exceeds one year. Example: true. (Boolean, optional)",
      "securitiesOfferedAreOfEquityType": "Boolean flag indicating whether the securities being offered are equity (true) or debt (false). Example: true. (Boolean)",
      "isBusinessCombinationTransaction": "Boolean indicating if the transaction involves a merger, acquisition, or other business combination. Example: false. (Boolean, optional)",
      "minimumInvestmentAccepted": "Minimum investment amount accepted for a private placement or offering. Example: 100,000. (Number, optional)",
      "totalOfferingAmount": "The total dollar amount the issuer is seeking to raise in the offering. Example: 10000000. (Number)",
      "totalAmountSold": "The total dollar amount of securities sold to date in the offering. Example: 7500000. (Number)",
      "totalAmountRemaining": "The remaining dollar amount or shares available for purchase in the offering. Example: 2500000. (Number)",
      "hasNonAccreditedInvestors": "Indicates whether a security or offering allows participation by non-accredited investors (i.e., retail/non-professional investors). Value is usually true/false or 'Y'/'N'. (Boolean, optional)",
      "totalNumberAlreadyInvested": "The total dollar amount or number of shares already committed by investors. Example: 5000000. (Number)",
      "salesCommissions": "Total commissions paid to brokers or intermediaries for a capital raise/offering. Example: 0. (Number, optional)",
      "findersFees": "The total amount of finder’s fees paid in connection with a securities offering. Example: 0. (Number, optional)",
      "grossProceedsUsed": "Total proceeds from an offering that have been allocated or spent. Example: 0. (Number, optional)"
    }
  },
  {
    "name": "Equity Offering Updates API",
    "description": "The Fundraising-Latest endpoint delivers a rolling feed of Form D private-placement notices—issuer identity, offering amount, exemptions claimed, accredited-investor counts—helping capital-markets desks source deals and compliance teams track exempt offerings. Filter by **cik** for issuer-specific monitoring.",
    "category": "fundraising",
    "use_cases": [
      "source PIPE and private-fund leads",
      "rule-506 compliance audits",
      "track capital inflows to venture funds",
      "alert when existing portfolio companies raise privately",
      "assistant queries on newest private offerings"
    ],
    "parameters": {
      "required": {
        "page": "A zero-based integer page index for paginated endpoints. Example: 2 to return the third page of results, given the configured `limit`. (Integer, optional; defaults to 0)",
        "limit": "An integer cap on the number of results returned by the endpoint. Example: 50 to restrict output to the top 50 matches. Must be ≥1 and ≤1000. (Integer, optional; defaults to 100)"
      },
      "optional": {
        "cik": "The nine-digit Central Index Key assigned by the SEC, used to filter or look up specific filers. Example: \"0000320193\" for Apple Inc. (String, optional)"
      }
    },
    "response_example": {
      "cik": "The Central Index Key, a unique nine-digit identifier assigned by the SEC to entities. Example: \"0001454889\". (String)",
      "companyName": "The registered legal name of the company. Example: \"Apple Inc.\". (String)",
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "filingDate": "The date on which a regulatory filing was submitted (e.g., with the SEC), in ISO 8601 format. Example: \"2025-02-03\". (String, Date)",
      "acceptedDate": "The date on which a filing or document was accepted by the regulatory authority. Example: \"2025-02-03\". (String, Date)",
      "formType": "The type or designation of a regulatory filing (e.g., \"10-K\", \"10-Q\"). Example: \"10-K\". (String)",
      "formSignification": "A textual description or definition of the form type filed with regulators. Example: \"Offering Statement Amendment\". (String, optional)",
      "entityName": "The name of the entity associated with the data, such as a company or fund. Example: \"Apple Inc.\". (String)",
      "issuerStreet": "Street address for the issuer's principal office. Example: \"1614 PUGHTOWN RD\". (String, optional)",
      "issuerCity": "The city where the issuer’s headquarters is located. Example: \"San Francisco\". (String)",
      "issuerStateOrCountry": "State or country of issuer's incorporation. Example: \"CA\" for California, \"US\" for United States. (String, optional)",
      "issuerStateOrCountryDescription": "Full state or country name of issuer’s incorporation. Example: \"CALIFORNIA\". (String, optional)",
      "issuerZipCode": "Zip or postal code of issuer's address. Example: \"19460\". (String, optional)",
      "issuerPhoneNumber": "Contact phone number of the issuing company. Example: \"201-961-3356\". (String, optional)",
      "jurisdictionOfIncorporation": "Legal jurisdiction of company incorporation. Example: \"DELAWARE\". (String, optional)",
      "entityType": "The formal legal structure of the entity (e.g., Corporation, Limited Partnership, LLC). Example: \"Limited Partnership\". (String, optional)",
      "incorporatedWithinFiveYears": "Boolean indicating if an entity was incorporated within the last five years. Example: true. (Boolean, optional)",
      "yearOfIncorporation": "Year the company was legally formed. Example: 1976 for Apple Inc. (Number, company history)",
      "relatedPersonFirstName": "The first name of a person related to the securities offering or corporate action. Example: \"John\". (String)",
      "relatedPersonLastName": "The last name of a person related to the offerings or filings. Example: \"Doe\". (String)",
      "relatedPersonStreet": "Street address of the related person as listed in filings. Example: '1 Apple Park Way'. (String, compliance/audit)",
      "relatedPersonCity": "City of residence or operation for a related party (insider, major shareholder, director) disclosed in regulatory filings. Example: 'Cupertino' for an Apple executive. (String, compliance reporting)",
      "relatedPersonStateOrCountry": "State or country associated with the related person. Example: 'CA' or 'United States'. (String, compliance reporting)",
      "relatedPersonStateOrCountryDescription": "Full description of the related person's state or country. Example: 'California, United States'. (String, expanded compliance field)",
      "relatedPersonZipCode": "Postal code for the related person's address. Example: '95014' for Cupertino. (String, compliance reporting)",
      "relatedPersonRelationship": "Nature of the relationship between the reporting entity and the related person. Example: 'CEO', 'Director', or '10% Owner'. (String, required for disclosures)",
      "industryGroupType": "The broader industry group category to which the issuer belongs. Example: \"Technology\". (String)",
      "revenueRange": "Range of reported revenues for an entity (often used in private offerings or surveys). Example: null or \"$10M–$20M\". (String or Null, optional)",
      "federalExemptionsExclusions": "Any federal exemptions or exclusions applicable to the securities offering, such as Regulation D. Example: \"Regulation D\". (String)",
      "isAmendment": "Boolean flag (true/false) indicating if the filing is an amendment of a prior filing. Example: true. (Boolean, optional)",
      "dateOfFirstSale": "The official date when the first sale of the security, asset, or product occurred. Typically used in IPO or new issuance filings. (String, format: YYYY-MM-DD)",
      "durationOfOfferingIsMoreThanYear": "Boolean flag (true/false) indicating whether the securities offering period exceeds one year. Example: true. (Boolean, optional)",
      "securitiesOfferedAreOfEquityType": "Boolean flag indicating whether the securities being offered are equity (true) or debt (false). Example: true. (Boolean)",
      "isBusinessCombinationTransaction": "Boolean indicating if the transaction involves a merger, acquisition, or other business combination. Example: false. (Boolean, optional)",
      "minimumInvestmentAccepted": "Minimum investment amount accepted for a private placement or offering. Example: 100,000. (Number, optional)",
      "totalOfferingAmount": "The total dollar amount the issuer is seeking to raise in the offering. Example: 10000000. (Number)",
      "totalAmountSold": "The total dollar amount of securities sold to date in the offering. Example: 7500000. (Number)",
      "totalAmountRemaining": "The remaining dollar amount or shares available for purchase in the offering. Example: 2500000. (Number)",
      "hasNonAccreditedInvestors": "Indicates whether a security or offering allows participation by non-accredited investors (i.e., retail/non-professional investors). Value is usually true/false or 'Y'/'N'. (Boolean, optional)",
      "totalNumberAlreadyInvested": "The total dollar amount or number of shares already committed by investors. Example: 5000000. (Number)",
      "salesCommissions": "Total commissions paid to brokers or intermediaries for a capital raise/offering. Example: 0. (Number, optional)",
      "findersFees": "The total amount of finder’s fees paid in connection with a securities offering. Example: 0. (Number, optional)",
      "grossProceedsUsed": "Total proceeds from an offering that have been allocated or spent. Example: 0. (Number, optional)"
    }
  },
  {
    "name": "Equity Offering Search API",
    "description": "Equity Offering Search API (category: fundraising) maps a plain-language **name** to CIK and last filing date for Form D offerings—accelerating look-ups for research analysts and chatbots answering “Has NJOY done any private placements?”.",
    "category": "fundraising",
    "use_cases": [
      "entity search before drilling into filings",
      "build autocomplete suggestions in private-placement tools",
      "match press-release names to SEC identifiers",
      "populate CRM systems with issuer metadata",
      "assistant name-to-CIK conversions"
    ],
    "parameters": {
      "required": {
        "name": "A free-form string representing a full or partial company or fund name used for filtering or lookup. Example: \"Apple Inc.\" to match the exact legal name. (String, optional)"
      },
      "optional": {}
    },
    "response_example": {
      "cik": "The Central Index Key, a unique nine-digit identifier assigned by the SEC to entities. Example: \"0001454889\". (String)",
      "name": "The full legal or common name of the company. Example: \"Apple Inc.\" (String)",
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)"
    }
  },
  {
    "name": "Equity Offering Search API",
    "description": "The Fundraising-Search endpoint resolves issuer names to their private-placement filing history—returning CIK and latest Form D timestamp—so front-office teams can pivot directly to detailed offering data.",
    "category": "fundraising",
    "use_cases": [
      "front-office dashboards linking press news to filings",
      "CRM enrichment with SEC IDs",
      "compliance teams verifying issuer identity",
      "historical studies on private-placement frequency",
      "chatbots providing quick issuer look-ups"
    ],
    "parameters": {
      "required": {
        "name": "A free-form string representing a full or partial company or fund name used for filtering or lookup. Example: \"Apple Inc.\" to match the exact legal name. (String, optional)"
      },
      "optional": {}
    },
    "response_example": {
      "cik": "The Central Index Key, a unique nine-digit identifier assigned by the SEC to entities. Example: \"0001454889\". (String)",
      "name": "The full legal or common name of the company. Example: \"Apple Inc.\" (String)",
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)"
    }
  },
  {
    "name": "Equity Offering By CIK API",
    "description": "Equity Offering By CIK API (category: fundraising) delivers every Form D filing for a given **cik**—complete with offered amount, exemptions, investor counts, and related-person details—enabling fund-raise timelines, exemption-usage analytics, and chatbots answering “Detail NJOY’s 2014 private placement.”",
    "category": "fundraising",
    "use_cases": [
      "timeline visualisations of exempt offerings",
      "analyze exemption usage (Rule 506(b) vs 506(c))",
      "track total capital raised privately by issuer",
      "due-diligence on management participation",
      "assistant granular breakdown of offering terms"
    ],
    "parameters": {
      "required": {
        "cik": "The nine-digit Central Index Key assigned by the SEC, used to filter or look up specific filers. Example: \"0000320193\" for Apple Inc. (String, optional)"
      },
      "optional": {}
    },
    "response_example": {
      "cik": "The Central Index Key, a unique nine-digit identifier assigned by the SEC to entities. Example: \"0001454889\". (String)",
      "companyName": "The registered legal name of the company. Example: \"Apple Inc.\". (String)",
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "filingDate": "The date on which a regulatory filing was submitted (e.g., with the SEC), in ISO 8601 format. Example: \"2025-02-03\". (String, Date)",
      "acceptedDate": "The date on which a filing or document was accepted by the regulatory authority. Example: \"2025-02-03\". (String, Date)",
      "formType": "The type or designation of a regulatory filing (e.g., \"10-K\", \"10-Q\"). Example: \"10-K\". (String)",
      "formSignification": "A textual description or definition of the form type filed with regulators. Example: \"Offering Statement Amendment\". (String, optional)",
      "entityName": "The name of the entity associated with the data, such as a company or fund. Example: \"Apple Inc.\". (String)",
      "issuerStreet": "Street address for the issuer's principal office. Example: \"1614 PUGHTOWN RD\". (String, optional)",
      "issuerCity": "The city where the issuer’s headquarters is located. Example: \"San Francisco\". (String)",
      "issuerStateOrCountry": "State or country of issuer's incorporation. Example: \"CA\" for California, \"US\" for United States. (String, optional)",
      "issuerStateOrCountryDescription": "Full state or country name of issuer’s incorporation. Example: \"CALIFORNIA\". (String, optional)",
      "issuerZipCode": "Zip or postal code of issuer's address. Example: \"19460\". (String, optional)",
      "issuerPhoneNumber": "Contact phone number of the issuing company. Example: \"201-961-3356\". (String, optional)",
      "jurisdictionOfIncorporation": "Legal jurisdiction of company incorporation. Example: \"DELAWARE\". (String, optional)",
      "entityType": "The formal legal structure of the entity (e.g., Corporation, Limited Partnership, LLC). Example: \"Limited Partnership\". (String, optional)",
      "incorporatedWithinFiveYears": "Boolean indicating if an entity was incorporated within the last five years. Example: true. (Boolean, optional)",
      "yearOfIncorporation": "Year the company was legally formed. Example: 1976 for Apple Inc. (Number, company history)",
      "relatedPersonFirstName": "The first name of a person related to the securities offering or corporate action. Example: \"John\". (String)",
      "relatedPersonLastName": "The last name of a person related to the offerings or filings. Example: \"Doe\". (String)",
      "relatedPersonStreet": "Street address of the related person as listed in filings. Example: '1 Apple Park Way'. (String, compliance/audit)",
      "relatedPersonCity": "City of residence or operation for a related party (insider, major shareholder, director) disclosed in regulatory filings. Example: 'Cupertino' for an Apple executive. (String, compliance reporting)",
      "relatedPersonStateOrCountry": "State or country associated with the related person. Example: 'CA' or 'United States'. (String, compliance reporting)",
      "relatedPersonStateOrCountryDescription": "Full description of the related person's state or country. Example: 'California, United States'. (String, expanded compliance field)",
      "relatedPersonZipCode": "Postal code for the related person's address. Example: '95014' for Cupertino. (String, compliance reporting)",
      "relatedPersonRelationship": "Nature of the relationship between the reporting entity and the related person. Example: 'CEO', 'Director', or '10% Owner'. (String, required for disclosures)",
      "industryGroupType": "The broader industry group category to which the issuer belongs. Example: \"Technology\". (String)",
      "revenueRange": "Range of reported revenues for an entity (often used in private offerings or surveys). Example: null or \"$10M–$20M\". (String or Null, optional)",
      "federalExemptionsExclusions": "Any federal exemptions or exclusions applicable to the securities offering, such as Regulation D. Example: \"Regulation D\". (String)",
      "isAmendment": "Boolean flag (true/false) indicating if the filing is an amendment of a prior filing. Example: true. (Boolean, optional)",
      "dateOfFirstSale": "The official date when the first sale of the security, asset, or product occurred. Typically used in IPO or new issuance filings. (String, format: YYYY-MM-DD)",
      "durationOfOfferingIsMoreThanYear": "Boolean flag (true/false) indicating whether the securities offering period exceeds one year. Example: true. (Boolean, optional)",
      "securitiesOfferedAreOfEquityType": "Boolean flag indicating whether the securities being offered are equity (true) or debt (false). Example: true. (Boolean)",
      "isBusinessCombinationTransaction": "Boolean indicating if the transaction involves a merger, acquisition, or other business combination. Example: false. (Boolean, optional)",
      "minimumInvestmentAccepted": "Minimum investment amount accepted for a private placement or offering. Example: 100,000. (Number, optional)",
      "totalOfferingAmount": "The total dollar amount the issuer is seeking to raise in the offering. Example: 10000000. (Number)",
      "totalAmountSold": "The total dollar amount of securities sold to date in the offering. Example: 7500000. (Number)",
      "totalAmountRemaining": "The remaining dollar amount or shares available for purchase in the offering. Example: 2500000. (Number)",
      "hasNonAccreditedInvestors": "Indicates whether a security or offering allows participation by non-accredited investors (i.e., retail/non-professional investors). Value is usually true/false or 'Y'/'N'. (Boolean, optional)",
      "totalNumberAlreadyInvested": "The total dollar amount or number of shares already committed by investors. Example: 5000000. (Number)",
      "salesCommissions": "Total commissions paid to brokers or intermediaries for a capital raise/offering. Example: 0. (Number, optional)",
      "findersFees": "The total amount of finder’s fees paid in connection with a securities offering. Example: 0. (Number, optional)",
      "grossProceedsUsed": "Total proceeds from an offering that have been allocated or spent. Example: 0. (Number, optional)"
    }
  },
  {
    "name": "Equity Offering By CIK API",
    "description": "The Fundraising endpoint, filtered by **cik**, retrieves an issuer’s full Form D archive—year, amount raised, exemptions, and investor details—ready for private-market analytics, LP due-diligence packs, or conversational deep dives on a company’s fundraising record.",
    "category": "fundraising",
    "use_cases": [
      "LP due-diligence on fund managers’ raise history",
      "compliance review of investor counts & exemptions",
      "research on capital-raising cycles",
      "cross-referencing private vs. public funding rounds",
      "chatbots narrating issuer fundraising chronology"
    ],
    "parameters": {
      "required": {
        "cik": "The nine-digit Central Index Key assigned by the SEC, used to filter or look up specific filers. Example: \"0000320193\" for Apple Inc. (String, optional)"
      },
      "optional": {}
    },
    "response_example": {
      "cik": "The Central Index Key, a unique nine-digit identifier assigned by the SEC to entities. Example: \"0001454889\". (String)",
      "companyName": "The registered legal name of the company. Example: \"Apple Inc.\". (String)",
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "filingDate": "The date on which a regulatory filing was submitted (e.g., with the SEC), in ISO 8601 format. Example: \"2025-02-03\". (String, Date)",
      "acceptedDate": "The date on which a filing or document was accepted by the regulatory authority. Example: \"2025-02-03\". (String, Date)",
      "formType": "The type or designation of a regulatory filing (e.g., \"10-K\", \"10-Q\"). Example: \"10-K\". (String)",
      "formSignification": "A textual description or definition of the form type filed with regulators. Example: \"Offering Statement Amendment\". (String, optional)",
      "entityName": "The name of the entity associated with the data, such as a company or fund. Example: \"Apple Inc.\". (String)",
      "issuerStreet": "Street address for the issuer's principal office. Example: \"1614 PUGHTOWN RD\". (String, optional)",
      "issuerCity": "The city where the issuer’s headquarters is located. Example: \"San Francisco\". (String)",
      "issuerStateOrCountry": "State or country of issuer's incorporation. Example: \"CA\" for California, \"US\" for United States. (String, optional)",
      "issuerStateOrCountryDescription": "Full state or country name of issuer’s incorporation. Example: \"CALIFORNIA\". (String, optional)",
      "issuerZipCode": "Zip or postal code of issuer's address. Example: \"19460\". (String, optional)",
      "issuerPhoneNumber": "Contact phone number of the issuing company. Example: \"201-961-3356\". (String, optional)",
      "jurisdictionOfIncorporation": "Legal jurisdiction of company incorporation. Example: \"DELAWARE\". (String, optional)",
      "entityType": "The formal legal structure of the entity (e.g., Corporation, Limited Partnership, LLC). Example: \"Limited Partnership\". (String, optional)",
      "incorporatedWithinFiveYears": "Boolean indicating if an entity was incorporated within the last five years. Example: true. (Boolean, optional)",
      "yearOfIncorporation": "Year the company was legally formed. Example: 1976 for Apple Inc. (Number, company history)",
      "relatedPersonFirstName": "The first name of a person related to the securities offering or corporate action. Example: \"John\". (String)",
      "relatedPersonLastName": "The last name of a person related to the offerings or filings. Example: \"Doe\". (String)",
      "relatedPersonStreet": "Street address of the related person as listed in filings. Example: '1 Apple Park Way'. (String, compliance/audit)",
      "relatedPersonCity": "City of residence or operation for a related party (insider, major shareholder, director) disclosed in regulatory filings. Example: 'Cupertino' for an Apple executive. (String, compliance reporting)",
      "relatedPersonStateOrCountry": "State or country associated with the related person. Example: 'CA' or 'United States'. (String, compliance reporting)",
      "relatedPersonStateOrCountryDescription": "Full description of the related person's state or country. Example: 'California, United States'. (String, expanded compliance field)",
      "relatedPersonZipCode": "Postal code for the related person's address. Example: '95014' for Cupertino. (String, compliance reporting)",
      "relatedPersonRelationship": "Nature of the relationship between the reporting entity and the related person. Example: 'CEO', 'Director', or '10% Owner'. (String, required for disclosures)",
      "industryGroupType": "The broader industry group category to which the issuer belongs. Example: \"Technology\". (String)",
      "revenueRange": "Range of reported revenues for an entity (often used in private offerings or surveys). Example: null or \"$10M–$20M\". (String or Null, optional)",
      "federalExemptionsExclusions": "Any federal exemptions or exclusions applicable to the securities offering, such as Regulation D. Example: \"Regulation D\". (String)",
      "isAmendment": "Boolean flag (true/false) indicating if the filing is an amendment of a prior filing. Example: true. (Boolean, optional)",
      "dateOfFirstSale": "The official date when the first sale of the security, asset, or product occurred. Typically used in IPO or new issuance filings. (String, format: YYYY-MM-DD)",
      "durationOfOfferingIsMoreThanYear": "Boolean flag (true/false) indicating whether the securities offering period exceeds one year. Example: true. (Boolean, optional)",
      "securitiesOfferedAreOfEquityType": "Boolean flag indicating whether the securities being offered are equity (true) or debt (false). Example: true. (Boolean)",
      "isBusinessCombinationTransaction": "Boolean indicating if the transaction involves a merger, acquisition, or other business combination. Example: false. (Boolean, optional)",
      "minimumInvestmentAccepted": "Minimum investment amount accepted for a private placement or offering. Example: 100,000. (Number, optional)",
      "totalOfferingAmount": "The total dollar amount the issuer is seeking to raise in the offering. Example: 10000000. (Number)",
      "totalAmountSold": "The total dollar amount of securities sold to date in the offering. Example: 7500000. (Number)",
      "totalAmountRemaining": "The remaining dollar amount or shares available for purchase in the offering. Example: 2500000. (Number)",
      "hasNonAccreditedInvestors": "Indicates whether a security or offering allows participation by non-accredited investors (i.e., retail/non-professional investors). Value is usually true/false or 'Y'/'N'. (Boolean, optional)",
      "totalNumberAlreadyInvested": "The total dollar amount or number of shares already committed by investors. Example: 5000000. (Number)",
      "salesCommissions": "Total commissions paid to brokers or intermediaries for a capital raise/offering. Example: 0. (Number, optional)",
      "findersFees": "The total amount of finder’s fees paid in connection with a securities offering. Example: 0. (Number, optional)",
      "grossProceedsUsed": "Total proceeds from an offering that have been allocated or spent. Example: 0. (Number, optional)"
    }
  },
  {
    "name": "Cryptocurrency List API",
    "description": "Cryptocurrency List API (category: crypto) returns every digital asset FMP tracks—symbol, name, exchange code, ICO date, circulating and total supply—so developers can seed watchlists, validate symbols, or build dropdown selectors in trading apps.",
    "category": "crypto",
    "use_cases": [
      "populate symbol selectors in trading UIs",
      "validate user-entered crypto tickers",
      "build universe lists for back-testing strategies",
      "map token names to symbols in dashboards",
      "chatbots answering “What’s the ticker for Alien Inu?”"
    ],
    "parameters": {
      "required": {},
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "name": "The full legal or common name of the company. Example: \"Apple Inc.\" (String)",
      "exchange": "The abbreviated code or name of the exchange where the security is traded. Example: \"NASDAQ\". (String)",
      "icoDate": "The date of the Initial Coin Offering (ICO) event for a cryptocurrency or token, in ISO 8601 format. Example: \"2021-09-15\". (String, Date)",
      "circulatingSupply": "The total number of coins or tokens currently in circulation for a cryptocurrency. Example: 18000000. (Number)",
      "totalSupply": "The total maximum number of coins or tokens that will ever exist for a cryptocurrency. Example: 21000000. (Number)"
    }
  },
  {
    "name": "Cryptocurrency List API",
    "description": "The Cryptocurrency Overview endpoint delivers a master roster of all listed coins and tokens—ideal for universe scans, ICO-date filters, and entity-resolution pipelines that link marketing names to trading symbols.",
    "category": "crypto",
    "use_cases": [
      "ICO vintage analysis by year",
      "entity-resolution from marketing names to symbols",
      "screen tokens by circulating-supply status",
      "auto-complete search bars in research portals",
      "assistant look-ups of crypto identifiers"
    ],
    "parameters": {
      "required": {},
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "name": "The full legal or common name of the company. Example: \"Apple Inc.\" (String)",
      "exchange": "The abbreviated code or name of the exchange where the security is traded. Example: \"NASDAQ\". (String)",
      "icoDate": "The date of the Initial Coin Offering (ICO) event for a cryptocurrency or token, in ISO 8601 format. Example: \"2021-09-15\". (String, Date)",
      "circulatingSupply": "The total number of coins or tokens currently in circulation for a cryptocurrency. Example: 18000000. (Number)",
      "totalSupply": "The total maximum number of coins or tokens that will ever exist for a cryptocurrency. Example: 21000000. (Number)"
    }
  },
  {
    "name": "Full Cryptocurrency Quote API",
    "description": "Full Cryptocurrency Quote API (category: crypto) streams real-time quotes—price, day/52-week ranges, volume, market cap, VWAP averages—for any coin. Required **symbol** lets traders, risk dashboards, and chatbots fetch a complete market snapshot in one call.",
    "category": "crypto",
    "use_cases": [
      "live quote panels in trading platforms",
      "trigger alerts on price or volume spikes",
      "feed market-cap rank tables",
      "calculate technical indicators intraday",
      "assistant responses on current crypto stats"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "name": "The full legal or common name of the company. Example: \"Apple Inc.\" (String)",
      "price": "The last traded price or intrinsic value of the security or asset. Example: 130.75. (Number)",
      "changePercentage": "The percentage change in price or value compared to the previous close. Example: \"+0.97%\". (Number, Percentage)",
      "change": "The absolute change in price or value compared to the previous close. Example: \"+1.25\". (String)",
      "volume": "The total number of shares or contracts traded during a given period (typically daily). Example: 105000000. (Number)",
      "dayLow": "The lowest price recorded for the security during that trading day. Example: 129.50. (Number)",
      "dayHigh": "The highest price recorded for the security during that trading day. Example: 131.00. (Number)",
      "yearHigh": "The highest price recorded for the security over the trailing 52-week period. Example: 150.25. (Number)",
      "yearLow": "The lowest price recorded for the security over the trailing 52-week period. Example: 110.25. (Number)",
      "marketCap": "The market capitalization of the company, calculated as share price multiplied by total shares outstanding. Example: \"None\" or 1500000000000 (1.5 trillion). (Number or String)",
      "priceAvg50": "The 50-day moving average price of the security. Example: 127.50. (Number)",
      "priceAvg200": "The 200-day moving average price of the security. Example: 125.75. (Number)",
      "exchange": "The abbreviated code or name of the exchange where the security is traded. Example: \"NASDAQ\". (String)",
      "open": "The opening price of the security at the start of the trading session. Example: 130.00. (Number)",
      "previousClose": "The closing price of the security from the prior trading session. Example: 129.50. (Number)",
      "timestamp": "The exact timestamp of the data point, typically in Unix epoch time. Example: 1629475200. (Number)"
    }
  },
  {
    "name": "Full Cryptocurrency Quote API",
    "description": "The full-detail crypto quote endpoint delivers everything from open, high, low, close to 50-/200-day averages, supporting real-time dashboards, valuation models, and compliance marks to market.",
    "category": "crypto",
    "use_cases": [
      "valuation models using live prices",
      "heat-map dashboards of crypto movers",
      "risk engines marking collateral to market",
      "technical-analysis charting libraries",
      "chatbots giving comprehensive quote breakdowns"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "name": "The full legal or common name of the company. Example: \"Apple Inc.\" (String)",
      "price": "The last traded price or intrinsic value of the security or asset. Example: 130.75. (Number)",
      "changePercentage": "The percentage change in price or value compared to the previous close. Example: \"+0.97%\". (Number, Percentage)",
      "change": "The absolute change in price or value compared to the previous close. Example: \"+1.25\". (String)",
      "volume": "The total number of shares or contracts traded during a given period (typically daily). Example: 105000000. (Number)",
      "dayLow": "The lowest price recorded for the security during that trading day. Example: 129.50. (Number)",
      "dayHigh": "The highest price recorded for the security during that trading day. Example: 131.00. (Number)",
      "yearHigh": "The highest price recorded for the security over the trailing 52-week period. Example: 150.25. (Number)",
      "yearLow": "The lowest price recorded for the security over the trailing 52-week period. Example: 110.25. (Number)",
      "marketCap": "The market capitalization of the company, calculated as share price multiplied by total shares outstanding. Example: \"None\" or 1500000000000 (1.5 trillion). (Number or String)",
      "priceAvg50": "The 50-day moving average price of the security. Example: 127.50. (Number)",
      "priceAvg200": "The 200-day moving average price of the security. Example: 125.75. (Number)",
      "exchange": "The abbreviated code or name of the exchange where the security is traded. Example: \"NASDAQ\". (String)",
      "open": "The opening price of the security at the start of the trading session. Example: 130.00. (Number)",
      "previousClose": "The closing price of the security from the prior trading session. Example: 129.50. (Number)",
      "timestamp": "The exact timestamp of the data point, typically in Unix epoch time. Example: 1629475200. (Number)"
    }
  },
  {
    "name": "Cryptocurrency Quote Short API",
    "description": "Cryptocurrency Quote Short API (category: crypto) returns only price, raw change, and volume for latency-sensitive screens. Pass **symbol** to power tickers, IoT devices, or chatbots needing rapid, low-payload updates.",
    "category": "crypto",
    "use_cases": [
      "scrolling marquee tickers",
      "mobile push notifications",
      "smartwatch price widgets",
      "bandwidth-constrained dashboards",
      "assistant quick-fire price checks"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "price": "The last traded price or intrinsic value of the security or asset. Example: 130.75. (Number)",
      "change": "The absolute change in price or value compared to the previous close. Example: \"+1.25\". (String)",
      "volume": "The total number of shares or contracts traded during a given period (typically daily). Example: 105000000. (Number)"
    }
  },
  {
    "name": "Cryptocurrency Quote Short API",
    "description": "The Quick Quote endpoint strips data to the essentials—price, change, volume—ideal for high-frequency polling, embedded devices, or cost-optimised API usage where full quote detail isn’t required.",
    "category": "crypto",
    "use_cases": [
      "update LED boards with crypto prices",
      "reduce bandwidth on high-refresh watchlists",
      "fallback feed when full quotes are unavailable",
      "SMS or voicebot price responses",
      "assistant terse market summaries"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "price": "The last traded price or intrinsic value of the security or asset. Example: 130.75. (Number)",
      "change": "The absolute change in price or value compared to the previous close. Example: \"+1.25\". (String)",
      "volume": "The total number of shares or contracts traded during a given period (typically daily). Example: 105000000. (Number)"
    }
  },
  {
    "name": "All Cryptocurrencies Quotes API",
    "description": "All Cryptocurrencies Quotes API (category: crypto) delivers a batch feed of live prices for every tracked coin. Toggle **short**=true for lean payloads. Perfect for market-wide heat maps, portfolio valuation engines, and chatbots answering “Show today’s crypto movers.”",
    "category": "crypto",
    "use_cases": [
      "bulk refresh of price caches",
      "heat-map visualisations of market performance",
      "portfolio valuation across multiple assets",
      "identify top gainers/losers programmatically",
      "assistant summaries of broad crypto moves"
    ],
    "parameters": {
      "required": {
        "short": "A Boolean or flag string indicating whether to return a compact or abbreviated set of fields. Example: true to retrieve only key metrics (symbol, price). (Boolean or String, optional)"
      },
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "price": "The last traded price or intrinsic value of the security or asset. Example: 130.75. (Number)",
      "change": "The absolute change in price or value compared to the previous close. Example: \"+1.25\". (String)",
      "volume": "The total number of shares or contracts traded during a given period (typically daily). Example: 105000000. (Number)"
    }
  },
  {
    "name": "All Cryptocurrencies Quotes API",
    "description": "The Batch-Crypto-Quotes endpoint streams real-time prices for the entire coin universe in one call—supporting screener grids, risk systems ingesting cross-asset prices, and voice assistants delivering market overviews.",
    "category": "crypto",
    "use_cases": [
      "market screener grids",
      "risk dashboards needing synchronous price snaps",
      "update multi-asset data lakes nightly",
      "identify liquidity across alt-coins",
      "assistant broad market reports"
    ],
    "parameters": {
      "required": {
        "short": "A Boolean or flag string indicating whether to return a compact or abbreviated set of fields. Example: true to retrieve only key metrics (symbol, price). (Boolean or String, optional)"
      },
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "price": "The last traded price or intrinsic value of the security or asset. Example: 130.75. (Number)",
      "change": "The absolute change in price or value compared to the previous close. Example: \"+1.25\". (String)",
      "volume": "The total number of shares or contracts traded during a given period (typically daily). Example: 105000000. (Number)"
    }
  },
  {
    "name": "Historical Cryptocurrency Light Chart API",
    "description": "Historical Crypto Light Chart API (category: crypto) provides daily close and volume—no OHLC—for quick trend checks. Required **symbol**, optional **from**/​**to** (≤ 90 days). Use it in low-bandwidth dashboards or chatbots answering “What did Bitcoin close at yesterday?”.",
    "category": "crypto",
    "use_cases": [
      "sparkline charts in emails",
      "bandwidth-sensitive mobile apps",
      "train ML models on closing prices",
      "quick look-ups of recent daily closes",
      "assistant responses on daily closing price"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {
        "from": "The ISO 8601 date (YYYY-MM-DD) indicating the start of a time range filter. Example: \"2025-01-01\" to include only data from January 1, 2025 onward. Must be ≤ `to`. (String, Date, optional)",
        "to": "The ISO 8601 date (YYYY-MM-DD) indicating the end of a time range filter. Example: \"2025-12-31\" to include only data up to December 31, 2025. Must be ≥ `from`. (String, Date, optional)"
      }
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "price": "The last traded price or intrinsic value of the security or asset. Example: 130.75. (Number)",
      "volume": "The total number of shares or contracts traded during a given period (typically daily). Example: 105000000. (Number)"
    }
  },
  {
    "name": "Historical Cryptocurrency Light Chart API",
    "description": "The Light Historical EOD endpoint pares history to date, close, and volume—optimised for speed and minimal storage. Great for watchlist backfills, IoT devices, and quickly plotting price curves.",
    "category": "crypto",
    "use_cases": [
      "IoT displays needing small data sets",
      "simple performance charts in dashboards",
      "lightweight back-tests focused on closes",
      "client newsletters with price snapshots",
      "assistant quick historical price answers"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {
        "from": "The ISO 8601 date (YYYY-MM-DD) indicating the start of a time range filter. Example: \"2025-01-01\" to include only data from January 1, 2025 onward. Must be ≤ `to`. (String, Date, optional)",
        "to": "The ISO 8601 date (YYYY-MM-DD) indicating the end of a time range filter. Example: \"2025-12-31\" to include only data up to December 31, 2025. Must be ≥ `from`. (String, Date, optional)"
      }
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "price": "The last traded price or intrinsic value of the security or asset. Example: 130.75. (Number)",
      "volume": "The total number of shares or contracts traded during a given period (typically daily). Example: 105000000. (Number)"
    }
  },
  {
    "name": "Historical Cryptocurrency Full Chart API",
    "description": "Historical Crypto Full Chart API (category: crypto) returns complete daily bars—open, high, low, close, volume, change %, VWAP—supporting technical analysis, volatility models, and chatbots answering “Show Bitcoin’s OHLC for Feb 4 2025.”",
    "category": "crypto",
    "use_cases": [
      "back-test trading strategies",
      "derive technical indicators (RSI, MACD)",
      "risk models using OHLCV history",
      "generate candlestick charts",
      "assistant full-bar data look-ups"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {
        "from": "The ISO 8601 date (YYYY-MM-DD) indicating the start of a time range filter. Example: \"2025-01-01\" to include only data from January 1, 2025 onward. Must be ≤ `to`. (String, Date, optional)",
        "to": "The ISO 8601 date (YYYY-MM-DD) indicating the end of a time range filter. Example: \"2025-12-31\" to include only data up to December 31, 2025. Must be ≥ `from`. (String, Date, optional)"
      }
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "open": "The opening price of the security at the start of the trading session. Example: 130.00. (Number)",
      "high": "The highest intraday price recorded for the security. Example: 131.25. (Number)",
      "low": "The lowest intraday price recorded for the security. Example: 129.75. (Number)",
      "close": "The closing price of the security at the end of the trading session. Example: 130.75. (Number)",
      "volume": "The total number of shares or contracts traded during a given period (typically daily). Example: 105000000. (Number)",
      "change": "The absolute change in price or value compared to the previous close. Example: \"+1.25\". (String)",
      "changePercent": "The percentage change in value over a specified period, such as daily or yearly. Example: 2.5. (Number, Percentage)",
      "vwap": "The Volume-Weighted Average Price, representing the average price at which the security traded weighted by volume. Example: 130.82. (Number)"
    }
  },
  {
    "name": "Historical Cryptocurrency Full Chart API",
    "description": "The Full EOD crypto history endpoint supplies granular OHLCV plus derived metrics (change, VWAP) for robust analytics, compliance archives, and portfolio-level performance studies.",
    "category": "crypto",
    "use_cases": [
      "volatility and beta calculations",
      "portfolio attribution versus benchmarks",
      "reg-tech audit trails of historical marks",
      "educational materials on long-term trends",
      "assistant narratives of historical moves"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {
        "from": "The ISO 8601 date (YYYY-MM-DD) indicating the start of a time range filter. Example: \"2025-01-01\" to include only data from January 1, 2025 onward. Must be ≤ `to`. (String, Date, optional)",
        "to": "The ISO 8601 date (YYYY-MM-DD) indicating the end of a time range filter. Example: \"2025-12-31\" to include only data up to December 31, 2025. Must be ≥ `from`. (String, Date, optional)"
      }
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "open": "The opening price of the security at the start of the trading session. Example: 130.00. (Number)",
      "high": "The highest intraday price recorded for the security. Example: 131.25. (Number)",
      "low": "The lowest intraday price recorded for the security. Example: 129.75. (Number)",
      "close": "The closing price of the security at the end of the trading session. Example: 130.75. (Number)",
      "volume": "The total number of shares or contracts traded during a given period (typically daily). Example: 105000000. (Number)",
      "change": "The absolute change in price or value compared to the previous close. Example: \"+1.25\". (String)",
      "changePercent": "The percentage change in value over a specified period, such as daily or yearly. Example: 2.5. (Number, Percentage)",
      "vwap": "The Volume-Weighted Average Price, representing the average price at which the security traded weighted by volume. Example: 130.82. (Number)"
    }
  },
  {
    "name": "1-Minute Interval Cryptocurrency Data API",
    "description": "1-Minute Crypto Chart API (category: crypto) streams intraday OHLCV bars every 60 seconds. Required **symbol**, optional **from**/​**to** (≤ 90 days). Use it for high-frequency dashboards, algorithmic back-tests, and chatbots answering “What did Bitcoin print at 19:28?”.",
    "category": "crypto",
    "use_cases": [
      "high-frequency trading strategy design",
      "real-time alert engines on micro moves",
      "intraday VWAP calculations",
      "replay sessions for AI training",
      "assistant minute-level bar look-ups"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {
        "from": "The ISO 8601 date (YYYY-MM-DD) indicating the start of a time range filter. Example: \"2025-01-01\" to include only data from January 1, 2025 onward. Must be ≤ `to`. (String, Date, optional)",
        "to": "The ISO 8601 date (YYYY-MM-DD) indicating the end of a time range filter. Example: \"2025-12-31\" to include only data up to December 31, 2025. Must be ≥ `from`. (String, Date, optional)"
      }
    },
    "response_example": {
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "open": "The opening price of the security at the start of the trading session. Example: 130.00. (Number)",
      "low": "The lowest intraday price recorded for the security. Example: 129.75. (Number)",
      "high": "The highest intraday price recorded for the security. Example: 131.25. (Number)",
      "close": "The closing price of the security at the end of the trading session. Example: 130.75. (Number)",
      "volume": "The total number of shares or contracts traded during a given period (typically daily). Example: 105000000. (Number)"
    }
  },
  {
    "name": "1-Minute Interval Cryptocurrency Data API",
    "description": "The 1-Minute Intraday endpoint offers fine-grained data for scalpers and latency-sensitive models, balancing resolution with payload size for precise execution analysis.",
    "category": "crypto",
    "use_cases": [
      "scalping dashboards",
      "execution quality benchmarks",
      "micro-pattern machine-learning research",
      "study order-book slippage vs. bar prints",
      "assistant providing recent minute bars"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {
        "from": "The ISO 8601 date (YYYY-MM-DD) indicating the start of a time range filter. Example: \"2025-01-01\" to include only data from January 1, 2025 onward. Must be ≤ `to`. (String, Date, optional)",
        "to": "The ISO 8601 date (YYYY-MM-DD) indicating the end of a time range filter. Example: \"2025-12-31\" to include only data up to December 31, 2025. Must be ≥ `from`. (String, Date, optional)"
      }
    },
    "response_example": {
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "open": "The opening price of the security at the start of the trading session. Example: 130.00. (Number)",
      "low": "The lowest intraday price recorded for the security. Example: 129.75. (Number)",
      "high": "The highest intraday price recorded for the security. Example: 131.25. (Number)",
      "close": "The closing price of the security at the end of the trading session. Example: 130.75. (Number)",
      "volume": "The total number of shares or contracts traded during a given period (typically daily). Example: 105000000. (Number)"
    }
  },
  {
    "name": "5-Minute Interval Cryptocurrency Data API",
    "description": "5-Minute Crypto Chart API (category: crypto) aggregates tick data into five-minute OHLCV bars—ideal for intraday swing-trade analysis, VWAP benchmarks, and chatbots answering “Show me Bitcoin’s last 5-minute candle.”",
    "category": "crypto",
    "use_cases": [
      "intraday swing-trading back-tests",
      "compute 5-minute VWAP",
      "plot short-term candlestick charts",
      "risk dashboards monitoring rapid shifts",
      "assistant quick 5-minute summaries"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {
        "from": "The ISO 8601 date (YYYY-MM-DD) indicating the start of a time range filter. Example: \"2025-01-01\" to include only data from January 1, 2025 onward. Must be ≤ `to`. (String, Date, optional)",
        "to": "The ISO 8601 date (YYYY-MM-DD) indicating the end of a time range filter. Example: \"2025-12-31\" to include only data up to December 31, 2025. Must be ≥ `from`. (String, Date, optional)"
      }
    },
    "response_example": {
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "open": "The opening price of the security at the start of the trading session. Example: 130.00. (Number)",
      "low": "The lowest intraday price recorded for the security. Example: 129.75. (Number)",
      "high": "The highest intraday price recorded for the security. Example: 131.25. (Number)",
      "close": "The closing price of the security at the end of the trading session. Example: 130.75. (Number)",
      "volume": "The total number of shares or contracts traded during a given period (typically daily). Example: 105000000. (Number)"
    }
  },
  {
    "name": "5-Minute Interval Cryptocurrency Data API",
    "description": "The 5-Minute Intraday endpoint balances detail and payload—suitable for real-time dashboards, volatility atlases, and conversational interfaces summarising short-term moves.",
    "category": "crypto",
    "use_cases": [
      "volatility atlases for option pricing",
      "reduce storage versus 1-minute feed",
      "detect breakout patterns in near real time",
      "update small-timeframe indicators",
      "assistant delivering last five-minute bar"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {
        "from": "The ISO 8601 date (YYYY-MM-DD) indicating the start of a time range filter. Example: \"2025-01-01\" to include only data from January 1, 2025 onward. Must be ≤ `to`. (String, Date, optional)",
        "to": "The ISO 8601 date (YYYY-MM-DD) indicating the end of a time range filter. Example: \"2025-12-31\" to include only data up to December 31, 2025. Must be ≥ `from`. (String, Date, optional)"
      }
    },
    "response_example": {
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "open": "The opening price of the security at the start of the trading session. Example: 130.00. (Number)",
      "low": "The lowest intraday price recorded for the security. Example: 129.75. (Number)",
      "high": "The highest intraday price recorded for the security. Example: 131.25. (Number)",
      "close": "The closing price of the security at the end of the trading session. Example: 130.75. (Number)",
      "volume": "The total number of shares or contracts traded during a given period (typically daily). Example: 105000000. (Number)"
    }
  },
  {
    "name": "1-Hour Interval Cryptocurrency Data API",
    "description": "1-Hour Crypto Chart API (category: crypto) provides hourly OHLCV bars, supporting swing-trade dashboards, mid-term strategy testing, and chatbots answering “Where did Bitcoin close in the 19:00 hour?”.",
    "category": "crypto",
    "use_cases": [
      "swing-trading strategy design",
      "calculate rolling hourly volatility",
      "overlay hourly on daily charts for context",
      "replay hourly trend change points",
      "assistant hourly bar look-ups"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {
        "from": "The ISO 8601 date (YYYY-MM-DD) indicating the start of a time range filter. Example: \"2025-01-01\" to include only data from January 1, 2025 onward. Must be ≤ `to`. (String, Date, optional)",
        "to": "The ISO 8601 date (YYYY-MM-DD) indicating the end of a time range filter. Example: \"2025-12-31\" to include only data up to December 31, 2025. Must be ≥ `from`. (String, Date, optional)"
      }
    },
    "response_example": {
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "open": "The opening price of the security at the start of the trading session. Example: 130.00. (Number)",
      "low": "The lowest intraday price recorded for the security. Example: 129.75. (Number)",
      "high": "The highest intraday price recorded for the security. Example: 131.25. (Number)",
      "close": "The closing price of the security at the end of the trading session. Example: 130.75. (Number)",
      "volume": "The total number of shares or contracts traded during a given period (typically daily). Example: 105000000. (Number)"
    }
  },
  {
    "name": "1-Hour Interval Cryptocurrency Data API",
    "description": "The Hourly Intraday endpoint aggregates trades into 60-minute bars—balancing granularity and data volume—ideal for session-structure studies, options gamma models, and conversational hourly summaries.",
    "category": "crypto",
    "use_cases": [
      "session-structure analysis",
      "gamma exposure models needing hour bars",
      "reduce data storage vs. minute data",
      "client reports on intraday hourly trends",
      "assistant hourly trend explanations"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {
        "from": "The ISO 8601 date (YYYY-MM-DD) indicating the start of a time range filter. Example: \"2025-01-01\" to include only data from January 1, 2025 onward. Must be ≤ `to`. (String, Date, optional)",
        "to": "The ISO 8601 date (YYYY-MM-DD) indicating the end of a time range filter. Example: \"2025-12-31\" to include only data up to December 31, 2025. Must be ≥ `from`. (String, Date, optional)"
      }
    },
    "response_example": {
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "open": "The opening price of the security at the start of the trading session. Example: 130.00. (Number)",
      "low": "The lowest intraday price recorded for the security. Example: 129.75. (Number)",
      "high": "The highest intraday price recorded for the security. Example: 131.25. (Number)",
      "close": "The closing price of the security at the end of the trading session. Example: 130.75. (Number)",
      "volume": "The total number of shares or contracts traded during a given period (typically daily). Example: 105000000. (Number)"
    }
  },
  {
    "name": "Forex Currency Pairs API",
    "description": "Forex Currency Pairs API (category: forex) returns a master list of every FX pair FMP tracks—symbol, ISO currency codes, and descriptive names—so developers can seed dropdowns, validate symbols, and build universe scans for systematic strategies.",
    "category": "forex",
    "use_cases": [
      "auto-complete search boxes for FX tickers",
      "validate user-inputted pairs before quote calls",
      "generate watch-list universes for back-tests",
      "map ISO codes to friendly names in dashboards",
      "chatbots answering “What’s the code for Argentine peso vs. Mexican peso?”"
    ],
    "parameters": {
      "required": {},
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "fromCurrency": "The source currency code in a currency pair, such as \"USD\" in \"USD/EUR\". Example: \"USD\". (String)",
      "toCurrency": "The target currency code in a currency pair, such as \"EUR\" in \"USD/EUR\". Example: \"EUR\". (String)",
      "fromName": "The full name of the source currency. Example: \"US Dollar\". (String)",
      "toName": "The full name of the target currency. Example: \"Euro\". (String)"
    }
  },
  {
    "name": "Forex Currency Pairs API",
    "description": "The forex-list endpoint supplies a complete roster of tradable pairs—critical for universe construction, symbol validation, and research portals needing a searchable directory of currency crosses.",
    "category": "forex",
    "use_cases": [
      "construct pair universes for factor models",
      "database seeding with valid FX symbols",
      "build filters by base or quote currency",
      "educational apps listing all tradable crosses",
      "assistant look-ups of pair identifiers"
    ],
    "parameters": {
      "required": {},
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "fromCurrency": "The source currency code in a currency pair, such as \"USD\" in \"USD/EUR\". Example: \"USD\". (String)",
      "toCurrency": "The target currency code in a currency pair, such as \"EUR\" in \"USD/EUR\". Example: \"EUR\". (String)",
      "fromName": "The full name of the source currency. Example: \"US Dollar\". (String)",
      "toName": "The full name of the target currency. Example: \"Euro\". (String)"
    }
  },
  {
    "name": "Forex Quote API",
    "description": "Forex Quote API (category: forex) delivers full-detail, real-time quotes for any currency pair—price, day range, 52-week highs/lows, volume, and averages. Required **symbol** parameter fuels live trading dashboards, risk engines, and chatbots replying “Where is EUR/USD trading now?”.",
    "category": "forex",
    "use_cases": [
      "live FX rate panels in trading terminals",
      "trigger alerts on price breaches",
      "feed fair-value models with current spot",
      "display intraday stats in research portals",
      "assistant responses on current FX quotes"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "name": "The full legal or common name of the company. Example: \"Apple Inc.\" (String)",
      "price": "The last traded price or intrinsic value of the security or asset. Example: 130.75. (Number)",
      "changePercentage": "The percentage change in price or value compared to the previous close. Example: \"+0.97%\". (Number, Percentage)",
      "change": "The absolute change in price or value compared to the previous close. Example: \"+1.25\". (String)",
      "volume": "The total number of shares or contracts traded during a given period (typically daily). Example: 105000000. (Number)",
      "dayLow": "The lowest price recorded for the security during that trading day. Example: 129.50. (Number)",
      "dayHigh": "The highest price recorded for the security during that trading day. Example: 131.00. (Number)",
      "yearHigh": "The highest price recorded for the security over the trailing 52-week period. Example: 150.25. (Number)",
      "yearLow": "The lowest price recorded for the security over the trailing 52-week period. Example: 110.25. (Number)",
      "marketCap": "The market capitalization of the company, calculated as share price multiplied by total shares outstanding. Example: \"None\" or 1500000000000 (1.5 trillion). (Number or String)",
      "priceAvg50": "The 50-day moving average price of the security. Example: 127.50. (Number)",
      "priceAvg200": "The 200-day moving average price of the security. Example: 125.75. (Number)",
      "exchange": "The abbreviated code or name of the exchange where the security is traded. Example: \"NASDAQ\". (String)",
      "open": "The opening price of the security at the start of the trading session. Example: 130.00. (Number)",
      "previousClose": "The closing price of the security from the prior trading session. Example: 129.50. (Number)",
      "timestamp": "The exact timestamp of the data point, typically in Unix epoch time. Example: 1629475200. (Number)"
    }
  },
  {
    "name": "Forex Quote API",
    "description": "The real-time Forex Quote endpoint outputs a complete market snapshot—open, high, low, close, change %, volume—empowering charting tools, valuation spreadsheets, and compliance marks-to-market.",
    "category": "forex",
    "use_cases": [
      "charting libraries needing OHLC + volume",
      "valuation sheets refreshing live spot rates",
      "risk dashboards calculating VaR in real time",
      "mobile apps summarising market stats",
      "assistant full-detail quote breakdowns"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "name": "The full legal or common name of the company. Example: \"Apple Inc.\" (String)",
      "price": "The last traded price or intrinsic value of the security or asset. Example: 130.75. (Number)",
      "changePercentage": "The percentage change in price or value compared to the previous close. Example: \"+0.97%\". (Number, Percentage)",
      "change": "The absolute change in price or value compared to the previous close. Example: \"+1.25\". (String)",
      "volume": "The total number of shares or contracts traded during a given period (typically daily). Example: 105000000. (Number)",
      "dayLow": "The lowest price recorded for the security during that trading day. Example: 129.50. (Number)",
      "dayHigh": "The highest price recorded for the security during that trading day. Example: 131.00. (Number)",
      "yearHigh": "The highest price recorded for the security over the trailing 52-week period. Example: 150.25. (Number)",
      "yearLow": "The lowest price recorded for the security over the trailing 52-week period. Example: 110.25. (Number)",
      "marketCap": "The market capitalization of the company, calculated as share price multiplied by total shares outstanding. Example: \"None\" or 1500000000000 (1.5 trillion). (Number or String)",
      "priceAvg50": "The 50-day moving average price of the security. Example: 127.50. (Number)",
      "priceAvg200": "The 200-day moving average price of the security. Example: 125.75. (Number)",
      "exchange": "The abbreviated code or name of the exchange where the security is traded. Example: \"NASDAQ\". (String)",
      "open": "The opening price of the security at the start of the trading session. Example: 130.00. (Number)",
      "previousClose": "The closing price of the security from the prior trading session. Example: 129.50. (Number)",
      "timestamp": "The exact timestamp of the data point, typically in Unix epoch time. Example: 1629475200. (Number)"
    }
  },
  {
    "name": "Forex Short Quote API",
    "description": "Forex Short Quote API (category: forex) offers a lean payload—price, raw change, and volume—ideal for high-refresh tickers, mobile widgets, or chatbots requiring ultra-fast responses.",
    "category": "forex",
    "use_cases": [
      "scrolling FX tickers on websites",
      "bandwidth-constrained mobile apps",
      "push notifications on price moves",
      "IoT devices displaying exchange rates",
      "assistant quick-fire FX rate answers"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "price": "The last traded price or intrinsic value of the security or asset. Example: 130.75. (Number)",
      "change": "The absolute change in price or value compared to the previous close. Example: \"+1.25\". (String)",
      "volume": "The total number of shares or contracts traded during a given period (typically daily). Example: 105000000. (Number)"
    }
  },
  {
    "name": "Forex Short Quote API",
    "description": "The quote-short endpoint strips real-time FX data to its essentials—supporting latency-sensitive dashboards, cost-efficient polling, and lightweight embeds where full quote detail isn’t needed.",
    "category": "forex",
    "use_cases": [
      "widget embeds in blogs or CMS",
      "smartwatch FX price complications",
      "reduce API usage costs on high-frequency lists",
      "fallback feed during heavy load",
      "assistant terse rate snapshots"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "price": "The last traded price or intrinsic value of the security or asset. Example: 130.75. (Number)",
      "change": "The absolute change in price or value compared to the previous close. Example: \"+1.25\". (String)",
      "volume": "The total number of shares or contracts traded during a given period (typically daily). Example: 105000000. (Number)"
    }
  },
  {
    "name": "Batch Forex Quotes API",
    "description": "Batch Forex Quotes API (category: forex) returns live prices for the entire FX universe in one call. Toggle **short**=true for compact objects. Use it in screener grids, risk dashboards, and chatbots summarising broad currency moves.",
    "category": "forex",
    "use_cases": [
      "market-wide heat maps of FX performance",
      "bulk refresh of rate caches in databases",
      "identify top movers across currencies",
      "portfolio valuation across multiple pairs",
      "assistant overviews of FX market direction"
    ],
    "parameters": {
      "required": {
        "short": "A Boolean or flag string indicating whether to return a compact or abbreviated set of fields. Example: true to retrieve only key metrics (symbol, price). (Boolean or String, optional)"
      },
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "price": "The last traded price or intrinsic value of the security or asset. Example: 130.75. (Number)",
      "change": "The absolute change in price or value compared to the previous close. Example: \"+1.25\". (String)",
      "volume": "The total number of shares or contracts traded during a given period (typically daily). Example: 105000000. (Number)"
    }
  },
  {
    "name": "Batch Forex Quotes API",
    "description": "The batch-forex-quotes endpoint streams real-time rates for every tracked pair—perfect for risk engines, multi-asset dashboards, and mobile apps needing synchronous snapshots of global FX.",
    "category": "forex",
    "use_cases": [
      "risk engines ingesting cross-pair prices",
      "data vendors exporting daily FX files",
      "identify correlation clusters across currencies",
      "generate world-map currency heat charts",
      "chatbots returning batch rate summaries"
    ],
    "parameters": {
      "required": {
        "short": "A Boolean or flag string indicating whether to return a compact or abbreviated set of fields. Example: true to retrieve only key metrics (symbol, price). (Boolean or String, optional)"
      },
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "price": "The last traded price or intrinsic value of the security or asset. Example: 130.75. (Number)",
      "change": "The absolute change in price or value compared to the previous close. Example: \"+1.25\". (String)",
      "volume": "The total number of shares or contracts traded during a given period (typically daily). Example: 105000000. (Number)"
    }
  },
  {
    "name": "Historical Forex Light Chart API",
    "description": "Historical Forex Light Chart API (category: forex) supplies end-of-day close and volume only—optimised for quick trend checks and low-bandwidth applications. Required **symbol**; optional **from**/**to** (≤ 90 days).",
    "category": "forex",
    "use_cases": [
      "sparkline charts in emails",
      "lightweight back-tests based on closes",
      "mobile apps needing minimal historical data",
      "generate quick performance stats",
      "assistant answers on recent daily closes"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {
        "from": "The ISO 8601 date (YYYY-MM-DD) indicating the start of a time range filter. Example: \"2025-01-01\" to include only data from January 1, 2025 onward. Must be ≤ `to`. (String, Date, optional)",
        "to": "The ISO 8601 date (YYYY-MM-DD) indicating the end of a time range filter. Example: \"2025-12-31\" to include only data up to December 31, 2025. Must be ≥ `from`. (String, Date, optional)"
      }
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "price": "The last traded price or intrinsic value of the security or asset. Example: 130.75. (Number)",
      "volume": "The total number of shares or contracts traded during a given period (typically daily). Example: 105000000. (Number)"
    }
  },
  {
    "name": "Historical Forex Light Chart API",
    "description": "The light EOD history endpoint pares data to date, close, and volume—ideal for watch-list backfills, IoT devices, or quick visualisations without full OHLC detail.",
    "category": "forex",
    "use_cases": [
      "IoT FX displays needing small payloads",
      "client newsletters showing daily changes",
      "simple performance analytics on closes",
      "bandwidth-sensitive dashboards",
      "assistant fast historical queries"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {
        "from": "The ISO 8601 date (YYYY-MM-DD) indicating the start of a time range filter. Example: \"2025-01-01\" to include only data from January 1, 2025 onward. Must be ≤ `to`. (String, Date, optional)",
        "to": "The ISO 8601 date (YYYY-MM-DD) indicating the end of a time range filter. Example: \"2025-12-31\" to include only data up to December 31, 2025. Must be ≥ `from`. (String, Date, optional)"
      }
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "price": "The last traded price or intrinsic value of the security or asset. Example: 130.75. (Number)",
      "volume": "The total number of shares or contracts traded during a given period (typically daily). Example: 105000000. (Number)"
    }
  },
  {
    "name": "Historical Forex Full Chart API",
    "description": "Historical Forex Full Chart API (category: forex) returns complete daily bars—open, high, low, close, volume, change %, VWAP—supporting technical analysis, volatility models, and chatbots answering “Give me EUR/USD OHLC for 4-Feb-2025.”",
    "category": "forex",
    "use_cases": [
      "calculate technical indicators (RSI, MACD)",
      "back-test breakout or mean-revert strategies",
      "build volatility and VaR models",
      "produce candlestick charts for research",
      "assistant full-bar data look-ups"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {
        "from": "The ISO 8601 date (YYYY-MM-DD) indicating the start of a time range filter. Example: \"2025-01-01\" to include only data from January 1, 2025 onward. Must be ≤ `to`. (String, Date, optional)",
        "to": "The ISO 8601 date (YYYY-MM-DD) indicating the end of a time range filter. Example: \"2025-12-31\" to include only data up to December 31, 2025. Must be ≥ `from`. (String, Date, optional)"
      }
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "open": "The opening price of the security at the start of the trading session. Example: 130.00. (Number)",
      "high": "The highest intraday price recorded for the security. Example: 131.25. (Number)",
      "low": "The lowest intraday price recorded for the security. Example: 129.75. (Number)",
      "close": "The closing price of the security at the end of the trading session. Example: 130.75. (Number)",
      "volume": "The total number of shares or contracts traded during a given period (typically daily). Example: 105000000. (Number)",
      "change": "The absolute change in price or value compared to the previous close. Example: \"+1.25\". (String)",
      "changePercent": "The percentage change in value over a specified period, such as daily or yearly. Example: 2.5. (Number, Percentage)",
      "vwap": "The Volume-Weighted Average Price, representing the average price at which the security traded weighted by volume. Example: 130.82. (Number)"
    }
  },
  {
    "name": "Historical Forex Full Chart API",
    "description": "The full EOD forex history endpoint supplies OHLCV plus derived fields, empowering quantitative research, regulatory audit trails, and portfolio attribution analyses.",
    "category": "forex",
    "use_cases": [
      "reg-tech archival of historical marks",
      "volatility surface construction",
      "portfolio attribution against FX benchmarks",
      "educational tools demonstrating OHLC dynamics",
      "assistant narratives of historical moves"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {
        "from": "The ISO 8601 date (YYYY-MM-DD) indicating the start of a time range filter. Example: \"2025-01-01\" to include only data from January 1, 2025 onward. Must be ≤ `to`. (String, Date, optional)",
        "to": "The ISO 8601 date (YYYY-MM-DD) indicating the end of a time range filter. Example: \"2025-12-31\" to include only data up to December 31, 2025. Must be ≥ `from`. (String, Date, optional)"
      }
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "open": "The opening price of the security at the start of the trading session. Example: 130.00. (Number)",
      "high": "The highest intraday price recorded for the security. Example: 131.25. (Number)",
      "low": "The lowest intraday price recorded for the security. Example: 129.75. (Number)",
      "close": "The closing price of the security at the end of the trading session. Example: 130.75. (Number)",
      "volume": "The total number of shares or contracts traded during a given period (typically daily). Example: 105000000. (Number)",
      "change": "The absolute change in price or value compared to the previous close. Example: \"+1.25\". (String)",
      "changePercent": "The percentage change in value over a specified period, such as daily or yearly. Example: 2.5. (Number, Percentage)",
      "vwap": "The Volume-Weighted Average Price, representing the average price at which the security traded weighted by volume. Example: 130.82. (Number)"
    }
  },
  {
    "name": "1-Minute Interval Forex Chart API",
    "description": "1-Minute Forex Chart API (category: forex) streams intraday OHLCV bars every 60 seconds. Required **symbol**, optional **from**/**to**. Perfect for high-frequency dashboards, scalping strategy back-tests, and chatbots answering “What was EUR/USD at 19:29?”.",
    "category": "forex",
    "use_cases": [
      "high-frequency trading analytics",
      "real-time alert engines on micro moves",
      "intraday VWAP calculations",
      "replay sessions for AI model training",
      "assistant minute-level bar look-ups"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {
        "from": "The ISO 8601 date (YYYY-MM-DD) indicating the start of a time range filter. Example: \"2025-01-01\" to include only data from January 1, 2025 onward. Must be ≤ `to`. (String, Date, optional)",
        "to": "The ISO 8601 date (YYYY-MM-DD) indicating the end of a time range filter. Example: \"2025-12-31\" to include only data up to December 31, 2025. Must be ≥ `from`. (String, Date, optional)"
      }
    },
    "response_example": {
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "open": "The opening price of the security at the start of the trading session. Example: 130.00. (Number)",
      "low": "The lowest intraday price recorded for the security. Example: 129.75. (Number)",
      "high": "The highest intraday price recorded for the security. Example: 131.25. (Number)",
      "close": "The closing price of the security at the end of the trading session. Example: 130.75. (Number)",
      "volume": "The total number of shares or contracts traded during a given period (typically daily). Example: 105000000. (Number)"
    }
  },
  {
    "name": "1-Minute Interval Forex Chart API",
    "description": "The intraday 1-minute endpoint offers granular FX data for precision execution analysis and scalping strategy design, balancing detail with manageable payload size.",
    "category": "forex",
    "use_cases": [
      "scalping dashboard visualisations",
      "execution quality versus market prints",
      "micro-pattern machine-learning studies",
      "generate minute-level VWAP benchmarks",
      "assistant providing recent minute bars"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {
        "from": "The ISO 8601 date (YYYY-MM-DD) indicating the start of a time range filter. Example: \"2025-01-01\" to include only data from January 1, 2025 onward. Must be ≤ `to`. (String, Date, optional)",
        "to": "The ISO 8601 date (YYYY-MM-DD) indicating the end of a time range filter. Example: \"2025-12-31\" to include only data up to December 31, 2025. Must be ≥ `from`. (String, Date, optional)"
      }
    },
    "response_example": {
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "open": "The opening price of the security at the start of the trading session. Example: 130.00. (Number)",
      "low": "The lowest intraday price recorded for the security. Example: 129.75. (Number)",
      "high": "The highest intraday price recorded for the security. Example: 131.25. (Number)",
      "close": "The closing price of the security at the end of the trading session. Example: 130.75. (Number)",
      "volume": "The total number of shares or contracts traded during a given period (typically daily). Example: 105000000. (Number)"
    }
  },
  {
    "name": "5-Minute Interval Forex Chart API",
    "description": "5-Minute Forex Chart API (category: forex) aggregates tick data into five-minute OHLCV bars—supporting intraday swing-trade analysis, VWAP benchmarks, and chatbots answering “Show the last 5-minute candle on EUR/USD.”",
    "category": "forex",
    "use_cases": [
      "intraday swing-trading back-tests",
      "monitor support/resistance intraday",
      "plot short-term candlestick charts",
      "risk dashboards tracking rapid shifts",
      "assistant quick 5-minute summaries"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {
        "from": "The ISO 8601 date (YYYY-MM-DD) indicating the start of a time range filter. Example: \"2025-01-01\" to include only data from January 1, 2025 onward. Must be ≤ `to`. (String, Date, optional)",
        "to": "The ISO 8601 date (YYYY-MM-DD) indicating the end of a time range filter. Example: \"2025-12-31\" to include only data up to December 31, 2025. Must be ≥ `from`. (String, Date, optional)"
      }
    },
    "response_example": {
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "open": "The opening price of the security at the start of the trading session. Example: 130.00. (Number)",
      "low": "The lowest intraday price recorded for the security. Example: 129.75. (Number)",
      "high": "The highest intraday price recorded for the security. Example: 131.25. (Number)",
      "close": "The closing price of the security at the end of the trading session. Example: 130.75. (Number)",
      "volume": "The total number of shares or contracts traded during a given period (typically daily). Example: 105000000. (Number)"
    }
  },
  {
    "name": "5-Minute Interval Forex Chart API",
    "description": "The 5-minute intraday endpoint balances granularity and payload—ideal for dashboards, volatility atlases, and conversational interfaces summarising short-term FX trends.",
    "category": "forex",
    "use_cases": [
      "update five-minute VWAP indicators",
      "volatility atlases for options desks",
      "detect breakout patterns near real time",
      "reduce storage vs. 1-minute data",
      "assistant delivering latest 5-minute bar"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {
        "from": "The ISO 8601 date (YYYY-MM-DD) indicating the start of a time range filter. Example: \"2025-01-01\" to include only data from January 1, 2025 onward. Must be ≤ `to`. (String, Date, optional)",
        "to": "The ISO 8601 date (YYYY-MM-DD) indicating the end of a time range filter. Example: \"2025-12-31\" to include only data up to December 31, 2025. Must be ≥ `from`. (String, Date, optional)"
      }
    },
    "response_example": {
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "open": "The opening price of the security at the start of the trading session. Example: 130.00. (Number)",
      "low": "The lowest intraday price recorded for the security. Example: 129.75. (Number)",
      "high": "The highest intraday price recorded for the security. Example: 131.25. (Number)",
      "close": "The closing price of the security at the end of the trading session. Example: 130.75. (Number)",
      "volume": "The total number of shares or contracts traded during a given period (typically daily). Example: 105000000. (Number)"
    }
  },
  {
    "name": "1-Hour Interval Forex Chart API",
    "description": "1-Hour Forex Chart API (category: forex) outputs hourly OHLCV bars—suited for swing-trade dashboards, mid-term strategy testing, and chatbots answering “Where did EUR/USD close in the 19:00 hour?”.",
    "category": "forex",
    "use_cases": [
      "swing-trading strategy design",
      "calculate rolling hourly volatility",
      "overlay hourly bars on daily trends",
      "session structure analysis",
      "assistant hourly bar look-ups"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {
        "from": "The ISO 8601 date (YYYY-MM-DD) indicating the start of a time range filter. Example: \"2025-01-01\" to include only data from January 1, 2025 onward. Must be ≤ `to`. (String, Date, optional)",
        "to": "The ISO 8601 date (YYYY-MM-DD) indicating the end of a time range filter. Example: \"2025-12-31\" to include only data up to December 31, 2025. Must be ≥ `from`. (String, Date, optional)"
      }
    },
    "response_example": {
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "open": "The opening price of the security at the start of the trading session. Example: 130.00. (Number)",
      "low": "The lowest intraday price recorded for the security. Example: 129.75. (Number)",
      "high": "The highest intraday price recorded for the security. Example: 131.25. (Number)",
      "close": "The closing price of the security at the end of the trading session. Example: 130.75. (Number)",
      "volume": "The total number of shares or contracts traded during a given period (typically daily). Example: 105000000. (Number)"
    }
  },
  {
    "name": "1-Hour Interval Forex Chart API",
    "description": "The hourly intraday endpoint aggregates trades into 60-minute bars—balancing detail with manageable data size—ideal for session-structure studies, options gamma models, and conversational hourly summaries.",
    "category": "forex",
    "use_cases": [
      "options desks modelling gamma risk",
      "reduce storage versus minute bars",
      "client reports on hourly trend shifts",
      "identify key session turning points",
      "assistant hourly trend explanations"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {
        "from": "The ISO 8601 date (YYYY-MM-DD) indicating the start of a time range filter. Example: \"2025-01-01\" to include only data from January 1, 2025 onward. Must be ≤ `to`. (String, Date, optional)",
        "to": "The ISO 8601 date (YYYY-MM-DD) indicating the end of a time range filter. Example: \"2025-12-31\" to include only data up to December 31, 2025. Must be ≥ `from`. (String, Date, optional)"
      }
    },
    "response_example": {
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "open": "The opening price of the security at the start of the trading session. Example: 130.00. (Number)",
      "low": "The lowest intraday price recorded for the security. Example: 129.75. (Number)",
      "high": "The highest intraday price recorded for the security. Example: 131.25. (Number)",
      "close": "The closing price of the security at the end of the trading session. Example: 130.75. (Number)",
      "volume": "The total number of shares or contracts traded during a given period (typically daily). Example: 105000000. (Number)"
    }
  },
  {
    "name": "Income Statement API",
    "description": "Income Statement API (category: financials) streams structured profit-and-loss data—revenue through EPS—for any company, ETF, or private issuer. Pass **symbol** (mandatory) plus optional **period** (FY or quarter) and **limit** (# records) to power comps tables, margin trend charts, and chatbots answering “What was Apple’s FY-24 net income?”.",
    "category": "financials",
    "use_cases": [
      "build multi-company comps screens",
      "feed valuation models with real-time P&L",
      "alert when operating margin deviates QoQ",
      "generate KPI dashboards for CFOs",
      "assistant queries on profitability metrics"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {
        "limit": "An integer cap on the number of results returned by the endpoint. Example: 50 to restrict output to the top 50 matches. Must be ≥1 and ≤1000. (Integer, optional; defaults to 100)",
        "period": "A string or integer indicating the fiscal period for which data is requested. Example: \"annual\" or \"quarter\" to indicate annual or quarterly data. (String or Number, required for period-based endpoints)"
      }
    },
    "response_example": {
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "reportedCurrency": "The currency in which all reported values are denominated, as per ISO 4217. Example: 'USD' for US dollars. (String, required for financial data integrity)",
      "cik": "The Central Index Key, a unique nine-digit identifier assigned by the SEC to entities. Example: \"0001454889\". (String)",
      "filingDate": "The date on which a regulatory filing was submitted (e.g., with the SEC), in ISO 8601 format. Example: \"2025-02-03\". (String, Date)",
      "acceptedDate": "The date on which a filing or document was accepted by the regulatory authority. Example: \"2025-02-03\". (String, Date)",
      "fiscalYear": "The fiscal year to which a financial data point pertains, typically in four-digit format. Example: 2023. (Number or String)",
      "period": "The fiscal period associated with the data point, such as a quarter (\"Q2\") or full year. Example: \"Q2\". (String)",
      "revenue": "The total revenue value reported or projected for the period. Example: 100000000. (Number)",
      "costOfRevenue": "Direct costs attributable to the production of goods sold or services rendered. (Number, e.g., USD)",
      "grossProfit": "The gross profit value, calculated as revenue minus cost of goods sold (COGS). Example: 40000000. (Number)",
      "researchAndDevelopmentExpenses": "Total spending on R&D activities for the period. Example: 21,914,000,000 for Apple's annual R&D. (Number, innovation/capex)",
      "generalAndAdministrativeExpenses": "Total expenses related to general business operations not tied directly to product manufacturing or sales. Includes salaries of corporate staff, legal fees, and office expenses. Example: 5,000,000 for overhead costs in a fiscal year. (Number, income statement, required for OPEX analysis)",
      "sellingAndMarketingExpenses": "Total cost of selling and marketing operations for the reporting period. Example: 2,000,000 for a mid-size company. (Number, OPEX/income statement)",
      "sellingGeneralAndAdministrativeExpenses": "Combined total of selling, general, and administrative expenses (SG&A) over the period. Example: 8,500,000 for SG&A on the income statement. (Number, cost center analysis)",
      "otherExpenses": "Miscellaneous expenses not categorized elsewhere in the financials. Example: 0. (Number, optional)",
      "operatingExpenses": "The total operating expenses reported for the period, including SG&A, R&D, etc. Example: 15000000. (Number)",
      "costAndExpenses": "Total costs and expenses incurred by the company during the reporting period. (Number, e.g., USD)",
      "netInterestIncome": "Net interest earned, calculated as interest income minus interest expense. Example: 12000000. (Number, optional)",
      "interestIncome": "Total interest income earned during the period. Example: 350000000 for $350M. (Number, optional)",
      "interestExpense": "Total interest expense incurred during the reporting period. Example: 700000000 for $700M. (Number, optional)",
      "depreciationAndAmortization": "Combined total of depreciation (for tangible assets) and amortization (for intangible assets) during the period. (Number, currency)",
      "ebitda": "The EBITDA value (Earnings Before Interest, Taxes, Depreciation, and Amortization) reported for the period. Example: 22000000. (Number)",
      "ebit": "The actual reported Earnings Before Interest and Taxes for the period. Example: 22000000. (Number)",
      "nonOperatingIncomeExcludingInterest": "Income from non-operating activities, excluding interest (e.g., asset sales, one-time gains). Example: 120000000. (Number, optional)",
      "operatingIncome": "The operating income value, representing profit from core business operations. Example: 25000000. (Number)",
      "totalOtherIncomeExpensesNet": "Net value of all miscellaneous income and expenses. Example: -4,500,000 for net other expenses. (Number, non-core earnings adjustment)",
      "incomeBeforeTax": "Profit or earnings before income tax expense is deducted. Also known as pre-tax income. (Number, typically in reporting currency, optional)",
      "incomeTaxExpense": "Total income tax expense recognized for the period. Example: 29749000000 for $29.7B in taxes paid. (Number, optional)",
      "netIncomeFromContinuingOperations": "Net income derived from ongoing operations, excluding discontinued segments. Example: 93736000000 for $93.7B. (Number, optional)",
      "netIncomeFromDiscontinuedOperations": "Net income from segments or business lines that have been discontinued. Example: 0 if none. (Number, optional)",
      "otherAdjustmentsToNetIncome": "Any adjustments made to net income that are not categorized elsewhere, such as non-cash items, accounting changes, or special adjustments. Example: 0. (Number, optional)",
      "netIncome": "The net income value, representing total profit after all expenses, taxes, and non-operating items. Example: 18000000. (Number)",
      "netIncomeDeductions": "Any deductions from net income for noncontrolling interest or other adjustments. Example: 0 if none. (Number, optional)",
      "bottomLineNetIncome": "Net income or profit after all expenses, taxes, and extraordinary items. The company's 'bottom line.' (Number, e.g., USD)",
      "eps": "The Earnings Per Share value, calculated as net income divided by total diluted shares outstanding. Example: 3.25. (Number)",
      "epsDiluted": "The diluted earnings per share, accounting for convertible securities. Example: 3.10. (Number)",
      "weightedAverageShsOut": "Weighted average number of shares outstanding (basic), used for EPS. Example: 16,678,000,000. (Number, per-share metrics)",
      "weightedAverageShsOutDil": "Weighted average diluted shares outstanding, includes convertible securities and options. Example: 16,845,000,000. (Number, diluted EPS)"
    }
  },
  {
    "name": "Income Statement API",
    "description": "The income-statement endpoint delivers up-to-the-minute P&L lines—revenue, COGS, SG&A, EBITDA, EPS—letting analysts benchmark peers, auditors verify filings, and conversational bots surface profitability trends in seconds.",
    "category": "financials",
    "use_cases": [
      "benchmark peer profitability",
      "audit variance against filings",
      "back-test factor models on EBITDA growth",
      "populate investor decks with P&L tables",
      "chatbots narrating income-statement trends"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {
        "limit": "An integer cap on the number of results returned by the endpoint. Example: 50 to restrict output to the top 50 matches. Must be ≥1 and ≤1000. (Integer, optional; defaults to 100)",
        "period": "A string or integer indicating the fiscal period for which data is requested. Example: \"annual\" or \"quarter\" to indicate annual or quarterly data. (String or Number, required for period-based endpoints)"
      }
    },
    "response_example": {
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "reportedCurrency": "The currency in which all reported values are denominated, as per ISO 4217. Example: 'USD' for US dollars. (String, required for financial data integrity)",
      "cik": "The Central Index Key, a unique nine-digit identifier assigned by the SEC to entities. Example: \"0001454889\". (String)",
      "filingDate": "The date on which a regulatory filing was submitted (e.g., with the SEC), in ISO 8601 format. Example: \"2025-02-03\". (String, Date)",
      "acceptedDate": "The date on which a filing or document was accepted by the regulatory authority. Example: \"2025-02-03\". (String, Date)",
      "fiscalYear": "The fiscal year to which a financial data point pertains, typically in four-digit format. Example: 2023. (Number or String)",
      "period": "The fiscal period associated with the data point, such as a quarter (\"Q2\") or full year. Example: \"Q2\". (String)",
      "revenue": "The total revenue value reported or projected for the period. Example: 100000000. (Number)",
      "costOfRevenue": "Direct costs attributable to the production of goods sold or services rendered. (Number, e.g., USD)",
      "grossProfit": "The gross profit value, calculated as revenue minus cost of goods sold (COGS). Example: 40000000. (Number)",
      "researchAndDevelopmentExpenses": "Total spending on R&D activities for the period. Example: 21,914,000,000 for Apple's annual R&D. (Number, innovation/capex)",
      "generalAndAdministrativeExpenses": "Total expenses related to general business operations not tied directly to product manufacturing or sales. Includes salaries of corporate staff, legal fees, and office expenses. Example: 5,000,000 for overhead costs in a fiscal year. (Number, income statement, required for OPEX analysis)",
      "sellingAndMarketingExpenses": "Total cost of selling and marketing operations for the reporting period. Example: 2,000,000 for a mid-size company. (Number, OPEX/income statement)",
      "sellingGeneralAndAdministrativeExpenses": "Combined total of selling, general, and administrative expenses (SG&A) over the period. Example: 8,500,000 for SG&A on the income statement. (Number, cost center analysis)",
      "otherExpenses": "Miscellaneous expenses not categorized elsewhere in the financials. Example: 0. (Number, optional)",
      "operatingExpenses": "The total operating expenses reported for the period, including SG&A, R&D, etc. Example: 15000000. (Number)",
      "costAndExpenses": "Total costs and expenses incurred by the company during the reporting period. (Number, e.g., USD)",
      "netInterestIncome": "Net interest earned, calculated as interest income minus interest expense. Example: 12000000. (Number, optional)",
      "interestIncome": "Total interest income earned during the period. Example: 350000000 for $350M. (Number, optional)",
      "interestExpense": "Total interest expense incurred during the reporting period. Example: 700000000 for $700M. (Number, optional)",
      "depreciationAndAmortization": "Combined total of depreciation (for tangible assets) and amortization (for intangible assets) during the period. (Number, currency)",
      "ebitda": "The EBITDA value (Earnings Before Interest, Taxes, Depreciation, and Amortization) reported for the period. Example: 22000000. (Number)",
      "ebit": "The actual reported Earnings Before Interest and Taxes for the period. Example: 22000000. (Number)",
      "nonOperatingIncomeExcludingInterest": "Income from non-operating activities, excluding interest (e.g., asset sales, one-time gains). Example: 120000000. (Number, optional)",
      "operatingIncome": "The operating income value, representing profit from core business operations. Example: 25000000. (Number)",
      "totalOtherIncomeExpensesNet": "Net value of all miscellaneous income and expenses. Example: -4,500,000 for net other expenses. (Number, non-core earnings adjustment)",
      "incomeBeforeTax": "Profit or earnings before income tax expense is deducted. Also known as pre-tax income. (Number, typically in reporting currency, optional)",
      "incomeTaxExpense": "Total income tax expense recognized for the period. Example: 29749000000 for $29.7B in taxes paid. (Number, optional)",
      "netIncomeFromContinuingOperations": "Net income derived from ongoing operations, excluding discontinued segments. Example: 93736000000 for $93.7B. (Number, optional)",
      "netIncomeFromDiscontinuedOperations": "Net income from segments or business lines that have been discontinued. Example: 0 if none. (Number, optional)",
      "otherAdjustmentsToNetIncome": "Any adjustments made to net income that are not categorized elsewhere, such as non-cash items, accounting changes, or special adjustments. Example: 0. (Number, optional)",
      "netIncome": "The net income value, representing total profit after all expenses, taxes, and non-operating items. Example: 18000000. (Number)",
      "netIncomeDeductions": "Any deductions from net income for noncontrolling interest or other adjustments. Example: 0 if none. (Number, optional)",
      "bottomLineNetIncome": "Net income or profit after all expenses, taxes, and extraordinary items. The company's 'bottom line.' (Number, e.g., USD)",
      "eps": "The Earnings Per Share value, calculated as net income divided by total diluted shares outstanding. Example: 3.25. (Number)",
      "epsDiluted": "The diluted earnings per share, accounting for convertible securities. Example: 3.10. (Number)",
      "weightedAverageShsOut": "Weighted average number of shares outstanding (basic), used for EPS. Example: 16,678,000,000. (Number, per-share metrics)",
      "weightedAverageShsOutDil": "Weighted average diluted shares outstanding, includes convertible securities and options. Example: 16,845,000,000. (Number, diluted EPS)"
    }
  },
  {
    "name": "Balance Sheet Statement API",
    "description": "Balance Sheet API (category: financials) exposes point-in-time asset, liability, and equity data—cash, inventory, debt, retained earnings. Required **symbol** with optional **period** and **limit** enables leverage ratios, liquidity screens, and assistants answering “How much cash does Apple hold?”.",
    "category": "financials",
    "use_cases": [
      "compute leverage and liquidity ratios",
      "flag covenant breaches in debt models",
      "feed risk systems with real-time balances",
      "visualise asset mix over time",
      "assistant look-ups of key balance-sheet lines"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {
        "limit": "An integer cap on the number of results returned by the endpoint. Example: 50 to restrict output to the top 50 matches. Must be ≥1 and ≤1000. (Integer, optional; defaults to 100)",
        "period": "A string or integer indicating the fiscal period for which data is requested. Example: \"annual\" or \"quarter\" to indicate annual or quarterly data. (String or Number, required for period-based endpoints)"
      }
    },
    "response_example": {
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "reportedCurrency": "The currency in which all reported values are denominated, as per ISO 4217. Example: 'USD' for US dollars. (String, required for financial data integrity)",
      "cik": "The Central Index Key, a unique nine-digit identifier assigned by the SEC to entities. Example: \"0001454889\". (String)",
      "filingDate": "The date on which a regulatory filing was submitted (e.g., with the SEC), in ISO 8601 format. Example: \"2025-02-03\". (String, Date)",
      "acceptedDate": "The date on which a filing or document was accepted by the regulatory authority. Example: \"2025-02-03\". (String, Date)",
      "fiscalYear": "The fiscal year to which a financial data point pertains, typically in four-digit format. Example: 2023. (Number or String)",
      "period": "The fiscal period associated with the data point, such as a quarter (\"Q2\") or full year. Example: \"Q2\". (String)",
      "cashAndCashEquivalents": "Sum of cash on hand and highly liquid short-term investments. (Number, e.g., USD)",
      "shortTermInvestments": "Liquid investments maturing within one year. Example: 12,000,000,000 in T-bills and CDs. (Number, current assets)",
      "cashAndShortTermInvestments": "The combined cash and short-term investments held by the company, representing liquid assets. Example: 5000000. (Number)",
      "netReceivables": "Net value of receivables due to the company, after deducting allowances for doubtful accounts. (Number, optional)",
      "accountsReceivables": "Money owed to the company by customers for goods or services delivered on credit. (Number, e.g., USD)",
      "otherReceivables": "Receivables not included in accounts receivable (e.g., related party). Example: 32833000000. (Number, optional)",
      "inventory": "Value of raw materials, work-in-progress, and finished goods available for sale, as reported on the balance sheet. (Number, usually in reporting currency, optional)",
      "prepaids": "Prepaid expenses, representing cash paid for goods or services to be received in the future (e.g., insurance premiums). Example: 0. (Number, optional)",
      "otherCurrentAssets": "Sum of all current assets not individually reported (catch-all bucket). Example: 14287000000. (Number, optional)",
      "totalCurrentAssets": "The total current assets value, representing assets expected to be converted to cash within one year. Example: 35000000. (Number)",
      "propertyPlantEquipmentNet": "Net value of property, plant, and equipment after accumulated depreciation. (Number, optional)",
      "goodwill": "The premium paid above fair value in an acquisition, representing intangible assets like brand reputation and customer relationships. Example: 41,000,000,000 as reported on Apple's balance sheet. (Number, balance sheet, intangible assets)",
      "intangibleAssets": "Value of non-physical assets owned by a company, such as patents, trademarks, copyrights, and goodwill. (Number, usually in reporting currency, optional)",
      "goodwillAndIntangibleAssets": "Combined total of goodwill and other intangible assets such as patents, trademarks, and software. Example: 52,000,000,000 for a tech giant with large M&A activity. (Number, balance sheet)",
      "longTermInvestments": "Total value of investments intended to be held for more than one year, such as bonds, affiliates, or unconsolidated subsidiaries. (Number, optional)",
      "taxAssets": "Total tax-related assets, such as deferred tax assets and prepayments. Example: 2,100,000,000 for future tax deductions. (Number, tax line item)",
      "otherNonCurrentAssets": "Long-term assets not classified elsewhere. Example: 55335000000. (Number, optional)",
      "totalNonCurrentAssets": "Sum of all non-current assets (not expected to be converted to cash within a year). Example: 200,000,000,000 for PP&E and intangibles. (Number, asset allocation)",
      "otherAssets": "Assets that do not fit standard classifications, such as deferred charges or miscellaneous investments. (Number, optional)",
      "totalAssets": "The total assets value, representing the entire asset base of the company. Example: 120000000. (Number)",
      "totalPayables": "Total amount owed to suppliers and vendors. Example: 20,000,000,000 in trade payables. (Number, current liabilities)",
      "accountPayables": "Amount owed by the company to suppliers or vendors for goods and services received but not yet paid for. (Number, e.g., USD)",
      "otherPayables": "Payables other than accounts payable, e.g., accrued expenses. Example: 26601000000. (Number, optional)",
      "accruedExpenses": "Expenses that have been incurred but not yet paid or recorded in accounts payable. (Number, e.g., USD)",
      "shortTermDebt": "Total debt obligations due within one year. Example: 8,000,000,000 in short-term loans. (Number, current liabilities)",
      "capitalLeaseObligationsCurrent": "Portion of capital lease obligations due within one year. (Number, e.g., USD)",
      "taxPayables": "Total taxes owed but not yet paid as of the balance sheet date. Example: 900,000,000 in outstanding tax liabilities. (Number, current liability)",
      "deferredRevenue": "Liabilities for revenue received but not yet earned, often from prepaid services or products. (Number, currency)",
      "otherCurrentLiabilities": "Sum of all current liabilities not otherwise listed. Example: 50071000000. (Number, optional)",
      "totalCurrentLiabilities": "The total current liabilities value, representing obligations due within one year. Example: 15000000. (Number)",
      "longTermDebt": "Outstanding debt obligations with maturities greater than one year. Example: 85750000000 for $85.75B in long-term debt. (Number, optional)",
      "deferredRevenueNonCurrent": "Portion of deferred revenue not expected to be recognized within one year. (Number, currency)",
      "deferredTaxLiabilitiesNonCurrent": "Deferred tax liabilities due after more than one year. (Number, currency)",
      "otherNonCurrentLiabilities": "Long-term liabilities not otherwise listed. Example: 35090000000. (Number, optional)",
      "totalNonCurrentLiabilities": "Sum of all liabilities due after one year. Example: 140,000,000,000 in long-term debt and obligations. (Number, long-term leverage)",
      "otherLiabilities": "Other non-current or miscellaneous liabilities. Example: 0. (Number, optional)",
      "capitalLeaseObligations": "Total amount owed under capital lease agreements. (Number, e.g., USD)",
      "totalLiabilities": "The total liabilities value, representing all debts and obligations. Example: 40000000. (Number)",
      "treasuryStock": "Value of a company's own shares that have been repurchased and held in treasury. Example: 5,000,000,000 as buyback reserve. (Number, equity reduction line)",
      "preferredStock": "Total value of preferred shares issued and outstanding. (Number, optional)",
      "commonStock": "Value of common stock issued by the company at par value. (Number, e.g., USD)",
      "retainedEarnings": "Accumulated net income kept in the company after dividends, reinvested into the business. Example: 90,000,000,000 for long-standing profitable firms. (Number, equity section of balance sheet)",
      "additionalPaidInCapital": "Excess amount paid by investors over the par value of stock issued. (Number, e.g., USD)",
      "accumulatedOtherComprehensiveIncomeLoss": "Cumulative total of other comprehensive income or loss items, such as foreign currency translation, unrealized gains/losses on securities, etc. (Number, e.g., USD)",
      "otherTotalStockholdersEquity": "Stockholder’s equity not categorized elsewhere. Example: 0. (Number, optional)",
      "totalStockholdersEquity": "The total stockholders’ equity value at period end. Example: 90000000. (Number)",
      "totalEquity": "The total equity value, representing shareholders’ equity. Example: 90000000. (Number)",
      "minorityInterest": "Value of minority shareholders' stake in subsidiaries not wholly owned by the parent company. Example: 0. (Number, optional)",
      "totalLiabilitiesAndTotalEquity": "Total of all liabilities plus shareholders' equity, must match total assets (balance sheet check). Example: 360,000,000,000. (Number, balance sheet balancing line)",
      "totalInvestments": "Sum of all investments held, both current and long-term. Example: 111,069,000,000. (Number, optional)",
      "totalDebt": "The total debt value, including short-term and long-term liabilities. Example: 30000000. (Number)",
      "netDebt": "Total debt minus cash and cash equivalents, representing the company's net leverage. Example: 76686000000 for $76.7B net debt. (Number, optional)"
    }
  },
  {
    "name": "Balance Sheet Statement API",
    "description": "The balance-sheet endpoint returns complete asset-liability snapshots for each fiscal period, supporting credit analysis, working-capital optimisation, and conversational answers on company solvency.",
    "category": "financials",
    "use_cases": [
      "credit-rating scorecards",
      "working-capital trend dashboards",
      "equity research ratio comps (ROE, ROA)",
      "treasury cash-buffer monitoring",
      "chatbots detailing debt and equity levels"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {
        "limit": "An integer cap on the number of results returned by the endpoint. Example: 50 to restrict output to the top 50 matches. Must be ≥1 and ≤1000. (Integer, optional; defaults to 100)",
        "period": "A string or integer indicating the fiscal period for which data is requested. Example: \"annual\" or \"quarter\" to indicate annual or quarterly data. (String or Number, required for period-based endpoints)"
      }
    },
    "response_example": {
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "reportedCurrency": "The currency in which all reported values are denominated, as per ISO 4217. Example: 'USD' for US dollars. (String, required for financial data integrity)",
      "cik": "The Central Index Key, a unique nine-digit identifier assigned by the SEC to entities. Example: \"0001454889\". (String)",
      "filingDate": "The date on which a regulatory filing was submitted (e.g., with the SEC), in ISO 8601 format. Example: \"2025-02-03\". (String, Date)",
      "acceptedDate": "The date on which a filing or document was accepted by the regulatory authority. Example: \"2025-02-03\". (String, Date)",
      "fiscalYear": "The fiscal year to which a financial data point pertains, typically in four-digit format. Example: 2023. (Number or String)",
      "period": "The fiscal period associated with the data point, such as a quarter (\"Q2\") or full year. Example: \"Q2\". (String)",
      "cashAndCashEquivalents": "Sum of cash on hand and highly liquid short-term investments. (Number, e.g., USD)",
      "shortTermInvestments": "Liquid investments maturing within one year. Example: 12,000,000,000 in T-bills and CDs. (Number, current assets)",
      "cashAndShortTermInvestments": "The combined cash and short-term investments held by the company, representing liquid assets. Example: 5000000. (Number)",
      "netReceivables": "Net value of receivables due to the company, after deducting allowances for doubtful accounts. (Number, optional)",
      "accountsReceivables": "Money owed to the company by customers for goods or services delivered on credit. (Number, e.g., USD)",
      "otherReceivables": "Receivables not included in accounts receivable (e.g., related party). Example: 32833000000. (Number, optional)",
      "inventory": "Value of raw materials, work-in-progress, and finished goods available for sale, as reported on the balance sheet. (Number, usually in reporting currency, optional)",
      "prepaids": "Prepaid expenses, representing cash paid for goods or services to be received in the future (e.g., insurance premiums). Example: 0. (Number, optional)",
      "otherCurrentAssets": "Sum of all current assets not individually reported (catch-all bucket). Example: 14287000000. (Number, optional)",
      "totalCurrentAssets": "The total current assets value, representing assets expected to be converted to cash within one year. Example: 35000000. (Number)",
      "propertyPlantEquipmentNet": "Net value of property, plant, and equipment after accumulated depreciation. (Number, optional)",
      "goodwill": "The premium paid above fair value in an acquisition, representing intangible assets like brand reputation and customer relationships. Example: 41,000,000,000 as reported on Apple's balance sheet. (Number, balance sheet, intangible assets)",
      "intangibleAssets": "Value of non-physical assets owned by a company, such as patents, trademarks, copyrights, and goodwill. (Number, usually in reporting currency, optional)",
      "goodwillAndIntangibleAssets": "Combined total of goodwill and other intangible assets such as patents, trademarks, and software. Example: 52,000,000,000 for a tech giant with large M&A activity. (Number, balance sheet)",
      "longTermInvestments": "Total value of investments intended to be held for more than one year, such as bonds, affiliates, or unconsolidated subsidiaries. (Number, optional)",
      "taxAssets": "Total tax-related assets, such as deferred tax assets and prepayments. Example: 2,100,000,000 for future tax deductions. (Number, tax line item)",
      "otherNonCurrentAssets": "Long-term assets not classified elsewhere. Example: 55335000000. (Number, optional)",
      "totalNonCurrentAssets": "Sum of all non-current assets (not expected to be converted to cash within a year). Example: 200,000,000,000 for PP&E and intangibles. (Number, asset allocation)",
      "otherAssets": "Assets that do not fit standard classifications, such as deferred charges or miscellaneous investments. (Number, optional)",
      "totalAssets": "The total assets value, representing the entire asset base of the company. Example: 120000000. (Number)",
      "totalPayables": "Total amount owed to suppliers and vendors. Example: 20,000,000,000 in trade payables. (Number, current liabilities)",
      "accountPayables": "Amount owed by the company to suppliers or vendors for goods and services received but not yet paid for. (Number, e.g., USD)",
      "otherPayables": "Payables other than accounts payable, e.g., accrued expenses. Example: 26601000000. (Number, optional)",
      "accruedExpenses": "Expenses that have been incurred but not yet paid or recorded in accounts payable. (Number, e.g., USD)",
      "shortTermDebt": "Total debt obligations due within one year. Example: 8,000,000,000 in short-term loans. (Number, current liabilities)",
      "capitalLeaseObligationsCurrent": "Portion of capital lease obligations due within one year. (Number, e.g., USD)",
      "taxPayables": "Total taxes owed but not yet paid as of the balance sheet date. Example: 900,000,000 in outstanding tax liabilities. (Number, current liability)",
      "deferredRevenue": "Liabilities for revenue received but not yet earned, often from prepaid services or products. (Number, currency)",
      "otherCurrentLiabilities": "Sum of all current liabilities not otherwise listed. Example: 50071000000. (Number, optional)",
      "totalCurrentLiabilities": "The total current liabilities value, representing obligations due within one year. Example: 15000000. (Number)",
      "longTermDebt": "Outstanding debt obligations with maturities greater than one year. Example: 85750000000 for $85.75B in long-term debt. (Number, optional)",
      "deferredRevenueNonCurrent": "Portion of deferred revenue not expected to be recognized within one year. (Number, currency)",
      "deferredTaxLiabilitiesNonCurrent": "Deferred tax liabilities due after more than one year. (Number, currency)",
      "otherNonCurrentLiabilities": "Long-term liabilities not otherwise listed. Example: 35090000000. (Number, optional)",
      "totalNonCurrentLiabilities": "Sum of all liabilities due after one year. Example: 140,000,000,000 in long-term debt and obligations. (Number, long-term leverage)",
      "otherLiabilities": "Other non-current or miscellaneous liabilities. Example: 0. (Number, optional)",
      "capitalLeaseObligations": "Total amount owed under capital lease agreements. (Number, e.g., USD)",
      "totalLiabilities": "The total liabilities value, representing all debts and obligations. Example: 40000000. (Number)",
      "treasuryStock": "Value of a company's own shares that have been repurchased and held in treasury. Example: 5,000,000,000 as buyback reserve. (Number, equity reduction line)",
      "preferredStock": "Total value of preferred shares issued and outstanding. (Number, optional)",
      "commonStock": "Value of common stock issued by the company at par value. (Number, e.g., USD)",
      "retainedEarnings": "Accumulated net income kept in the company after dividends, reinvested into the business. Example: 90,000,000,000 for long-standing profitable firms. (Number, equity section of balance sheet)",
      "additionalPaidInCapital": "Excess amount paid by investors over the par value of stock issued. (Number, e.g., USD)",
      "accumulatedOtherComprehensiveIncomeLoss": "Cumulative total of other comprehensive income or loss items, such as foreign currency translation, unrealized gains/losses on securities, etc. (Number, e.g., USD)",
      "otherTotalStockholdersEquity": "Stockholder’s equity not categorized elsewhere. Example: 0. (Number, optional)",
      "totalStockholdersEquity": "The total stockholders’ equity value at period end. Example: 90000000. (Number)",
      "totalEquity": "The total equity value, representing shareholders’ equity. Example: 90000000. (Number)",
      "minorityInterest": "Value of minority shareholders' stake in subsidiaries not wholly owned by the parent company. Example: 0. (Number, optional)",
      "totalLiabilitiesAndTotalEquity": "Total of all liabilities plus shareholders' equity, must match total assets (balance sheet check). Example: 360,000,000,000. (Number, balance sheet balancing line)",
      "totalInvestments": "Sum of all investments held, both current and long-term. Example: 111,069,000,000. (Number, optional)",
      "totalDebt": "The total debt value, including short-term and long-term liabilities. Example: 30000000. (Number)",
      "netDebt": "Total debt minus cash and cash equivalents, representing the company's net leverage. Example: 76686000000 for $76.7B net debt. (Number, optional)"
    }
  },
  {
    "name": "Cash Flow Statement API",
    "description": "Cash Flow Statement API (category: financials) breaks down operating, investing, and financing cash movements—OCF, CAPEX, share buybacks. Input **symbol** plus optional **period**/**limit** to fuel FCF valuations, dividend-coverage tests, and bots explaining “Why did Apple’s cash drop?”.",
    "category": "financials",
    "use_cases": [
      "calculate free-cash-flow yield",
      "screen for shareholder-return intensity",
      "model debt-paydown capacity",
      "detect CAPEX spikes in growth phases",
      "assistant explanations of cash-flow changes"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {
        "limit": "An integer cap on the number of results returned by the endpoint. Example: 50 to restrict output to the top 50 matches. Must be ≥1 and ≤1000. (Integer, optional; defaults to 100)",
        "period": "A string or integer indicating the fiscal period for which data is requested. Example: \"annual\" or \"quarter\" to indicate annual or quarterly data. (String or Number, required for period-based endpoints)"
      }
    },
    "response_example": {
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "reportedCurrency": "The currency in which all reported values are denominated, as per ISO 4217. Example: 'USD' for US dollars. (String, required for financial data integrity)",
      "cik": "The Central Index Key, a unique nine-digit identifier assigned by the SEC to entities. Example: \"0001454889\". (String)",
      "filingDate": "The date on which a regulatory filing was submitted (e.g., with the SEC), in ISO 8601 format. Example: \"2025-02-03\". (String, Date)",
      "acceptedDate": "The date on which a filing or document was accepted by the regulatory authority. Example: \"2025-02-03\". (String, Date)",
      "fiscalYear": "The fiscal year to which a financial data point pertains, typically in four-digit format. Example: 2023. (Number or String)",
      "period": "The fiscal period associated with the data point, such as a quarter (\"Q2\") or full year. Example: \"Q2\". (String)",
      "netIncome": "The net income value, representing total profit after all expenses, taxes, and non-operating items. Example: 18000000. (Number)",
      "depreciationAndAmortization": "Combined total of depreciation (for tangible assets) and amortization (for intangible assets) during the period. (Number, currency)",
      "deferredIncomeTax": "Total amount of income taxes deferred to future periods due to timing differences between accounting and tax rules. (Number, currency)",
      "stockBasedCompensation": "Total value of stock-based compensation granted to employees. Example: 500,000,000 in RSUs and options. (Number, compensation disclosure)",
      "changeInWorkingCapital": "Change in working capital (current assets minus current liabilities) over a reporting period. (Number, e.g., USD)",
      "accountsReceivables": "Money owed to the company by customers for goods or services delivered on credit. (Number, e.g., USD)",
      "inventory": "Value of raw materials, work-in-progress, and finished goods available for sale, as reported on the balance sheet. (Number, usually in reporting currency, optional)",
      "accountsPayables": "Total value of unpaid bills and obligations to suppliers as of the reporting date. (Number, e.g., USD)",
      "otherWorkingCapital": "Working capital components not individually identified (e.g., prepaids, deferred revenue). Example: 3821000000. (Number, optional)",
      "otherNonCashItems": "Non-cash charges or credits included in net income, such as stock compensation, impairment, or write-downs. (Number, optional)",
      "netCashProvidedByOperatingActivities": "The net cash provided by operating activities as reported in the cash flow statement. Example: 18000000. (Number)",
      "investmentsInPropertyPlantAndEquipment": "Total investments made in property, plant, and equipment (PPE), such as buildings, factories, or equipment. (Number, optional)",
      "acquisitionsNet": "Net cash used for or provided by acquisitions of businesses, net of cash acquired. (Number, e.g., USD)",
      "purchasesOfInvestments": "Total amount spent on purchasing investments (e.g., securities, businesses) during the period. (Number, optional)",
      "salesMaturitiesOfInvestments": "Total proceeds from the sale or maturity of investments in the period. Example: 5,000,000 from bond redemptions. (Number, cash flow investing activities)",
      "otherInvestingActivities": "Investing cash flows not included in acquisitions or capital expenditures. Example: -1308000000. (Number, optional)",
      "netCashProvidedByInvestingActivities": "The net cash flow from investing activities, such as asset purchases or sales. Example: -5000000. (Number)",
      "netDebtIssuance": "Net amount of debt issued or repaid in a period. Positive for net issuance, negative for net repayments. Example: -5998000000 for $5.99B net repayment. (Number, optional)",
      "longTermNetDebtIssuance": "Net amount of long-term debt issued (or repaid) in a given period, showing whether new debt was raised or paid down. (Number, optional)",
      "shortTermNetDebtIssuance": "Net change in short-term debt issued minus repayments. Example: -2,000,000 for net repayments. (Number, cash flow financing)",
      "netStockIssuance": "Net value of common or preferred stock issued minus stock repurchased. Example: -94949000000 for net buybacks. (Number, optional)",
      "netCommonStockIssuance": "Net shares of common stock issued (shares issued minus shares repurchased) during a period. (Number, optional)",
      "commonStockIssuance": "Amount of capital raised through the issuance of new common shares. (Number, e.g., USD)",
      "commonStockRepurchased": "Total value of common stock repurchased (bought back) by the company during the period. (Number, e.g., USD)",
      "netPreferredStockIssuance": "Net value of preferred stock issued minus redemptions during the reporting period. (Number, optional)",
      "netDividendsPaid": "Net value of dividends paid to shareholders, subtracting any dividends received from investments. (Number, optional)",
      "commonDividendsPaid": "Total amount of dividends paid to common shareholders in the reporting period. (Number, e.g., USD)",
      "preferredDividendsPaid": "Total dividends paid to preferred shareholders in the reporting period. (Number, optional)",
      "otherFinancingActivities": "Cash flows from financing activities that do not fit into standard categories like stock issuance or dividends (e.g., debt restructuring fees). Example: -5802000000. (Number, optional)",
      "netCashProvidedByFinancingActivities": "The net cash provided by financing activities, representing cash raised from or used to repay debt and equity. Example: 7000000. (Number)",
      "effectOfForexChangesOnCash": "Net effect of foreign exchange rate changes on cash and cash equivalents during the period. (Number, currency)",
      "netChangeInCash": "Net increase or decrease in cash over the reporting period. Example: -794000000 for a net cash decrease of $794M. (Number, optional)",
      "cashAtEndOfPeriod": "Cash balance at the end of the reporting period. (Number, e.g., USD)",
      "cashAtBeginningOfPeriod": "Cash balance at the start of the reporting period. (Number, e.g., USD)",
      "operatingCashFlow": "The operating cash flow value, representing cash generated from normal business operations. Example: 20000000. (Number)",
      "capitalExpenditure": "The capital expenditure value, representing funds used to acquire or upgrade long-term assets. Example: 5000000. (Number)",
      "freeCashFlow": "The Free Cash Flow generated after capital expenditures, representing cash available to equity holders. Example: 2500000000. (Number)",
      "incomeTaxesPaid": "The actual cash amount of income taxes paid during the reporting period. Example: 26102000000 for $26.1B in taxes paid. (Number, optional)",
      "interestPaid": "Total cash interest paid during the period. Example: 600000000 for $600M. (Number, optional)"
    }
  },
  {
    "name": "Cash Flow Statement API",
    "description": "The cash-flow endpoint supplies granular line items—stock buybacks, debt issuance, CAPEX—allowing investors to gauge liquidity, capital allocation, and sustainability of dividends on the fly.",
    "category": "financials",
    "use_cases": [
      "liquidity stress-testing models",
      "capital-allocation scorecards",
      "back-test FCF-based factor strategies",
      "corporate finance dashboards",
      "chatbots summarising cash generation"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {
        "limit": "An integer cap on the number of results returned by the endpoint. Example: 50 to restrict output to the top 50 matches. Must be ≥1 and ≤1000. (Integer, optional; defaults to 100)",
        "period": "A string or integer indicating the fiscal period for which data is requested. Example: \"annual\" or \"quarter\" to indicate annual or quarterly data. (String or Number, required for period-based endpoints)"
      }
    },
    "response_example": {
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "reportedCurrency": "The currency in which all reported values are denominated, as per ISO 4217. Example: 'USD' for US dollars. (String, required for financial data integrity)",
      "cik": "The Central Index Key, a unique nine-digit identifier assigned by the SEC to entities. Example: \"0001454889\". (String)",
      "filingDate": "The date on which a regulatory filing was submitted (e.g., with the SEC), in ISO 8601 format. Example: \"2025-02-03\". (String, Date)",
      "acceptedDate": "The date on which a filing or document was accepted by the regulatory authority. Example: \"2025-02-03\". (String, Date)",
      "fiscalYear": "The fiscal year to which a financial data point pertains, typically in four-digit format. Example: 2023. (Number or String)",
      "period": "The fiscal period associated with the data point, such as a quarter (\"Q2\") or full year. Example: \"Q2\". (String)",
      "netIncome": "The net income value, representing total profit after all expenses, taxes, and non-operating items. Example: 18000000. (Number)",
      "depreciationAndAmortization": "Combined total of depreciation (for tangible assets) and amortization (for intangible assets) during the period. (Number, currency)",
      "deferredIncomeTax": "Total amount of income taxes deferred to future periods due to timing differences between accounting and tax rules. (Number, currency)",
      "stockBasedCompensation": "Total value of stock-based compensation granted to employees. Example: 500,000,000 in RSUs and options. (Number, compensation disclosure)",
      "changeInWorkingCapital": "Change in working capital (current assets minus current liabilities) over a reporting period. (Number, e.g., USD)",
      "accountsReceivables": "Money owed to the company by customers for goods or services delivered on credit. (Number, e.g., USD)",
      "inventory": "Value of raw materials, work-in-progress, and finished goods available for sale, as reported on the balance sheet. (Number, usually in reporting currency, optional)",
      "accountsPayables": "Total value of unpaid bills and obligations to suppliers as of the reporting date. (Number, e.g., USD)",
      "otherWorkingCapital": "Working capital components not individually identified (e.g., prepaids, deferred revenue). Example: 3821000000. (Number, optional)",
      "otherNonCashItems": "Non-cash charges or credits included in net income, such as stock compensation, impairment, or write-downs. (Number, optional)",
      "netCashProvidedByOperatingActivities": "The net cash provided by operating activities as reported in the cash flow statement. Example: 18000000. (Number)",
      "investmentsInPropertyPlantAndEquipment": "Total investments made in property, plant, and equipment (PPE), such as buildings, factories, or equipment. (Number, optional)",
      "acquisitionsNet": "Net cash used for or provided by acquisitions of businesses, net of cash acquired. (Number, e.g., USD)",
      "purchasesOfInvestments": "Total amount spent on purchasing investments (e.g., securities, businesses) during the period. (Number, optional)",
      "salesMaturitiesOfInvestments": "Total proceeds from the sale or maturity of investments in the period. Example: 5,000,000 from bond redemptions. (Number, cash flow investing activities)",
      "otherInvestingActivities": "Investing cash flows not included in acquisitions or capital expenditures. Example: -1308000000. (Number, optional)",
      "netCashProvidedByInvestingActivities": "The net cash flow from investing activities, such as asset purchases or sales. Example: -5000000. (Number)",
      "netDebtIssuance": "Net amount of debt issued or repaid in a period. Positive for net issuance, negative for net repayments. Example: -5998000000 for $5.99B net repayment. (Number, optional)",
      "longTermNetDebtIssuance": "Net amount of long-term debt issued (or repaid) in a given period, showing whether new debt was raised or paid down. (Number, optional)",
      "shortTermNetDebtIssuance": "Net change in short-term debt issued minus repayments. Example: -2,000,000 for net repayments. (Number, cash flow financing)",
      "netStockIssuance": "Net value of common or preferred stock issued minus stock repurchased. Example: -94949000000 for net buybacks. (Number, optional)",
      "netCommonStockIssuance": "Net shares of common stock issued (shares issued minus shares repurchased) during a period. (Number, optional)",
      "commonStockIssuance": "Amount of capital raised through the issuance of new common shares. (Number, e.g., USD)",
      "commonStockRepurchased": "Total value of common stock repurchased (bought back) by the company during the period. (Number, e.g., USD)",
      "netPreferredStockIssuance": "Net value of preferred stock issued minus redemptions during the reporting period. (Number, optional)",
      "netDividendsPaid": "Net value of dividends paid to shareholders, subtracting any dividends received from investments. (Number, optional)",
      "commonDividendsPaid": "Total amount of dividends paid to common shareholders in the reporting period. (Number, e.g., USD)",
      "preferredDividendsPaid": "Total dividends paid to preferred shareholders in the reporting period. (Number, optional)",
      "otherFinancingActivities": "Cash flows from financing activities that do not fit into standard categories like stock issuance or dividends (e.g., debt restructuring fees). Example: -5802000000. (Number, optional)",
      "netCashProvidedByFinancingActivities": "The net cash provided by financing activities, representing cash raised from or used to repay debt and equity. Example: 7000000. (Number)",
      "effectOfForexChangesOnCash": "Net effect of foreign exchange rate changes on cash and cash equivalents during the period. (Number, currency)",
      "netChangeInCash": "Net increase or decrease in cash over the reporting period. Example: -794000000 for a net cash decrease of $794M. (Number, optional)",
      "cashAtEndOfPeriod": "Cash balance at the end of the reporting period. (Number, e.g., USD)",
      "cashAtBeginningOfPeriod": "Cash balance at the start of the reporting period. (Number, e.g., USD)",
      "operatingCashFlow": "The operating cash flow value, representing cash generated from normal business operations. Example: 20000000. (Number)",
      "capitalExpenditure": "The capital expenditure value, representing funds used to acquire or upgrade long-term assets. Example: 5000000. (Number)",
      "freeCashFlow": "The Free Cash Flow generated after capital expenditures, representing cash available to equity holders. Example: 2500000000. (Number)",
      "incomeTaxesPaid": "The actual cash amount of income taxes paid during the reporting period. Example: 26102000000 for $26.1B in taxes paid. (Number, optional)",
      "interestPaid": "Total cash interest paid during the period. Example: 600000000 for $600M. (Number, optional)"
    }
  },
  {
    "name": "Latest Financial Statements API",
    "description": "Latest Financial Statements API (category: financials) lists the freshest filing for every company—symbol, calendarYear, period, filing date—paged via **page** and **limit**. Ideal for event-driven scanners, earnings-season dashboards, and assistants answering “Which companies just reported Q4?”.",
    "category": "financials",
    "use_cases": [
      "earnings-season monitoring",
      "trigger alerts on new filings",
      "feed event-driven trading algos",
      "populate dashboards with latest statement dates",
      "assistant look-ups of most recent reporters"
    ],
    "parameters": {
      "required": {
        "page": "A zero-based integer page index for paginated endpoints. Example: 2 to return the third page of results, given the configured `limit`. (Integer, optional; defaults to 0)",
        "limit": "An integer cap on the number of results returned by the endpoint. Example: 50 to restrict output to the top 50 matches. Must be ≥1 and ≤1000. (Integer, optional; defaults to 100)"
      },
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "calendarYear": "The calendar year associated with the data point, typically in four-digit format. Example: 2024. (Number or String)",
      "period": "The fiscal period associated with the data point, such as a quarter (\"Q2\") or full year. Example: \"Q2\". (String)",
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "dateAdded": "The date on which the data record was added to the database, in ISO 8601 format. Example: \"2025-03-01\". (String, Date)"
    }
  },
  {
    "name": "Latest Financial Statements API",
    "description": "The latest-financial-statements endpoint acts as a news-tape for filings, letting users page through up to 250 of the newest income, balance, and cash-flow statements across the market.",
    "category": "financials",
    "use_cases": [
      "news-tape feeds for research portals",
      "detect filing delays versus expectations",
      "populate calendars of upcoming reports",
      "back-test post-earnings drift strategies",
      "chatbots listing companies that filed today"
    ],
    "parameters": {
      "required": {
        "page": "A zero-based integer page index for paginated endpoints. Example: 2 to return the third page of results, given the configured `limit`. (Integer, optional; defaults to 0)",
        "limit": "An integer cap on the number of results returned by the endpoint. Example: 50 to restrict output to the top 50 matches. Must be ≥1 and ≤1000. (Integer, optional; defaults to 100)"
      },
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "calendarYear": "The calendar year associated with the data point, typically in four-digit format. Example: 2024. (Number or String)",
      "period": "The fiscal period associated with the data point, such as a quarter (\"Q2\") or full year. Example: \"Q2\". (String)",
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "dateAdded": "The date on which the data record was added to the database, in ISO 8601 format. Example: \"2025-03-01\". (String, Date)"
    }
  },
  {
    "name": "Income Statements TTM API",
    "description": "Income Statement TTM API (category: financials) packages trailing-twelve-month P&L metrics—revenue to EPS—in a single record. Required **symbol**; optional **limit** returns multiple TTM snapshots for YoY comps, factor screens, and assistant answers like “What’s Apple’s TTM EBITDA?”.",
    "category": "financials",
    "use_cases": [
      "factor models using TTM earnings",
      "smooth seasonality in growth analysis",
      "quick YoY and QoQ comp creation",
      "update valuation screens with rolling data",
      "assistant queries on TTM profitability"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {
        "limit": "An integer cap on the number of results returned by the endpoint. Example: 50 to restrict output to the top 50 matches. Must be ≥1 and ≤1000. (Integer, optional; defaults to 100)"
      }
    },
    "response_example": {
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "reportedCurrency": "The currency in which all reported values are denominated, as per ISO 4217. Example: 'USD' for US dollars. (String, required for financial data integrity)",
      "cik": "The Central Index Key, a unique nine-digit identifier assigned by the SEC to entities. Example: \"0001454889\". (String)",
      "filingDate": "The date on which a regulatory filing was submitted (e.g., with the SEC), in ISO 8601 format. Example: \"2025-02-03\". (String, Date)",
      "acceptedDate": "The date on which a filing or document was accepted by the regulatory authority. Example: \"2025-02-03\". (String, Date)",
      "fiscalYear": "The fiscal year to which a financial data point pertains, typically in four-digit format. Example: 2023. (Number or String)",
      "period": "The fiscal period associated with the data point, such as a quarter (\"Q2\") or full year. Example: \"Q2\". (String)",
      "revenue": "The total revenue value reported or projected for the period. Example: 100000000. (Number)",
      "costOfRevenue": "Direct costs attributable to the production of goods sold or services rendered. (Number, e.g., USD)",
      "grossProfit": "The gross profit value, calculated as revenue minus cost of goods sold (COGS). Example: 40000000. (Number)",
      "researchAndDevelopmentExpenses": "Total spending on R&D activities for the period. Example: 21,914,000,000 for Apple's annual R&D. (Number, innovation/capex)",
      "generalAndAdministrativeExpenses": "Total expenses related to general business operations not tied directly to product manufacturing or sales. Includes salaries of corporate staff, legal fees, and office expenses. Example: 5,000,000 for overhead costs in a fiscal year. (Number, income statement, required for OPEX analysis)",
      "sellingAndMarketingExpenses": "Total cost of selling and marketing operations for the reporting period. Example: 2,000,000 for a mid-size company. (Number, OPEX/income statement)",
      "sellingGeneralAndAdministrativeExpenses": "Combined total of selling, general, and administrative expenses (SG&A) over the period. Example: 8,500,000 for SG&A on the income statement. (Number, cost center analysis)",
      "otherExpenses": "Miscellaneous expenses not categorized elsewhere in the financials. Example: 0. (Number, optional)",
      "operatingExpenses": "The total operating expenses reported for the period, including SG&A, R&D, etc. Example: 15000000. (Number)",
      "costAndExpenses": "Total costs and expenses incurred by the company during the reporting period. (Number, e.g., USD)",
      "netInterestIncome": "Net interest earned, calculated as interest income minus interest expense. Example: 12000000. (Number, optional)",
      "interestIncome": "Total interest income earned during the period. Example: 350000000 for $350M. (Number, optional)",
      "interestExpense": "Total interest expense incurred during the reporting period. Example: 700000000 for $700M. (Number, optional)",
      "depreciationAndAmortization": "Combined total of depreciation (for tangible assets) and amortization (for intangible assets) during the period. (Number, currency)",
      "ebitda": "The EBITDA value (Earnings Before Interest, Taxes, Depreciation, and Amortization) reported for the period. Example: 22000000. (Number)",
      "ebit": "The actual reported Earnings Before Interest and Taxes for the period. Example: 22000000. (Number)",
      "nonOperatingIncomeExcludingInterest": "Income from non-operating activities, excluding interest (e.g., asset sales, one-time gains). Example: 120000000. (Number, optional)",
      "operatingIncome": "The operating income value, representing profit from core business operations. Example: 25000000. (Number)",
      "totalOtherIncomeExpensesNet": "Net value of all miscellaneous income and expenses. Example: -4,500,000 for net other expenses. (Number, non-core earnings adjustment)",
      "incomeBeforeTax": "Profit or earnings before income tax expense is deducted. Also known as pre-tax income. (Number, typically in reporting currency, optional)",
      "incomeTaxExpense": "Total income tax expense recognized for the period. Example: 29749000000 for $29.7B in taxes paid. (Number, optional)",
      "netIncomeFromContinuingOperations": "Net income derived from ongoing operations, excluding discontinued segments. Example: 93736000000 for $93.7B. (Number, optional)",
      "netIncomeFromDiscontinuedOperations": "Net income from segments or business lines that have been discontinued. Example: 0 if none. (Number, optional)",
      "otherAdjustmentsToNetIncome": "Any adjustments made to net income that are not categorized elsewhere, such as non-cash items, accounting changes, or special adjustments. Example: 0. (Number, optional)",
      "netIncome": "The net income value, representing total profit after all expenses, taxes, and non-operating items. Example: 18000000. (Number)",
      "netIncomeDeductions": "Any deductions from net income for noncontrolling interest or other adjustments. Example: 0 if none. (Number, optional)",
      "bottomLineNetIncome": "Net income or profit after all expenses, taxes, and extraordinary items. The company's 'bottom line.' (Number, e.g., USD)",
      "eps": "The Earnings Per Share value, calculated as net income divided by total diluted shares outstanding. Example: 3.25. (Number)",
      "epsDiluted": "The diluted earnings per share, accounting for convertible securities. Example: 3.10. (Number)",
      "weightedAverageShsOut": "Weighted average number of shares outstanding (basic), used for EPS. Example: 16,678,000,000. (Number, per-share metrics)",
      "weightedAverageShsOutDil": "Weighted average diluted shares outstanding, includes convertible securities and options. Example: 16,845,000,000. (Number, diluted EPS)"
    }
  },
  {
    "name": "Income Statements TTM API",
    "description": "The income-statement-ttm endpoint collapses the last four quarters into a rolling view—handy for growth-rate charts, credit models, and conversational bots discussing trailing earnings momentum.",
    "category": "financials",
    "use_cases": [
      "growth-rate acceleration/deceleration studies",
      "credit covenant monitoring",
      "feed PEG ratio screens with rolling EPS",
      "smooth earnings noise in dashboards",
      "chatbots comparing TTM vs. FY numbers"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {
        "limit": "An integer cap on the number of results returned by the endpoint. Example: 50 to restrict output to the top 50 matches. Must be ≥1 and ≤1000. (Integer, optional; defaults to 100)"
      }
    },
    "response_example": {
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "reportedCurrency": "The currency in which all reported values are denominated, as per ISO 4217. Example: 'USD' for US dollars. (String, required for financial data integrity)",
      "cik": "The Central Index Key, a unique nine-digit identifier assigned by the SEC to entities. Example: \"0001454889\". (String)",
      "filingDate": "The date on which a regulatory filing was submitted (e.g., with the SEC), in ISO 8601 format. Example: \"2025-02-03\". (String, Date)",
      "acceptedDate": "The date on which a filing or document was accepted by the regulatory authority. Example: \"2025-02-03\". (String, Date)",
      "fiscalYear": "The fiscal year to which a financial data point pertains, typically in four-digit format. Example: 2023. (Number or String)",
      "period": "The fiscal period associated with the data point, such as a quarter (\"Q2\") or full year. Example: \"Q2\". (String)",
      "revenue": "The total revenue value reported or projected for the period. Example: 100000000. (Number)",
      "costOfRevenue": "Direct costs attributable to the production of goods sold or services rendered. (Number, e.g., USD)",
      "grossProfit": "The gross profit value, calculated as revenue minus cost of goods sold (COGS). Example: 40000000. (Number)",
      "researchAndDevelopmentExpenses": "Total spending on R&D activities for the period. Example: 21,914,000,000 for Apple's annual R&D. (Number, innovation/capex)",
      "generalAndAdministrativeExpenses": "Total expenses related to general business operations not tied directly to product manufacturing or sales. Includes salaries of corporate staff, legal fees, and office expenses. Example: 5,000,000 for overhead costs in a fiscal year. (Number, income statement, required for OPEX analysis)",
      "sellingAndMarketingExpenses": "Total cost of selling and marketing operations for the reporting period. Example: 2,000,000 for a mid-size company. (Number, OPEX/income statement)",
      "sellingGeneralAndAdministrativeExpenses": "Combined total of selling, general, and administrative expenses (SG&A) over the period. Example: 8,500,000 for SG&A on the income statement. (Number, cost center analysis)",
      "otherExpenses": "Miscellaneous expenses not categorized elsewhere in the financials. Example: 0. (Number, optional)",
      "operatingExpenses": "The total operating expenses reported for the period, including SG&A, R&D, etc. Example: 15000000. (Number)",
      "costAndExpenses": "Total costs and expenses incurred by the company during the reporting period. (Number, e.g., USD)",
      "netInterestIncome": "Net interest earned, calculated as interest income minus interest expense. Example: 12000000. (Number, optional)",
      "interestIncome": "Total interest income earned during the period. Example: 350000000 for $350M. (Number, optional)",
      "interestExpense": "Total interest expense incurred during the reporting period. Example: 700000000 for $700M. (Number, optional)",
      "depreciationAndAmortization": "Combined total of depreciation (for tangible assets) and amortization (for intangible assets) during the period. (Number, currency)",
      "ebitda": "The EBITDA value (Earnings Before Interest, Taxes, Depreciation, and Amortization) reported for the period. Example: 22000000. (Number)",
      "ebit": "The actual reported Earnings Before Interest and Taxes for the period. Example: 22000000. (Number)",
      "nonOperatingIncomeExcludingInterest": "Income from non-operating activities, excluding interest (e.g., asset sales, one-time gains). Example: 120000000. (Number, optional)",
      "operatingIncome": "The operating income value, representing profit from core business operations. Example: 25000000. (Number)",
      "totalOtherIncomeExpensesNet": "Net value of all miscellaneous income and expenses. Example: -4,500,000 for net other expenses. (Number, non-core earnings adjustment)",
      "incomeBeforeTax": "Profit or earnings before income tax expense is deducted. Also known as pre-tax income. (Number, typically in reporting currency, optional)",
      "incomeTaxExpense": "Total income tax expense recognized for the period. Example: 29749000000 for $29.7B in taxes paid. (Number, optional)",
      "netIncomeFromContinuingOperations": "Net income derived from ongoing operations, excluding discontinued segments. Example: 93736000000 for $93.7B. (Number, optional)",
      "netIncomeFromDiscontinuedOperations": "Net income from segments or business lines that have been discontinued. Example: 0 if none. (Number, optional)",
      "otherAdjustmentsToNetIncome": "Any adjustments made to net income that are not categorized elsewhere, such as non-cash items, accounting changes, or special adjustments. Example: 0. (Number, optional)",
      "netIncome": "The net income value, representing total profit after all expenses, taxes, and non-operating items. Example: 18000000. (Number)",
      "netIncomeDeductions": "Any deductions from net income for noncontrolling interest or other adjustments. Example: 0 if none. (Number, optional)",
      "bottomLineNetIncome": "Net income or profit after all expenses, taxes, and extraordinary items. The company's 'bottom line.' (Number, e.g., USD)",
      "eps": "The Earnings Per Share value, calculated as net income divided by total diluted shares outstanding. Example: 3.25. (Number)",
      "epsDiluted": "The diluted earnings per share, accounting for convertible securities. Example: 3.10. (Number)",
      "weightedAverageShsOut": "Weighted average number of shares outstanding (basic), used for EPS. Example: 16,678,000,000. (Number, per-share metrics)",
      "weightedAverageShsOutDil": "Weighted average diluted shares outstanding, includes convertible securities and options. Example: 16,845,000,000. (Number, diluted EPS)"
    }
  },
  {
    "name": "Balance Sheet Statements TTM API",
    "description": "Balance Sheet TTM API (category: financials) rolls forward assets, liabilities, and equity to the most recent quarter, delivering a point-in-time snapshot suitable for leverage tracking, liquidity dashboards, and assistant look-ups of rolling net debt.",
    "category": "financials",
    "use_cases": [
      "track leverage ratios on a rolling basis",
      "update liquidity dashboards after each quarter",
      "screen for net-cash vs. net-debt companies",
      "feed credit-risk scoring engines",
      "assistant queries on current balance metrics"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {
        "limit": "An integer cap on the number of results returned by the endpoint. Example: 50 to restrict output to the top 50 matches. Must be ≥1 and ≤1000. (Integer, optional; defaults to 100)"
      }
    },
    "response_example": {
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "reportedCurrency": "The currency in which all reported values are denominated, as per ISO 4217. Example: 'USD' for US dollars. (String, required for financial data integrity)",
      "cik": "The Central Index Key, a unique nine-digit identifier assigned by the SEC to entities. Example: \"0001454889\". (String)",
      "filingDate": "The date on which a regulatory filing was submitted (e.g., with the SEC), in ISO 8601 format. Example: \"2025-02-03\". (String, Date)",
      "acceptedDate": "The date on which a filing or document was accepted by the regulatory authority. Example: \"2025-02-03\". (String, Date)",
      "fiscalYear": "The fiscal year to which a financial data point pertains, typically in four-digit format. Example: 2023. (Number or String)",
      "period": "The fiscal period associated with the data point, such as a quarter (\"Q2\") or full year. Example: \"Q2\". (String)",
      "cashAndCashEquivalents": "Sum of cash on hand and highly liquid short-term investments. (Number, e.g., USD)",
      "shortTermInvestments": "Liquid investments maturing within one year. Example: 12,000,000,000 in T-bills and CDs. (Number, current assets)",
      "cashAndShortTermInvestments": "The combined cash and short-term investments held by the company, representing liquid assets. Example: 5000000. (Number)",
      "netReceivables": "Net value of receivables due to the company, after deducting allowances for doubtful accounts. (Number, optional)",
      "accountsReceivables": "Money owed to the company by customers for goods or services delivered on credit. (Number, e.g., USD)",
      "otherReceivables": "Receivables not included in accounts receivable (e.g., related party). Example: 32833000000. (Number, optional)",
      "inventory": "Value of raw materials, work-in-progress, and finished goods available for sale, as reported on the balance sheet. (Number, usually in reporting currency, optional)",
      "prepaids": "Prepaid expenses, representing cash paid for goods or services to be received in the future (e.g., insurance premiums). Example: 0. (Number, optional)",
      "otherCurrentAssets": "Sum of all current assets not individually reported (catch-all bucket). Example: 14287000000. (Number, optional)",
      "totalCurrentAssets": "The total current assets value, representing assets expected to be converted to cash within one year. Example: 35000000. (Number)",
      "propertyPlantEquipmentNet": "Net value of property, plant, and equipment after accumulated depreciation. (Number, optional)",
      "goodwill": "The premium paid above fair value in an acquisition, representing intangible assets like brand reputation and customer relationships. Example: 41,000,000,000 as reported on Apple's balance sheet. (Number, balance sheet, intangible assets)",
      "intangibleAssets": "Value of non-physical assets owned by a company, such as patents, trademarks, copyrights, and goodwill. (Number, usually in reporting currency, optional)",
      "goodwillAndIntangibleAssets": "Combined total of goodwill and other intangible assets such as patents, trademarks, and software. Example: 52,000,000,000 for a tech giant with large M&A activity. (Number, balance sheet)",
      "longTermInvestments": "Total value of investments intended to be held for more than one year, such as bonds, affiliates, or unconsolidated subsidiaries. (Number, optional)",
      "taxAssets": "Total tax-related assets, such as deferred tax assets and prepayments. Example: 2,100,000,000 for future tax deductions. (Number, tax line item)",
      "otherNonCurrentAssets": "Long-term assets not classified elsewhere. Example: 55335000000. (Number, optional)",
      "totalNonCurrentAssets": "Sum of all non-current assets (not expected to be converted to cash within a year). Example: 200,000,000,000 for PP&E and intangibles. (Number, asset allocation)",
      "otherAssets": "Assets that do not fit standard classifications, such as deferred charges or miscellaneous investments. (Number, optional)",
      "totalAssets": "The total assets value, representing the entire asset base of the company. Example: 120000000. (Number)",
      "totalPayables": "Total amount owed to suppliers and vendors. Example: 20,000,000,000 in trade payables. (Number, current liabilities)",
      "accountPayables": "Amount owed by the company to suppliers or vendors for goods and services received but not yet paid for. (Number, e.g., USD)",
      "otherPayables": "Payables other than accounts payable, e.g., accrued expenses. Example: 26601000000. (Number, optional)",
      "accruedExpenses": "Expenses that have been incurred but not yet paid or recorded in accounts payable. (Number, e.g., USD)",
      "shortTermDebt": "Total debt obligations due within one year. Example: 8,000,000,000 in short-term loans. (Number, current liabilities)",
      "capitalLeaseObligationsCurrent": "Portion of capital lease obligations due within one year. (Number, e.g., USD)",
      "taxPayables": "Total taxes owed but not yet paid as of the balance sheet date. Example: 900,000,000 in outstanding tax liabilities. (Number, current liability)",
      "deferredRevenue": "Liabilities for revenue received but not yet earned, often from prepaid services or products. (Number, currency)",
      "otherCurrentLiabilities": "Sum of all current liabilities not otherwise listed. Example: 50071000000. (Number, optional)",
      "totalCurrentLiabilities": "The total current liabilities value, representing obligations due within one year. Example: 15000000. (Number)",
      "longTermDebt": "Outstanding debt obligations with maturities greater than one year. Example: 85750000000 for $85.75B in long-term debt. (Number, optional)",
      "deferredRevenueNonCurrent": "Portion of deferred revenue not expected to be recognized within one year. (Number, currency)",
      "deferredTaxLiabilitiesNonCurrent": "Deferred tax liabilities due after more than one year. (Number, currency)",
      "otherNonCurrentLiabilities": "Long-term liabilities not otherwise listed. Example: 35090000000. (Number, optional)",
      "totalNonCurrentLiabilities": "Sum of all liabilities due after one year. Example: 140,000,000,000 in long-term debt and obligations. (Number, long-term leverage)",
      "otherLiabilities": "Other non-current or miscellaneous liabilities. Example: 0. (Number, optional)",
      "capitalLeaseObligations": "Total amount owed under capital lease agreements. (Number, e.g., USD)",
      "totalLiabilities": "The total liabilities value, representing all debts and obligations. Example: 40000000. (Number)",
      "treasuryStock": "Value of a company's own shares that have been repurchased and held in treasury. Example: 5,000,000,000 as buyback reserve. (Number, equity reduction line)",
      "preferredStock": "Total value of preferred shares issued and outstanding. (Number, optional)",
      "commonStock": "Value of common stock issued by the company at par value. (Number, e.g., USD)",
      "retainedEarnings": "Accumulated net income kept in the company after dividends, reinvested into the business. Example: 90,000,000,000 for long-standing profitable firms. (Number, equity section of balance sheet)",
      "additionalPaidInCapital": "Excess amount paid by investors over the par value of stock issued. (Number, e.g., USD)",
      "accumulatedOtherComprehensiveIncomeLoss": "Cumulative total of other comprehensive income or loss items, such as foreign currency translation, unrealized gains/losses on securities, etc. (Number, e.g., USD)",
      "otherTotalStockholdersEquity": "Stockholder’s equity not categorized elsewhere. Example: 0. (Number, optional)",
      "totalStockholdersEquity": "The total stockholders’ equity value at period end. Example: 90000000. (Number)",
      "totalEquity": "The total equity value, representing shareholders’ equity. Example: 90000000. (Number)",
      "minorityInterest": "Value of minority shareholders' stake in subsidiaries not wholly owned by the parent company. Example: 0. (Number, optional)",
      "totalLiabilitiesAndTotalEquity": "Total of all liabilities plus shareholders' equity, must match total assets (balance sheet check). Example: 360,000,000,000. (Number, balance sheet balancing line)",
      "totalInvestments": "Sum of all investments held, both current and long-term. Example: 111,069,000,000. (Number, optional)",
      "totalDebt": "The total debt value, including short-term and long-term liabilities. Example: 30000000. (Number)",
      "netDebt": "Total debt minus cash and cash equivalents, representing the company's net leverage. Example: 76686000000 for $76.7B net debt. (Number, optional)"
    }
  },
  {
    "name": "Balance Sheet Statements TTM API",
    "description": "The balance-sheet-ttm endpoint provides a rolling balance-sheet perspective—enabling real-time covenant testing, debt-capacity analysis, and conversational summaries of current asset positions.",
    "category": "financials",
    "use_cases": [
      "real-time covenant breach detection",
      "calculate debt-to-capital ratios post-quarter",
      "update dashboards with fresh liquidity stats",
      "stress-test asset coverage for lenders",
      "chatbots detailing current asset mixes"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {
        "limit": "An integer cap on the number of results returned by the endpoint. Example: 50 to restrict output to the top 50 matches. Must be ≥1 and ≤1000. (Integer, optional; defaults to 100)"
      }
    },
    "response_example": {
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "reportedCurrency": "The currency in which all reported values are denominated, as per ISO 4217. Example: 'USD' for US dollars. (String, required for financial data integrity)",
      "cik": "The Central Index Key, a unique nine-digit identifier assigned by the SEC to entities. Example: \"0001454889\". (String)",
      "filingDate": "The date on which a regulatory filing was submitted (e.g., with the SEC), in ISO 8601 format. Example: \"2025-02-03\". (String, Date)",
      "acceptedDate": "The date on which a filing or document was accepted by the regulatory authority. Example: \"2025-02-03\". (String, Date)",
      "fiscalYear": "The fiscal year to which a financial data point pertains, typically in four-digit format. Example: 2023. (Number or String)",
      "period": "The fiscal period associated with the data point, such as a quarter (\"Q2\") or full year. Example: \"Q2\". (String)",
      "cashAndCashEquivalents": "Sum of cash on hand and highly liquid short-term investments. (Number, e.g., USD)",
      "shortTermInvestments": "Liquid investments maturing within one year. Example: 12,000,000,000 in T-bills and CDs. (Number, current assets)",
      "cashAndShortTermInvestments": "The combined cash and short-term investments held by the company, representing liquid assets. Example: 5000000. (Number)",
      "netReceivables": "Net value of receivables due to the company, after deducting allowances for doubtful accounts. (Number, optional)",
      "accountsReceivables": "Money owed to the company by customers for goods or services delivered on credit. (Number, e.g., USD)",
      "otherReceivables": "Receivables not included in accounts receivable (e.g., related party). Example: 32833000000. (Number, optional)",
      "inventory": "Value of raw materials, work-in-progress, and finished goods available for sale, as reported on the balance sheet. (Number, usually in reporting currency, optional)",
      "prepaids": "Prepaid expenses, representing cash paid for goods or services to be received in the future (e.g., insurance premiums). Example: 0. (Number, optional)",
      "otherCurrentAssets": "Sum of all current assets not individually reported (catch-all bucket). Example: 14287000000. (Number, optional)",
      "totalCurrentAssets": "The total current assets value, representing assets expected to be converted to cash within one year. Example: 35000000. (Number)",
      "propertyPlantEquipmentNet": "Net value of property, plant, and equipment after accumulated depreciation. (Number, optional)",
      "goodwill": "The premium paid above fair value in an acquisition, representing intangible assets like brand reputation and customer relationships. Example: 41,000,000,000 as reported on Apple's balance sheet. (Number, balance sheet, intangible assets)",
      "intangibleAssets": "Value of non-physical assets owned by a company, such as patents, trademarks, copyrights, and goodwill. (Number, usually in reporting currency, optional)",
      "goodwillAndIntangibleAssets": "Combined total of goodwill and other intangible assets such as patents, trademarks, and software. Example: 52,000,000,000 for a tech giant with large M&A activity. (Number, balance sheet)",
      "longTermInvestments": "Total value of investments intended to be held for more than one year, such as bonds, affiliates, or unconsolidated subsidiaries. (Number, optional)",
      "taxAssets": "Total tax-related assets, such as deferred tax assets and prepayments. Example: 2,100,000,000 for future tax deductions. (Number, tax line item)",
      "otherNonCurrentAssets": "Long-term assets not classified elsewhere. Example: 55335000000. (Number, optional)",
      "totalNonCurrentAssets": "Sum of all non-current assets (not expected to be converted to cash within a year). Example: 200,000,000,000 for PP&E and intangibles. (Number, asset allocation)",
      "otherAssets": "Assets that do not fit standard classifications, such as deferred charges or miscellaneous investments. (Number, optional)",
      "totalAssets": "The total assets value, representing the entire asset base of the company. Example: 120000000. (Number)",
      "totalPayables": "Total amount owed to suppliers and vendors. Example: 20,000,000,000 in trade payables. (Number, current liabilities)",
      "accountPayables": "Amount owed by the company to suppliers or vendors for goods and services received but not yet paid for. (Number, e.g., USD)",
      "otherPayables": "Payables other than accounts payable, e.g., accrued expenses. Example: 26601000000. (Number, optional)",
      "accruedExpenses": "Expenses that have been incurred but not yet paid or recorded in accounts payable. (Number, e.g., USD)",
      "shortTermDebt": "Total debt obligations due within one year. Example: 8,000,000,000 in short-term loans. (Number, current liabilities)",
      "capitalLeaseObligationsCurrent": "Portion of capital lease obligations due within one year. (Number, e.g., USD)",
      "taxPayables": "Total taxes owed but not yet paid as of the balance sheet date. Example: 900,000,000 in outstanding tax liabilities. (Number, current liability)",
      "deferredRevenue": "Liabilities for revenue received but not yet earned, often from prepaid services or products. (Number, currency)",
      "otherCurrentLiabilities": "Sum of all current liabilities not otherwise listed. Example: 50071000000. (Number, optional)",
      "totalCurrentLiabilities": "The total current liabilities value, representing obligations due within one year. Example: 15000000. (Number)",
      "longTermDebt": "Outstanding debt obligations with maturities greater than one year. Example: 85750000000 for $85.75B in long-term debt. (Number, optional)",
      "deferredRevenueNonCurrent": "Portion of deferred revenue not expected to be recognized within one year. (Number, currency)",
      "deferredTaxLiabilitiesNonCurrent": "Deferred tax liabilities due after more than one year. (Number, currency)",
      "otherNonCurrentLiabilities": "Long-term liabilities not otherwise listed. Example: 35090000000. (Number, optional)",
      "totalNonCurrentLiabilities": "Sum of all liabilities due after one year. Example: 140,000,000,000 in long-term debt and obligations. (Number, long-term leverage)",
      "otherLiabilities": "Other non-current or miscellaneous liabilities. Example: 0. (Number, optional)",
      "capitalLeaseObligations": "Total amount owed under capital lease agreements. (Number, e.g., USD)",
      "totalLiabilities": "The total liabilities value, representing all debts and obligations. Example: 40000000. (Number)",
      "treasuryStock": "Value of a company's own shares that have been repurchased and held in treasury. Example: 5,000,000,000 as buyback reserve. (Number, equity reduction line)",
      "preferredStock": "Total value of preferred shares issued and outstanding. (Number, optional)",
      "commonStock": "Value of common stock issued by the company at par value. (Number, e.g., USD)",
      "retainedEarnings": "Accumulated net income kept in the company after dividends, reinvested into the business. Example: 90,000,000,000 for long-standing profitable firms. (Number, equity section of balance sheet)",
      "additionalPaidInCapital": "Excess amount paid by investors over the par value of stock issued. (Number, e.g., USD)",
      "accumulatedOtherComprehensiveIncomeLoss": "Cumulative total of other comprehensive income or loss items, such as foreign currency translation, unrealized gains/losses on securities, etc. (Number, e.g., USD)",
      "otherTotalStockholdersEquity": "Stockholder’s equity not categorized elsewhere. Example: 0. (Number, optional)",
      "totalStockholdersEquity": "The total stockholders’ equity value at period end. Example: 90000000. (Number)",
      "totalEquity": "The total equity value, representing shareholders’ equity. Example: 90000000. (Number)",
      "minorityInterest": "Value of minority shareholders' stake in subsidiaries not wholly owned by the parent company. Example: 0. (Number, optional)",
      "totalLiabilitiesAndTotalEquity": "Total of all liabilities plus shareholders' equity, must match total assets (balance sheet check). Example: 360,000,000,000. (Number, balance sheet balancing line)",
      "totalInvestments": "Sum of all investments held, both current and long-term. Example: 111,069,000,000. (Number, optional)",
      "totalDebt": "The total debt value, including short-term and long-term liabilities. Example: 30000000. (Number)",
      "netDebt": "Total debt minus cash and cash equivalents, representing the company's net leverage. Example: 76686000000 for $76.7B net debt. (Number, optional)"
    }
  },
  {
    "name": "Cashflow Statements TTM API",
    "description": "Cashflow TTM API (category: financials) aggregates the last four quarters of cash movements—OCF, CAPEX, buybacks—into a rolling view. Supply **symbol** (required) and optional **limit** for multi-period comparisons, free-cash-flow screens, and assistants explaining trailing liquidity.",
    "category": "financials",
    "use_cases": [
      "compute rolling free-cash-flow yields",
      "compare buyback intensity YoY",
      "model debt capacity from trailing OCF",
      "update liquidity heat maps quarterly",
      "assistant insights on trailing cash flows"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {
        "limit": "An integer cap on the number of results returned by the endpoint. Example: 50 to restrict output to the top 50 matches. Must be ≥1 and ≤1000. (Integer, optional; defaults to 100)"
      }
    },
    "response_example": {
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "reportedCurrency": "The currency in which all reported values are denominated, as per ISO 4217. Example: 'USD' for US dollars. (String, required for financial data integrity)",
      "cik": "The Central Index Key, a unique nine-digit identifier assigned by the SEC to entities. Example: \"0001454889\". (String)",
      "filingDate": "The date on which a regulatory filing was submitted (e.g., with the SEC), in ISO 8601 format. Example: \"2025-02-03\". (String, Date)",
      "acceptedDate": "The date on which a filing or document was accepted by the regulatory authority. Example: \"2025-02-03\". (String, Date)",
      "fiscalYear": "The fiscal year to which a financial data point pertains, typically in four-digit format. Example: 2023. (Number or String)",
      "period": "The fiscal period associated with the data point, such as a quarter (\"Q2\") or full year. Example: \"Q2\". (String)",
      "netIncome": "The net income value, representing total profit after all expenses, taxes, and non-operating items. Example: 18000000. (Number)",
      "depreciationAndAmortization": "Combined total of depreciation (for tangible assets) and amortization (for intangible assets) during the period. (Number, currency)",
      "deferredIncomeTax": "Total amount of income taxes deferred to future periods due to timing differences between accounting and tax rules. (Number, currency)",
      "stockBasedCompensation": "Total value of stock-based compensation granted to employees. Example: 500,000,000 in RSUs and options. (Number, compensation disclosure)",
      "changeInWorkingCapital": "Change in working capital (current assets minus current liabilities) over a reporting period. (Number, e.g., USD)",
      "accountsReceivables": "Money owed to the company by customers for goods or services delivered on credit. (Number, e.g., USD)",
      "inventory": "Value of raw materials, work-in-progress, and finished goods available for sale, as reported on the balance sheet. (Number, usually in reporting currency, optional)",
      "accountsPayables": "Total value of unpaid bills and obligations to suppliers as of the reporting date. (Number, e.g., USD)",
      "otherWorkingCapital": "Working capital components not individually identified (e.g., prepaids, deferred revenue). Example: 3821000000. (Number, optional)",
      "otherNonCashItems": "Non-cash charges or credits included in net income, such as stock compensation, impairment, or write-downs. (Number, optional)",
      "netCashProvidedByOperatingActivities": "The net cash provided by operating activities as reported in the cash flow statement. Example: 18000000. (Number)",
      "investmentsInPropertyPlantAndEquipment": "Total investments made in property, plant, and equipment (PPE), such as buildings, factories, or equipment. (Number, optional)",
      "acquisitionsNet": "Net cash used for or provided by acquisitions of businesses, net of cash acquired. (Number, e.g., USD)",
      "purchasesOfInvestments": "Total amount spent on purchasing investments (e.g., securities, businesses) during the period. (Number, optional)",
      "salesMaturitiesOfInvestments": "Total proceeds from the sale or maturity of investments in the period. Example: 5,000,000 from bond redemptions. (Number, cash flow investing activities)",
      "otherInvestingActivities": "Investing cash flows not included in acquisitions or capital expenditures. Example: -1308000000. (Number, optional)",
      "netCashProvidedByInvestingActivities": "The net cash flow from investing activities, such as asset purchases or sales. Example: -5000000. (Number)",
      "netDebtIssuance": "Net amount of debt issued or repaid in a period. Positive for net issuance, negative for net repayments. Example: -5998000000 for $5.99B net repayment. (Number, optional)",
      "longTermNetDebtIssuance": "Net amount of long-term debt issued (or repaid) in a given period, showing whether new debt was raised or paid down. (Number, optional)",
      "shortTermNetDebtIssuance": "Net change in short-term debt issued minus repayments. Example: -2,000,000 for net repayments. (Number, cash flow financing)",
      "netStockIssuance": "Net value of common or preferred stock issued minus stock repurchased. Example: -94949000000 for net buybacks. (Number, optional)",
      "netCommonStockIssuance": "Net shares of common stock issued (shares issued minus shares repurchased) during a period. (Number, optional)",
      "commonStockIssuance": "Amount of capital raised through the issuance of new common shares. (Number, e.g., USD)",
      "commonStockRepurchased": "Total value of common stock repurchased (bought back) by the company during the period. (Number, e.g., USD)",
      "netPreferredStockIssuance": "Net value of preferred stock issued minus redemptions during the reporting period. (Number, optional)",
      "netDividendsPaid": "Net value of dividends paid to shareholders, subtracting any dividends received from investments. (Number, optional)",
      "commonDividendsPaid": "Total amount of dividends paid to common shareholders in the reporting period. (Number, e.g., USD)",
      "preferredDividendsPaid": "Total dividends paid to preferred shareholders in the reporting period. (Number, optional)",
      "otherFinancingActivities": "Cash flows from financing activities that do not fit into standard categories like stock issuance or dividends (e.g., debt restructuring fees). Example: -5802000000. (Number, optional)",
      "netCashProvidedByFinancingActivities": "The net cash provided by financing activities, representing cash raised from or used to repay debt and equity. Example: 7000000. (Number)",
      "effectOfForexChangesOnCash": "Net effect of foreign exchange rate changes on cash and cash equivalents during the period. (Number, currency)",
      "netChangeInCash": "Net increase or decrease in cash over the reporting period. Example: -794000000 for a net cash decrease of $794M. (Number, optional)",
      "cashAtEndOfPeriod": "Cash balance at the end of the reporting period. (Number, e.g., USD)",
      "cashAtBeginningOfPeriod": "Cash balance at the start of the reporting period. (Number, e.g., USD)",
      "operatingCashFlow": "The operating cash flow value, representing cash generated from normal business operations. Example: 20000000. (Number)",
      "capitalExpenditure": "The capital expenditure value, representing funds used to acquire or upgrade long-term assets. Example: 5000000. (Number)",
      "freeCashFlow": "The Free Cash Flow generated after capital expenditures, representing cash available to equity holders. Example: 2500000000. (Number)",
      "incomeTaxesPaid": "The actual cash amount of income taxes paid during the reporting period. Example: 26102000000 for $26.1B in taxes paid. (Number, optional)",
      "interestPaid": "Total cash interest paid during the period. Example: 600000000 for $600M. (Number, optional)"
    }
  },
  {
    "name": "Cashflow Statements TTM API",
    "description": "The cash-flow-statement-ttm endpoint condenses four quarters of cash activity into one record—supporting factor models, liquidity rankings, and chatbots summarising how cash generation funds dividends and buybacks.",
    "category": "financials",
    "use_cases": [
      "rank companies by trailing FCF margin",
      "monitor dividend coverage from FCF",
      "identify CAPEX spikes quickly",
      "feed quant strategies targeting high-FCF growers",
      "chatbots comparing TTM FCF across peers"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {
        "limit": "An integer cap on the number of results returned by the endpoint. Example: 50 to restrict output to the top 50 matches. Must be ≥1 and ≤1000. (Integer, optional; defaults to 100)"
      }
    },
    "response_example": {
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "reportedCurrency": "The currency in which all reported values are denominated, as per ISO 4217. Example: 'USD' for US dollars. (String, required for financial data integrity)",
      "cik": "The Central Index Key, a unique nine-digit identifier assigned by the SEC to entities. Example: \"0001454889\". (String)",
      "filingDate": "The date on which a regulatory filing was submitted (e.g., with the SEC), in ISO 8601 format. Example: \"2025-02-03\". (String, Date)",
      "acceptedDate": "The date on which a filing or document was accepted by the regulatory authority. Example: \"2025-02-03\". (String, Date)",
      "fiscalYear": "The fiscal year to which a financial data point pertains, typically in four-digit format. Example: 2023. (Number or String)",
      "period": "The fiscal period associated with the data point, such as a quarter (\"Q2\") or full year. Example: \"Q2\". (String)",
      "netIncome": "The net income value, representing total profit after all expenses, taxes, and non-operating items. Example: 18000000. (Number)",
      "depreciationAndAmortization": "Combined total of depreciation (for tangible assets) and amortization (for intangible assets) during the period. (Number, currency)",
      "deferredIncomeTax": "Total amount of income taxes deferred to future periods due to timing differences between accounting and tax rules. (Number, currency)",
      "stockBasedCompensation": "Total value of stock-based compensation granted to employees. Example: 500,000,000 in RSUs and options. (Number, compensation disclosure)",
      "changeInWorkingCapital": "Change in working capital (current assets minus current liabilities) over a reporting period. (Number, e.g., USD)",
      "accountsReceivables": "Money owed to the company by customers for goods or services delivered on credit. (Number, e.g., USD)",
      "inventory": "Value of raw materials, work-in-progress, and finished goods available for sale, as reported on the balance sheet. (Number, usually in reporting currency, optional)",
      "accountsPayables": "Total value of unpaid bills and obligations to suppliers as of the reporting date. (Number, e.g., USD)",
      "otherWorkingCapital": "Working capital components not individually identified (e.g., prepaids, deferred revenue). Example: 3821000000. (Number, optional)",
      "otherNonCashItems": "Non-cash charges or credits included in net income, such as stock compensation, impairment, or write-downs. (Number, optional)",
      "netCashProvidedByOperatingActivities": "The net cash provided by operating activities as reported in the cash flow statement. Example: 18000000. (Number)",
      "investmentsInPropertyPlantAndEquipment": "Total investments made in property, plant, and equipment (PPE), such as buildings, factories, or equipment. (Number, optional)",
      "acquisitionsNet": "Net cash used for or provided by acquisitions of businesses, net of cash acquired. (Number, e.g., USD)",
      "purchasesOfInvestments": "Total amount spent on purchasing investments (e.g., securities, businesses) during the period. (Number, optional)",
      "salesMaturitiesOfInvestments": "Total proceeds from the sale or maturity of investments in the period. Example: 5,000,000 from bond redemptions. (Number, cash flow investing activities)",
      "otherInvestingActivities": "Investing cash flows not included in acquisitions or capital expenditures. Example: -1308000000. (Number, optional)",
      "netCashProvidedByInvestingActivities": "The net cash flow from investing activities, such as asset purchases or sales. Example: -5000000. (Number)",
      "netDebtIssuance": "Net amount of debt issued or repaid in a period. Positive for net issuance, negative for net repayments. Example: -5998000000 for $5.99B net repayment. (Number, optional)",
      "longTermNetDebtIssuance": "Net amount of long-term debt issued (or repaid) in a given period, showing whether new debt was raised or paid down. (Number, optional)",
      "shortTermNetDebtIssuance": "Net change in short-term debt issued minus repayments. Example: -2,000,000 for net repayments. (Number, cash flow financing)",
      "netStockIssuance": "Net value of common or preferred stock issued minus stock repurchased. Example: -94949000000 for net buybacks. (Number, optional)",
      "netCommonStockIssuance": "Net shares of common stock issued (shares issued minus shares repurchased) during a period. (Number, optional)",
      "commonStockIssuance": "Amount of capital raised through the issuance of new common shares. (Number, e.g., USD)",
      "commonStockRepurchased": "Total value of common stock repurchased (bought back) by the company during the period. (Number, e.g., USD)",
      "netPreferredStockIssuance": "Net value of preferred stock issued minus redemptions during the reporting period. (Number, optional)",
      "netDividendsPaid": "Net value of dividends paid to shareholders, subtracting any dividends received from investments. (Number, optional)",
      "commonDividendsPaid": "Total amount of dividends paid to common shareholders in the reporting period. (Number, e.g., USD)",
      "preferredDividendsPaid": "Total dividends paid to preferred shareholders in the reporting period. (Number, optional)",
      "otherFinancingActivities": "Cash flows from financing activities that do not fit into standard categories like stock issuance or dividends (e.g., debt restructuring fees). Example: -5802000000. (Number, optional)",
      "netCashProvidedByFinancingActivities": "The net cash provided by financing activities, representing cash raised from or used to repay debt and equity. Example: 7000000. (Number)",
      "effectOfForexChangesOnCash": "Net effect of foreign exchange rate changes on cash and cash equivalents during the period. (Number, currency)",
      "netChangeInCash": "Net increase or decrease in cash over the reporting period. Example: -794000000 for a net cash decrease of $794M. (Number, optional)",
      "cashAtEndOfPeriod": "Cash balance at the end of the reporting period. (Number, e.g., USD)",
      "cashAtBeginningOfPeriod": "Cash balance at the start of the reporting period. (Number, e.g., USD)",
      "operatingCashFlow": "The operating cash flow value, representing cash generated from normal business operations. Example: 20000000. (Number)",
      "capitalExpenditure": "The capital expenditure value, representing funds used to acquire or upgrade long-term assets. Example: 5000000. (Number)",
      "freeCashFlow": "The Free Cash Flow generated after capital expenditures, representing cash available to equity holders. Example: 2500000000. (Number)",
      "incomeTaxesPaid": "The actual cash amount of income taxes paid during the reporting period. Example: 26102000000 for $26.1B in taxes paid. (Number, optional)",
      "interestPaid": "Total cash interest paid during the period. Example: 600000000 for $600M. (Number, optional)"
    }
  },
  {
    "name": "Key Metrics API",
    "description": "Key Metrics API (category: valuation) aggregates headline fundamentals—market-cap, EV/EBITDA, ROIC, FCF yield, Graham number—into a single payload. Supply **symbol** (mandatory) plus optional **period** (FY or quarter) and **limit** to super-charge screening engines, factor back-tests, and chatbots answering “What’s Apple’s EV/Sales?”.",
    "category": "valuation",
    "use_cases": [
      "quant screens for high-ROIC, low-EV/EBITDA names",
      "build Piotroski-style factor models in notebooks",
      "generate valuation dashboards for sales desks",
      "alert when FCF yield crosses thresholds",
      "assistant queries on headline valuation multiples"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {
        "limit": "An integer cap on the number of results returned by the endpoint. Example: 50 to restrict output to the top 50 matches. Must be ≥1 and ≤1000. (Integer, optional; defaults to 100)",
        "period": "A string or integer indicating the fiscal period for which data is requested. Example: \"annual\" or \"quarter\" to indicate annual or quarterly data. (String or Number, required for period-based endpoints)"
      }
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "fiscalYear": "The fiscal year to which a financial data point pertains, typically in four-digit format. Example: 2023. (Number or String)",
      "period": "The fiscal period associated with the data point, such as a quarter (\"Q2\") or full year. Example: \"Q2\". (String)",
      "reportedCurrency": "The currency in which all reported values are denominated, as per ISO 4217. Example: 'USD' for US dollars. (String, required for financial data integrity)",
      "marketCap": "The market capitalization of the company, calculated as share price multiplied by total shares outstanding. Example: \"None\" or 1500000000000 (1.5 trillion). (Number or String)",
      "enterpriseValue": "The total Enterprise Value, calculated as market capitalization plus net debt and minority interest, minus cash and equivalents. Example: 2500000000000. (Number)",
      "evToSales": "The Enterprise Value to Sales ratio, evaluating how the market values a company relative to its revenue. Example: 3.8. (Number)",
      "evToOperatingCashFlow": "Enterprise value divided by operating cash flow. (Number, ratio)",
      "evToFreeCashFlow": "Enterprise value divided by free cash flow. Lower is generally better. (Number, ratio)",
      "evToEBITDA": "The Enterprise Value to EBITDA ratio, a valuation multiple used to compare companies. Example: 12.5. (Number)",
      "netDebtToEBITDA": "The Net Debt to EBITDA ratio, measuring leverage relative to earnings. Example: 1.7. (Number)",
      "currentRatio": "The Current Ratio, a liquidity metric calculated as current assets divided by current liabilities. Example: 2.1. (Number)",
      "incomeQuality": "A measure of the proportion of income that is cash-based rather than accrual-based. Higher values indicate higher quality. Example: 1.26. (Number, optional)",
      "grahamNumber": "The Graham Number, a value formula estimating a stock’s fair value based on earnings and book value. Example: 45.67. (Number)",
      "grahamNetNet": "A deep value investing metric: Current assets minus total liabilities, preferred stock, and intangibles. Used to find 'net-net' bargains below liquidation value. Example: 2,000,000 for an undervalued microcap. (Number, value investing screeners)",
      "taxBurden": "Proportion of pre-tax profit retained after paying taxes (1 - effective tax rate). Example: 0.7591 means 75.91% profit retention. (Number, optional)",
      "interestBurden": "A ratio showing the effect of interest expense on pre-tax income. Calculated as EBIT divided by pre-tax income. Example: 0.76. (Number, optional)",
      "workingCapital": "Working Capital, calculated as current assets minus current liabilities. Example: 20000000. (Number)",
      "investedCapital": "Total amount of capital invested in a company, typically calculated as total debt plus equity minus cash. (Number, optional)",
      "returnOnAssets": "Net income divided by total assets, measuring asset efficiency. Example: 0.18 for an 18% ROA. (Number, required in profitability analysis)",
      "operatingReturnOnAssets": "Ratio of operating income to total assets, measuring how efficiently assets generate profits from operations. (Number, percent, optional)",
      "returnOnTangibleAssets": "Net income divided by tangible assets, stripping out intangibles for conservative analysis. Example: 0.19 for 19%. (Number, asset quality metric)",
      "returnOnEquity": "Net income divided by average shareholders’ equity, indicating profit generated per dollar of equity. Example: 0.35 for 35% ROE. (Number, must-have for investor reports)",
      "returnOnInvestedCapital": "The Return on Invested Capital (ROIC) value, measuring efficiency of capital allocation. Example: 8.2. (Number, Percentage)",
      "returnOnCapitalEmployed": "EBIT divided by capital employed (total assets minus current liabilities), showing how effectively capital is used. Example: 0.22 for 22% return. (Number, required in capital efficiency screens)",
      "earningsYield": "Earnings per share divided by share price, expressed as a percentage. (Number, percent)",
      "freeCashFlowYield": "The Free Cash Flow yield, calculated as free cash flow divided by market capitalization. Example: 4.1. (Number, Percentage)",
      "capexToOperatingCashFlow": "Capital expenditures as a percentage of operating cash flow. Measures reinvestment rate. (Percent)",
      "capexToDepreciation": "Ratio of capital expenditures to depreciation expense, indicating asset reinvestment levels. (Ratio)",
      "capexToRevenue": "Capital expenditures as a percentage of revenue. Indicates capital intensity. (Percent)",
      "salesGeneralAndAdministrativeToRevenue": "SG&A expenses as a proportion of revenue. Example: 0. (Number, optional)",
      "researchAndDevelopementToRevenue": "The ratio of research and development (R&D) spending to total revenue, expressing innovation investment intensity. Example: 0.06 for 6% of revenue. (Number, percent, competitiveness metric)",
      "stockBasedCompensationToRevenue": "Ratio of stock-based compensation expense to total revenue. Example: 0.04 for 4% of revenue. (Number, cost analysis)",
      "intangiblesToTotalAssets": "Ratio of intangible assets to total assets. Indicates the proportion of a company's assets that are intangible. (Number, percent, optional)",
      "averageReceivables": "Average accounts receivable over the reporting period. (Number, e.g., USD)",
      "averagePayables": "Average accounts payable over the reporting period. (Number, e.g., USD)",
      "averageInventory": "Average value of inventory held during the reporting period, typically calculated as the mean of beginning and ending inventory. (Number, e.g., USD)",
      "daysOfSalesOutstanding": "Average number of days it takes to collect payment after a sale. (Accounts Receivable / Revenue) * 365. (Number, days)",
      "daysOfPayablesOutstanding": "Number of days the company takes to pay its suppliers. Calculated as (Average Payables / Cost of Goods Sold) * 365. (Number, days)",
      "daysOfInventoryOutstanding": "Number of days inventory remains on hand before being sold. Calculated as (Average Inventory / Cost of Goods Sold) * 365. (Number, days)",
      "operatingCycle": "Number of days between acquisition of inventory and collection of cash from sales. Example: 74.48 days. (Number, optional)",
      "cashConversionCycle": "Measures the number of days it takes for a company to convert resource inputs into cash flows from sales. Calculated as days inventory outstanding + days sales outstanding - days payables outstanding. (Number, days)",
      "freeCashFlowToEquity": "Free cash flow available to equity holders after interest and principal payments on debt. (Number, currency)",
      "freeCashFlowToFirm": "Free cash flow available to all capital providers (equity + debt). (Number, currency)",
      "tangibleAssetValue": "Value of all tangible assets (excludes intangibles/goodwill) on the balance sheet. Example: 300,000,000,000 for a major manufacturer. (Number, asset analysis)",
      "netCurrentAssetValue": "Net value of current assets minus current liabilities. Example: -155043000000. (Number, optional)"
    }
  },
  {
    "name": "Key Metrics API",
    "description": "The key-metrics endpoint delivers a curated bundle of profitability, leverage, liquidity, and valuation measures—one hit replaces dozens of individual ratio calls, perfect for mobile dashboards and semantic search pipelines that need fast, broad context.",
    "category": "valuation",
    "use_cases": [
      "mobile apps showing quick health snapshots",
      "semantic search over financial KPIs",
      "back-fill factor databases with few API hits",
      "credit analysts gauging leverage vs returns",
      "assistant one-shot answers on multiple metrics"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {
        "limit": "An integer cap on the number of results returned by the endpoint. Example: 50 to restrict output to the top 50 matches. Must be ≥1 and ≤1000. (Integer, optional; defaults to 100)",
        "period": "A string or integer indicating the fiscal period for which data is requested. Example: \"annual\" or \"quarter\" to indicate annual or quarterly data. (String or Number, required for period-based endpoints)"
      }
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "fiscalYear": "The fiscal year to which a financial data point pertains, typically in four-digit format. Example: 2023. (Number or String)",
      "period": "The fiscal period associated with the data point, such as a quarter (\"Q2\") or full year. Example: \"Q2\". (String)",
      "reportedCurrency": "The currency in which all reported values are denominated, as per ISO 4217. Example: 'USD' for US dollars. (String, required for financial data integrity)",
      "marketCap": "The market capitalization of the company, calculated as share price multiplied by total shares outstanding. Example: \"None\" or 1500000000000 (1.5 trillion). (Number or String)",
      "enterpriseValue": "The total Enterprise Value, calculated as market capitalization plus net debt and minority interest, minus cash and equivalents. Example: 2500000000000. (Number)",
      "evToSales": "The Enterprise Value to Sales ratio, evaluating how the market values a company relative to its revenue. Example: 3.8. (Number)",
      "evToOperatingCashFlow": "Enterprise value divided by operating cash flow. (Number, ratio)",
      "evToFreeCashFlow": "Enterprise value divided by free cash flow. Lower is generally better. (Number, ratio)",
      "evToEBITDA": "The Enterprise Value to EBITDA ratio, a valuation multiple used to compare companies. Example: 12.5. (Number)",
      "netDebtToEBITDA": "The Net Debt to EBITDA ratio, measuring leverage relative to earnings. Example: 1.7. (Number)",
      "currentRatio": "The Current Ratio, a liquidity metric calculated as current assets divided by current liabilities. Example: 2.1. (Number)",
      "incomeQuality": "A measure of the proportion of income that is cash-based rather than accrual-based. Higher values indicate higher quality. Example: 1.26. (Number, optional)",
      "grahamNumber": "The Graham Number, a value formula estimating a stock’s fair value based on earnings and book value. Example: 45.67. (Number)",
      "grahamNetNet": "A deep value investing metric: Current assets minus total liabilities, preferred stock, and intangibles. Used to find 'net-net' bargains below liquidation value. Example: 2,000,000 for an undervalued microcap. (Number, value investing screeners)",
      "taxBurden": "Proportion of pre-tax profit retained after paying taxes (1 - effective tax rate). Example: 0.7591 means 75.91% profit retention. (Number, optional)",
      "interestBurden": "A ratio showing the effect of interest expense on pre-tax income. Calculated as EBIT divided by pre-tax income. Example: 0.76. (Number, optional)",
      "workingCapital": "Working Capital, calculated as current assets minus current liabilities. Example: 20000000. (Number)",
      "investedCapital": "Total amount of capital invested in a company, typically calculated as total debt plus equity minus cash. (Number, optional)",
      "returnOnAssets": "Net income divided by total assets, measuring asset efficiency. Example: 0.18 for an 18% ROA. (Number, required in profitability analysis)",
      "operatingReturnOnAssets": "Ratio of operating income to total assets, measuring how efficiently assets generate profits from operations. (Number, percent, optional)",
      "returnOnTangibleAssets": "Net income divided by tangible assets, stripping out intangibles for conservative analysis. Example: 0.19 for 19%. (Number, asset quality metric)",
      "returnOnEquity": "Net income divided by average shareholders’ equity, indicating profit generated per dollar of equity. Example: 0.35 for 35% ROE. (Number, must-have for investor reports)",
      "returnOnInvestedCapital": "The Return on Invested Capital (ROIC) value, measuring efficiency of capital allocation. Example: 8.2. (Number, Percentage)",
      "returnOnCapitalEmployed": "EBIT divided by capital employed (total assets minus current liabilities), showing how effectively capital is used. Example: 0.22 for 22% return. (Number, required in capital efficiency screens)",
      "earningsYield": "Earnings per share divided by share price, expressed as a percentage. (Number, percent)",
      "freeCashFlowYield": "The Free Cash Flow yield, calculated as free cash flow divided by market capitalization. Example: 4.1. (Number, Percentage)",
      "capexToOperatingCashFlow": "Capital expenditures as a percentage of operating cash flow. Measures reinvestment rate. (Percent)",
      "capexToDepreciation": "Ratio of capital expenditures to depreciation expense, indicating asset reinvestment levels. (Ratio)",
      "capexToRevenue": "Capital expenditures as a percentage of revenue. Indicates capital intensity. (Percent)",
      "salesGeneralAndAdministrativeToRevenue": "SG&A expenses as a proportion of revenue. Example: 0. (Number, optional)",
      "researchAndDevelopementToRevenue": "The ratio of research and development (R&D) spending to total revenue, expressing innovation investment intensity. Example: 0.06 for 6% of revenue. (Number, percent, competitiveness metric)",
      "stockBasedCompensationToRevenue": "Ratio of stock-based compensation expense to total revenue. Example: 0.04 for 4% of revenue. (Number, cost analysis)",
      "intangiblesToTotalAssets": "Ratio of intangible assets to total assets. Indicates the proportion of a company's assets that are intangible. (Number, percent, optional)",
      "averageReceivables": "Average accounts receivable over the reporting period. (Number, e.g., USD)",
      "averagePayables": "Average accounts payable over the reporting period. (Number, e.g., USD)",
      "averageInventory": "Average value of inventory held during the reporting period, typically calculated as the mean of beginning and ending inventory. (Number, e.g., USD)",
      "daysOfSalesOutstanding": "Average number of days it takes to collect payment after a sale. (Accounts Receivable / Revenue) * 365. (Number, days)",
      "daysOfPayablesOutstanding": "Number of days the company takes to pay its suppliers. Calculated as (Average Payables / Cost of Goods Sold) * 365. (Number, days)",
      "daysOfInventoryOutstanding": "Number of days inventory remains on hand before being sold. Calculated as (Average Inventory / Cost of Goods Sold) * 365. (Number, days)",
      "operatingCycle": "Number of days between acquisition of inventory and collection of cash from sales. Example: 74.48 days. (Number, optional)",
      "cashConversionCycle": "Measures the number of days it takes for a company to convert resource inputs into cash flows from sales. Calculated as days inventory outstanding + days sales outstanding - days payables outstanding. (Number, days)",
      "freeCashFlowToEquity": "Free cash flow available to equity holders after interest and principal payments on debt. (Number, currency)",
      "freeCashFlowToFirm": "Free cash flow available to all capital providers (equity + debt). (Number, currency)",
      "tangibleAssetValue": "Value of all tangible assets (excludes intangibles/goodwill) on the balance sheet. Example: 300,000,000,000 for a major manufacturer. (Number, asset analysis)",
      "netCurrentAssetValue": "Net value of current assets minus current liabilities. Example: -155043000000. (Number, optional)"
    }
  },
  {
    "name": "Financial Ratios API",
    "description": "Financial Ratios API (category: financials) pushes detailed margin, turnover, leverage, and coverage ratios—over 60 fields—so analysts can dissect profitability, liquidity, and efficiency without manual formula building.",
    "category": "financials",
    "use_cases": [
      "peer-to-peer margin benchmarking",
      "liquidity risk scoring engines",
      "build DuPont decomposition dashboards",
      "identify working-capital outliers",
      "assistant breakdowns of profitability ratios"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {
        "limit": "An integer cap on the number of results returned by the endpoint. Example: 50 to restrict output to the top 50 matches. Must be ≥1 and ≤1000. (Integer, optional; defaults to 100)",
        "period": "A string or integer indicating the fiscal period for which data is requested. Example: \"annual\" or \"quarter\" to indicate annual or quarterly data. (String or Number, required for period-based endpoints)"
      }
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "fiscalYear": "The fiscal year to which a financial data point pertains, typically in four-digit format. Example: 2023. (Number or String)",
      "period": "The fiscal period associated with the data point, such as a quarter (\"Q2\") or full year. Example: \"Q2\". (String)",
      "reportedCurrency": "The currency in which all reported values are denominated, as per ISO 4217. Example: 'USD' for US dollars. (String, required for financial data integrity)",
      "grossProfitMargin": "The gross profit margin, expressed as a percentage of revenue. Example: 40.0. (Number, Percentage)",
      "ebitMargin": "Operating margin; EBIT (Earnings Before Interest and Tax) as a percentage of revenue. (Number, percent)",
      "ebitdaMargin": "The EBITDA margin, expressed as a percentage of revenue. Example: 22.0. (Number, Percentage)",
      "operatingProfitMargin": "Operating profit (EBIT) divided by revenue. Example: 0.32 means 32% operating margin. (Number, optional)",
      "pretaxProfitMargin": "Earnings before tax divided by total revenue. Example: 0.3158 means 31.58% pre-tax margin. (Number, optional)",
      "continuousOperationsProfitMargin": "Profit margin from continuous operations, calculated as continuous operations net income divided by revenue. (Percent)",
      "netProfitMargin": "Ratio of net income to total revenue. Indicates overall profitability after all expenses. (Number, percent, optional)",
      "bottomLineProfitMargin": "Net income divided by revenue, representing the percent of revenue that remains as profit. (Percent)",
      "receivablesTurnover": "Ratio of net credit sales to average receivables. Measures efficiency in collecting receivables. (Number, optional)",
      "payablesTurnover": "Ratio measuring how quickly a company pays off its suppliers, calculated as cost of goods sold divided by average accounts payable. (Number, optional)",
      "inventoryTurnover": "Number of times inventory is sold or used in a period. Example: 28.87 means inventory turned over 28.87 times that period. (Number, optional)",
      "fixedAssetTurnover": "Revenue divided by average net fixed assets. Measures how efficiently fixed assets generate revenue. (Number, ratio)",
      "assetTurnover": "The asset turnover ratio, measuring how efficiently a company uses its assets to generate revenue. Example: 1.2. (Number)",
      "currentRatio": "The Current Ratio, a liquidity metric calculated as current assets divided by current liabilities. Example: 2.1. (Number)",
      "quickRatio": "Ratio of liquid assets (cash, marketable securities, receivables) to current liabilities. Indicates short-term liquidity. (Number, optional)",
      "solvencyRatio": "Measures company’s ability to meet long-term obligations, typically total assets divided by total liabilities. Example: 2.0 means assets are 2x liabilities. (Number, solvency analysis)",
      "cashRatio": "The cash ratio, a conservative liquidity metric calculated as cash and cash equivalents divided by current liabilities. Example: 0.8. (Number)",
      "priceToEarningsRatio": "The Price to Earnings (P/E) ratio, comparing share price to earnings per share. Example: 18.5. (Number)",
      "priceToEarningsGrowthRatio": "PEG ratio: price-to-earnings ratio divided by earnings growth rate, used for stock valuation. (Number, optional)",
      "forwardPriceToEarningsGrowthRatio": "Forward price/earnings-to-growth (PEG) ratio, based on forecasted earnings. (Number, ratio)",
      "priceToBookRatio": "Ratio of share price to book value per share, measuring market valuation against net asset value. (Number, optional)",
      "priceToSalesRatio": "Ratio of share price to revenue per share. Used to value companies with low or negative earnings. (Number, optional)",
      "priceToFreeCashFlowRatio": "Ratio of market cap to free cash flow. Indicates how much investors are paying for each dollar of free cash flow. (Number, optional)",
      "priceToOperatingCashFlowRatio": "Ratio of market cap to operating cash flow. (Number, optional)",
      "debtToAssetsRatio": "Ratio of total debt to total assets. Shows what portion of assets is financed with debt. (Number, ratio)",
      "debtToEquityRatio": "The Debt to Equity ratio, measuring financial leverage. Example: 0.33. (Number)",
      "debtToCapitalRatio": "Ratio of total debt to the sum of debt and equity capital. Measures financial leverage. (Number, ratio)",
      "longTermDebtToCapitalRatio": "Ratio of a company's long-term debt to its total capital (long-term debt plus equity). Indicates the portion of capital structure financed by long-term debt. (Number, percent, optional)",
      "financialLeverageRatio": "Ratio of total assets to total equity. Measures the degree of financial leverage. (Number, ratio)",
      "workingCapitalTurnoverRatio": "Net sales divided by average working capital, measuring how efficiently capital is used. Example: 5.0 means sales are 5x working capital. (Number, efficiency metric)",
      "operatingCashFlowRatio": "Ratio of operating cash flow to current liabilities, measuring short-term liquidity. (Number, optional)",
      "operatingCashFlowSalesRatio": "Ratio of operating cash flow to sales/revenue, showing the cash conversion efficiency. (Number, percent, optional)",
      "freeCashFlowOperatingCashFlowRatio": "Ratio of free cash flow to operating cash flow. Indicates the proportion of cash flow remaining after capex. (Number, ratio)",
      "debtServiceCoverageRatio": "The ratio of net operating income to total debt service obligations. Indicates ability to pay current debt obligations. (Number, ratio)",
      "interestCoverageRatio": "Ratio of EBIT to interest expense, indicating a company’s ability to meet interest payments. Example: 5.02. (Number, optional)",
      "shortTermOperatingCashFlowCoverageRatio": "Operating cash flow divided by short-term debt, measuring short-term solvency. Example: 1.5 means 1.5x coverage. (Number, liquidity metric)",
      "operatingCashFlowCoverageRatio": "Ratio of operating cash flow to total debt service obligations. Example: 1.11 means operating cash flow covers debt service 1.11x. (Number, optional)",
      "capitalExpenditureCoverageRatio": "Operating cash flow divided by capital expenditures. Measures the ability to fund capex with internal cash generation. (Ratio)",
      "dividendPaidAndCapexCoverageRatio": "The ratio of cash flow from operations to the sum of dividends paid and capital expenditures. (Number, ratio)",
      "dividendPayoutRatio": "Proportion of net income paid out as dividends to shareholders. (Number, percent)",
      "dividendYield": "The dividend yield, calculated as annual dividends per share divided by current share price. Example: 1.75. (Number, Percentage)",
      "dividendYieldPercentage": "Annualized dividend as a percentage of the current share price. (Number, percent)",
      "revenuePerShare": "Revenue divided by the number of shares outstanding. Example: 25.75 means each share is backed by $25.75 in revenue. (Number, per-share valuation metric)",
      "netIncomePerShare": "Net income divided by the weighted average shares outstanding (basic EPS). (Number, optional)",
      "interestDebtPerShare": "Interest-bearing debt per outstanding share. Example: 6.94 for $6.94 per share. (Number, optional)",
      "cashPerShare": "Total cash and cash equivalents divided by shares outstanding, showing liquidity on a per-share basis. (Number, e.g., USD)",
      "bookValuePerShare": "Book value of equity divided by total outstanding shares. Indicates the per-share value of a company's net assets. (Number, e.g., USD)",
      "tangibleBookValuePerShare": "Tangible book value divided by shares outstanding, showing true hard asset backing per share. Example: 8.25 per share. (Number, per-share asset metric)",
      "shareholdersEquityPerShare": "Shareholders' equity divided by shares outstanding. Example: 10.50 means each share is backed by $10.50 in equity. (Number, per-share analysis)",
      "operatingCashFlowPerShare": "Operating cash flow divided by shares outstanding. Example: 7.71 for $7.71 per share. (Number, optional)",
      "capexPerShare": "Capital expenditures divided by total shares outstanding. Indicates the reinvestment per share. (Number, e.g., USD)",
      "freeCashFlowPerShare": "Free cash flow divided by total shares outstanding. (Number, currency per share)",
      "netIncomePerEBT": "Ratio of net income to earnings before tax (EBT). Measures tax efficiency and non-operating impacts. (Number, optional)",
      "ebtPerEbit": "Ratio of earnings before tax (EBT) to EBIT. Shows the impact of non-operating income/expenses. (Number, ratio)",
      "priceToFairValue": "Ratio of current share price to a fair value estimate. Values over 1.0 indicate overvaluation. (Number, optional)",
      "debtToMarketCap": "Ratio of total debt to the company's current market capitalization. (Number, ratio)",
      "effectiveTaxRate": "Income tax expense divided by pre-tax income. (Number, percent)",
      "enterpriseValueMultiple": "Ratio of enterprise value (EV) to a performance metric, such as EBITDA or sales. (Number, ratio)"
    }
  },
  {
    "name": "Financial Ratios API",
    "description": "The ratios endpoint converts raw statements into ready-to-use metrics—ROA, inventory turnover, dividend yield—cutting data-prep time for dashboards, quant models, and conversational assistants that need ratio intelligence instantly.",
    "category": "financials",
    "use_cases": [
      "alert when leverage exceeds thresholds",
      "supply ratios to factor back-tests",
      "populate KPI tables in investor decks",
      "screen for high dividend-coverage stocks",
      "assistant quick replies on liquidity/solvency"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {
        "limit": "An integer cap on the number of results returned by the endpoint. Example: 50 to restrict output to the top 50 matches. Must be ≥1 and ≤1000. (Integer, optional; defaults to 100)",
        "period": "A string or integer indicating the fiscal period for which data is requested. Example: \"annual\" or \"quarter\" to indicate annual or quarterly data. (String or Number, required for period-based endpoints)"
      }
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "fiscalYear": "The fiscal year to which a financial data point pertains, typically in four-digit format. Example: 2023. (Number or String)",
      "period": "The fiscal period associated with the data point, such as a quarter (\"Q2\") or full year. Example: \"Q2\". (String)",
      "reportedCurrency": "The currency in which all reported values are denominated, as per ISO 4217. Example: 'USD' for US dollars. (String, required for financial data integrity)",
      "grossProfitMargin": "The gross profit margin, expressed as a percentage of revenue. Example: 40.0. (Number, Percentage)",
      "ebitMargin": "Operating margin; EBIT (Earnings Before Interest and Tax) as a percentage of revenue. (Number, percent)",
      "ebitdaMargin": "The EBITDA margin, expressed as a percentage of revenue. Example: 22.0. (Number, Percentage)",
      "operatingProfitMargin": "Operating profit (EBIT) divided by revenue. Example: 0.32 means 32% operating margin. (Number, optional)",
      "pretaxProfitMargin": "Earnings before tax divided by total revenue. Example: 0.3158 means 31.58% pre-tax margin. (Number, optional)",
      "continuousOperationsProfitMargin": "Profit margin from continuous operations, calculated as continuous operations net income divided by revenue. (Percent)",
      "netProfitMargin": "Ratio of net income to total revenue. Indicates overall profitability after all expenses. (Number, percent, optional)",
      "bottomLineProfitMargin": "Net income divided by revenue, representing the percent of revenue that remains as profit. (Percent)",
      "receivablesTurnover": "Ratio of net credit sales to average receivables. Measures efficiency in collecting receivables. (Number, optional)",
      "payablesTurnover": "Ratio measuring how quickly a company pays off its suppliers, calculated as cost of goods sold divided by average accounts payable. (Number, optional)",
      "inventoryTurnover": "Number of times inventory is sold or used in a period. Example: 28.87 means inventory turned over 28.87 times that period. (Number, optional)",
      "fixedAssetTurnover": "Revenue divided by average net fixed assets. Measures how efficiently fixed assets generate revenue. (Number, ratio)",
      "assetTurnover": "The asset turnover ratio, measuring how efficiently a company uses its assets to generate revenue. Example: 1.2. (Number)",
      "currentRatio": "The Current Ratio, a liquidity metric calculated as current assets divided by current liabilities. Example: 2.1. (Number)",
      "quickRatio": "Ratio of liquid assets (cash, marketable securities, receivables) to current liabilities. Indicates short-term liquidity. (Number, optional)",
      "solvencyRatio": "Measures company’s ability to meet long-term obligations, typically total assets divided by total liabilities. Example: 2.0 means assets are 2x liabilities. (Number, solvency analysis)",
      "cashRatio": "The cash ratio, a conservative liquidity metric calculated as cash and cash equivalents divided by current liabilities. Example: 0.8. (Number)",
      "priceToEarningsRatio": "The Price to Earnings (P/E) ratio, comparing share price to earnings per share. Example: 18.5. (Number)",
      "priceToEarningsGrowthRatio": "PEG ratio: price-to-earnings ratio divided by earnings growth rate, used for stock valuation. (Number, optional)",
      "forwardPriceToEarningsGrowthRatio": "Forward price/earnings-to-growth (PEG) ratio, based on forecasted earnings. (Number, ratio)",
      "priceToBookRatio": "Ratio of share price to book value per share, measuring market valuation against net asset value. (Number, optional)",
      "priceToSalesRatio": "Ratio of share price to revenue per share. Used to value companies with low or negative earnings. (Number, optional)",
      "priceToFreeCashFlowRatio": "Ratio of market cap to free cash flow. Indicates how much investors are paying for each dollar of free cash flow. (Number, optional)",
      "priceToOperatingCashFlowRatio": "Ratio of market cap to operating cash flow. (Number, optional)",
      "debtToAssetsRatio": "Ratio of total debt to total assets. Shows what portion of assets is financed with debt. (Number, ratio)",
      "debtToEquityRatio": "The Debt to Equity ratio, measuring financial leverage. Example: 0.33. (Number)",
      "debtToCapitalRatio": "Ratio of total debt to the sum of debt and equity capital. Measures financial leverage. (Number, ratio)",
      "longTermDebtToCapitalRatio": "Ratio of a company's long-term debt to its total capital (long-term debt plus equity). Indicates the portion of capital structure financed by long-term debt. (Number, percent, optional)",
      "financialLeverageRatio": "Ratio of total assets to total equity. Measures the degree of financial leverage. (Number, ratio)",
      "workingCapitalTurnoverRatio": "Net sales divided by average working capital, measuring how efficiently capital is used. Example: 5.0 means sales are 5x working capital. (Number, efficiency metric)",
      "operatingCashFlowRatio": "Ratio of operating cash flow to current liabilities, measuring short-term liquidity. (Number, optional)",
      "operatingCashFlowSalesRatio": "Ratio of operating cash flow to sales/revenue, showing the cash conversion efficiency. (Number, percent, optional)",
      "freeCashFlowOperatingCashFlowRatio": "Ratio of free cash flow to operating cash flow. Indicates the proportion of cash flow remaining after capex. (Number, ratio)",
      "debtServiceCoverageRatio": "The ratio of net operating income to total debt service obligations. Indicates ability to pay current debt obligations. (Number, ratio)",
      "interestCoverageRatio": "Ratio of EBIT to interest expense, indicating a company’s ability to meet interest payments. Example: 5.02. (Number, optional)",
      "shortTermOperatingCashFlowCoverageRatio": "Operating cash flow divided by short-term debt, measuring short-term solvency. Example: 1.5 means 1.5x coverage. (Number, liquidity metric)",
      "operatingCashFlowCoverageRatio": "Ratio of operating cash flow to total debt service obligations. Example: 1.11 means operating cash flow covers debt service 1.11x. (Number, optional)",
      "capitalExpenditureCoverageRatio": "Operating cash flow divided by capital expenditures. Measures the ability to fund capex with internal cash generation. (Ratio)",
      "dividendPaidAndCapexCoverageRatio": "The ratio of cash flow from operations to the sum of dividends paid and capital expenditures. (Number, ratio)",
      "dividendPayoutRatio": "Proportion of net income paid out as dividends to shareholders. (Number, percent)",
      "dividendYield": "The dividend yield, calculated as annual dividends per share divided by current share price. Example: 1.75. (Number, Percentage)",
      "dividendYieldPercentage": "Annualized dividend as a percentage of the current share price. (Number, percent)",
      "revenuePerShare": "Revenue divided by the number of shares outstanding. Example: 25.75 means each share is backed by $25.75 in revenue. (Number, per-share valuation metric)",
      "netIncomePerShare": "Net income divided by the weighted average shares outstanding (basic EPS). (Number, optional)",
      "interestDebtPerShare": "Interest-bearing debt per outstanding share. Example: 6.94 for $6.94 per share. (Number, optional)",
      "cashPerShare": "Total cash and cash equivalents divided by shares outstanding, showing liquidity on a per-share basis. (Number, e.g., USD)",
      "bookValuePerShare": "Book value of equity divided by total outstanding shares. Indicates the per-share value of a company's net assets. (Number, e.g., USD)",
      "tangibleBookValuePerShare": "Tangible book value divided by shares outstanding, showing true hard asset backing per share. Example: 8.25 per share. (Number, per-share asset metric)",
      "shareholdersEquityPerShare": "Shareholders' equity divided by shares outstanding. Example: 10.50 means each share is backed by $10.50 in equity. (Number, per-share analysis)",
      "operatingCashFlowPerShare": "Operating cash flow divided by shares outstanding. Example: 7.71 for $7.71 per share. (Number, optional)",
      "capexPerShare": "Capital expenditures divided by total shares outstanding. Indicates the reinvestment per share. (Number, e.g., USD)",
      "freeCashFlowPerShare": "Free cash flow divided by total shares outstanding. (Number, currency per share)",
      "netIncomePerEBT": "Ratio of net income to earnings before tax (EBT). Measures tax efficiency and non-operating impacts. (Number, optional)",
      "ebtPerEbit": "Ratio of earnings before tax (EBT) to EBIT. Shows the impact of non-operating income/expenses. (Number, ratio)",
      "priceToFairValue": "Ratio of current share price to a fair value estimate. Values over 1.0 indicate overvaluation. (Number, optional)",
      "debtToMarketCap": "Ratio of total debt to the company's current market capitalization. (Number, ratio)",
      "effectiveTaxRate": "Income tax expense divided by pre-tax income. (Number, percent)",
      "enterpriseValueMultiple": "Ratio of enterprise value (EV) to a performance metric, such as EBITDA or sales. (Number, ratio)"
    }
  },
  {
    "name": "Key Metrics TTM API",
    "description": "Key Metrics TTM API (category: valuation) compresses the last four quarters into rolling metrics—EV/EBITDA TTM, ROE TTM, FCF yield TTM—providing smoothed signals for momentum screens and assistants asked for “Apple’s trailing ROIC.”",
    "category": "valuation",
    "use_cases": [
      "momentum and quality factor models",
      "smooth seasonality in KPI dashboards",
      "credit covenants on rolling leverage",
      "compare trailing vs forward valuation",
      "assistant TTM metric look-ups"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "marketCap": "The market capitalization of the company, calculated as share price multiplied by total shares outstanding. Example: \"None\" or 1500000000000 (1.5 trillion). (Number or String)",
      "enterpriseValueTTM": "Enterprise value calculated using trailing twelve months data. (Number, currency)",
      "evToSalesTTM": "Enterprise Value to Sales ratio (Trailing Twelve Months). Example: 3.5. (Number)",
      "evToOperatingCashFlowTTM": "Trailing twelve months EV to operating cash flow. (Number, ratio)",
      "evToFreeCashFlowTTM": "Trailing twelve months EV to free cash flow. (Number, ratio)",
      "evToEBITDATTM": "The Enterprise Value to EBITDA (Trailing Twelve Months) multiple. Example: 10.8. (Number)",
      "netDebtToEBITDATTM": "Net Debt to EBITDA (Trailing Twelve Months) ratio. Example: 1.5. (Number)",
      "currentRatioTTM": "The trailing twelve months Current Ratio. Example: 2.0. (Number)",
      "incomeQualityTTM": "Trailing twelve months (TTM) value for income quality. Example: 1.12. (Number, optional)",
      "grahamNumberTTM": "The Graham Number calculated using trailing twelve months earnings and book value. Example: 50.30. (Number)",
      "grahamNetNetTTM": "Graham Net-Net calculation using trailing twelve months (TTM) values for the most up-to-date deep value assessment. Example: 2,100,000 updated for last four quarters. (Number, TTM-based valuation)",
      "taxBurdenTTM": "Tax burden ratio (net income/pre-tax income) using TTM values, showing effective tax impact. Example: 0.8 means 80% of pre-tax income is retained. (Number, TTM tax efficiency)",
      "interestBurdenTTM": "Interest burden calculated on a trailing twelve months basis. Example: 0.76. (Number, optional)",
      "workingCapitalTTM": "Working capital (current assets minus current liabilities) over the trailing twelve months. Example: 25,000,000,000. (Number, TTM liquidity metric)",
      "investedCapitalTTM": "Trailing twelve month figure for invested capital. (Number, optional)",
      "returnOnAssetsTTM": "Return on assets calculated over the trailing twelve months. Example: 0.185 for 18.5%. (Number, TTM metric)",
      "operatingReturnOnAssetsTTM": "Trailing twelve month value for operating return on assets. (Number, percent, optional)",
      "returnOnTangibleAssetsTTM": "Return on tangible assets using TTM data. Example: 0.18 for 18%. (Number, conservative TTM analysis)",
      "returnOnEquityTTM": "Return on Equity (Trailing Twelve Months), measuring profitability relative to shareholder equity. Example: 15.2. (Number, Percentage)",
      "returnOnInvestedCapitalTTM": "Return on invested capital (ROIC) calculated using TTM numbers. Example: 0.16 for 16%. (Number, capital allocation efficiency)",
      "returnOnCapitalEmployedTTM": "Return on capital employed, trailing twelve months. Example: 0.21 for 21%. (Number, TTM efficiency metric)",
      "earningsYieldTTM": "Earnings Yield (Trailing Twelve Months), calculated as EPS divided by share price. Example: 5.6. (Number, Percentage)",
      "freeCashFlowYieldTTM": "Free Cash Flow yield (Trailing Twelve Months), representing free cash flow as a percentage of market capitalization. Example: 5.0. (Number, Percentage)",
      "capexToOperatingCashFlowTTM": "Capex to operating cash flow ratio for the trailing twelve months.",
      "capexToDepreciationTTM": "Capex to depreciation ratio for the trailing twelve months.",
      "capexToRevenueTTM": "Capex to revenue ratio for the trailing twelve months.",
      "salesGeneralAndAdministrativeToRevenueTTM": "SG&A to revenue, trailing twelve months. Example: 0. (Number, optional)",
      "researchAndDevelopementToRevenueTTM": "R&D to revenue ratio calculated over the trailing twelve months (TTM). Example: 0.055 for 5.5%. (Number, TTM analysis)",
      "stockBasedCompensationToRevenueTTM": "Stock-based compensation to revenue ratio using TTM values. Example: 0.038 for 3.8%. (Number, updated compensation metric)",
      "intangiblesToTotalAssetsTTM": "Trailing twelve month ratio of intangible assets to total assets. (Number, percent, optional)",
      "averageReceivablesTTM": "Average accounts receivable over the trailing twelve months.",
      "averagePayablesTTM": "Average accounts payable over the trailing twelve months.",
      "averageInventoryTTM": "Average inventory value for the trailing twelve months.",
      "daysOfSalesOutstandingTTM": "Trailing twelve months average for days sales outstanding. (Number, days)",
      "daysOfPayablesOutstandingTTM": "Trailing twelve months average for days of payables outstanding. (Number, days)",
      "daysOfInventoryOutstandingTTM": "Trailing twelve months average for days of inventory outstanding. (Number, days)",
      "operatingCycleTTM": "Operating cycle, trailing twelve months. Example: 66.61 days. (Number, optional)",
      "cashConversionCycleTTM": "Cash Conversion Cycle (Trailing Twelve Months), indicating operational efficiency in days. Example: 48. (Number)",
      "freeCashFlowToEquityTTM": "Trailing twelve months free cash flow to equity. (Number, currency)",
      "freeCashFlowToFirmTTM": "Trailing twelve months free cash flow to firm. (Number, currency)",
      "tangibleAssetValueTTM": "Tangible asset value using TTM data for ongoing asset quality assessment. Example: 295,000,000,000. (Number, updated asset analysis)",
      "netCurrentAssetValueTTM": "Trailing twelve months net current asset value. Example: -144087000000. (Number, optional)"
    }
  },
  {
    "name": "Key Metrics TTM API",
    "description": "The key-metrics-ttm endpoint distills rolling 12-month efficiency, profitability, and valuation figures—ideal for year-over-year comps, quant ranking tables, and voice bots citing up-to-date performance indicators.",
    "category": "valuation",
    "use_cases": [
      "year-over-year improvement dashboards",
      "quant ranking of ROA TTM vs peers",
      "alert when FCF yield TTM flips negative",
      "populate trend lines in research notes",
      "assistant comparisons of trailing metrics"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "marketCap": "The market capitalization of the company, calculated as share price multiplied by total shares outstanding. Example: \"None\" or 1500000000000 (1.5 trillion). (Number or String)",
      "enterpriseValueTTM": "Enterprise value calculated using trailing twelve months data. (Number, currency)",
      "evToSalesTTM": "Enterprise Value to Sales ratio (Trailing Twelve Months). Example: 3.5. (Number)",
      "evToOperatingCashFlowTTM": "Trailing twelve months EV to operating cash flow. (Number, ratio)",
      "evToFreeCashFlowTTM": "Trailing twelve months EV to free cash flow. (Number, ratio)",
      "evToEBITDATTM": "The Enterprise Value to EBITDA (Trailing Twelve Months) multiple. Example: 10.8. (Number)",
      "netDebtToEBITDATTM": "Net Debt to EBITDA (Trailing Twelve Months) ratio. Example: 1.5. (Number)",
      "currentRatioTTM": "The trailing twelve months Current Ratio. Example: 2.0. (Number)",
      "incomeQualityTTM": "Trailing twelve months (TTM) value for income quality. Example: 1.12. (Number, optional)",
      "grahamNumberTTM": "The Graham Number calculated using trailing twelve months earnings and book value. Example: 50.30. (Number)",
      "grahamNetNetTTM": "Graham Net-Net calculation using trailing twelve months (TTM) values for the most up-to-date deep value assessment. Example: 2,100,000 updated for last four quarters. (Number, TTM-based valuation)",
      "taxBurdenTTM": "Tax burden ratio (net income/pre-tax income) using TTM values, showing effective tax impact. Example: 0.8 means 80% of pre-tax income is retained. (Number, TTM tax efficiency)",
      "interestBurdenTTM": "Interest burden calculated on a trailing twelve months basis. Example: 0.76. (Number, optional)",
      "workingCapitalTTM": "Working capital (current assets minus current liabilities) over the trailing twelve months. Example: 25,000,000,000. (Number, TTM liquidity metric)",
      "investedCapitalTTM": "Trailing twelve month figure for invested capital. (Number, optional)",
      "returnOnAssetsTTM": "Return on assets calculated over the trailing twelve months. Example: 0.185 for 18.5%. (Number, TTM metric)",
      "operatingReturnOnAssetsTTM": "Trailing twelve month value for operating return on assets. (Number, percent, optional)",
      "returnOnTangibleAssetsTTM": "Return on tangible assets using TTM data. Example: 0.18 for 18%. (Number, conservative TTM analysis)",
      "returnOnEquityTTM": "Return on Equity (Trailing Twelve Months), measuring profitability relative to shareholder equity. Example: 15.2. (Number, Percentage)",
      "returnOnInvestedCapitalTTM": "Return on invested capital (ROIC) calculated using TTM numbers. Example: 0.16 for 16%. (Number, capital allocation efficiency)",
      "returnOnCapitalEmployedTTM": "Return on capital employed, trailing twelve months. Example: 0.21 for 21%. (Number, TTM efficiency metric)",
      "earningsYieldTTM": "Earnings Yield (Trailing Twelve Months), calculated as EPS divided by share price. Example: 5.6. (Number, Percentage)",
      "freeCashFlowYieldTTM": "Free Cash Flow yield (Trailing Twelve Months), representing free cash flow as a percentage of market capitalization. Example: 5.0. (Number, Percentage)",
      "capexToOperatingCashFlowTTM": "Capex to operating cash flow ratio for the trailing twelve months.",
      "capexToDepreciationTTM": "Capex to depreciation ratio for the trailing twelve months.",
      "capexToRevenueTTM": "Capex to revenue ratio for the trailing twelve months.",
      "salesGeneralAndAdministrativeToRevenueTTM": "SG&A to revenue, trailing twelve months. Example: 0. (Number, optional)",
      "researchAndDevelopementToRevenueTTM": "R&D to revenue ratio calculated over the trailing twelve months (TTM). Example: 0.055 for 5.5%. (Number, TTM analysis)",
      "stockBasedCompensationToRevenueTTM": "Stock-based compensation to revenue ratio using TTM values. Example: 0.038 for 3.8%. (Number, updated compensation metric)",
      "intangiblesToTotalAssetsTTM": "Trailing twelve month ratio of intangible assets to total assets. (Number, percent, optional)",
      "averageReceivablesTTM": "Average accounts receivable over the trailing twelve months.",
      "averagePayablesTTM": "Average accounts payable over the trailing twelve months.",
      "averageInventoryTTM": "Average inventory value for the trailing twelve months.",
      "daysOfSalesOutstandingTTM": "Trailing twelve months average for days sales outstanding. (Number, days)",
      "daysOfPayablesOutstandingTTM": "Trailing twelve months average for days of payables outstanding. (Number, days)",
      "daysOfInventoryOutstandingTTM": "Trailing twelve months average for days of inventory outstanding. (Number, days)",
      "operatingCycleTTM": "Operating cycle, trailing twelve months. Example: 66.61 days. (Number, optional)",
      "cashConversionCycleTTM": "Cash Conversion Cycle (Trailing Twelve Months), indicating operational efficiency in days. Example: 48. (Number)",
      "freeCashFlowToEquityTTM": "Trailing twelve months free cash flow to equity. (Number, currency)",
      "freeCashFlowToFirmTTM": "Trailing twelve months free cash flow to firm. (Number, currency)",
      "tangibleAssetValueTTM": "Tangible asset value using TTM data for ongoing asset quality assessment. Example: 295,000,000,000. (Number, updated asset analysis)",
      "netCurrentAssetValueTTM": "Trailing twelve months net current asset value. Example: -144087000000. (Number, optional)"
    }
  },
  {
    "name": "Financial Ratios TTM API",
    "description": "Financial Ratios TTM API (category: financials) outputs trailing-twelve-month margins, turnover, and capital ratios—giving investors a rolling snapshot devoid of fiscal-year cut-off noise.",
    "category": "financials",
    "use_cases": [
      "compare trailing margins across industries",
      "feed machine-learning features with rolling data",
      "credit models needing up-to-date coverage ratios",
      "spot trend reversals before annual reports",
      "assistant TTM ratio Q&A"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "grossProfitMarginTTM": "Gross Profit margin (Trailing Twelve Months), expressed as a percentage. Example: 41.2. (Number, Percentage)",
      "ebitMarginTTM": "Trailing twelve months EBIT margin. (Number, percent)",
      "ebitdaMarginTTM": "Trailing twelve months EBITDA margin (EBITDA/Revenue). (Number, percent)",
      "operatingProfitMarginTTM": "Operating profit margin, trailing twelve months. Example: 0.318. (Number, optional)",
      "pretaxProfitMarginTTM": "Pre-tax profit margin calculated for the trailing twelve months. Example: 0.3177. (Number, optional)",
      "continuousOperationsProfitMarginTTM": "Continuous operations profit margin over the trailing twelve months.",
      "netProfitMarginTTM": "Net Profit margin (Trailing Twelve Months), expressed as a percentage of revenue. Example: 12.5. (Number, Percentage)",
      "bottomLineProfitMarginTTM": "Net profit margin for the trailing twelve months.",
      "receivablesTurnoverTTM": "Trailing twelve month value for receivables turnover. (Number, optional)",
      "payablesTurnoverTTM": "Trailing twelve month value for payables turnover. (Number, optional)",
      "inventoryTurnoverTTM": "Trailing twelve months inventory turnover ratio. Example: 30.62. (Number, optional)",
      "fixedAssetTurnoverTTM": "Trailing twelve months fixed asset turnover. (Number, ratio)",
      "assetTurnoverTTM": "Asset turnover ratio for the trailing twelve months: revenue divided by average total assets. (Ratio, e.g., 0.82)",
      "currentRatioTTM": "The trailing twelve months Current Ratio. Example: 2.0. (Number)",
      "quickRatioTTM": "Quick Ratio (Trailing Twelve Months), a liquidity metric excluding inventories from current assets. Example: 1.1. (Number)",
      "solvencyRatioTTM": "Solvency ratio calculated with TTM data. Example: 2.1 for improved solvency over last year. (Number, updated solvency metric)",
      "cashRatioTTM": "Cash ratio (cash and equivalents divided by current liabilities) over the trailing twelve months. Indicates short-term solvency. (Ratio)",
      "priceToEarningsRatioTTM": "The trailing twelve months Price-to-Earnings ratio. Example: 17.8. (Number)",
      "priceToEarningsGrowthRatioTTM": "Trailing twelve month PEG ratio. (Number, optional)",
      "forwardPriceToEarningsGrowthRatioTTM": "Trailing twelve months forward PEG ratio. (Number, ratio)",
      "priceToBookRatioTTM": "Trailing twelve month price to book ratio. (Number, optional)",
      "priceToSalesRatioTTM": "Price to Sales ratio (Trailing Twelve Months), comparing share price to revenue per share. Example: 7.5. (Number)",
      "priceToFreeCashFlowRatioTTM": "Trailing twelve month value for price to free cash flow ratio. (Number, optional)",
      "priceToOperatingCashFlowRatioTTM": "Trailing twelve month value for price to operating cash flow ratio. (Number, optional)",
      "debtToAssetsRatioTTM": "Debt to Assets ratio (Trailing Twelve Months), measuring leverage relative to total assets. Example: 0.28. (Number)",
      "debtToEquityRatioTTM": "Trailing twelve months ratio of total debt to shareholders' equity. (Number, ratio)",
      "debtToCapitalRatioTTM": "Trailing twelve months debt to capital ratio. (Number, ratio)",
      "longTermDebtToCapitalRatioTTM": "Trailing twelve month value of the long-term debt to capital ratio. Useful for analyzing recent capital structure trends. (Number, percent, optional)",
      "financialLeverageRatioTTM": "Financial Leverage ratio (Trailing Twelve Months), measuring the ratio of total assets to equity. Example: 2.8. (Number)",
      "workingCapitalTurnoverRatioTTM": "Working capital turnover ratio using TTM numbers. Example: 5.3 TTM. (Number, updated efficiency metric)",
      "operatingCashFlowRatioTTM": "Trailing twelve month operating cash flow ratio. (Number, optional)",
      "operatingCashFlowSalesRatioTTM": "Trailing twelve month value for the operating cash flow to sales ratio. (Number, percent, optional)",
      "freeCashFlowOperatingCashFlowRatioTTM": "Trailing twelve months ratio of free cash flow to operating cash flow. (Number, ratio)",
      "debtServiceCoverageRatioTTM": "Trailing twelve months debt service coverage ratio. (Number, ratio)",
      "interestCoverageRatioTTM": "Trailing twelve months interest coverage ratio. Example: 8.39. (Number, optional)",
      "shortTermOperatingCashFlowCoverageRatioTTM": "Short-term operating cash flow coverage ratio using TTM values. Example: 1.6 TTM. (Number, updated liquidity view)",
      "operatingCashFlowCoverageRatioTTM": "Operating cash flow coverage ratio, trailing twelve months. Example: 1.12. (Number, optional)",
      "capitalExpenditureCoverageRatioTTM": "Capex coverage ratio for the trailing twelve months.",
      "dividendPaidAndCapexCoverageRatioTTM": "Trailing twelve months ratio of cash from operations to dividends plus capex. (Number, ratio)",
      "dividendPayoutRatioTTM": "Trailing twelve months dividend payout ratio. (Number, percent)",
      "dividendYieldTTM": "Trailing twelve months dividend yield. (Number, percent)",
      "enterpriseValueTTM": "Enterprise value calculated using trailing twelve months data. (Number, currency)",
      "revenuePerShareTTM": "Revenue per share calculated over the trailing twelve months. Example: 27.12 TTM. (Number, updated per-share analysis)",
      "netIncomePerShareTTM": "Trailing twelve month net income per share. (Number, optional)",
      "interestDebtPerShareTTM": "Interest-bearing debt per share, TTM. Example: 6.41. (Number, optional)",
      "cashPerShareTTM": "Cash per share measured over the trailing twelve months.",
      "bookValuePerShareTTM": "Book value per share for the trailing twelve months.",
      "tangibleBookValuePerShareTTM": "Tangible book value per share over TTM. Example: 8.40 TTM. (Number, updated per-share view)",
      "shareholdersEquityPerShareTTM": "Shareholders’ equity per share using TTM data. Example: 11.00 TTM. (Number, updated equity view)",
      "operatingCashFlowPerShareTTM": "Operating cash flow per share, trailing twelve months. Example: 7.18. (Number, optional)",
      "capexPerShareTTM": "Capex per share for the trailing twelve months.",
      "freeCashFlowPerShareTTM": "Trailing twelve months free cash flow per share. (Number, currency per share)",
      "netIncomePerEBTTTM": "Trailing twelve month value for net income to EBT ratio. (Number, optional)",
      "ebtPerEbitTTM": "Trailing twelve months EBT to EBIT ratio. (Number, ratio)",
      "priceToFairValueTTM": "Trailing twelve month value for price to fair value ratio. (Number, optional)",
      "debtToMarketCapTTM": "Trailing twelve months debt to market capitalization ratio. (Number, ratio)",
      "effectiveTaxRateTTM": "Trailing twelve months effective tax rate. (Number, percent)",
      "enterpriseValueMultipleTTM": "Trailing twelve months enterprise value multiple. (Number, ratio)"
    }
  },
  {
    "name": "Financial Ratios TTM API",
    "description": "The ratios-ttm endpoint converts the latest four quarters into rolling profitability, liquidity, and leverage statistics—great for momentum screens, risk dashboards, and conversational insights on current financial posture.",
    "category": "financials",
    "use_cases": [
      "momentum screens using ROE TTM growth",
      "risk dashboards tracking solvency changes",
      "identify divergence in turnover ratios",
      "benchmark liquidity across peers in real time",
      "assistant summaries of rolling ratio health"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "grossProfitMarginTTM": "Gross Profit margin (Trailing Twelve Months), expressed as a percentage. Example: 41.2. (Number, Percentage)",
      "ebitMarginTTM": "Trailing twelve months EBIT margin. (Number, percent)",
      "ebitdaMarginTTM": "Trailing twelve months EBITDA margin (EBITDA/Revenue). (Number, percent)",
      "operatingProfitMarginTTM": "Operating profit margin, trailing twelve months. Example: 0.318. (Number, optional)",
      "pretaxProfitMarginTTM": "Pre-tax profit margin calculated for the trailing twelve months. Example: 0.3177. (Number, optional)",
      "continuousOperationsProfitMarginTTM": "Continuous operations profit margin over the trailing twelve months.",
      "netProfitMarginTTM": "Net Profit margin (Trailing Twelve Months), expressed as a percentage of revenue. Example: 12.5. (Number, Percentage)",
      "bottomLineProfitMarginTTM": "Net profit margin for the trailing twelve months.",
      "receivablesTurnoverTTM": "Trailing twelve month value for receivables turnover. (Number, optional)",
      "payablesTurnoverTTM": "Trailing twelve month value for payables turnover. (Number, optional)",
      "inventoryTurnoverTTM": "Trailing twelve months inventory turnover ratio. Example: 30.62. (Number, optional)",
      "fixedAssetTurnoverTTM": "Trailing twelve months fixed asset turnover. (Number, ratio)",
      "assetTurnoverTTM": "Asset turnover ratio for the trailing twelve months: revenue divided by average total assets. (Ratio, e.g., 0.82)",
      "currentRatioTTM": "The trailing twelve months Current Ratio. Example: 2.0. (Number)",
      "quickRatioTTM": "Quick Ratio (Trailing Twelve Months), a liquidity metric excluding inventories from current assets. Example: 1.1. (Number)",
      "solvencyRatioTTM": "Solvency ratio calculated with TTM data. Example: 2.1 for improved solvency over last year. (Number, updated solvency metric)",
      "cashRatioTTM": "Cash ratio (cash and equivalents divided by current liabilities) over the trailing twelve months. Indicates short-term solvency. (Ratio)",
      "priceToEarningsRatioTTM": "The trailing twelve months Price-to-Earnings ratio. Example: 17.8. (Number)",
      "priceToEarningsGrowthRatioTTM": "Trailing twelve month PEG ratio. (Number, optional)",
      "forwardPriceToEarningsGrowthRatioTTM": "Trailing twelve months forward PEG ratio. (Number, ratio)",
      "priceToBookRatioTTM": "Trailing twelve month price to book ratio. (Number, optional)",
      "priceToSalesRatioTTM": "Price to Sales ratio (Trailing Twelve Months), comparing share price to revenue per share. Example: 7.5. (Number)",
      "priceToFreeCashFlowRatioTTM": "Trailing twelve month value for price to free cash flow ratio. (Number, optional)",
      "priceToOperatingCashFlowRatioTTM": "Trailing twelve month value for price to operating cash flow ratio. (Number, optional)",
      "debtToAssetsRatioTTM": "Debt to Assets ratio (Trailing Twelve Months), measuring leverage relative to total assets. Example: 0.28. (Number)",
      "debtToEquityRatioTTM": "Trailing twelve months ratio of total debt to shareholders' equity. (Number, ratio)",
      "debtToCapitalRatioTTM": "Trailing twelve months debt to capital ratio. (Number, ratio)",
      "longTermDebtToCapitalRatioTTM": "Trailing twelve month value of the long-term debt to capital ratio. Useful for analyzing recent capital structure trends. (Number, percent, optional)",
      "financialLeverageRatioTTM": "Financial Leverage ratio (Trailing Twelve Months), measuring the ratio of total assets to equity. Example: 2.8. (Number)",
      "workingCapitalTurnoverRatioTTM": "Working capital turnover ratio using TTM numbers. Example: 5.3 TTM. (Number, updated efficiency metric)",
      "operatingCashFlowRatioTTM": "Trailing twelve month operating cash flow ratio. (Number, optional)",
      "operatingCashFlowSalesRatioTTM": "Trailing twelve month value for the operating cash flow to sales ratio. (Number, percent, optional)",
      "freeCashFlowOperatingCashFlowRatioTTM": "Trailing twelve months ratio of free cash flow to operating cash flow. (Number, ratio)",
      "debtServiceCoverageRatioTTM": "Trailing twelve months debt service coverage ratio. (Number, ratio)",
      "interestCoverageRatioTTM": "Trailing twelve months interest coverage ratio. Example: 8.39. (Number, optional)",
      "shortTermOperatingCashFlowCoverageRatioTTM": "Short-term operating cash flow coverage ratio using TTM values. Example: 1.6 TTM. (Number, updated liquidity view)",
      "operatingCashFlowCoverageRatioTTM": "Operating cash flow coverage ratio, trailing twelve months. Example: 1.12. (Number, optional)",
      "capitalExpenditureCoverageRatioTTM": "Capex coverage ratio for the trailing twelve months.",
      "dividendPaidAndCapexCoverageRatioTTM": "Trailing twelve months ratio of cash from operations to dividends plus capex. (Number, ratio)",
      "dividendPayoutRatioTTM": "Trailing twelve months dividend payout ratio. (Number, percent)",
      "dividendYieldTTM": "Trailing twelve months dividend yield. (Number, percent)",
      "enterpriseValueTTM": "Enterprise value calculated using trailing twelve months data. (Number, currency)",
      "revenuePerShareTTM": "Revenue per share calculated over the trailing twelve months. Example: 27.12 TTM. (Number, updated per-share analysis)",
      "netIncomePerShareTTM": "Trailing twelve month net income per share. (Number, optional)",
      "interestDebtPerShareTTM": "Interest-bearing debt per share, TTM. Example: 6.41. (Number, optional)",
      "cashPerShareTTM": "Cash per share measured over the trailing twelve months.",
      "bookValuePerShareTTM": "Book value per share for the trailing twelve months.",
      "tangibleBookValuePerShareTTM": "Tangible book value per share over TTM. Example: 8.40 TTM. (Number, updated per-share view)",
      "shareholdersEquityPerShareTTM": "Shareholders’ equity per share using TTM data. Example: 11.00 TTM. (Number, updated equity view)",
      "operatingCashFlowPerShareTTM": "Operating cash flow per share, trailing twelve months. Example: 7.18. (Number, optional)",
      "capexPerShareTTM": "Capex per share for the trailing twelve months.",
      "freeCashFlowPerShareTTM": "Trailing twelve months free cash flow per share. (Number, currency per share)",
      "netIncomePerEBTTTM": "Trailing twelve month value for net income to EBT ratio. (Number, optional)",
      "ebtPerEbitTTM": "Trailing twelve months EBT to EBIT ratio. (Number, ratio)",
      "priceToFairValueTTM": "Trailing twelve month value for price to fair value ratio. (Number, optional)",
      "debtToMarketCapTTM": "Trailing twelve months debt to market capitalization ratio. (Number, ratio)",
      "effectiveTaxRateTTM": "Trailing twelve months effective tax rate. (Number, percent)",
      "enterpriseValueMultipleTTM": "Trailing twelve months enterprise value multiple. (Number, ratio)"
    }
  },
  {
    "name": "Financial Scores API",
    "description": "Financial Scores API (category: risk) computes Altman-Z and Piotroski F-scores from up-to-date filings—distilling insolvency risk and quality momentum into easy-to-consume numbers for red-flag dashboards and chatbots asked “How healthy is Apple?”.",
    "category": "risk",
    "use_cases": [
      "credit-risk red-flag systems",
      "ESG or quality-factor composites",
      "alert when Piotroski drops below 5",
      "visual traffic-light health gauges",
      "assistant quick health-score reports"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "reportedCurrency": "The currency in which all reported values are denominated, as per ISO 4217. Example: 'USD' for US dollars. (String, required for financial data integrity)",
      "altmanZScore": "The Altman Z-Score, a formula used to predict the likelihood of bankruptcy. Example: 3.1. (Number)",
      "piotroskiScore": "The Piotroski F-Score, measuring financial strength on a scale from 0 to 9. Example: 7. (Number)",
      "workingCapital": "Working Capital, calculated as current assets minus current liabilities. Example: 20000000. (Number)",
      "totalAssets": "The total assets value, representing the entire asset base of the company. Example: 120000000. (Number)",
      "retainedEarnings": "Accumulated net income kept in the company after dividends, reinvested into the business. Example: 90,000,000,000 for long-standing profitable firms. (Number, equity section of balance sheet)",
      "ebit": "The actual reported Earnings Before Interest and Taxes for the period. Example: 22000000. (Number)",
      "marketCap": "The market capitalization of the company, calculated as share price multiplied by total shares outstanding. Example: \"None\" or 1500000000000 (1.5 trillion). (Number or String)",
      "totalLiabilities": "The total liabilities value, representing all debts and obligations. Example: 40000000. (Number)",
      "revenue": "The total revenue value reported or projected for the period. Example: 100000000. (Number)"
    }
  },
  {
    "name": "Financial Scores API",
    "description": "The financial-scores endpoint packages insolvency (Altman Z) and fundamental quality (Piotroski F) metrics into one record—ideal for screening portfolios, automating credit alerts, and conversational risk assessments.",
    "category": "risk",
    "use_cases": [
      "portfolio-wide distress screening",
      "combine scores with CDS spreads",
      "generate automated credit memos",
      "feed dashboard health widgets",
      "assistant risk scoring explanations"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "reportedCurrency": "The currency in which all reported values are denominated, as per ISO 4217. Example: 'USD' for US dollars. (String, required for financial data integrity)",
      "altmanZScore": "The Altman Z-Score, a formula used to predict the likelihood of bankruptcy. Example: 3.1. (Number)",
      "piotroskiScore": "The Piotroski F-Score, measuring financial strength on a scale from 0 to 9. Example: 7. (Number)",
      "workingCapital": "Working Capital, calculated as current assets minus current liabilities. Example: 20000000. (Number)",
      "totalAssets": "The total assets value, representing the entire asset base of the company. Example: 120000000. (Number)",
      "retainedEarnings": "Accumulated net income kept in the company after dividends, reinvested into the business. Example: 90,000,000,000 for long-standing profitable firms. (Number, equity section of balance sheet)",
      "ebit": "The actual reported Earnings Before Interest and Taxes for the period. Example: 22000000. (Number)",
      "marketCap": "The market capitalization of the company, calculated as share price multiplied by total shares outstanding. Example: \"None\" or 1500000000000 (1.5 trillion). (Number or String)",
      "totalLiabilities": "The total liabilities value, representing all debts and obligations. Example: 40000000. (Number)",
      "revenue": "The total revenue value reported or projected for the period. Example: 100000000. (Number)"
    }
  },
  {
    "name": "Owner Earnings API",
    "description": "Owner Earnings API (category: cash_flow) adjusts net income for non-cash and maintenance CAPEX to approximate Buffett-style cash available to shareholders—fueling intrinsic-value models and bots answering “What’s Apple’s owner earnings per share?”.",
    "category": "cash_flow",
    "use_cases": [
      "discounted owner-earnings valuation",
      "compare maintenance vs growth CAPEX",
      "screen for high owner-earnings yield",
      "educational content on Buffett metrics",
      "assistant insights on shareholder cash generation"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {
        "limit": "An integer cap on the number of results returned by the endpoint. Example: 50 to restrict output to the top 50 matches. Must be ≥1 and ≤1000. (Integer, optional; defaults to 100)"
      }
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "reportedCurrency": "The currency in which all reported values are denominated, as per ISO 4217. Example: 'USD' for US dollars. (String, required for financial data integrity)",
      "fiscalYear": "The fiscal year to which a financial data point pertains, typically in four-digit format. Example: 2023. (Number or String)",
      "period": "The fiscal period associated with the data point, such as a quarter (\"Q2\") or full year. Example: \"Q2\". (String)",
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "averagePPE": "Average Property, Plant, and Equipment value, used to calculate depreciation and asset efficiency. Example: 40000000. (Number)",
      "maintenanceCapex": "Maintenance Capital Expenditure, representing funds required to maintain existing asset base. Example: 2000000. (Number)",
      "ownersEarnings": "Owner’s Earnings, approximating free cash flow available to shareholders. Example: 3000000000. (Number)",
      "growthCapex": "Growth rate in capital expenditures (capex) year-over-year or quarter-over-quarter. Example: 12.0 means capex increased 12%. (Number, percent, investment trend)",
      "ownersEarningsPerShare": "Owner’s Earnings per Share, calculated as owner’s earnings divided by shares outstanding. Example: 2.75. (Number)"
    }
  },
  {
    "name": "Owner Earnings API",
    "description": "The owner-earnings endpoint converts accounting profit into true cash available for distribution—net income plus non-cash charges minus maintenance CAPEX—helping investors assess cash productivity beyond GAAP figures.",
    "category": "cash_flow",
    "use_cases": [
      "rank companies by owner-earnings yield",
      "validate dividend sustainability",
      "teach financial literacy on cash vs earnings",
      "input for shareholder-return models",
      "assistant clarifications of cash profitability"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {
        "limit": "An integer cap on the number of results returned by the endpoint. Example: 50 to restrict output to the top 50 matches. Must be ≥1 and ≤1000. (Integer, optional; defaults to 100)"
      }
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "reportedCurrency": "The currency in which all reported values are denominated, as per ISO 4217. Example: 'USD' for US dollars. (String, required for financial data integrity)",
      "fiscalYear": "The fiscal year to which a financial data point pertains, typically in four-digit format. Example: 2023. (Number or String)",
      "period": "The fiscal period associated with the data point, such as a quarter (\"Q2\") or full year. Example: \"Q2\". (String)",
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "averagePPE": "Average Property, Plant, and Equipment value, used to calculate depreciation and asset efficiency. Example: 40000000. (Number)",
      "maintenanceCapex": "Maintenance Capital Expenditure, representing funds required to maintain existing asset base. Example: 2000000. (Number)",
      "ownersEarnings": "Owner’s Earnings, approximating free cash flow available to shareholders. Example: 3000000000. (Number)",
      "growthCapex": "Growth rate in capital expenditures (capex) year-over-year or quarter-over-quarter. Example: 12.0 means capex increased 12%. (Number, percent, investment trend)",
      "ownersEarningsPerShare": "Owner’s Earnings per Share, calculated as owner’s earnings divided by shares outstanding. Example: 2.75. (Number)"
    }
  },
  {
    "name": "Enterprise Values API",
    "description": "Enterprise Values API (category: valuation) returns market-cap, cash, debt, and computed enterprise value per period—enabling EV-based multiples, LBO models, and chatbots answering “What’s Apple’s EV right now?”.",
    "category": "valuation",
    "use_cases": [
      "calculate EV/EBITDA and EV/Sales multiples",
      "feed merger-model purchase-price bridges",
      "track deleveraging impact on EV over time",
      "compare EV evolution vs market-cap growth",
      "assistant look-ups of enterprise value data"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {
        "limit": "An integer cap on the number of results returned by the endpoint. Example: 50 to restrict output to the top 50 matches. Must be ≥1 and ≤1000. (Integer, optional; defaults to 100)",
        "period": "A string or integer indicating the fiscal period for which data is requested. Example: \"annual\" or \"quarter\" to indicate annual or quarterly data. (String or Number, required for period-based endpoints)"
      }
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "stockPrice": "The current market price of the company’s stock, updated in real time. Example: 130.75. (Number)",
      "numberOfShares": "The total number of shares outstanding for the company. Example: 15037900000. (Number)",
      "marketCapitalization": "The market cap of the company, equal to total outstanding shares multiplied by share price. Example: 2500000000000. (Number)",
      "minusCashAndCashEquivalents": "The value of cash and cash equivalents subtracted from total enterprise value calculations. Example: 5000000. (Number)",
      "addTotalDebt": "The additional total debt value recorded in the reporting period. Example: 10000000. (Number)",
      "enterpriseValue": "The total Enterprise Value, calculated as market capitalization plus net debt and minority interest, minus cash and equivalents. Example: 2500000000000. (Number)"
    }
  },
  {
    "name": "Enterprise Values API",
    "description": "The enterprise-values endpoint packages share count, price, cash, and debt into an all-in corporate valuation metric—critical for comparables, LBO debt sizing, and voice assistants summarising valuation components.",
    "category": "valuation",
    "use_cases": [
      "LBO models calculating purchase EV",
      "peer comps tables with EV metrics",
      "alert when net cash flips to net debt",
      "visualise EV vs equity value divergence",
      "assistant breakdowns of EV components"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {
        "limit": "An integer cap on the number of results returned by the endpoint. Example: 50 to restrict output to the top 50 matches. Must be ≥1 and ≤1000. (Integer, optional; defaults to 100)",
        "period": "A string or integer indicating the fiscal period for which data is requested. Example: \"annual\" or \"quarter\" to indicate annual or quarterly data. (String or Number, required for period-based endpoints)"
      }
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "stockPrice": "The current market price of the company’s stock, updated in real time. Example: 130.75. (Number)",
      "numberOfShares": "The total number of shares outstanding for the company. Example: 15037900000. (Number)",
      "marketCapitalization": "The market cap of the company, equal to total outstanding shares multiplied by share price. Example: 2500000000000. (Number)",
      "minusCashAndCashEquivalents": "The value of cash and cash equivalents subtracted from total enterprise value calculations. Example: 5000000. (Number)",
      "addTotalDebt": "The additional total debt value recorded in the reporting period. Example: 10000000. (Number)",
      "enterpriseValue": "The total Enterprise Value, calculated as market capitalization plus net debt and minority interest, minus cash and equivalents. Example: 2500000000000. (Number)"
    }
  },
  {
    "name": "Income Statement Growth API",
    "description": "Income Statement Growth API delivers period-over-period deltas for every major P&L line in a single GET call. Pass the mandatory `symbol` parameter (e.g., AAPL) plus optional `limit` and `period` switches to retrieve FY or quarterly trajectories for revenue, COGS, gross profit, R&D, EBITDA, EPS, and more. Use it to benchmark operating-income momentum, feed quant screens, back-test growth factors, or surface revenue-acceleration alerts in dashboards. JSON output is keyed by `growth<Metric>` fields, so downstream diffs are turnkey.",
    "category": "fundamentals",
    "use_cases": [
      "track multi-year revenue and EPS growth",
      "quant factor back-testing for growth strategies",
      "automated alerting when operating income inflects",
      "visualize YoY R&D spend trends",
      "compare margin expansion across peers"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {
        "limit": "An integer cap on the number of results returned by the endpoint. Example: 50 to restrict output to the top 50 matches. Must be ≥1 and ≤1000. (Integer, optional; defaults to 100)",
        "period": "A string or integer indicating the fiscal period for which data is requested. Example: \"annual\" or \"quarter\" to indicate annual or quarterly data. (String or Number, required for period-based endpoints)"
      }
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "fiscalYear": "The fiscal year to which a financial data point pertains, typically in four-digit format. Example: 2023. (Number or String)",
      "period": "The fiscal period associated with the data point, such as a quarter (\"Q2\") or full year. Example: \"Q2\". (String)",
      "reportedCurrency": "The currency in which all reported values are denominated, as per ISO 4217. Example: 'USD' for US dollars. (String, required for financial data integrity)",
      "growthRevenue": "The growth rate of revenue compared to the prior period, expressed as a percentage. Example: 8.5. (Number, Percentage)",
      "growthCostOfRevenue": "Growth rate in cost of goods sold or cost of revenue versus previous period. Example: 4.3 for a 4.3% rise in direct costs. (Number, percent, margin pressure tracker)",
      "growthGrossProfit": "Year-over-year percentage change in gross profit. Calculated as (Current Year Gross Profit - Previous Year Gross Profit) / Previous Year Gross Profit. Example: 0.07 for 7% growth. (Number, optional)",
      "growthGrossProfitRatio": "The growth rate of the gross profit margin, measured as the percentage change compared to the previous period. Example: 0.02 for a 2% increase. (Number, optional)",
      "growthResearchAndDevelopmentExpenses": "Growth rate of R&D expenses, indicating changing levels of investment in innovation. (Number, percent, optional)",
      "growthGeneralAndAdministrativeExpenses": "Growth in G&A expenses versus prior period. Example: 4.9 for a 4.9% increase in overhead. (Number, percent, cost control)",
      "growthSellingAndMarketingExpenses": "Growth in selling and marketing expenses compared to the prior period. (Number, percent, optional)",
      "growthOtherExpenses": "Change in expenses not otherwise classified, compared to the previous period. Useful for tracking cost trends. (Number, percent, optional)",
      "growthOperatingExpenses": "Growth rate in total operating expenses compared to the previous period. Example: 0.05 for a 5% rise. (Number, optional)",
      "growthCostAndExpenses": "Change in total costs and expenses versus the prior period. Example: 7.5 means a 7.5% increase in operating costs. (Number, percent, cost control analysis)",
      "growthInterestIncome": "Year-over-year growth in interest income earned from investments. Example: 0.11 for an 11% increase. (Number, optional)",
      "growthInterestExpense": "Year-over-year growth in interest expense paid on debt. Example: -0.05 for a 5% decrease. (Number, optional)",
      "growthDepreciationAndAmortization": "Growth in depreciation and amortization expenses over the period. Example: 5.0 for a 5% increase in D&A. (Number, percent, fixed asset trend)",
      "growthEBITDA": "The growth rate of EBITDA compared to the prior period, expressed as a percentage. Example: 9.8. (Number, Percentage)",
      "growthOperatingIncome": "The growth rate of operating income compared to the prior period, expressed as a percentage. Example: 10.2. (Number, Percentage)",
      "growthIncomeBeforeTax": "Percentage change in income before tax compared to the prior year or period. Example: 0.1 for a 10% increase. (Number, optional)",
      "growthIncomeTaxExpense": "Year-over-year growth rate of the total income tax expense. Example: 0.22 means tax expense rose by 22%. (Number, optional)",
      "growthNetIncome": "The growth rate of net income compared to the prior period, expressed as a percentage. Example: 12.0. (Number, Percentage)",
      "growthEPS": "The year-over-year growth rate of Earnings Per Share, expressed as a percentage. Example: 11.5. (Number, Percentage)",
      "growthEPSDiluted": "The growth rate of diluted EPS compared to the prior period, expressed as a percentage. Example: 11.5. (Number, Percentage)",
      "growthWeightedAverageShsOut": "Growth in weighted average shares outstanding (basic) used for EPS calculation. (Number, percent, optional)",
      "growthWeightedAverageShsOutDil": "Growth in weighted average diluted shares outstanding, used for diluted EPS. (Number, percent, optional)",
      "growthEBIT": "Growth in Earnings Before Interest and Tax (EBIT) versus prior period. Example: 3.3 for a 3.3% increase. (Number, percent, operating profitability)",
      "growthNonOperatingIncomeExcludingInterest": "Growth in non-operating income (excluding interest), such as investment gains, asset sales, or other non-core activities. (Number, percent, optional)",
      "growthNetInterestIncome": "Growth in interest income (typically for banks/financials) relative to the previous period. Shows if net interest revenue is increasing or decreasing. (Number, percent, optional)",
      "growthTotalOtherIncomeExpensesNet": "Growth in net value of miscellaneous other income or expense items not categorized elsewhere. (Number, percent, optional)",
      "growthNetIncomeFromContinuingOperations": "Growth rate of net income from ongoing core business operations, excluding discontinued or one-off items. Useful for tracking core profitability over time. (Number, percent, optional)",
      "growthOtherAdjustmentsToNetIncome": "Change in miscellaneous adjustments that affect net income between reporting periods. (Number, percent, optional)",
      "growthNetIncomeDeductions": "Growth rate of net income deductions compared to a prior period. Indicates trends in deductions impacting net profit. (Number, percent, optional)"
    }
  },
  {
    "name": "Income Statement Growth API",
    "description": "This endpoint quantifies exactly how a company’s top-line and bottom-line evolved quarter-over-quarter or year-over-year. Submit `symbol` (required) and optionally narrow the window with `limit` or pivot by `period` (Q1-Q4, FY). The payload returns normalized growth ratios such as `growthGrossProfitRatio`, `growthEBITDA`, and `growthEPSDiluted`, enabling quick attribution analysis, factor scoring, and performance storytelling in earnings decks.",
    "category": "fundamentals",
    "use_cases": [
      "earnings-deck commentary on revenue momentum",
      "screen for accelerating EBITDA growth",
      "factor-model inputs for growth vs value rotation",
      "alert when EPS growth turns negative",
      "SaaS dashboards highlighting margin shifts"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {
        "limit": "An integer cap on the number of results returned by the endpoint. Example: 50 to restrict output to the top 50 matches. Must be ≥1 and ≤1000. (Integer, optional; defaults to 100)",
        "period": "A string or integer indicating the fiscal period for which data is requested. Example: \"annual\" or \"quarter\" to indicate annual or quarterly data. (String or Number, required for period-based endpoints)"
      }
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "fiscalYear": "The fiscal year to which a financial data point pertains, typically in four-digit format. Example: 2023. (Number or String)",
      "period": "The fiscal period associated with the data point, such as a quarter (\"Q2\") or full year. Example: \"Q2\". (String)",
      "reportedCurrency": "The currency in which all reported values are denominated, as per ISO 4217. Example: 'USD' for US dollars. (String, required for financial data integrity)",
      "growthRevenue": "The growth rate of revenue compared to the prior period, expressed as a percentage. Example: 8.5. (Number, Percentage)",
      "growthCostOfRevenue": "Growth rate in cost of goods sold or cost of revenue versus previous period. Example: 4.3 for a 4.3% rise in direct costs. (Number, percent, margin pressure tracker)",
      "growthGrossProfit": "Year-over-year percentage change in gross profit. Calculated as (Current Year Gross Profit - Previous Year Gross Profit) / Previous Year Gross Profit. Example: 0.07 for 7% growth. (Number, optional)",
      "growthGrossProfitRatio": "The growth rate of the gross profit margin, measured as the percentage change compared to the previous period. Example: 0.02 for a 2% increase. (Number, optional)",
      "growthResearchAndDevelopmentExpenses": "Growth rate of R&D expenses, indicating changing levels of investment in innovation. (Number, percent, optional)",
      "growthGeneralAndAdministrativeExpenses": "Growth in G&A expenses versus prior period. Example: 4.9 for a 4.9% increase in overhead. (Number, percent, cost control)",
      "growthSellingAndMarketingExpenses": "Growth in selling and marketing expenses compared to the prior period. (Number, percent, optional)",
      "growthOtherExpenses": "Change in expenses not otherwise classified, compared to the previous period. Useful for tracking cost trends. (Number, percent, optional)",
      "growthOperatingExpenses": "Growth rate in total operating expenses compared to the previous period. Example: 0.05 for a 5% rise. (Number, optional)",
      "growthCostAndExpenses": "Change in total costs and expenses versus the prior period. Example: 7.5 means a 7.5% increase in operating costs. (Number, percent, cost control analysis)",
      "growthInterestIncome": "Year-over-year growth in interest income earned from investments. Example: 0.11 for an 11% increase. (Number, optional)",
      "growthInterestExpense": "Year-over-year growth in interest expense paid on debt. Example: -0.05 for a 5% decrease. (Number, optional)",
      "growthDepreciationAndAmortization": "Growth in depreciation and amortization expenses over the period. Example: 5.0 for a 5% increase in D&A. (Number, percent, fixed asset trend)",
      "growthEBITDA": "The growth rate of EBITDA compared to the prior period, expressed as a percentage. Example: 9.8. (Number, Percentage)",
      "growthOperatingIncome": "The growth rate of operating income compared to the prior period, expressed as a percentage. Example: 10.2. (Number, Percentage)",
      "growthIncomeBeforeTax": "Percentage change in income before tax compared to the prior year or period. Example: 0.1 for a 10% increase. (Number, optional)",
      "growthIncomeTaxExpense": "Year-over-year growth rate of the total income tax expense. Example: 0.22 means tax expense rose by 22%. (Number, optional)",
      "growthNetIncome": "The growth rate of net income compared to the prior period, expressed as a percentage. Example: 12.0. (Number, Percentage)",
      "growthEPS": "The year-over-year growth rate of Earnings Per Share, expressed as a percentage. Example: 11.5. (Number, Percentage)",
      "growthEPSDiluted": "The growth rate of diluted EPS compared to the prior period, expressed as a percentage. Example: 11.5. (Number, Percentage)",
      "growthWeightedAverageShsOut": "Growth in weighted average shares outstanding (basic) used for EPS calculation. (Number, percent, optional)",
      "growthWeightedAverageShsOutDil": "Growth in weighted average diluted shares outstanding, used for diluted EPS. (Number, percent, optional)",
      "growthEBIT": "Growth in Earnings Before Interest and Tax (EBIT) versus prior period. Example: 3.3 for a 3.3% increase. (Number, percent, operating profitability)",
      "growthNonOperatingIncomeExcludingInterest": "Growth in non-operating income (excluding interest), such as investment gains, asset sales, or other non-core activities. (Number, percent, optional)",
      "growthNetInterestIncome": "Growth in interest income (typically for banks/financials) relative to the previous period. Shows if net interest revenue is increasing or decreasing. (Number, percent, optional)",
      "growthTotalOtherIncomeExpensesNet": "Growth in net value of miscellaneous other income or expense items not categorized elsewhere. (Number, percent, optional)",
      "growthNetIncomeFromContinuingOperations": "Growth rate of net income from ongoing core business operations, excluding discontinued or one-off items. Useful for tracking core profitability over time. (Number, percent, optional)",
      "growthOtherAdjustmentsToNetIncome": "Change in miscellaneous adjustments that affect net income between reporting periods. (Number, percent, optional)",
      "growthNetIncomeDeductions": "Growth rate of net income deductions compared to a prior period. Indicates trends in deductions impacting net profit. (Number, percent, optional)"
    }
  },
  {
    "name": "Balance Sheet Statement Growth API",
    "description": "Balance Sheet Statement Growth API quantifies changes in assets, liabilities, and equity components across reporting periods. Invoke with `symbol` and optional `limit` or `period` to surface metrics like `growthInventory`, `growthCashAndShortTermInvestments`, `growthTotalDebt`, and `growthTotalStockholdersEquity`. Ideal for leverage trend analysis, working-capital monitoring, or factor models that rely on book-value or balance-sheet velocity.",
    "category": "fundamentals",
    "use_cases": [
      "monitor leverage and net-debt trajectory",
      "detect working-capital build-ups",
      "quant screens using asset-growth anomalies",
      "risk dashboards tracking liability spikes",
      "audit equity drawdowns after buybacks"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {
        "limit": "An integer cap on the number of results returned by the endpoint. Example: 50 to restrict output to the top 50 matches. Must be ≥1 and ≤1000. (Integer, optional; defaults to 100)",
        "period": "A string or integer indicating the fiscal period for which data is requested. Example: \"annual\" or \"quarter\" to indicate annual or quarterly data. (String or Number, required for period-based endpoints)"
      }
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "fiscalYear": "The fiscal year to which a financial data point pertains, typically in four-digit format. Example: 2023. (Number or String)",
      "period": "The fiscal period associated with the data point, such as a quarter (\"Q2\") or full year. Example: \"Q2\". (String)",
      "reportedCurrency": "The currency in which all reported values are denominated, as per ISO 4217. Example: 'USD' for US dollars. (String, required for financial data integrity)",
      "growthCashAndCashEquivalents": "Growth in cash and equivalents on hand, showing liquidity changes. Example: 3.5 for a 3.5% increase in cash reserves. (Number, percent, balance sheet health)",
      "growthShortTermInvestments": "Growth in short-term investments relative to the previous reporting period. (Number, percent, optional)",
      "growthCashAndShortTermInvestments": "The year-over-year growth rate in cash and short-term investments, expressed as a percentage. Example: 8.0. (Number, Percentage)",
      "growthNetReceivables": "Percentage change in net accounts receivable year-over-year. Example: 0.07 for a 7% increase. (Number, optional)",
      "growthInventory": "The growth rate of inventory levels compared to the prior period, expressed as a percentage. Example: 3.2. (Number, Percentage)",
      "growthOtherCurrentAssets": "Annual growth rate of other current assets. Example: 0.03 for a 3% increase. (Number, optional)",
      "growthTotalCurrentAssets": "Growth in total current assets year-over-year. Example: 0.09 means current assets rose by 9%. (Number, optional)",
      "growthPropertyPlantEquipmentNet": "Growth in net property, plant, and equipment (PP&E) year-over-year. Example: 0.08 means PP&E increased by 8%. (Number, optional)",
      "growthGoodwill": "Year-over-year change in the value of goodwill, representing intangible assets acquired through business combinations. Example: 0.05 for a 5% increase. (Number, optional)",
      "growthIntangibleAssets": "Annual growth rate of intangible assets (patents, IP, etc.) on the balance sheet. Example: 0.09 means intangible assets increased by 9%. (Number, optional)",
      "growthGoodwillAndIntangibleAssets": "Growth in total goodwill and intangible assets. Example: 7.2 for a 7.2% increase, often due to acquisitions. (Number, percent, balance sheet change)",
      "growthLongTermInvestments": "Growth rate in the value of long-term investments year-over-year. Example: -0.04 for a 4% decrease. (Number, optional)",
      "growthTaxAssets": "Growth in tax-related assets, such as deferred tax assets, compared to a prior period. (Number, percent, optional)",
      "growthOtherNonCurrentAssets": "Annual growth rate of other non-current assets. Example: 0.12 for a 12% increase. (Number, optional)",
      "growthTotalNonCurrentAssets": "Growth in total non-current assets year-over-year. Example: 0.10 for a 10% rise. (Number, optional)",
      "growthOtherAssets": "Growth in value of assets not classified as core or current, compared to the previous period. (Number, percent, optional)",
      "growthTotalAssets": "The growth rate of total assets compared to the prior period, expressed as a percentage. Example: 7.6. (Number, Percentage)",
      "growthAccountPayables": "Year-over-year or quarter-over-quarter growth in accounts payable, indicating changes in supplier credit usage. Example: 5.7 means a 5.7% increase. (Number, percent, liquidity trend)",
      "growthShortTermDebt": "Year-over-year growth rate in short-term debt outstanding. Example: -0.02 for a 2% decrease. (Number, optional)",
      "growthTaxPayables": "Change in taxes payable (liabilities owed to tax authorities) over the prior period. (Number, percent, optional)",
      "growthDeferredRevenue": "Growth rate of deferred revenue (prepaid, not yet earned). Example: 6.4 for a 6.4% increase. (Number, percent, SaaS/contract business metric)",
      "growthOtherCurrentLiabilities": "Growth in other current liabilities year-over-year. Example: -0.06 for a 6% decrease. (Number, optional)",
      "growthTotalCurrentLiabilities": "Growth in total current liabilities year-over-year. Example: 0.11 for an 11% increase. (Number, optional)",
      "growthLongTermDebt": "The growth rate of long-term debt compared to the prior period, expressed as a percentage. Example: 4.5. (Number, Percentage)",
      "growthDeferredRevenueNonCurrent": "Change in non-current deferred revenue, i.e., revenue to be recognized after 12 months. Example: -0.9 for a 0.9% decrease. (Number, percent, long-term contract health)",
      "growthDeferredTaxLiabilitiesNonCurrent": "Growth in non-current deferred tax liabilities. Example: 2.7 for a 2.7% increase. (Number, percent, tax/deferral impact)",
      "growthOtherNonCurrentLiabilities": "Annual growth rate of other non-current liabilities. Example: 0.07 for a 7% increase. (Number, optional)",
      "growthTotalNonCurrentLiabilities": "Growth in total non-current liabilities year-over-year. Example: 0.07 for a 7% increase. (Number, optional)",
      "growthOtherLiabilities": "Growth in miscellaneous or non-core liabilities compared to the previous reporting period. (Number, percent, optional)",
      "growthTotalLiabilities": "The growth rate of total liabilities compared to the prior period, expressed as a percentage. Example: 5.4. (Number, Percentage)",
      "growthPreferredStock": "Year-over-year growth in the value of preferred stock on the balance sheet. Example: 0.01 for a 1% increase. (Number, optional)",
      "growthCommonStock": "Growth in common stock issued, usually as a result of new equity raised. Example: 2.0 for 2% more common stock outstanding. (Number, percent, dilution tracker)",
      "growthRetainedEarnings": "Annual change in retained earnings, reflecting cumulative net income retained by the company. Example: 0.18 for an 18% increase. (Number, optional)",
      "growthAccumulatedOtherComprehensiveIncomeLoss": "Growth in accumulated other comprehensive income/loss, which includes unrealized gains/losses from investments, currency translation, etc. Example: -1.5 for a 1.5% decline. (Number, percent, equity impact)",
      "growthOthertotalStockholdersEquity": "Growth in total stockholders' equity excluding standard line items, compared to the prior period. (Number, percent, optional)",
      "growthTotalStockholdersEquity": "Growth in total stockholders' equity year-over-year. Example: 0.13 means equity increased by 13%. (Number, optional)",
      "growthMinorityInterest": "Change in minority interest (non-controlling interest) on the balance sheet. Example: 1.6 for a 1.6% increase. (Number, percent, consolidation effect)",
      "growthTotalEquity": "The growth rate of total equity compared to the prior period, expressed as a percentage. Example: 8.3. (Number, Percentage)",
      "growthTotalLiabilitiesAndStockholdersEquity": "Change in the sum of total liabilities and shareholders' equity (i.e., total balance sheet size) compared to the previous period. (Number, percent, optional)",
      "growthTotalInvestments": "Growth rate in total investments held by the company year-over-year. Example: 0.08 for an 8% increase. (Number, optional)",
      "growthTotalDebt": "Growth rate in total debt (short + long-term) year-over-year. Example: 0.05 for a 5% rise. (Number, optional)",
      "growthNetDebt": "The year-over-year growth rate of net debt, expressed as a percentage. Example: 4.5. (Number, Percentage)",
      "growthAccountsReceivables": "Growth rate in accounts receivable over a given period. Example: -3.2 means receivables declined by 3.2%. (Number, percent, working capital analysis)",
      "growthOtherReceivables": "Change in other receivables not included in accounts receivables. (Number, percent, optional)",
      "growthPrepaids": "Change in prepaid expenses over the prior period. Prepaids are advance payments for goods/services to be received in the future. (Number, percent, optional)",
      "growthTotalPayables": "Change in total payables, including accounts payable and other obligations, over the prior period. (Number, percent, optional)",
      "growthOtherPayables": "Change in other payables not classified as accounts payables. Reflects short-term liabilities. (Number, percent, optional)",
      "growthAccruedExpenses": "Change in accrued expenses (unpaid obligations) over the reporting period. Example: 2.1 means accrued expenses grew by 2.1%. (Number, percent, short-term liabilities trend)",
      "growthCapitalLeaseObligationsCurrent": "Change in current capital lease obligations versus prior period. Example: -6.8 for a 6.8% reduction in short-term lease liabilities. (Number, percent, debt/liability trend)",
      "growthAdditionalPaidInCapital": "Change in additional paid-in capital (capital paid by shareholders above par value) over a period. Example: 4.2 for a 4.2% increase. (Number, percent, equity funding trend)",
      "growthTreasuryStock": "Growth in treasury stock year-over-year. Example: 0.03 means treasury stock rose by 3%. (Number, optional)"
    }
  },
  {
    "name": "Balance Sheet Statement Growth API",
    "description": "Turn raw 10-K/10-Q balance sheets into actionable growth vectors. With a single call you receive percentage deltas for every major balance-sheet bucket—cash, receivables, PP&E, short- and long-term debt, deferred taxes, equity. Parameters mirror other growth endpoints (`symbol`, optional `limit`, `period`), ensuring seamless pipeline integration. The service underpins capital-structure trend reports, factor back-tests using asset growth, and credit-risk early-warning systems.",
    "category": "fundamentals",
    "use_cases": [
      "credit-risk monitoring dashboards",
      "flag outsized inventory growth for channel-stuffing checks",
      "feed asset-growth anomaly factor models",
      "generate rolling book-value per share growth charts",
      "compare gearing changes pre- and post-M&A"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {
        "limit": "An integer cap on the number of results returned by the endpoint. Example: 50 to restrict output to the top 50 matches. Must be ≥1 and ≤1000. (Integer, optional; defaults to 100)",
        "period": "A string or integer indicating the fiscal period for which data is requested. Example: \"annual\" or \"quarter\" to indicate annual or quarterly data. (String or Number, required for period-based endpoints)"
      }
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "fiscalYear": "The fiscal year to which a financial data point pertains, typically in four-digit format. Example: 2023. (Number or String)",
      "period": "The fiscal period associated with the data point, such as a quarter (\"Q2\") or full year. Example: \"Q2\". (String)",
      "reportedCurrency": "The currency in which all reported values are denominated, as per ISO 4217. Example: 'USD' for US dollars. (String, required for financial data integrity)",
      "growthCashAndCashEquivalents": "Growth in cash and equivalents on hand, showing liquidity changes. Example: 3.5 for a 3.5% increase in cash reserves. (Number, percent, balance sheet health)",
      "growthShortTermInvestments": "Growth in short-term investments relative to the previous reporting period. (Number, percent, optional)",
      "growthCashAndShortTermInvestments": "The year-over-year growth rate in cash and short-term investments, expressed as a percentage. Example: 8.0. (Number, Percentage)",
      "growthNetReceivables": "Percentage change in net accounts receivable year-over-year. Example: 0.07 for a 7% increase. (Number, optional)",
      "growthInventory": "The growth rate of inventory levels compared to the prior period, expressed as a percentage. Example: 3.2. (Number, Percentage)",
      "growthOtherCurrentAssets": "Annual growth rate of other current assets. Example: 0.03 for a 3% increase. (Number, optional)",
      "growthTotalCurrentAssets": "Growth in total current assets year-over-year. Example: 0.09 means current assets rose by 9%. (Number, optional)",
      "growthPropertyPlantEquipmentNet": "Growth in net property, plant, and equipment (PP&E) year-over-year. Example: 0.08 means PP&E increased by 8%. (Number, optional)",
      "growthGoodwill": "Year-over-year change in the value of goodwill, representing intangible assets acquired through business combinations. Example: 0.05 for a 5% increase. (Number, optional)",
      "growthIntangibleAssets": "Annual growth rate of intangible assets (patents, IP, etc.) on the balance sheet. Example: 0.09 means intangible assets increased by 9%. (Number, optional)",
      "growthGoodwillAndIntangibleAssets": "Growth in total goodwill and intangible assets. Example: 7.2 for a 7.2% increase, often due to acquisitions. (Number, percent, balance sheet change)",
      "growthLongTermInvestments": "Growth rate in the value of long-term investments year-over-year. Example: -0.04 for a 4% decrease. (Number, optional)",
      "growthTaxAssets": "Growth in tax-related assets, such as deferred tax assets, compared to a prior period. (Number, percent, optional)",
      "growthOtherNonCurrentAssets": "Annual growth rate of other non-current assets. Example: 0.12 for a 12% increase. (Number, optional)",
      "growthTotalNonCurrentAssets": "Growth in total non-current assets year-over-year. Example: 0.10 for a 10% rise. (Number, optional)",
      "growthOtherAssets": "Growth in value of assets not classified as core or current, compared to the previous period. (Number, percent, optional)",
      "growthTotalAssets": "The growth rate of total assets compared to the prior period, expressed as a percentage. Example: 7.6. (Number, Percentage)",
      "growthAccountPayables": "Year-over-year or quarter-over-quarter growth in accounts payable, indicating changes in supplier credit usage. Example: 5.7 means a 5.7% increase. (Number, percent, liquidity trend)",
      "growthShortTermDebt": "Year-over-year growth rate in short-term debt outstanding. Example: -0.02 for a 2% decrease. (Number, optional)",
      "growthTaxPayables": "Change in taxes payable (liabilities owed to tax authorities) over the prior period. (Number, percent, optional)",
      "growthDeferredRevenue": "Growth rate of deferred revenue (prepaid, not yet earned). Example: 6.4 for a 6.4% increase. (Number, percent, SaaS/contract business metric)",
      "growthOtherCurrentLiabilities": "Growth in other current liabilities year-over-year. Example: -0.06 for a 6% decrease. (Number, optional)",
      "growthTotalCurrentLiabilities": "Growth in total current liabilities year-over-year. Example: 0.11 for an 11% increase. (Number, optional)",
      "growthLongTermDebt": "The growth rate of long-term debt compared to the prior period, expressed as a percentage. Example: 4.5. (Number, Percentage)",
      "growthDeferredRevenueNonCurrent": "Change in non-current deferred revenue, i.e., revenue to be recognized after 12 months. Example: -0.9 for a 0.9% decrease. (Number, percent, long-term contract health)",
      "growthDeferredTaxLiabilitiesNonCurrent": "Growth in non-current deferred tax liabilities. Example: 2.7 for a 2.7% increase. (Number, percent, tax/deferral impact)",
      "growthOtherNonCurrentLiabilities": "Annual growth rate of other non-current liabilities. Example: 0.07 for a 7% increase. (Number, optional)",
      "growthTotalNonCurrentLiabilities": "Growth in total non-current liabilities year-over-year. Example: 0.07 for a 7% increase. (Number, optional)",
      "growthOtherLiabilities": "Growth in miscellaneous or non-core liabilities compared to the previous reporting period. (Number, percent, optional)",
      "growthTotalLiabilities": "The growth rate of total liabilities compared to the prior period, expressed as a percentage. Example: 5.4. (Number, Percentage)",
      "growthPreferredStock": "Year-over-year growth in the value of preferred stock on the balance sheet. Example: 0.01 for a 1% increase. (Number, optional)",
      "growthCommonStock": "Growth in common stock issued, usually as a result of new equity raised. Example: 2.0 for 2% more common stock outstanding. (Number, percent, dilution tracker)",
      "growthRetainedEarnings": "Annual change in retained earnings, reflecting cumulative net income retained by the company. Example: 0.18 for an 18% increase. (Number, optional)",
      "growthAccumulatedOtherComprehensiveIncomeLoss": "Growth in accumulated other comprehensive income/loss, which includes unrealized gains/losses from investments, currency translation, etc. Example: -1.5 for a 1.5% decline. (Number, percent, equity impact)",
      "growthOthertotalStockholdersEquity": "Growth in total stockholders' equity excluding standard line items, compared to the prior period. (Number, percent, optional)",
      "growthTotalStockholdersEquity": "Growth in total stockholders' equity year-over-year. Example: 0.13 means equity increased by 13%. (Number, optional)",
      "growthMinorityInterest": "Change in minority interest (non-controlling interest) on the balance sheet. Example: 1.6 for a 1.6% increase. (Number, percent, consolidation effect)",
      "growthTotalEquity": "The growth rate of total equity compared to the prior period, expressed as a percentage. Example: 8.3. (Number, Percentage)",
      "growthTotalLiabilitiesAndStockholdersEquity": "Change in the sum of total liabilities and shareholders' equity (i.e., total balance sheet size) compared to the previous period. (Number, percent, optional)",
      "growthTotalInvestments": "Growth rate in total investments held by the company year-over-year. Example: 0.08 for an 8% increase. (Number, optional)",
      "growthTotalDebt": "Growth rate in total debt (short + long-term) year-over-year. Example: 0.05 for a 5% rise. (Number, optional)",
      "growthNetDebt": "The year-over-year growth rate of net debt, expressed as a percentage. Example: 4.5. (Number, Percentage)",
      "growthAccountsReceivables": "Growth rate in accounts receivable over a given period. Example: -3.2 means receivables declined by 3.2%. (Number, percent, working capital analysis)",
      "growthOtherReceivables": "Change in other receivables not included in accounts receivables. (Number, percent, optional)",
      "growthPrepaids": "Change in prepaid expenses over the prior period. Prepaids are advance payments for goods/services to be received in the future. (Number, percent, optional)",
      "growthTotalPayables": "Change in total payables, including accounts payable and other obligations, over the prior period. (Number, percent, optional)",
      "growthOtherPayables": "Change in other payables not classified as accounts payables. Reflects short-term liabilities. (Number, percent, optional)",
      "growthAccruedExpenses": "Change in accrued expenses (unpaid obligations) over the reporting period. Example: 2.1 means accrued expenses grew by 2.1%. (Number, percent, short-term liabilities trend)",
      "growthCapitalLeaseObligationsCurrent": "Change in current capital lease obligations versus prior period. Example: -6.8 for a 6.8% reduction in short-term lease liabilities. (Number, percent, debt/liability trend)",
      "growthAdditionalPaidInCapital": "Change in additional paid-in capital (capital paid by shareholders above par value) over a period. Example: 4.2 for a 4.2% increase. (Number, percent, equity funding trend)",
      "growthTreasuryStock": "Growth in treasury stock year-over-year. Example: 0.03 means treasury stock rose by 3%. (Number, optional)"
    }
  },
  {
    "name": "Cashflow Statement Growth API",
    "description": "Cashflow Statement Growth API computes growth rates for operating, investing, and financing cash-flows plus granular line items (e.g., `growthCapitalExpenditure`, `growthDividendsPaid`). Supply `symbol`; tweak horizon with `limit` and `period`. Output powers free-cash-flow trend analysis, capital-allocation scorecards, and liquidity stress testing across multi-year windows.",
    "category": "fundamentals",
    "use_cases": [
      "track free-cash-flow CAGR vs peers",
      "quant screen for rising operating cash flow",
      "assess capex growth in infrastructure plays",
      "build dividend sustainability indicators",
      "detect financing cash-flow reversals"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {
        "limit": "An integer cap on the number of results returned by the endpoint. Example: 50 to restrict output to the top 50 matches. Must be ≥1 and ≤1000. (Integer, optional; defaults to 100)",
        "period": "A string or integer indicating the fiscal period for which data is requested. Example: \"annual\" or \"quarter\" to indicate annual or quarterly data. (String or Number, required for period-based endpoints)"
      }
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "fiscalYear": "The fiscal year to which a financial data point pertains, typically in four-digit format. Example: 2023. (Number or String)",
      "period": "The fiscal period associated with the data point, such as a quarter (\"Q2\") or full year. Example: \"Q2\". (String)",
      "reportedCurrency": "The currency in which all reported values are denominated, as per ISO 4217. Example: 'USD' for US dollars. (String, required for financial data integrity)",
      "growthNetIncome": "The growth rate of net income compared to the prior period, expressed as a percentage. Example: 12.0. (Number, Percentage)",
      "growthDepreciationAndAmortization": "Growth in depreciation and amortization expenses over the period. Example: 5.0 for a 5% increase in D&A. (Number, percent, fixed asset trend)",
      "growthDeferredIncomeTax": "Growth in deferred income tax liabilities/assets over the period. Example: 1.9 for a 1.9% increase in deferred tax. (Number, percent, tax planning metric)",
      "growthStockBasedCompensation": "Growth in stock-based compensation expenses, typically reflecting increased equity awards to employees/executives. (Number, percent, optional)",
      "growthChangeInWorkingCapital": "Growth rate of change in working capital (current assets - current liabilities). Example: 4.4 means working capital increased by 4.4%. (Number, percent, operational efficiency)",
      "growthAccountsReceivables": "Growth rate in accounts receivable over a given period. Example: -3.2 means receivables declined by 3.2%. (Number, percent, working capital analysis)",
      "growthInventory": "The growth rate of inventory levels compared to the prior period, expressed as a percentage. Example: 3.2. (Number, Percentage)",
      "growthAccountsPayables": "Synonym for growthAccountPayables; captures change in accounts payable over time for trend analysis. Example: 5.7 for 5.7% growth. (Number, percent, duplicate for variant naming)",
      "growthOtherWorkingCapital": "Change in miscellaneous working capital components not covered by standard definitions. (Number, percent, optional)",
      "growthOtherNonCashItems": "Change in non-cash adjustments (depreciation, amortization, etc.) impacting financial statements. (Number, percent, optional)",
      "growthNetCashProvidedByOperatingActivites": "The growth rate of net cash provided by operating activities compared to the prior period, expressed as a percentage. Example: 9.6. (Number, Percentage)",
      "growthInvestmentsInPropertyPlantAndEquipment": "Change in investments in PP&E versus the prior period. Example: 10.0 for 10% more invested in physical assets. (Number, percent, capex tracker)",
      "growthAcquisitionsNet": "Change in net spending on acquisitions (M&A activity) over the reporting period. Example: 10.0 means a 10% increase in acquisitions. (Number, percent, capex/expansion analysis)",
      "growthPurchasesOfInvestments": "Growth in the value of investments purchased compared to a previous period. (Number, percent, optional)",
      "growthSalesMaturitiesOfInvestments": "Change in cash inflows from the sale or maturity of investments. (Number, percent, optional)",
      "growthOtherInvestingActivites": "Change in investing cash flows outside standard lines (capex, acquisitions, etc.) compared to the prior period. (Number, percent, optional)",
      "growthNetCashUsedForInvestingActivites": "The growth rate of net cash used for investing activities compared to the prior period, expressed as a percentage. Example: 7.2. (Number, Percentage)",
      "growthDebtRepayment": "Change in debt repayments over time. Example: 11.2 for an 11.2% increase in principal repaid. (Number, percent, leverage trend)",
      "growthCommonStockIssued": "Change in the amount of newly issued common stock compared to previous periods. Example: 3.7 for a 3.7% increase. (Number, percent, equity financing trend)",
      "growthCommonStockRepurchased": "Growth in common stock repurchases (buybacks) over time. Example: 8.1 for 8.1% more stock bought back. (Number, percent, capital return analysis)",
      "growthDividendsPaid": "Change in total dividends paid to shareholders compared to previous period. Example: -1.2 for a 1.2% decrease. (Number, percent, capital return analysis)",
      "growthOtherFinancingActivites": "Growth in other cash flow activities related to financing that do not fit standard categories. (Number, percent, optional)",
      "growthNetCashUsedProvidedByFinancingActivities": "Growth in net cash from financing activities (debt/equity issuance, buybacks, dividends) versus prior period. Example: -2.3 for a 2.3% decrease. (Number, percent, cash flow trend)",
      "growthEffectOfForexChangesOnCash": "Change in impact of foreign exchange rates on cash flow over time. Example: -0.5 for a 0.5% decrease in FX effect. (Number, percent, multinational exposure)",
      "growthNetChangeInCash": "The year-over-year growth in net change in cash position, expressed as a percentage. Example: 9.6. (Number, Percentage)",
      "growthCashAtEndOfPeriod": "Growth in cash at the end of period vs. prior period. Example: -1.8% signals shrinking cash reserves. (Number, percent, cash flow analysis)",
      "growthCashAtBeginningOfPeriod": "Growth in opening cash balance, tracking changes in liquidity position at the start of the reporting period. Example: 2.2% more cash at the start of Q2 than Q1. (Number, percent, cash flow analysis)",
      "growthOperatingCashFlow": "The growth rate of operating cash flow compared to the prior period, expressed as a percentage. Example: 9.0. (Number, Percentage)",
      "growthCapitalExpenditure": "The growth rate of capital expenditures compared to the prior period, expressed as a percentage. Example: 2.8. (Number, Percentage)",
      "growthFreeCashFlow": "The growth rate of free cash flow compared to the prior period, expressed as a percentage. Example: 10.7. (Number, Percentage)",
      "growthNetDebtIssuance": "Change in net debt issued (new debt minus repayments) versus prior period. Example: 12.4 for a 12.4% increase. (Number, percent, leverage change)",
      "growthLongTermNetDebtIssuance": "Growth rate in net long-term debt issued. Example: 9.5 for a 9.5% increase in new long-term borrowing. (Number, percent, capital structure trend)",
      "growthShortTermNetDebtIssuance": "Change in short-term net debt issued compared to the prior period. Indicates changes in short-term financing. (Number, percent, optional)",
      "growthNetStockIssuance": "Change in the number of shares issued compared to a previous period, typically reflecting capital-raising activity. (Number, percent, optional)",
      "growthPreferredDividendsPaid": "Growth in dividends paid to preferred shareholders between periods. Indicates changes in capital structure or payout policy. (Number, percent, optional)",
      "growthIncomeTaxesPaid": "Growth in income taxes paid versus the prior period. Example: -3.5 for a 3.5% decrease in cash taxes paid. (Number, percent, tax efficiency)",
      "growthInterestPaid": "Growth in interest paid on debt. Example: 2.8 for a 2.8% increase. (Number, percent, leverage/cash flow metric)"
    }
  },
  {
    "name": "Cashflow Statement Growth API",
    "description": "This endpoint isolates the velocity of a firm’s cash movements—how quickly net cash from operations, capex, debt issuance, and shareholder returns are expanding or contracting. Required param `symbol`; optional `limit`, `period`. Outputs like `growthNetCashProvidedByOperatingActivites` and `growthNetCashUsedForInvestingActivites` empower liquidity dashboards, cash-burn projections, and factor models that reward accelerating cash generation.",
    "category": "fundamentals",
    "use_cases": [
      "startup runway and burn-rate tracking",
      "capex ramp identification in capital-intensive sectors",
      "alert on dividend growth slowdowns",
      "build cash-flow momentum factors",
      "liquidity stress testing"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {
        "limit": "An integer cap on the number of results returned by the endpoint. Example: 50 to restrict output to the top 50 matches. Must be ≥1 and ≤1000. (Integer, optional; defaults to 100)",
        "period": "A string or integer indicating the fiscal period for which data is requested. Example: \"annual\" or \"quarter\" to indicate annual or quarterly data. (String or Number, required for period-based endpoints)"
      }
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "fiscalYear": "The fiscal year to which a financial data point pertains, typically in four-digit format. Example: 2023. (Number or String)",
      "period": "The fiscal period associated with the data point, such as a quarter (\"Q2\") or full year. Example: \"Q2\". (String)",
      "reportedCurrency": "The currency in which all reported values are denominated, as per ISO 4217. Example: 'USD' for US dollars. (String, required for financial data integrity)",
      "growthNetIncome": "The growth rate of net income compared to the prior period, expressed as a percentage. Example: 12.0. (Number, Percentage)",
      "growthDepreciationAndAmortization": "Growth in depreciation and amortization expenses over the period. Example: 5.0 for a 5% increase in D&A. (Number, percent, fixed asset trend)",
      "growthDeferredIncomeTax": "Growth in deferred income tax liabilities/assets over the period. Example: 1.9 for a 1.9% increase in deferred tax. (Number, percent, tax planning metric)",
      "growthStockBasedCompensation": "Growth in stock-based compensation expenses, typically reflecting increased equity awards to employees/executives. (Number, percent, optional)",
      "growthChangeInWorkingCapital": "Growth rate of change in working capital (current assets - current liabilities). Example: 4.4 means working capital increased by 4.4%. (Number, percent, operational efficiency)",
      "growthAccountsReceivables": "Growth rate in accounts receivable over a given period. Example: -3.2 means receivables declined by 3.2%. (Number, percent, working capital analysis)",
      "growthInventory": "The growth rate of inventory levels compared to the prior period, expressed as a percentage. Example: 3.2. (Number, Percentage)",
      "growthAccountsPayables": "Synonym for growthAccountPayables; captures change in accounts payable over time for trend analysis. Example: 5.7 for 5.7% growth. (Number, percent, duplicate for variant naming)",
      "growthOtherWorkingCapital": "Change in miscellaneous working capital components not covered by standard definitions. (Number, percent, optional)",
      "growthOtherNonCashItems": "Change in non-cash adjustments (depreciation, amortization, etc.) impacting financial statements. (Number, percent, optional)",
      "growthNetCashProvidedByOperatingActivites": "The growth rate of net cash provided by operating activities compared to the prior period, expressed as a percentage. Example: 9.6. (Number, Percentage)",
      "growthInvestmentsInPropertyPlantAndEquipment": "Change in investments in PP&E versus the prior period. Example: 10.0 for 10% more invested in physical assets. (Number, percent, capex tracker)",
      "growthAcquisitionsNet": "Change in net spending on acquisitions (M&A activity) over the reporting period. Example: 10.0 means a 10% increase in acquisitions. (Number, percent, capex/expansion analysis)",
      "growthPurchasesOfInvestments": "Growth in the value of investments purchased compared to a previous period. (Number, percent, optional)",
      "growthSalesMaturitiesOfInvestments": "Change in cash inflows from the sale or maturity of investments. (Number, percent, optional)",
      "growthOtherInvestingActivites": "Change in investing cash flows outside standard lines (capex, acquisitions, etc.) compared to the prior period. (Number, percent, optional)",
      "growthNetCashUsedForInvestingActivites": "The growth rate of net cash used for investing activities compared to the prior period, expressed as a percentage. Example: 7.2. (Number, Percentage)",
      "growthDebtRepayment": "Change in debt repayments over time. Example: 11.2 for an 11.2% increase in principal repaid. (Number, percent, leverage trend)",
      "growthCommonStockIssued": "Change in the amount of newly issued common stock compared to previous periods. Example: 3.7 for a 3.7% increase. (Number, percent, equity financing trend)",
      "growthCommonStockRepurchased": "Growth in common stock repurchases (buybacks) over time. Example: 8.1 for 8.1% more stock bought back. (Number, percent, capital return analysis)",
      "growthDividendsPaid": "Change in total dividends paid to shareholders compared to previous period. Example: -1.2 for a 1.2% decrease. (Number, percent, capital return analysis)",
      "growthOtherFinancingActivites": "Growth in other cash flow activities related to financing that do not fit standard categories. (Number, percent, optional)",
      "growthNetCashUsedProvidedByFinancingActivities": "Growth in net cash from financing activities (debt/equity issuance, buybacks, dividends) versus prior period. Example: -2.3 for a 2.3% decrease. (Number, percent, cash flow trend)",
      "growthEffectOfForexChangesOnCash": "Change in impact of foreign exchange rates on cash flow over time. Example: -0.5 for a 0.5% decrease in FX effect. (Number, percent, multinational exposure)",
      "growthNetChangeInCash": "The year-over-year growth in net change in cash position, expressed as a percentage. Example: 9.6. (Number, Percentage)",
      "growthCashAtEndOfPeriod": "Growth in cash at the end of period vs. prior period. Example: -1.8% signals shrinking cash reserves. (Number, percent, cash flow analysis)",
      "growthCashAtBeginningOfPeriod": "Growth in opening cash balance, tracking changes in liquidity position at the start of the reporting period. Example: 2.2% more cash at the start of Q2 than Q1. (Number, percent, cash flow analysis)",
      "growthOperatingCashFlow": "The growth rate of operating cash flow compared to the prior period, expressed as a percentage. Example: 9.0. (Number, Percentage)",
      "growthCapitalExpenditure": "The growth rate of capital expenditures compared to the prior period, expressed as a percentage. Example: 2.8. (Number, Percentage)",
      "growthFreeCashFlow": "The growth rate of free cash flow compared to the prior period, expressed as a percentage. Example: 10.7. (Number, Percentage)",
      "growthNetDebtIssuance": "Change in net debt issued (new debt minus repayments) versus prior period. Example: 12.4 for a 12.4% increase. (Number, percent, leverage change)",
      "growthLongTermNetDebtIssuance": "Growth rate in net long-term debt issued. Example: 9.5 for a 9.5% increase in new long-term borrowing. (Number, percent, capital structure trend)",
      "growthShortTermNetDebtIssuance": "Change in short-term net debt issued compared to the prior period. Indicates changes in short-term financing. (Number, percent, optional)",
      "growthNetStockIssuance": "Change in the number of shares issued compared to a previous period, typically reflecting capital-raising activity. (Number, percent, optional)",
      "growthPreferredDividendsPaid": "Growth in dividends paid to preferred shareholders between periods. Indicates changes in capital structure or payout policy. (Number, percent, optional)",
      "growthIncomeTaxesPaid": "Growth in income taxes paid versus the prior period. Example: -3.5 for a 3.5% decrease in cash taxes paid. (Number, percent, tax efficiency)",
      "growthInterestPaid": "Growth in interest paid on debt. Example: 2.8 for a 2.8% increase. (Number, percent, leverage/cash flow metric)"
    }
  },
  {
    "name": "Financial Statement Growth API",
    "description": "Financial Statement Growth API is the one-stop aggregate endpoint that merges income, balance sheet, and cash-flow growth metrics. One query (`symbol`, plus optional `limit`, `period`) returns key deltas like `revenueGrowth`, `assetGrowth`, `operatingCashFlowGrowth`, and debt, inventory, or dividend growth—all normalized into ratios. Ideal for multi-factor screens, cross-statement trend visualizations, and holistic growth scoring engines.",
    "category": "fundamentals",
    "use_cases": [
      "build composite growth scores in factor models",
      "generate single chart showing revenue, asset, and FCF growth",
      "rank peers on multi-statement growth momentum",
      "feed AI models that predict re-rating catalysts",
      "detect divergence between revenue and FCF growth"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {
        "limit": "An integer cap on the number of results returned by the endpoint. Example: 50 to restrict output to the top 50 matches. Must be ≥1 and ≤1000. (Integer, optional; defaults to 100)",
        "period": "A string or integer indicating the fiscal period for which data is requested. Example: \"annual\" or \"quarter\" to indicate annual or quarterly data. (String or Number, required for period-based endpoints)"
      }
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "fiscalYear": "The fiscal year to which a financial data point pertains, typically in four-digit format. Example: 2023. (Number or String)",
      "period": "The fiscal period associated with the data point, such as a quarter (\"Q2\") or full year. Example: \"Q2\". (String)",
      "reportedCurrency": "The currency in which all reported values are denominated, as per ISO 4217. Example: 'USD' for US dollars. (String, required for financial data integrity)",
      "revenueGrowth": "The year-over-year revenue growth rate, expressed as a percentage. Example: 8.5. (Number, Percentage)",
      "grossProfitGrowth": "The percentage increase or decrease in gross profit versus the previous period. Example: 8.5 means gross profit rose by 8.5% year-over-year. (Number, percent, growth analysis)",
      "ebitgrowth": "Growth in EBIT compared to prior period, usually year-over-year. (Number, percent)",
      "operatingIncomeGrowth": "Growth in operating income (profit from core business) relative to a previous period. (Number, percent, optional)",
      "netIncomeGrowth": "Growth rate of net income compared to a previous period, showing the trend in profitability. (Number, percent, optional)",
      "epsgrowth": "Growth in basic or reported earnings per share over a period. (Number, percent)",
      "epsdilutedGrowth": "Growth rate of diluted earnings per share over a defined period. (Number, percent)",
      "weightedAverageSharesGrowth": "Change in weighted average basic shares outstanding. Example: 1.1 for 1.1% growth. (Number, percent, capital structure tracker)",
      "weightedAverageSharesDilutedGrowth": "Growth in weighted average diluted shares outstanding over period. Example: 1.5 for a 1.5% increase (usually dilution). (Number, percent, EPS calculation impact)",
      "dividendsPerShareGrowth": "Growth rate of dividends per share over a specified period, often year-over-year. (Number, percent)",
      "operatingCashFlowGrowth": "The year-over-year operating cash flow growth rate, expressed as a percentage. Example: 9.0. (Number, Percentage)",
      "receivablesGrowth": "Growth in receivables compared to the previous period. (Number, percent, optional)",
      "inventoryGrowth": "Year-over-year percentage change in inventory value. Example: 0.12 for a 12% increase compared to the prior period. (Number, optional)",
      "assetGrowth": "The year-over-year total asset growth rate, expressed as a percentage. Example: 7.6. (Number, Percentage)",
      "bookValueperShareGrowth": "Year-over-year or period-over-period growth rate in book value per share. (Percent)",
      "debtGrowth": "The year-over-year total debt growth rate, expressed as a percentage. Example: 5.4. (Number, Percentage)",
      "rdexpenseGrowth": "Growth in research and development (R&D) expenses compared to a previous period. (Number, percent, optional)",
      "sgaexpensesGrowth": "Growth in SG&A expenses compared to previous period. Example: 6.7 means 6.7% more SG&A. (Number, percent, cost management analysis)",
      "freeCashFlowGrowth": "The year-over-year free cash flow growth rate, expressed as a percentage. Example: 10.7. (Number, Percentage)",
      "tenYRevenueGrowthPerShare": "Revenue per share growth over ten years. Example: 0.37 for 37%. (Number, long-term revenue trend)",
      "fiveYRevenueGrowthPerShare": "Five-year compound annual growth rate for revenue per share. (Number, percent)",
      "threeYRevenueGrowthPerShare": "Revenue per share growth over three years. Example: 0.15 for 15%. (Number, short-term revenue growth)",
      "tenYOperatingCFGrowthPerShare": "Ten-year growth in operating cash flow per share. Example: 0.18 for 18%. (Number, operational performance trend)",
      "fiveYOperatingCFGrowthPerShare": "Five-year compound annual growth rate for operating cash flow per share. (Number, percent)",
      "threeYOperatingCFGrowthPerShare": "Growth in operating cash flow per share for the last three years. Example: 0.09 for 9%. (Number, operational cash trend)",
      "tenYNetIncomeGrowthPerShare": "Growth in net income per share over the last decade. Example: 0.32 for 32%. (Number, long-term EPS growth)",
      "fiveYNetIncomeGrowthPerShare": "Five-year compound annual growth rate for net income per share. (Number, percent)",
      "threeYNetIncomeGrowthPerShare": "Net income per share growth over three years. Example: 0.11 for 11%. (Number, short-term EPS growth)",
      "tenYShareholdersEquityGrowthPerShare": "Shareholders’ equity per share growth rate over a decade. Example: 0.52 for 52%. (Number, long-term equity trend)",
      "fiveYShareholdersEquityGrowthPerShare": "Five-year compound annual growth rate for shareholders' equity per share. (Number, percent)",
      "threeYShareholdersEquityGrowthPerShare": "Growth in shareholders’ equity per share over three years. Example: 0.27 for 27%. (Number, short-term equity performance)",
      "tenYDividendperShareGrowthPerShare": "Growth rate in dividends per share over ten years. Example: 0.45 means 45% cumulative growth. (Number, dividend history metric)",
      "fiveYDividendperShareGrowthPerShare": "Compound annual growth rate of dividends per share over the past five years. (Number, percent)",
      "threeYDividendperShareGrowthPerShare": "Growth in dividends per share over three years. Example: 0.13 for 13%. (Number, dividend growth metric)",
      "ebitdaGrowth": "Year-over-year or period-over-period growth in EBITDA (Earnings Before Interest, Taxes, Depreciation, and Amortization). (Number, percent)",
      "growthCapitalExpenditure": "The growth rate of capital expenditures compared to the prior period, expressed as a percentage. Example: 2.8. (Number, Percentage)",
      "tenYBottomLineNetIncomeGrowthPerShare": "Net income per share growth rate over the last ten years. Example: 0.245 means 24.5% cumulative growth. (Number, long-term performance metric)",
      "fiveYBottomLineNetIncomeGrowthPerShare": "Compound annual growth rate of net income per share over the past five years. (Number, percent)",
      "threeYBottomLineNetIncomeGrowthPerShare": "Cumulative net income per share growth rate over three years. Example: 0.0776 means 7.76%. (Number, short-term performance)"
    }
  },
  {
    "name": "Financial Statement Growth API",
    "description": "Pull a full growth panorama in a single hit—this endpoint fuses income-statement, balance-sheet, and cash-flow vectors into one JSON array. Pass `symbol` (required) and the usual pagination/timeframe knobs. Use fields like `epsgrowth`, `debtGrowth`, `freeCashFlowGrowth`, and `inventoryGrowth` to craft multi-dimension heat maps, rank portfolios, or signal mismatches between earnings and balance-sheet quality.",
    "category": "fundamentals",
    "use_cases": [
      "multi-factor quant ranking (earnings + balance sheet + cash flow)",
      "alpha signals when revenue growth diverges from FCF growth",
      "portfolio heat map of growth vs leverage expansion",
      "Earnings QA consistency checks",
      "generate chatbot answers on growth trends from one endpoint"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {
        "limit": "An integer cap on the number of results returned by the endpoint. Example: 50 to restrict output to the top 50 matches. Must be ≥1 and ≤1000. (Integer, optional; defaults to 100)",
        "period": "A string or integer indicating the fiscal period for which data is requested. Example: \"annual\" or \"quarter\" to indicate annual or quarterly data. (String or Number, required for period-based endpoints)"
      }
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "fiscalYear": "The fiscal year to which a financial data point pertains, typically in four-digit format. Example: 2023. (Number or String)",
      "period": "The fiscal period associated with the data point, such as a quarter (\"Q2\") or full year. Example: \"Q2\". (String)",
      "reportedCurrency": "The currency in which all reported values are denominated, as per ISO 4217. Example: 'USD' for US dollars. (String, required for financial data integrity)",
      "revenueGrowth": "The year-over-year revenue growth rate, expressed as a percentage. Example: 8.5. (Number, Percentage)",
      "grossProfitGrowth": "The percentage increase or decrease in gross profit versus the previous period. Example: 8.5 means gross profit rose by 8.5% year-over-year. (Number, percent, growth analysis)",
      "ebitgrowth": "Growth in EBIT compared to prior period, usually year-over-year. (Number, percent)",
      "operatingIncomeGrowth": "Growth in operating income (profit from core business) relative to a previous period. (Number, percent, optional)",
      "netIncomeGrowth": "Growth rate of net income compared to a previous period, showing the trend in profitability. (Number, percent, optional)",
      "epsgrowth": "Growth in basic or reported earnings per share over a period. (Number, percent)",
      "epsdilutedGrowth": "Growth rate of diluted earnings per share over a defined period. (Number, percent)",
      "weightedAverageSharesGrowth": "Change in weighted average basic shares outstanding. Example: 1.1 for 1.1% growth. (Number, percent, capital structure tracker)",
      "weightedAverageSharesDilutedGrowth": "Growth in weighted average diluted shares outstanding over period. Example: 1.5 for a 1.5% increase (usually dilution). (Number, percent, EPS calculation impact)",
      "dividendsPerShareGrowth": "Growth rate of dividends per share over a specified period, often year-over-year. (Number, percent)",
      "operatingCashFlowGrowth": "The year-over-year operating cash flow growth rate, expressed as a percentage. Example: 9.0. (Number, Percentage)",
      "receivablesGrowth": "Growth in receivables compared to the previous period. (Number, percent, optional)",
      "inventoryGrowth": "Year-over-year percentage change in inventory value. Example: 0.12 for a 12% increase compared to the prior period. (Number, optional)",
      "assetGrowth": "The year-over-year total asset growth rate, expressed as a percentage. Example: 7.6. (Number, Percentage)",
      "bookValueperShareGrowth": "Year-over-year or period-over-period growth rate in book value per share. (Percent)",
      "debtGrowth": "The year-over-year total debt growth rate, expressed as a percentage. Example: 5.4. (Number, Percentage)",
      "rdexpenseGrowth": "Growth in research and development (R&D) expenses compared to a previous period. (Number, percent, optional)",
      "sgaexpensesGrowth": "Growth in SG&A expenses compared to previous period. Example: 6.7 means 6.7% more SG&A. (Number, percent, cost management analysis)",
      "freeCashFlowGrowth": "The year-over-year free cash flow growth rate, expressed as a percentage. Example: 10.7. (Number, Percentage)",
      "tenYRevenueGrowthPerShare": "Revenue per share growth over ten years. Example: 0.37 for 37%. (Number, long-term revenue trend)",
      "fiveYRevenueGrowthPerShare": "Five-year compound annual growth rate for revenue per share. (Number, percent)",
      "threeYRevenueGrowthPerShare": "Revenue per share growth over three years. Example: 0.15 for 15%. (Number, short-term revenue growth)",
      "tenYOperatingCFGrowthPerShare": "Ten-year growth in operating cash flow per share. Example: 0.18 for 18%. (Number, operational performance trend)",
      "fiveYOperatingCFGrowthPerShare": "Five-year compound annual growth rate for operating cash flow per share. (Number, percent)",
      "threeYOperatingCFGrowthPerShare": "Growth in operating cash flow per share for the last three years. Example: 0.09 for 9%. (Number, operational cash trend)",
      "tenYNetIncomeGrowthPerShare": "Growth in net income per share over the last decade. Example: 0.32 for 32%. (Number, long-term EPS growth)",
      "fiveYNetIncomeGrowthPerShare": "Five-year compound annual growth rate for net income per share. (Number, percent)",
      "threeYNetIncomeGrowthPerShare": "Net income per share growth over three years. Example: 0.11 for 11%. (Number, short-term EPS growth)",
      "tenYShareholdersEquityGrowthPerShare": "Shareholders’ equity per share growth rate over a decade. Example: 0.52 for 52%. (Number, long-term equity trend)",
      "fiveYShareholdersEquityGrowthPerShare": "Five-year compound annual growth rate for shareholders' equity per share. (Number, percent)",
      "threeYShareholdersEquityGrowthPerShare": "Growth in shareholders’ equity per share over three years. Example: 0.27 for 27%. (Number, short-term equity performance)",
      "tenYDividendperShareGrowthPerShare": "Growth rate in dividends per share over ten years. Example: 0.45 means 45% cumulative growth. (Number, dividend history metric)",
      "fiveYDividendperShareGrowthPerShare": "Compound annual growth rate of dividends per share over the past five years. (Number, percent)",
      "threeYDividendperShareGrowthPerShare": "Growth in dividends per share over three years. Example: 0.13 for 13%. (Number, dividend growth metric)",
      "ebitdaGrowth": "Year-over-year or period-over-period growth in EBITDA (Earnings Before Interest, Taxes, Depreciation, and Amortization). (Number, percent)",
      "growthCapitalExpenditure": "The growth rate of capital expenditures compared to the prior period, expressed as a percentage. Example: 2.8. (Number, Percentage)",
      "tenYBottomLineNetIncomeGrowthPerShare": "Net income per share growth rate over the last ten years. Example: 0.245 means 24.5% cumulative growth. (Number, long-term performance metric)",
      "fiveYBottomLineNetIncomeGrowthPerShare": "Compound annual growth rate of net income per share over the past five years. (Number, percent)",
      "threeYBottomLineNetIncomeGrowthPerShare": "Cumulative net income per share growth rate over three years. Example: 0.0776 means 7.76%. (Number, short-term performance)"
    }
  },
  {
    "name": "Financial Reports Dates API",
    "description": "Financial Reports Dates API provides a manifest of available annual (FY) and quarterly (Q1-Q4) filings for a given ticker. Required parameter `symbol` returns each fiscal period with direct download links (`linkJson`, `linkXlsx`) to the structured report endpoints. Best for building filing calendars, automating disclosure ingestion, or validating coverage before requesting heavy reports.",
    "category": "filings",
    "use_cases": [
      "construct SEC filing calendars",
      "automate data-lake ingestion schedules",
      "feed UI pick-lists for available periods",
      "backfill missing report periods programmatically",
      "validate report availability before heavy downloads"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "fiscalYear": "The fiscal year to which a financial data point pertains, typically in four-digit format. Example: 2023. (Number or String)",
      "period": "The fiscal period associated with the data point, such as a quarter (\"Q2\") or full year. Example: \"Q2\". (String)",
      "linkJson": "A URL pointing to the JSON version of a detailed financial report. Example: \"https://api.example.com/v3/financials/income-statement/AAPL?datatype=json\". (String, URL)",
      "linkXlsx": "A URL pointing to the XLSX version of a detailed financial report. Example: \"https://api.example.com/v3/financials/income-statement/AAPL?datatype=xlsx\". (String, URL)"
    }
  },
  {
    "name": "Financial Reports Dates API",
    "description": "Request this lightweight catalog endpoint to discover exactly which fiscal years and quarters are supported before pulling full 10-K/10-Q JSON or XLSX files. Passing only `symbol` returns an array with `fiscalYear`, `period`, and pre-signed URLs—ideal for crawler orchestration, retry logic, and UI date pickers.",
    "category": "filings",
    "use_cases": [
      "drive dropdown menus in research portals",
      "kick-off ETL jobs only when new periods appear",
      "confirm archival coverage for historical studies",
      "synchronize data-warehouse partitions",
      "avoid 404s by checking availability first"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "fiscalYear": "The fiscal year to which a financial data point pertains, typically in four-digit format. Example: 2023. (Number or String)",
      "period": "The fiscal period associated with the data point, such as a quarter (\"Q2\") or full year. Example: \"Q2\". (String)",
      "linkJson": "A URL pointing to the JSON version of a detailed financial report. Example: \"https://api.example.com/v3/financials/income-statement/AAPL?datatype=json\". (String, URL)",
      "linkXlsx": "A URL pointing to the XLSX version of a detailed financial report. Example: \"https://api.example.com/v3/financials/income-statement/AAPL?datatype=xlsx\". (String, URL)"
    }
  },
  {
    "name": "Revenue Product Segmentation API",
    "description": "Revenue Product Segmentation API dissects a company’s sales into product-level buckets (Mac, iPhone, Services, etc.). Required `symbol` plus optional `period` (annual | quarter) and `structure` (`flat`) parameters return a JSON object with a `data` map that pairs each product line with absolute revenue. Perfect for mix-shift analysis, segment CAGR tracking, and product-strategy research decks.",
    "category": "segment_analysis",
    "use_cases": [
      "monitor iPhone vs Services revenue mix",
      "quantify product diversification over time",
      "visualize segment CAGR in dashboards",
      "peer-compare product reliance",
      "feed LLMs for product-level Q&A"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {
        "period": "A string or integer indicating the fiscal period for which data is requested. Example: \"annual\" or \"quarter\" to indicate annual or quarterly data. (String or Number, required for period-based endpoints)",
        "structure": "A string indicating the desired response structure or format. Example: \"full\" to return all fields, or \"compact\" to return only core metrics. (String, optional)"
      }
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "fiscalYear": "The fiscal year to which a financial data point pertains, typically in four-digit format. Example: 2023. (Number or String)",
      "period": "The fiscal period associated with the data point, such as a quarter (\"Q2\") or full year. Example: \"Q2\". (String)",
      "reportedCurrency": "The currency in which all reported values are denominated, as per ISO 4217. Example: 'USD' for US dollars. (String, required for financial data integrity)",
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "data": {
        "Mac": "Financial or sales data related to Mac computers or the Mac business segment.",
        "Service": "Financial or business data related to service revenues (e.g., subscriptions, support).",
        "Wearables, Home and Accessories": "Financial or business data for the Wearables, Home, and Accessories segment.",
        "iPad": "Financial or operational results attributed to the iPad product segment, as reported in company segment disclosures. (Number/String, optional)",
        "iPhone": "Financial or operational results attributed to the iPhone product segment, as reported in segment disclosures. (Number/String, optional)"
      }
    }
  },
  {
    "name": "Revenue Product Segmentation API",
    "description": "Break total sales into granular product buckets with a single call. Pass `symbol` (mandatory) and optionally set `period` (annual or quarter) and `structure=flat` for a tidy key-value map. Response lists revenues by product family, unlocking cohort charts, growth-driver attribution, and competitive benchmarking at the SKU cluster level.",
    "category": "segment_analysis",
    "use_cases": [
      "attribute YoY growth to individual products",
      "identify fading vs rising product lines",
      "feed product-mix factors into valuation models",
      "generate narrative commentary for earnings notes",
      "detect concentration risk in single-product firms"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {
        "period": "A string or integer indicating the fiscal period for which data is requested. Example: \"annual\" or \"quarter\" to indicate annual or quarterly data. (String or Number, required for period-based endpoints)",
        "structure": "A string indicating the desired response structure or format. Example: \"full\" to return all fields, or \"compact\" to return only core metrics. (String, optional)"
      }
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "fiscalYear": "The fiscal year to which a financial data point pertains, typically in four-digit format. Example: 2023. (Number or String)",
      "period": "The fiscal period associated with the data point, such as a quarter (\"Q2\") or full year. Example: \"Q2\". (String)",
      "reportedCurrency": "The currency in which all reported values are denominated, as per ISO 4217. Example: 'USD' for US dollars. (String, required for financial data integrity)",
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "data": {
        "Mac": "Financial or sales data related to Mac computers or the Mac business segment.",
        "Service": "Financial or business data related to service revenues (e.g., subscriptions, support).",
        "Wearables, Home and Accessories": "Financial or business data for the Wearables, Home, and Accessories segment.",
        "iPad": "Financial or operational results attributed to the iPad product segment, as reported in company segment disclosures. (Number/String, optional)",
        "iPhone": "Financial or operational results attributed to the iPhone product segment, as reported in segment disclosures. (Number/String, optional)"
      }
    }
  },
  {
    "name": "Revenue Geographic Segments API",
    "description": "Revenue Geographic Segments API splits top-line results by region (Americas, Europe, Greater China, etc.). Input `symbol`; optionally specify `period` and `structure`. Output is a region-to-revenue map, enabling market-contribution dashboards, regional CAGR scans, and geopolitical exposure analysis.",
    "category": "segment_analysis",
    "use_cases": [
      "assess regional growth hotspots",
      "map revenue exposure to currency swings",
      "compare EMEA vs APAC momentum",
      "track China dependence trends",
      "feed heat-maps in BI tools"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {
        "period": "A string or integer indicating the fiscal period for which data is requested. Example: \"annual\" or \"quarter\" to indicate annual or quarterly data. (String or Number, required for period-based endpoints)",
        "structure": "A string indicating the desired response structure or format. Example: \"full\" to return all fields, or \"compact\" to return only core metrics. (String, optional)"
      }
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "fiscalYear": "The fiscal year to which a financial data point pertains, typically in four-digit format. Example: 2023. (Number or String)",
      "period": "The fiscal period associated with the data point, such as a quarter (\"Q2\") or full year. Example: \"Q2\". (String)",
      "reportedCurrency": "The currency in which all reported values are denominated, as per ISO 4217. Example: 'USD' for US dollars. (String, required for financial data integrity)",
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "data": {
        "Americas Segment": "Financial or operational data specific to the Americas region, e.g., revenue or profit contribution.",
        "Europe Segment": "Financial or operational data specific to the Europe region.",
        "Greater China Segment": "Financial or operational data specific to the Greater China region.",
        "Japan Segment": "Financial or operational data specific to the Japan region.",
        "Rest of Asia Pacific": "Financial or operational data for the Asia Pacific region excluding China and Japan."
      }
    }
  },
  {
    "name": "Revenue Geographic Segments API",
    "description": "Instantly extract a company’s revenue breakdown across major geographic theaters. The endpoint requires only `symbol`; `period` and `structure` fine-tune granularity. The JSON payload lists each territory’s absolute sales—ideal for Forex-risk models, TAM sizing, and region-specific strategy planning.",
    "category": "segment_analysis",
    "use_cases": [
      "overlay regional revenue with FX moves",
      "evaluate diversification across continents",
      "flag overreliance on single markets",
      "build geo-driven scenario models",
      "answer chat queries on region revenue share"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {
        "period": "A string or integer indicating the fiscal period for which data is requested. Example: \"annual\" or \"quarter\" to indicate annual or quarterly data. (String or Number, required for period-based endpoints)",
        "structure": "A string indicating the desired response structure or format. Example: \"full\" to return all fields, or \"compact\" to return only core metrics. (String, optional)"
      }
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "fiscalYear": "The fiscal year to which a financial data point pertains, typically in four-digit format. Example: 2023. (Number or String)",
      "period": "The fiscal period associated with the data point, such as a quarter (\"Q2\") or full year. Example: \"Q2\". (String)",
      "reportedCurrency": "The currency in which all reported values are denominated, as per ISO 4217. Example: 'USD' for US dollars. (String, required for financial data integrity)",
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "data": {
        "Americas Segment": "Financial or operational data specific to the Americas region, e.g., revenue or profit contribution.",
        "Europe Segment": "Financial or operational data specific to the Europe region.",
        "Greater China Segment": "Financial or operational data specific to the Greater China region.",
        "Japan Segment": "Financial or operational data specific to the Japan region.",
        "Rest of Asia Pacific": "Financial or operational data for the Asia Pacific region excluding China and Japan."
      }
    }
  },
  {
    "name": "As Reported Income Statements API",
    "description": "As Reported Income Statements API streams the raw income-statement XBRL tags exactly as filed—no normalization. Required `symbol`; optional `limit` and `period`. The `data` section mirrors every line item (revenue, R&D, EPS) straight from the filing, empowering audit-grade reconciliation, NLP extraction, and back-testing with original figures.",
    "category": "filings_raw",
    "use_cases": [
      "forensics on GAAP vs adjusted numbers",
      "train language models on pristine filings",
      "compare reported vs normalized feeds",
      "full-text search for bespoke line items",
      "reg-compliance audit trails"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {
        "limit": "An integer cap on the number of results returned by the endpoint. Example: 50 to restrict output to the top 50 matches. Must be ≥1 and ≤1000. (Integer, optional; defaults to 100)",
        "period": "A string or integer indicating the fiscal period for which data is requested. Example: \"annual\" or \"quarter\" to indicate annual or quarterly data. (String or Number, required for period-based endpoints)"
      }
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "fiscalYear": "The fiscal year to which a financial data point pertains, typically in four-digit format. Example: 2023. (Number or String)",
      "period": "The fiscal period associated with the data point, such as a quarter (\"Q2\") or full year. Example: \"Q2\". (String)",
      "reportedCurrency": "The currency in which all reported values are denominated, as per ISO 4217. Example: 'USD' for US dollars. (String, required for financial data integrity)",
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "data": {
        "revenuefromcontractwithcustomerexcludingassessedtax": "Revenue from contracts with customers, excluding amounts collected on behalf of third parties (assessed taxes). (Number, optional)",
        "costofgoodsandservicessold": "Total cost of goods and services sold (COGS) during the period. (Number, e.g., USD)",
        "grossprofit": "Gross profit for the reporting period, calculated as total revenues minus cost of goods sold (COGS). Indicates profitability before operating expenses. (Number, optional)",
        "researchanddevelopmentexpense": "Total expenses for research and development activities incurred during the period. (Number, optional)",
        "sellinggeneralandadministrativeexpense": "Total selling, general, and administrative (SG&A) expenses incurred during the period. (Number, optional)",
        "operatingexpenses": "Total operating expenses reported during the period, including SG&A, R&D, and other recurring costs. (Number, optional)",
        "operatingincomeloss": "Operating income (or loss) for the reporting period, calculated as revenue minus operating expenses. (Number, optional)",
        "nonoperatingincomeexpense": "Net income or expense from non-operating activities, such as interest income or expense, investment gains or losses, etc. (Number, optional)",
        "incomelossfromcontinuingoperationsbeforeincometaxesextraordinaryitemsnoncontrollinginterest": "Income or loss from continuing operations before income taxes, extraordinary items, and noncontrolling interest. (Number, optional)",
        "incometaxexpensebenefit": "Total provision for income tax expense (or benefit) recognized for the reporting period. (Number, optional)",
        "netincomeloss": "Net income or loss for the reporting period, as reported in the income statement. (Number, optional)",
        "earningspersharebasic": "Earnings per basic share reported for the period. (Number, e.g., USD per share)",
        "earningspersharediluted": "Diluted earnings per share for the period, including the effect of options and convertible securities. (Number, e.g., USD per share)",
        "weightedaveragenumberofsharesoutstandingbasic": "Weighted average number of basic shares outstanding during the reporting period. (Number, optional)",
        "weightedaveragenumberofdilutedsharesoutstanding": "Weighted average number of diluted shares outstanding during the reporting period. (Number, optional)",
        "othercomprehensiveincomelossforeigncurrencytransactionandtranslationadjustmentnetoftax": "OCI impact from foreign currency transaction and translation adjustments, net of tax. (Number, optional)",
        "othercomprehensiveincomelossderivativeinstrumentgainlossbeforereclassificationaftertax": "Gain or loss on derivative instruments included in other comprehensive income before reclassification, after tax. (Number, optional)",
        "othercomprehensiveincomelossderivativeinstrumentgainlossreclassificationaftertax": "Amount of derivative gain or loss reclassified from OCI to earnings, after tax. (Number, optional)",
        "othercomprehensiveincomelossderivativeinstrumentgainlossafterreclassificationandtax": "Net gain or loss on derivative instruments included in other comprehensive income after reclassification adjustments and tax effects. (Number, optional)",
        "othercomprehensiveincomeunrealizedholdinggainlossonsecuritiesarisingduringperiodnetoftax": "Unrealized holding gain or loss on securities during the period, recognized in OCI net of tax. (Number, optional)",
        "othercomprehensiveincomelossreclassificationadjustmentfromaociforsaleofsecuritiesnetoftax": "Reclassification adjustment from accumulated OCI related to sale of securities, net of tax. (Number, optional)",
        "othercomprehensiveincomelossavailableforsalesecuritiesadjustmentnetoftax": "Net adjustment to other comprehensive income (OCI) for available-for-sale securities, net of tax. Reflects gains or losses that have not been realized through sale. (Number, optional)",
        "othercomprehensiveincomelossnetoftaxportionattributabletoparent": "Portion of other comprehensive income/loss, net of tax, attributable to the parent company. (Number, optional)",
        "comprehensiveincomenetoftax": "Comprehensive net income after tax for the reporting period. (Number, e.g., USD)"
      }
    }
  },
  {
    "name": "As Reported Income Statements API",
    "description": "Pull a company’s income statement verbatim from its 10-K or 10-Q. The endpoint keeps original tag names (`researchanddevelopmentexpense`, `operatingincomeloss`) for perfect audit traceability. Pass `symbol`; narrow scope with `limit` or `period`. Ideal for detecting taxonomy changes, validating vendor-normalized feeds, and fine-grained earnings NLP.",
    "category": "filings_raw",
    "use_cases": [
      "detect unusual expense reclassifications",
      "benchmark vendor data quality",
      "footnote link-back to raw values",
      "LLM QA on GAAP terminology",
      "regtech rule automation"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {
        "limit": "An integer cap on the number of results returned by the endpoint. Example: 50 to restrict output to the top 50 matches. Must be ≥1 and ≤1000. (Integer, optional; defaults to 100)",
        "period": "A string or integer indicating the fiscal period for which data is requested. Example: \"annual\" or \"quarter\" to indicate annual or quarterly data. (String or Number, required for period-based endpoints)"
      }
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "fiscalYear": "The fiscal year to which a financial data point pertains, typically in four-digit format. Example: 2023. (Number or String)",
      "period": "The fiscal period associated with the data point, such as a quarter (\"Q2\") or full year. Example: \"Q2\". (String)",
      "reportedCurrency": "The currency in which all reported values are denominated, as per ISO 4217. Example: 'USD' for US dollars. (String, required for financial data integrity)",
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "data": {
        "revenuefromcontractwithcustomerexcludingassessedtax": "Revenue from contracts with customers, excluding amounts collected on behalf of third parties (assessed taxes). (Number, optional)",
        "costofgoodsandservicessold": "Total cost of goods and services sold (COGS) during the period. (Number, e.g., USD)",
        "grossprofit": "Gross profit for the reporting period, calculated as total revenues minus cost of goods sold (COGS). Indicates profitability before operating expenses. (Number, optional)",
        "researchanddevelopmentexpense": "Total expenses for research and development activities incurred during the period. (Number, optional)",
        "sellinggeneralandadministrativeexpense": "Total selling, general, and administrative (SG&A) expenses incurred during the period. (Number, optional)",
        "operatingexpenses": "Total operating expenses reported during the period, including SG&A, R&D, and other recurring costs. (Number, optional)",
        "operatingincomeloss": "Operating income (or loss) for the reporting period, calculated as revenue minus operating expenses. (Number, optional)",
        "nonoperatingincomeexpense": "Net income or expense from non-operating activities, such as interest income or expense, investment gains or losses, etc. (Number, optional)",
        "incomelossfromcontinuingoperationsbeforeincometaxesextraordinaryitemsnoncontrollinginterest": "Income or loss from continuing operations before income taxes, extraordinary items, and noncontrolling interest. (Number, optional)",
        "incometaxexpensebenefit": "Total provision for income tax expense (or benefit) recognized for the reporting period. (Number, optional)",
        "netincomeloss": "Net income or loss for the reporting period, as reported in the income statement. (Number, optional)",
        "earningspersharebasic": "Earnings per basic share reported for the period. (Number, e.g., USD per share)",
        "earningspersharediluted": "Diluted earnings per share for the period, including the effect of options and convertible securities. (Number, e.g., USD per share)",
        "weightedaveragenumberofsharesoutstandingbasic": "Weighted average number of basic shares outstanding during the reporting period. (Number, optional)",
        "weightedaveragenumberofdilutedsharesoutstanding": "Weighted average number of diluted shares outstanding during the reporting period. (Number, optional)",
        "othercomprehensiveincomelossforeigncurrencytransactionandtranslationadjustmentnetoftax": "OCI impact from foreign currency transaction and translation adjustments, net of tax. (Number, optional)",
        "othercomprehensiveincomelossderivativeinstrumentgainlossbeforereclassificationaftertax": "Gain or loss on derivative instruments included in other comprehensive income before reclassification, after tax. (Number, optional)",
        "othercomprehensiveincomelossderivativeinstrumentgainlossreclassificationaftertax": "Amount of derivative gain or loss reclassified from OCI to earnings, after tax. (Number, optional)",
        "othercomprehensiveincomelossderivativeinstrumentgainlossafterreclassificationandtax": "Net gain or loss on derivative instruments included in other comprehensive income after reclassification adjustments and tax effects. (Number, optional)",
        "othercomprehensiveincomeunrealizedholdinggainlossonsecuritiesarisingduringperiodnetoftax": "Unrealized holding gain or loss on securities during the period, recognized in OCI net of tax. (Number, optional)",
        "othercomprehensiveincomelossreclassificationadjustmentfromaociforsaleofsecuritiesnetoftax": "Reclassification adjustment from accumulated OCI related to sale of securities, net of tax. (Number, optional)",
        "othercomprehensiveincomelossavailableforsalesecuritiesadjustmentnetoftax": "Net adjustment to other comprehensive income (OCI) for available-for-sale securities, net of tax. Reflects gains or losses that have not been realized through sale. (Number, optional)",
        "othercomprehensiveincomelossnetoftaxportionattributabletoparent": "Portion of other comprehensive income/loss, net of tax, attributable to the parent company. (Number, optional)",
        "comprehensiveincomenetoftax": "Comprehensive net income after tax for the reporting period. (Number, e.g., USD)"
      }
    }
  },
  {
    "name": "As Reported Balance Statements API",
    "description": "Access the pristine balance sheet as filed—assets, liabilities, equity—tagged exactly per SEC XBRL. Only `symbol` is mandatory; add `limit` or `period` as needed. Use the untouched field names (`assetscurrent`, `commonstocksharesoutstanding`, etc.) for reconciliation, model-training, or variance checks against standardized datasets.",
    "category": "filings_raw",
    "use_cases": [
      "reconcile regulatory filings vs vendor feeds",
      "train LLMs on original balance-sheet taxonomy",
      "trace equity movements line-by-line",
      "detect changes in reporting structure",
      "audit-trail generation for controllers"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {
        "limit": "An integer cap on the number of results returned by the endpoint. Example: 50 to restrict output to the top 50 matches. Must be ≥1 and ≤1000. (Integer, optional; defaults to 100)",
        "period": "A string or integer indicating the fiscal period for which data is requested. Example: \"annual\" or \"quarter\" to indicate annual or quarterly data. (String or Number, required for period-based endpoints)"
      }
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "fiscalYear": "The fiscal year to which a financial data point pertains, typically in four-digit format. Example: 2023. (Number or String)",
      "period": "The fiscal period associated with the data point, such as a quarter (\"Q2\") or full year. Example: \"Q2\". (String)",
      "reportedCurrency": "The currency in which all reported values are denominated, as per ISO 4217. Example: 'USD' for US dollars. (String, required for financial data integrity)",
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "data": {
        "cashandcashequivalentsatcarryingvalue": "Carrying value of cash and cash equivalents, including highly liquid investments. (Number, e.g., USD)",
        "marketablesecuritiescurrent": "Marketable securities classified as current assets, typically investments expected to be liquidated within a year. (Number, optional)",
        "accountsreceivablenetcurrent": "Current net accounts receivable, i.e., amounts owed by customers minus allowances. (Number, e.g., USD)",
        "nontradereceivablescurrent": "Current portion of non-trade receivables, including receivables not related to the company’s principal business. (Number, optional)",
        "inventorynet": "Net value of inventory held at the end of the reporting period, after accounting for reserves and obsolescence. (Number, optional)",
        "otherassetscurrent": "Other current assets not specifically classified elsewhere on the balance sheet. (Number, optional)",
        "assetscurrent": "Total current assets, expected to be converted to cash or used within one year. (Number, e.g., USD)",
        "marketablesecuritiesnoncurrent": "Marketable securities classified as non-current assets (not expected to be liquidated within a year). (Number, optional)",
        "propertyplantandequipmentnet": "Net value of property, plant, and equipment after accumulated depreciation and amortization. (Number, optional)",
        "otherassetsnoncurrent": "Other non-current assets not specifically classified elsewhere on the balance sheet. (Number, optional)",
        "assetsnoncurrent": "Total non-current assets, not expected to be converted to cash within one year. (Number, e.g., USD)",
        "assets": "Total assets reported on the balance sheet as of the reporting date. (Number, e.g., USD)",
        "accountspayablecurrent": "Current accounts payable, representing short-term obligations to suppliers at the reporting date. (Number, e.g., USD)",
        "otherliabilitiescurrent": "Other current liabilities not classified under standard headings, due within one year. (Number, optional)",
        "contractwithcustomerliabilitycurrent": "Current portion of contract liabilities due within one year. (Number, e.g., USD)",
        "commercialpaper": "Outstanding commercial paper, a short-term unsecured promissory note issued by the company. (Number, e.g., USD)",
        "longtermdebtcurrent": "Current portion of long-term debt due within one year. (Number, optional)",
        "liabilitiescurrent": "Liabilities due within one year or the operating cycle, whichever is longer. (Number, optional)",
        "longtermdebtnoncurrent": "Portion of long-term debt not due within one year (non-current). (Number, optional)",
        "otherliabilitiesnoncurrent": "Other non-current liabilities not classified elsewhere, due after one year. (Number, optional)",
        "liabilitiesnoncurrent": "Liabilities not due within one year or the operating cycle. (Number, optional)",
        "liabilities": "Total liabilities of the company, including current and non-current obligations, as of the reporting date. (Number, optional)",
        "commonstocksharesoutstanding": "Total number of common shares outstanding (issued minus treasury shares). (Number)",
        "commonstocksharesissued": "Total number of common shares issued as of the reporting date. (Number)",
        "commonstocksincludingadditionalpaidincapital": "Combined value of common stock and additional paid-in capital. (Number, e.g., USD)",
        "retainedearningsaccumulateddeficit": "Cumulative net income minus dividends and other distributions to shareholders since inception. Positive for retained earnings, negative for accumulated deficit. (Number, optional)",
        "accumulatedothercomprehensiveincomelossnetoftax": "Accumulated other comprehensive income/loss, net of tax, for all periods presented. (Number, e.g., USD)",
        "stockholdersequity": "Total stockholders’ equity (net assets) at period end. (Number, optional)",
        "liabilitiesandstockholdersequity": "Sum of total liabilities and total stockholders’ equity, should match total assets on the balance sheet. (Number, optional)",
        "commonstockparorstatedvaluepershare": "Par or stated value per share of common stock. (Number, e.g., USD per share)",
        "commonstocksharesauthorized": "Total number of common shares authorized for issuance. (Number)"
      }
    }
  },
  {
    "name": "As Reported Balance Statements API",
    "description": "Fetch untouched balance-sheet data straight from the SEC filing, complete with hierarchical XBRL field names. Supply `symbol`; tailor rows with `period` or `limit`. Perfect for forensic analysts, AI modelers, and accountants needing full fidelity on reported line items and taxonomy labels.",
    "category": "filings_raw",
    "use_cases": [
      "validate capital-structure calculations",
      "parse debt details at line-item granularity",
      "LLM extraction of obscure balance tags",
      "compare field-level shifts across years",
      "support audit sampling workflows"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {
        "limit": "An integer cap on the number of results returned by the endpoint. Example: 50 to restrict output to the top 50 matches. Must be ≥1 and ≤1000. (Integer, optional; defaults to 100)",
        "period": "A string or integer indicating the fiscal period for which data is requested. Example: \"annual\" or \"quarter\" to indicate annual or quarterly data. (String or Number, required for period-based endpoints)"
      }
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "fiscalYear": "The fiscal year to which a financial data point pertains, typically in four-digit format. Example: 2023. (Number or String)",
      "period": "The fiscal period associated with the data point, such as a quarter (\"Q2\") or full year. Example: \"Q2\". (String)",
      "reportedCurrency": "The currency in which all reported values are denominated, as per ISO 4217. Example: 'USD' for US dollars. (String, required for financial data integrity)",
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "data": {
        "cashandcashequivalentsatcarryingvalue": "Carrying value of cash and cash equivalents, including highly liquid investments. (Number, e.g., USD)",
        "marketablesecuritiescurrent": "Marketable securities classified as current assets, typically investments expected to be liquidated within a year. (Number, optional)",
        "accountsreceivablenetcurrent": "Current net accounts receivable, i.e., amounts owed by customers minus allowances. (Number, e.g., USD)",
        "nontradereceivablescurrent": "Current portion of non-trade receivables, including receivables not related to the company’s principal business. (Number, optional)",
        "inventorynet": "Net value of inventory held at the end of the reporting period, after accounting for reserves and obsolescence. (Number, optional)",
        "otherassetscurrent": "Other current assets not specifically classified elsewhere on the balance sheet. (Number, optional)",
        "assetscurrent": "Total current assets, expected to be converted to cash or used within one year. (Number, e.g., USD)",
        "marketablesecuritiesnoncurrent": "Marketable securities classified as non-current assets (not expected to be liquidated within a year). (Number, optional)",
        "propertyplantandequipmentnet": "Net value of property, plant, and equipment after accumulated depreciation and amortization. (Number, optional)",
        "otherassetsnoncurrent": "Other non-current assets not specifically classified elsewhere on the balance sheet. (Number, optional)",
        "assetsnoncurrent": "Total non-current assets, not expected to be converted to cash within one year. (Number, e.g., USD)",
        "assets": "Total assets reported on the balance sheet as of the reporting date. (Number, e.g., USD)",
        "accountspayablecurrent": "Current accounts payable, representing short-term obligations to suppliers at the reporting date. (Number, e.g., USD)",
        "otherliabilitiescurrent": "Other current liabilities not classified under standard headings, due within one year. (Number, optional)",
        "contractwithcustomerliabilitycurrent": "Current portion of contract liabilities due within one year. (Number, e.g., USD)",
        "commercialpaper": "Outstanding commercial paper, a short-term unsecured promissory note issued by the company. (Number, e.g., USD)",
        "longtermdebtcurrent": "Current portion of long-term debt due within one year. (Number, optional)",
        "liabilitiescurrent": "Liabilities due within one year or the operating cycle, whichever is longer. (Number, optional)",
        "longtermdebtnoncurrent": "Portion of long-term debt not due within one year (non-current). (Number, optional)",
        "otherliabilitiesnoncurrent": "Other non-current liabilities not classified elsewhere, due after one year. (Number, optional)",
        "liabilitiesnoncurrent": "Liabilities not due within one year or the operating cycle. (Number, optional)",
        "liabilities": "Total liabilities of the company, including current and non-current obligations, as of the reporting date. (Number, optional)",
        "commonstocksharesoutstanding": "Total number of common shares outstanding (issued minus treasury shares). (Number)",
        "commonstocksharesissued": "Total number of common shares issued as of the reporting date. (Number)",
        "commonstocksincludingadditionalpaidincapital": "Combined value of common stock and additional paid-in capital. (Number, e.g., USD)",
        "retainedearningsaccumulateddeficit": "Cumulative net income minus dividends and other distributions to shareholders since inception. Positive for retained earnings, negative for accumulated deficit. (Number, optional)",
        "accumulatedothercomprehensiveincomelossnetoftax": "Accumulated other comprehensive income/loss, net of tax, for all periods presented. (Number, e.g., USD)",
        "stockholdersequity": "Total stockholders’ equity (net assets) at period end. (Number, optional)",
        "liabilitiesandstockholdersequity": "Sum of total liabilities and total stockholders’ equity, should match total assets on the balance sheet. (Number, optional)",
        "commonstockparorstatedvaluepershare": "Par or stated value per share of common stock. (Number, e.g., USD per share)",
        "commonstocksharesauthorized": "Total number of common shares authorized for issuance. (Number)"
      }
    }
  },
  {
    "name": "As Reported Cashflow Statements API",
    "description": "As Reported Cashflow Statements API returns the raw cash-flow statement tags (`netcashprovidedbyusedinoperatingactivities`, etc.) exactly as submitted to the SEC. Required `symbol`; optional `limit`, `period`. Essential for modeling free-cash flow from original numbers, cash-burn analysis, and AI pipelines that require canonical labels.",
    "category": "filings_raw",
    "use_cases": [
      "calculate FCF directly from GAAP numbers",
      "train models on cash-flow taxonomy",
      "build burn-rate monitors for startups",
      "audit vendor-adjusted cash-flow feeds",
      "support forensic liquidity reviews"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {
        "limit": "An integer cap on the number of results returned by the endpoint. Example: 50 to restrict output to the top 50 matches. Must be ≥1 and ≤1000. (Integer, optional; defaults to 100)",
        "period": "A string or integer indicating the fiscal period for which data is requested. Example: \"annual\" or \"quarter\" to indicate annual or quarterly data. (String or Number, required for period-based endpoints)"
      }
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "fiscalYear": "The fiscal year to which a financial data point pertains, typically in four-digit format. Example: 2023. (Number or String)",
      "period": "The fiscal period associated with the data point, such as a quarter (\"Q2\") or full year. Example: \"Q2\". (String)",
      "reportedCurrency": "The currency in which all reported values are denominated, as per ISO 4217. Example: 'USD' for US dollars. (String, required for financial data integrity)",
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "data": {
        "cashcashequivalentsrestrictedcashandrestrictedcashequivalents": "Total of cash, cash equivalents, and restricted cash. (Number, e.g., USD)",
        "netincomeloss": "Net income or loss for the reporting period, as reported in the income statement. (Number, optional)",
        "depreciationdepletionandamortization": "Combined depreciation, depletion, and amortization expenses for the period. (Number, e.g., USD)",
        "sharebasedcompensation": "Total expense for share-based compensation recognized during the period (stock options, RSUs, etc.). (Number, optional)",
        "othernoncashincomeexpense": "Non-cash income or expense items not included in other specific categories. Used in reconciliation of net income to cash flows. (Number, optional)",
        "increasedecreaseinaccountsreceivable": "Change in accounts receivable balances during the reporting period (increase or decrease), as reported in the cash flow statement. (Number, optional)",
        "increasedecreaseinotherreceivables": "Change in other receivables during the reporting period, often related to non-trade receivables. (Number, optional)",
        "increasedecreaseininventories": "Change in inventory balances during the reporting period (increase or decrease), as reported in the cash flow statement. (Number, optional)",
        "increasedecreaseinotheroperatingassets": "Change in other operating asset balances (excluding accounts receivable and inventory) during the reporting period, as reflected in the cash flow statement. (Number, optional)",
        "increasedecreaseinaccountspayable": "Change in accounts payable balances during the reporting period (increase or decrease), as reported in the cash flow statement. (Number, optional)",
        "increasedecreaseinotheroperatingliabilities": "Change in other operating liability balances (excluding accounts payable) during the reporting period, as shown in the cash flow statement. (Number, optional)",
        "netcashprovidedbyusedinoperatingactivities": "Net cash provided by or used in operating activities during the reporting period. (Number, optional)",
        "paymentstoacquireavailableforsalesecuritiesdebt": "Cash paid to acquire debt securities classified as available-for-sale. (Number, optional)",
        "proceedsfrommaturitiesprepaymentsandcallsofavailableforsalesecurities": "Proceeds received from maturities, prepayments, or calls of available-for-sale securities. (Number, optional)",
        "proceedsfromsaleofavailableforsalesecuritiesdebt": "Proceeds from the sale of debt securities classified as available-for-sale. (Number, optional)",
        "paymentstoacquirepropertyplantandequipment": "Cash paid to acquire property, plant, and equipment (capital expenditures, or capex). (Number, optional)",
        "paymentsforproceedsfromotherinvestingactivities": "Cash paid for or received from miscellaneous investing activities not classified elsewhere (e.g., proceeds from the sale or purchase of intangible assets). (Number, optional)",
        "netcashprovidedbyusedininvestingactivities": "Net cash inflow or outflow resulting from investing activities during the reporting period. (Number, optional)",
        "paymentsrelatedtotaxwithholdingforsharebasedcompensation": "Payments related to tax withholding requirements on share-based compensation awards. (Number, optional)",
        "paymentsofdividends": "Total cash dividends paid to shareholders during the period. (Number, optional)",
        "paymentsforrepurchaseofcommonstock": "Total cash paid for the repurchase of the company's own common stock during the period. (Number, optional)",
        "repaymentsoflongtermdebt": "Cash repayments of principal amounts on long-term debt obligations during the period. (Number, optional)",
        "proceedsfromrepaymentsofcommercialpaper": "Proceeds from repayments of commercial paper borrowings. (Number, optional)",
        "proceedsfrompaymentsforotherfinancingactivities": "Net proceeds from or payments for financing activities not classified elsewhere. (Number, optional)",
        "netcashprovidedbyusedinfinancingactivities": "Net cash inflow or outflow resulting from financing activities during the reporting period. (Number, optional)",
        "cashcashequivalentsrestrictedcashandrestrictedcashequivalentsperiodincreasedecreaseincludingexchangerateeffect": "Net increase or decrease in cash, cash equivalents, and restricted cash including the effect of exchange rates. (Number, e.g., USD)",
        "incometaxespaidnet": "Net amount of income taxes paid (refunds received) during the reporting period, as shown in the cash flow statement. (Number, optional)"
      }
    }
  },
  {
    "name": "As Reported Cashflow Statements API",
    "description": "Pull cash-flow data verbatim—no mapping, no smoothing. Pass `symbol` plus optional `period` and `limit`. Response delivers every official tag, enabling cash-flow reconciliation, direct FCF builds, and historical cash-conversion-cycle studies with source-of-truth values.",
    "category": "filings_raw",
    "use_cases": [
      "rebuild historical FCF series from scratch",
      "NLP extraction of capex vs acquisitions cash",
      "flag divergence between GAAP and adjusted cash flows",
      "populate audit workpapers with raw figures",
      "build LLM Q&A on cash-flow drivers"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {
        "limit": "An integer cap on the number of results returned by the endpoint. Example: 50 to restrict output to the top 50 matches. Must be ≥1 and ≤1000. (Integer, optional; defaults to 100)",
        "period": "A string or integer indicating the fiscal period for which data is requested. Example: \"annual\" or \"quarter\" to indicate annual or quarterly data. (String or Number, required for period-based endpoints)"
      }
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "fiscalYear": "The fiscal year to which a financial data point pertains, typically in four-digit format. Example: 2023. (Number or String)",
      "period": "The fiscal period associated with the data point, such as a quarter (\"Q2\") or full year. Example: \"Q2\". (String)",
      "reportedCurrency": "The currency in which all reported values are denominated, as per ISO 4217. Example: 'USD' for US dollars. (String, required for financial data integrity)",
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "data": {
        "cashcashequivalentsrestrictedcashandrestrictedcashequivalents": "Total of cash, cash equivalents, and restricted cash. (Number, e.g., USD)",
        "netincomeloss": "Net income or loss for the reporting period, as reported in the income statement. (Number, optional)",
        "depreciationdepletionandamortization": "Combined depreciation, depletion, and amortization expenses for the period. (Number, e.g., USD)",
        "sharebasedcompensation": "Total expense for share-based compensation recognized during the period (stock options, RSUs, etc.). (Number, optional)",
        "othernoncashincomeexpense": "Non-cash income or expense items not included in other specific categories. Used in reconciliation of net income to cash flows. (Number, optional)",
        "increasedecreaseinaccountsreceivable": "Change in accounts receivable balances during the reporting period (increase or decrease), as reported in the cash flow statement. (Number, optional)",
        "increasedecreaseinotherreceivables": "Change in other receivables during the reporting period, often related to non-trade receivables. (Number, optional)",
        "increasedecreaseininventories": "Change in inventory balances during the reporting period (increase or decrease), as reported in the cash flow statement. (Number, optional)",
        "increasedecreaseinotheroperatingassets": "Change in other operating asset balances (excluding accounts receivable and inventory) during the reporting period, as reflected in the cash flow statement. (Number, optional)",
        "increasedecreaseinaccountspayable": "Change in accounts payable balances during the reporting period (increase or decrease), as reported in the cash flow statement. (Number, optional)",
        "increasedecreaseinotheroperatingliabilities": "Change in other operating liability balances (excluding accounts payable) during the reporting period, as shown in the cash flow statement. (Number, optional)",
        "netcashprovidedbyusedinoperatingactivities": "Net cash provided by or used in operating activities during the reporting period. (Number, optional)",
        "paymentstoacquireavailableforsalesecuritiesdebt": "Cash paid to acquire debt securities classified as available-for-sale. (Number, optional)",
        "proceedsfrommaturitiesprepaymentsandcallsofavailableforsalesecurities": "Proceeds received from maturities, prepayments, or calls of available-for-sale securities. (Number, optional)",
        "proceedsfromsaleofavailableforsalesecuritiesdebt": "Proceeds from the sale of debt securities classified as available-for-sale. (Number, optional)",
        "paymentstoacquirepropertyplantandequipment": "Cash paid to acquire property, plant, and equipment (capital expenditures, or capex). (Number, optional)",
        "paymentsforproceedsfromotherinvestingactivities": "Cash paid for or received from miscellaneous investing activities not classified elsewhere (e.g., proceeds from the sale or purchase of intangible assets). (Number, optional)",
        "netcashprovidedbyusedininvestingactivities": "Net cash inflow or outflow resulting from investing activities during the reporting period. (Number, optional)",
        "paymentsrelatedtotaxwithholdingforsharebasedcompensation": "Payments related to tax withholding requirements on share-based compensation awards. (Number, optional)",
        "paymentsofdividends": "Total cash dividends paid to shareholders during the period. (Number, optional)",
        "paymentsforrepurchaseofcommonstock": "Total cash paid for the repurchase of the company's own common stock during the period. (Number, optional)",
        "repaymentsoflongtermdebt": "Cash repayments of principal amounts on long-term debt obligations during the period. (Number, optional)",
        "proceedsfromrepaymentsofcommercialpaper": "Proceeds from repayments of commercial paper borrowings. (Number, optional)",
        "proceedsfrompaymentsforotherfinancingactivities": "Net proceeds from or payments for financing activities not classified elsewhere. (Number, optional)",
        "netcashprovidedbyusedinfinancingactivities": "Net cash inflow or outflow resulting from financing activities during the reporting period. (Number, optional)",
        "cashcashequivalentsrestrictedcashandrestrictedcashequivalentsperiodincreasedecreaseincludingexchangerateeffect": "Net increase or decrease in cash, cash equivalents, and restricted cash including the effect of exchange rates. (Number, e.g., USD)",
        "incometaxespaidnet": "Net amount of income taxes paid (refunds received) during the reporting period, as shown in the cash flow statement. (Number, optional)"
      }
    }
  },
  {
    "name": "As Reported Financial Statements API",
    "description": "As Reported Financial Statements API compiles income, balance, and cash-flow statements into one mega-payload exactly as disclosed. Required `symbol`; optional `limit`, `period`. Useful for single-call ingestion of every primary statement, maintaining original XBRL tags for full-fidelity analytics and AI training.",
    "category": "filings_raw",
    "use_cases": [
      "bulk ingest all three statements in one request",
      "fine-tune LLMs on multi-statement context",
      "cross-statement validation in audit routines",
      "time-series storage with canonical taxonomy",
      "detect inconsistencies across statements"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {
        "limit": "An integer cap on the number of results returned by the endpoint. Example: 50 to restrict output to the top 50 matches. Must be ≥1 and ≤1000. (Integer, optional; defaults to 100)",
        "period": "A string or integer indicating the fiscal period for which data is requested. Example: \"annual\" or \"quarter\" to indicate annual or quarterly data. (String or Number, required for period-based endpoints)"
      }
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "fiscalYear": "The fiscal year to which a financial data point pertains, typically in four-digit format. Example: 2023. (Number or String)",
      "period": "The fiscal period associated with the data point, such as a quarter (\"Q2\") or full year. Example: \"Q2\". (String)",
      "reportedCurrency": "The currency in which all reported values are denominated, as per ISO 4217. Example: 'USD' for US dollars. (String, required for financial data integrity)",
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "data": {
        "documenttype": "Type of regulatory or financial statement document (e.g., 10-K, 10-Q, 8-K). (String)",
        "documentannualreport": "Flag indicating if the document is an annual report. (Boolean or String: 'Y'/'N')",
        "currentfiscalyearenddate": "End date of the current fiscal year. (String, date)",
        "documentperiodenddate": "The end date of the reporting period covered by the document. (String, date)",
        "documenttransitionreport": "Indicates whether the filing is a transition report. (Boolean or String: 'Y'/'N')",
        "entityfilenumber": "SEC file number assigned to the registrant or specific filing. Example: '001-36743'. Used to track filings and dockets. (String, optional)",
        "entityregistrantname": "Full legal name of the registrant (company or issuer) as filed with regulatory authorities. (String, required for filings)",
        "entityincorporationstatecountrycode": "State or country code where the company is incorporated or organized. Example: 'DE' for Delaware, 'US' for United States, 'KY' for Cayman Islands. (String, optional)",
        "entitytaxidentificationnumber": "Federal Tax Identification Number (TIN), EIN, or other regulatory identifier for the company, used for tax reporting. (String, optional, sensitive)",
        "entityaddressaddressline1": "Primary address line for the reporting entity. (String)",
        "entityaddresscityortown": "City or town of the reporting entity's address. (String)",
        "entityaddressstateorprovince": "State or province component of the registrant’s primary address, as reported in SEC filings. (String, optional)",
        "entityaddresspostalzipcode": "Postal or ZIP code for the reporting entity's address. (String)",
        "cityareacode": "City area code for issuer or reporting entity's primary address. (String)",
        "localphonenumber": "Local telephone number for the company or reporting entity. (String, optional)",
        "security12btitle": "Title of the class of securities as registered under Section 12(b) of the Securities Exchange Act. (String, optional)",
        "tradingsymbol": "Ticker or trading symbol under which the company’s securities are listed. (String, optional)",
        "notradingsymbolflag": "Flag indicating whether the entity’s security does not have a trading symbol. (String: 'Y' or 'N', optional)",
        "securityexchangename": "Name of the exchange where the security is registered and/or traded. (String, optional)",
        "entitywellknownseasonedissuer": "Flag indicating whether the registrant is classified as a Well-Known Seasoned Issuer (WKSI), impacting shelf registration rules. (String, 'Y'/'N', optional)",
        "entityvoluntaryfilers": "Boolean or string indicator if the company files with the SEC voluntarily (not due to regulatory requirement). (String, optional)",
        "entitycurrentreportingstatus": "Current reporting status of the entity, such as 'Active', 'Inactive', 'Delinquent', or 'Suspended'. Indicates ongoing filing compliance. (String, optional)",
        "entityinteractivedatacurrent": "Boolean flag indicating if the interactive data (XBRL) in the filing is current as of the filing date. (String, optional)",
        "entityfilercategory": "SEC filer category, such as 'Large Accelerated Filer', 'Accelerated Filer', 'Non-Accelerated Filer', or 'Smaller Reporting Company'. Impacts reporting obligations. (String, optional)",
        "entitysmallbusiness": "Boolean flag indicating if the entity qualifies as a small business under SEC or other regulatory definitions. (String, optional)",
        "entityemerginggrowthcompany": "Boolean flag ('true'/'false' or 'Y'/'N') indicating whether the company qualifies as an Emerging Growth Company under the JOBS Act. (String, optional)",
        "icfrauditorattestationflag": "Indicates whether the company's internal control over financial reporting has been attested to by the independent auditor. Values: 'Y' or 'N'. (String, optional)",
        "documentfinstmterrorcorrectionflag": "Indicates whether the financial statement document includes an error correction. (Boolean or String: 'Y'/'N')",
        "entityshellcompany": "Boolean flag indicating if the entity is a shell company as defined by the SEC. (String, 'Y'/'N', optional)",
        "amendmentflag": "Indicates whether the filing or report is an amendment ('true') or original ('false'). (Boolean)",
        "documentfiscalyearfocus": "The fiscal year focus of the document (e.g., 2023, 2024). (Number or String)",
        "documentfiscalperiodfocus": "The fiscal period focus of the document (e.g., Q1, Q2, FY). (String)",
        "entitycentralindexkey": "SEC Central Index Key (CIK), a unique 10-digit identifier for companies and individuals filing with the SEC. Example: '0000320193' for Apple Inc. (String, required for US filings)",
        "auditorname": "Official name of the external auditor who certified the financial statements. (String)",
        "auditorlocation": "Location or address of the auditing firm responsible for reviewing financial statements. (String)",
        "auditorfirmid": "Unique identifier assigned to the external audit firm for regulatory tracking. (String)",
        "revenuefromcontractwithcustomerexcludingassessedtax": "Revenue from contracts with customers, excluding amounts collected on behalf of third parties (assessed taxes). (Number, optional)",
        "costofgoodsandservicessold": "Total cost of goods and services sold (COGS) during the period. (Number, e.g., USD)",
        "grossprofit": "Gross profit for the reporting period, calculated as total revenues minus cost of goods sold (COGS). Indicates profitability before operating expenses. (Number, optional)",
        "researchanddevelopmentexpense": "Total expenses for research and development activities incurred during the period. (Number, optional)",
        "sellinggeneralandadministrativeexpense": "Total selling, general, and administrative (SG&A) expenses incurred during the period. (Number, optional)",
        "operatingexpenses": "Total operating expenses reported during the period, including SG&A, R&D, and other recurring costs. (Number, optional)",
        "operatingincomeloss": "Operating income (or loss) for the reporting period, calculated as revenue minus operating expenses. (Number, optional)",
        "nonoperatingincomeexpense": "Net income or expense from non-operating activities, such as interest income or expense, investment gains or losses, etc. (Number, optional)",
        "incomelossfromcontinuingoperationsbeforeincometaxesextraordinaryitemsnoncontrollinginterest": "Income or loss from continuing operations before income taxes, extraordinary items, and noncontrolling interest. (Number, optional)",
        "incometaxexpensebenefit": "Total provision for income tax expense (or benefit) recognized for the reporting period. (Number, optional)",
        "netincomeloss": "Net income or loss for the reporting period, as reported in the income statement. (Number, optional)",
        "earningspersharebasic": "Earnings per basic share reported for the period. (Number, e.g., USD per share)",
        "earningspersharediluted": "Diluted earnings per share for the period, including the effect of options and convertible securities. (Number, e.g., USD per share)",
        "weightedaveragenumberofsharesoutstandingbasic": "Weighted average number of basic shares outstanding during the reporting period. (Number, optional)",
        "weightedaveragenumberofdilutedsharesoutstanding": "Weighted average number of diluted shares outstanding during the reporting period. (Number, optional)",
        "othercomprehensiveincomelossforeigncurrencytransactionandtranslationadjustmentnetoftax": "OCI impact from foreign currency transaction and translation adjustments, net of tax. (Number, optional)",
        "othercomprehensiveincomelossderivativeinstrumentgainlossbeforereclassificationaftertax": "Gain or loss on derivative instruments included in other comprehensive income before reclassification, after tax. (Number, optional)",
        "othercomprehensiveincomelossderivativeinstrumentgainlossreclassificationaftertax": "Amount of derivative gain or loss reclassified from OCI to earnings, after tax. (Number, optional)",
        "othercomprehensiveincomelossderivativeinstrumentgainlossafterreclassificationandtax": "Net gain or loss on derivative instruments included in other comprehensive income after reclassification adjustments and tax effects. (Number, optional)",
        "othercomprehensiveincomeunrealizedholdinggainlossonsecuritiesarisingduringperiodnetoftax": "Unrealized holding gain or loss on securities during the period, recognized in OCI net of tax. (Number, optional)",
        "othercomprehensiveincomelossreclassificationadjustmentfromaociforsaleofsecuritiesnetoftax": "Reclassification adjustment from accumulated OCI related to sale of securities, net of tax. (Number, optional)",
        "othercomprehensiveincomelossavailableforsalesecuritiesadjustmentnetoftax": "Net adjustment to other comprehensive income (OCI) for available-for-sale securities, net of tax. Reflects gains or losses that have not been realized through sale. (Number, optional)",
        "othercomprehensiveincomelossnetoftaxportionattributabletoparent": "Portion of other comprehensive income/loss, net of tax, attributable to the parent company. (Number, optional)",
        "comprehensiveincomenetoftax": "Comprehensive net income after tax for the reporting period. (Number, e.g., USD)",
        "cashandcashequivalentsatcarryingvalue": "Carrying value of cash and cash equivalents, including highly liquid investments. (Number, e.g., USD)",
        "marketablesecuritiescurrent": "Marketable securities classified as current assets, typically investments expected to be liquidated within a year. (Number, optional)",
        "accountsreceivablenetcurrent": "Current net accounts receivable, i.e., amounts owed by customers minus allowances. (Number, e.g., USD)",
        "nontradereceivablescurrent": "Current portion of non-trade receivables, including receivables not related to the company’s principal business. (Number, optional)",
        "inventorynet": "Net value of inventory held at the end of the reporting period, after accounting for reserves and obsolescence. (Number, optional)",
        "otherassetscurrent": "Other current assets not specifically classified elsewhere on the balance sheet. (Number, optional)",
        "assetscurrent": "Total current assets, expected to be converted to cash or used within one year. (Number, e.g., USD)",
        "marketablesecuritiesnoncurrent": "Marketable securities classified as non-current assets (not expected to be liquidated within a year). (Number, optional)",
        "propertyplantandequipmentnet": "Net value of property, plant, and equipment after accumulated depreciation and amortization. (Number, optional)",
        "otherassetsnoncurrent": "Other non-current assets not specifically classified elsewhere on the balance sheet. (Number, optional)",
        "assetsnoncurrent": "Total non-current assets, not expected to be converted to cash within one year. (Number, e.g., USD)",
        "assets": "Total assets reported on the balance sheet as of the reporting date. (Number, e.g., USD)",
        "accountspayablecurrent": "Current accounts payable, representing short-term obligations to suppliers at the reporting date. (Number, e.g., USD)",
        "otherliabilitiescurrent": "Other current liabilities not classified under standard headings, due within one year. (Number, optional)",
        "contractwithcustomerliabilitycurrent": "Current portion of contract liabilities due within one year. (Number, e.g., USD)",
        "commercialpaper": "Outstanding commercial paper, a short-term unsecured promissory note issued by the company. (Number, e.g., USD)",
        "longtermdebtcurrent": "Current portion of long-term debt due within one year. (Number, optional)",
        "liabilitiescurrent": "Liabilities due within one year or the operating cycle, whichever is longer. (Number, optional)",
        "longtermdebtnoncurrent": "Portion of long-term debt not due within one year (non-current). (Number, optional)",
        "otherliabilitiesnoncurrent": "Other non-current liabilities not classified elsewhere, due after one year. (Number, optional)",
        "liabilitiesnoncurrent": "Liabilities not due within one year or the operating cycle. (Number, optional)",
        "liabilities": "Total liabilities of the company, including current and non-current obligations, as of the reporting date. (Number, optional)",
        "commonstocksharesoutstanding": "Total number of common shares outstanding (issued minus treasury shares). (Number)",
        "commonstocksharesissued": "Total number of common shares issued as of the reporting date. (Number)",
        "commonstocksincludingadditionalpaidincapital": "Combined value of common stock and additional paid-in capital. (Number, e.g., USD)",
        "retainedearningsaccumulateddeficit": "Cumulative net income minus dividends and other distributions to shareholders since inception. Positive for retained earnings, negative for accumulated deficit. (Number, optional)",
        "accumulatedothercomprehensiveincomelossnetoftax": "Accumulated other comprehensive income/loss, net of tax, for all periods presented. (Number, e.g., USD)",
        "stockholdersequity": "Total stockholders’ equity (net assets) at period end. (Number, optional)",
        "liabilitiesandstockholdersequity": "Sum of total liabilities and total stockholders’ equity, should match total assets on the balance sheet. (Number, optional)",
        "commonstockparorstatedvaluepershare": "Par or stated value per share of common stock. (Number, e.g., USD per share)",
        "commonstocksharesauthorized": "Total number of common shares authorized for issuance. (Number)",
        "stockissuedduringperiodvaluenewissues": "Value of new shares issued during the reporting period. (Number, optional)",
        "adjustmentsrelatedtotaxwithholdingforsharebasedcompensation": "Adjustments related to tax withholding obligations for share-based compensation plans. (Number, e.g., USD)",
        "adjustmentstoadditionalpaidincapitalsharebasedcompensationrequisiteserviceperiodrecognitionvalue": "Adjustments to additional paid-in capital for the requisite service period recognition value of share-based compensation.",
        "dividends": "Total dividends declared or paid during the period. (Number, e.g., USD)",
        "stockrepurchasedandretiredduringperiodvalue": "Total value of shares repurchased and retired during the period. (Number, optional)",
        "commonstockdividendspersharedeclared": "Dividends per share of common stock declared during the reporting period. (Number, e.g., USD per share)",
        "cashcashequivalentsrestrictedcashandrestrictedcashequivalents": "Total of cash, cash equivalents, and restricted cash. (Number, e.g., USD)",
        "depreciationdepletionandamortization": "Combined depreciation, depletion, and amortization expenses for the period. (Number, e.g., USD)",
        "sharebasedcompensation": "Total expense for share-based compensation recognized during the period (stock options, RSUs, etc.). (Number, optional)",
        "othernoncashincomeexpense": "Non-cash income or expense items not included in other specific categories. Used in reconciliation of net income to cash flows. (Number, optional)",
        "increasedecreaseinaccountsreceivable": "Change in accounts receivable balances during the reporting period (increase or decrease), as reported in the cash flow statement. (Number, optional)",
        "increasedecreaseinotherreceivables": "Change in other receivables during the reporting period, often related to non-trade receivables. (Number, optional)",
        "increasedecreaseininventories": "Change in inventory balances during the reporting period (increase or decrease), as reported in the cash flow statement. (Number, optional)",
        "increasedecreaseinotheroperatingassets": "Change in other operating asset balances (excluding accounts receivable and inventory) during the reporting period, as reflected in the cash flow statement. (Number, optional)",
        "increasedecreaseinaccountspayable": "Change in accounts payable balances during the reporting period (increase or decrease), as reported in the cash flow statement. (Number, optional)",
        "increasedecreaseinotheroperatingliabilities": "Change in other operating liability balances (excluding accounts payable) during the reporting period, as shown in the cash flow statement. (Number, optional)",
        "netcashprovidedbyusedinoperatingactivities": "Net cash provided by or used in operating activities during the reporting period. (Number, optional)",
        "paymentstoacquireavailableforsalesecuritiesdebt": "Cash paid to acquire debt securities classified as available-for-sale. (Number, optional)",
        "proceedsfrommaturitiesprepaymentsandcallsofavailableforsalesecurities": "Proceeds received from maturities, prepayments, or calls of available-for-sale securities. (Number, optional)",
        "proceedsfromsaleofavailableforsalesecuritiesdebt": "Proceeds from the sale of debt securities classified as available-for-sale. (Number, optional)",
        "paymentstoacquirepropertyplantandequipment": "Cash paid to acquire property, plant, and equipment (capital expenditures, or capex). (Number, optional)",
        "paymentsforproceedsfromotherinvestingactivities": "Cash paid for or received from miscellaneous investing activities not classified elsewhere (e.g., proceeds from the sale or purchase of intangible assets). (Number, optional)",
        "netcashprovidedbyusedininvestingactivities": "Net cash inflow or outflow resulting from investing activities during the reporting period. (Number, optional)",
        "paymentsrelatedtotaxwithholdingforsharebasedcompensation": "Payments related to tax withholding requirements on share-based compensation awards. (Number, optional)",
        "paymentsofdividends": "Total cash dividends paid to shareholders during the period. (Number, optional)",
        "paymentsforrepurchaseofcommonstock": "Total cash paid for the repurchase of the company's own common stock during the period. (Number, optional)",
        "repaymentsoflongtermdebt": "Cash repayments of principal amounts on long-term debt obligations during the period. (Number, optional)",
        "proceedsfromrepaymentsofcommercialpaper": "Proceeds from repayments of commercial paper borrowings. (Number, optional)",
        "proceedsfrompaymentsforotherfinancingactivities": "Net proceeds from or payments for financing activities not classified elsewhere. (Number, optional)",
        "netcashprovidedbyusedinfinancingactivities": "Net cash inflow or outflow resulting from financing activities during the reporting period. (Number, optional)",
        "cashcashequivalentsrestrictedcashandrestrictedcashequivalentsperiodincreasedecreaseincludingexchangerateeffect": "Net increase or decrease in cash, cash equivalents, and restricted cash including the effect of exchange rates. (Number, e.g., USD)",
        "incometaxespaidnet": "Net amount of income taxes paid (refunds received) during the reporting period, as shown in the cash flow statement. (Number, optional)",
        "commercialpapercashflowsummarytabletextblock": "Text block detailing the cash flow summary for commercial paper transactions. (String, may contain HTML or XBRL content)",
        "contractwithcustomerliabilityrevenuerecognized": "Amount of revenue recognized from contract liabilities during the period. (Number, e.g., USD)",
        "contractwithcustomerliability": "Total liability related to contracts with customers (e.g., deferred revenue). (Number, e.g., USD)",
        "revenueremainingperformanceobligationpercentage": "Percentage of total revenue represented by remaining performance obligations under customer contracts. (Number, percent, optional)",
        "revenueremainingperformanceobligationexpectedtimingofsatisfactionperiod1": "Expected timing (e.g., in years) for satisfaction of remaining performance obligations under customer contracts (period 1). (String/Number, optional)",
        "incrementalcommonsharesattributabletosharebasedpaymentarrangements": "Number of incremental common shares resulting from assumed conversion of share-based payment awards, used in diluted EPS calculation. (Number, optional)",
        "cash": "Total cash on hand and in bank accounts at the reporting date. (Number, e.g., USD)",
        "equitysecuritiesfvnicost": "Cost basis of equity securities measured at fair value through net income (FVNI). Represents original acquisition cost before adjustments for unrealized gains/losses. (Number, optional)",
        "equitysecuritiesfvniaccumulatedgrossunrealizedgainbeforetax": "Total gross unrealized gains on equity securities measured at fair value through net income (FVNI), before tax impact, as of the balance sheet date. (Number, optional)",
        "equitysecuritiesfvniaccumulatedgrossunrealizedlossbeforetax": "Total gross unrealized losses on equity securities measured at fair value through net income (FVNI), before tax impact. (Number, optional)",
        "equitysecuritiesfvnicurrentandnoncurrent": "Total fair value of all equity securities (current and noncurrent) measured at fair value through net income (FVNI) as of reporting date. (Number, optional)",
        "availableforsaledebtsecuritiesamortizedcostbasis": "Amortized cost basis of available-for-sale debt securities. (Number, e.g., USD)",
        "availableforsaledebtsecuritiesaccumulatedgrossunrealizedgainbeforetax": "Accumulated gross unrealized gain (before taxes) on available-for-sale debt securities. (Number, e.g., USD)",
        "availableforsaledebtsecuritiesaccumulatedgrossunrealizedlossbeforetax": "Accumulated gross unrealized loss (before taxes) on available-for-sale debt securities. (Number, e.g., USD)",
        "availableforsalesecuritiesdebtsecurities": "Book value or fair value of available-for-sale debt securities held by the company. (Number, e.g., USD)",
        "cashcashequivalentsandmarketablesecuritiescost": "Cost basis for cash, cash equivalents, and marketable securities. (Number, e.g., USD)",
        "cashequivalentsandmarketablesecuritiesaccumulatedgrossunrealizedgainbeforetax": "Accumulated gross unrealized gain (before taxes) on cash equivalents and marketable securities. (Number, e.g., USD)",
        "cashequivalentsandmarketablesecuritiesaccumulatedgrossunrealizedlossbeforetax": "Accumulated gross unrealized loss (before taxes) on cash equivalents and marketable securities. (Number, e.g., USD)",
        "cashcashequivalentsandmarketablesecurities": "Combined total of cash, cash equivalents, and marketable securities. (Number, e.g., USD)",
        "restrictedcashandcashequivalents": "Cash and equivalents that are restricted as to withdrawal or usage. (Number, optional)",
        "debtsecuritiesavailableforsalerestricted": "Value of restricted available-for-sale debt securities. (Number, e.g., USD)",
        "debtsecuritiesavailableforsalematurityallocatedandsinglematuritydaterollingafteronethroughfiveyearspercentage": "Percentage of available-for-sale debt securities maturing in one to five years. (Percent)",
        "debtsecuritiesavailableforsalematurityallocatedandsinglematuritydaterollingafterfivethroughtenyearspercentage": "Percentage of available-for-sale debt securities maturing in five to ten years. (Percent)",
        "debtsecuritiesavailableforsalematurityallocatedandsinglematuritydaterollingaftertenyearspercentage": "Percentage of available-for-sale debt securities maturing after ten years. (Percent)",
        "maximumlengthoftimeforeigncurrencycashflowhedge": "Maximum length of time over which a foreign currency cash flow hedge is expected to affect future cash flows. (Number/String, optional)",
        "concentrationriskpercentage1": "Percentage of revenue, assets, or risk concentrated in a specific customer, segment, or exposure. (Percent)",
        "numberofsignificantvendors": "Number of vendors considered significant to the company’s operations, usually disclosed for risk concentration purposes. (Number, optional)",
        "derivativenotionalamount": "Notional amount of outstanding derivative contracts. (Number, e.g., USD)",
        "hedgedassetstatementoffinancialpositionextensibleenumeration": "Enumeration of assets designated as hedged items in the statement of financial position, per XBRL tagging. (String/Array, optional)",
        "hedgedliabilityfairvaluehedge": "Fair value of liabilities designated as being hedged under a fair value hedge accounting relationship. (Number, optional)",
        "hedgedliabilitystatementoffinancialpositionextensibleenumeration": "Enumeration of liabilities designated as hedged items in the statement of financial position. (String/Array, optional)",
        "propertyplantandequipmentgross": "Gross value of property, plant, and equipment before accumulated depreciation or amortization. (Number, optional)",
        "accumulateddepreciationdepletionandamortizationpropertyplantandequipment": "Total accumulated depreciation, depletion, and amortization for property, plant, and equipment. (Number, e.g., USD)",
        "depreciation": "Depreciation expense recognized for the reporting period. (Number, e.g., USD)",
        "deferredincometaxassetsnet": "Net value of deferred income tax assets after offsetting with deferred tax liabilities. (Number, e.g., USD)",
        "otherassetsmiscellaneousnoncurrent": "Miscellaneous non-current assets not included in primary asset categories. (Number, optional)",
        "accruedincometaxescurrent": "Current portion of accrued income taxes owed by the company. (Number, e.g., USD)",
        "otheraccruedliabilitiescurrent": "Other accrued liabilities due within one year, not classified elsewhere. (Number, optional)",
        "accruedincometaxesnoncurrent": "Noncurrent portion of accrued income taxes, due beyond one year. (Number, e.g., USD)",
        "otheraccruedliabilitiesnoncurrent": "Other accrued liabilities not due within one year. (Number, optional)",
        "totalrestrictedcashcashequivalentsandavailableforsaledebtsecurities": "Sum of restricted cash, cash equivalents, and available-for-sale debt securities held at period end. (Number, optional)",
        "currentforeigntaxexpensebenefit": "Current period foreign tax expense or benefit. (Number, e.g., USD)",
        "currentfederaltaxexpensebenefit": "Current period federal tax expense or benefit. (Number, e.g., USD)",
        "unrecognizedtaxbenefitsdecreasesresultingfromsettlementswithtaxingauthorities": "Decrease in unrecognized tax benefits due to settlements with taxing authorities. (Number, optional)",
        "incomelossfromcontinuingoperationsbeforeincometaxesforeign": "Portion of income or loss from continuing operations before income taxes that is attributable to foreign operations. (Number, optional)",
        "effectiveincometaxratereconciliationatfederalstatutoryincometaxrate": "Reconciliation of the effective income tax rate to the U.S. federal statutory rate. (Percent)",
        "deferredtaxassetstaxcreditcarryforwardsforeign": "Portion of deferred tax assets attributable to foreign tax credit carryforwards. (Number, e.g., USD)",
        "deferredtaxassetstaxcreditcarryforwardsresearch": "Deferred tax assets related to research and development tax credit carryforwards. (Number, e.g., USD)",
        "unrecognizedtaxbenefits": "Total amount of unrecognized tax benefits (uncertain tax positions) as of the reporting date. (Number, optional)",
        "unrecognizedtaxbenefitsthatwouldimpacteffectivetaxrate": "Portion of unrecognized tax benefits that, if recognized, would affect the effective tax rate. (Number, optional)",
        "decreaseinunrecognizedtaxbenefitsisreasonablypossible": "Indicates if a decrease in unrecognized tax benefits is reasonably possible. (Boolean)",
        "deferredfederalincometaxexpensebenefit": "Deferred federal income tax expense or benefit for the period. (Number, e.g., USD)",
        "federalincometaxexpensebenefitcontinuingoperations": "Federal income tax expense (or benefit) related to continuing operations. Excludes taxes on discontinued or extraordinary items. (Number, optional)",
        "currentstateandlocaltaxexpensebenefit": "Current period state and local tax expense or benefit. (Number, e.g., USD)",
        "deferredstateandlocalincometaxexpensebenefit": "Deferred state and local income tax expense (or benefit), representing taxes incurred but not yet paid or realized for state and local authorities. (Number, optional)",
        "stateandlocalincometaxexpensebenefitcontinuingoperations": "State and local income tax expense (or benefit) related to continuing operations. (Number, optional)",
        "deferredforeignincometaxexpensebenefit": "Deferred foreign income tax expense or benefit recognized in the current period. (Number, e.g., USD)",
        "foreignincometaxexpensebenefitcontinuingoperations": "Foreign income tax expense (or benefit) related to continuing operations, excluding amounts from discontinued operations or extraordinary items. (Number, optional)",
        "incometaxreconciliationincometaxexpensebenefitatfederalstatutoryincometaxrate": "Income tax expense (benefit) calculated at the federal statutory rate, as reported in the effective tax rate reconciliation. (Number, optional)",
        "incometaxreconciliationstateandlocalincometaxes": "Portion of income tax expense attributable to state and local taxes, as shown in the tax rate reconciliation. (Number, optional)",
        "effectiveincometaxratereconciliationimpactofthestateaiddecisionamount": "Impact of state aid decisions on effective tax rate reconciliation. (Number, e.g., USD)",
        "incometaxreconciliationforeignincometaxratedifferential": "Difference between domestic and foreign income tax rates as reflected in the company’s effective tax rate reconciliation. (Number, optional)",
        "incometaxreconciliationtaxcreditsresearch": "Research and development tax credits recognized in the company’s effective tax rate reconciliation. (Number, optional)",
        "effectiveincometaxratereconciliationsharebasedcompensationexcesstaxbenefitamount": "Amount of excess tax benefit from share-based compensation included in the effective tax rate reconciliation. (Number, e.g., USD)",
        "incometaxreconciliationotheradjustments": "Other miscellaneous adjustments included in the reconciliation of reported income tax expense to the statutory rate. (Number, optional)",
        "effectiveincometaxratecontinuingoperations": "Effective income tax rate for continuing operations, expressed as a percentage. (Percent)",
        "deferredtaxassetscapitalizedresearchanddevelopment": "Deferred tax assets related to capitalized research and development expenditures. (Number, e.g., USD)",
        "deferredtaxassetstaxcreditcarryforwards": "Deferred tax assets related to tax credit carryforwards (e.g., R&D, foreign tax). (Number, e.g., USD)",
        "deferredtaxassetstaxdeferredexpensereservesandaccruals": "Deferred tax assets related to deferred expense reserves and accruals. (Number, e.g., USD)",
        "deferredtaxassetsdeferredincome": "Deferred tax assets resulting from deferred income or revenue. (Number, e.g., USD)",
        "deferredtaxassetsleaseliabilities": "Deferred tax assets arising from lease liabilities. (Number, e.g., USD)",
        "deferredtaxassetsothercomprehensiveloss": "Deferred tax assets related to other comprehensive loss items. (Number, e.g., USD)",
        "deferredtaxassetsother": "Other deferred tax assets not classified elsewhere. (Number, e.g., USD)",
        "deferredtaxassetsgross": "Total gross value of deferred tax assets before valuation allowance. (Number, e.g., USD)",
        "deferredtaxassetsvaluationallowance": "Valuation allowance reducing the gross deferred tax assets. (Number, e.g., USD)",
        "deferredtaxassetsnet": "Total net deferred tax assets reported by the company. (Number, e.g., USD)",
        "deferredtaxliabilitiespropertyplantandequipment": "Deferred tax liabilities related to property, plant, and equipment. (Number, e.g., USD)",
        "deferredtaxliabilitiesleasingarrangements": "Deferred tax liabilities arising from leasing arrangements. (Number, e.g., USD)",
        "deferredtaxliabilitiesminimumtaxonforeignearnings": "Deferred tax liabilities associated with minimum tax on foreign earnings. (Number, e.g., USD)",
        "deferredtaxliabilitiesother": "Other deferred tax liabilities not classified elsewhere. (Number, e.g., USD)",
        "deferredincometaxliabilities": "Total deferred income tax liabilities recognized on the balance sheet. (Number, e.g., USD)",
        "deferredtaxassetsliabilitiesnet": "Net amount of deferred tax assets and liabilities after offsetting. (Number, e.g., USD)",
        "unrecognizedtaxbenefitsincreasesresultingfrompriorperiodtaxpositions": "Increase in unrecognized tax benefits due to positions taken in prior periods. (Number, optional)",
        "unrecognizedtaxbenefitsdecreasesresultingfrompriorperiodtaxpositions": "Decrease in unrecognized tax benefits as a result of positions taken in prior periods. (Number, optional)",
        "unrecognizedtaxbenefitsincreasesresultingfromcurrentperiodtaxpositions": "Increase in unrecognized tax benefits due to positions taken in the current period. (Number, optional)",
        "unrecognizedtaxbenefitsreductionsresultingfromlapseofapplicablestatuteoflimitations": "Reduction in unrecognized tax benefits due to lapse of applicable statute of limitations. (Number, optional)",
        "lesseeoperatingandfinanceleasetermofcontract": "Length (in months or years) of the operating or finance lease contract term. (Number/String, optional)",
        "operatingleasecost": "Total cost of operating leases recognized in the income statement for the reporting period. (Number, optional)",
        "variableleasecost": "Total variable lease costs incurred during the period (not included in lease liability measurement). (Number, optional)",
        "operatingleasepayments": "Total cash payments made for operating leases during the reporting period. (Number, optional)",
        "rightofuseassetsobtainedinexchangeforoperatingandfinanceleaseliabilities": "Right-of-use assets obtained in exchange for new operating and finance lease liabilities. (Number, optional)",
        "operatingandfinanceleaseweightedaverageremainingleaseterm": "Weighted average remaining lease term (in years) for operating and finance leases. (Number, optional)",
        "operatingandfinanceleaseweightedaveragediscountratepercent": "Weighted average discount rate used for all operating and finance leases, expressed as a percent. (Number, percent, optional)",
        "unrecordedunconditionalpurchaseobligationbalancesheetamount": "Total unrecorded unconditional purchase obligation (commitment) balance reported on the balance sheet. (Number, optional)",
        "lesseeoperatingandfinanceleaseleasenotyetcommencedtermofcontract": "Term (in months or years) of operating or finance lease contracts that have been executed but have not yet commenced. (Number/String, optional)",
        "operatingleaserightofuseasset": "Carrying value of the right-of-use asset for operating leases recognized on the balance sheet. (Number, optional)",
        "operatingleaserightofuseassetstatementoffinancialpositionextensiblelist": "Detailed disclosure of right-of-use assets for operating leases as reported in the balance sheet using XBRL extensible lists. (String/Array, optional)",
        "financeleaserightofuseasset": "Carrying amount of right-of-use assets recognized for finance leases, representing the lessee's right to use leased assets over the lease term. (Number, optional)",
        "financeleaserightofuseassetstatementoffinancialpositionextensiblelist": "Breakdown or listing of right-of-use assets for finance leases in the statement of financial position. (Array/Object, optional)",
        "operatingandfinanceleaserightofuseasset": "Total right-of-use assets recognized for operating and finance leases on the balance sheet. (Number, optional)",
        "operatingleaseliabilitycurrent": "Current portion of operating lease liability due within one year. (Number, optional)",
        "operatingleaseliabilitycurrentstatementoffinancialpositionextensiblelist": "Detailed disclosure of current operating lease liability as reported in the balance sheet using XBRL extensible lists. (String/Array, optional)",
        "operatingleaseliabilitynoncurrent": "Non-current portion of operating lease liability due after one year. (Number, optional)",
        "operatingleaseliabilitynoncurrentstatementoffinancialpositionextensiblelist": "Detailed disclosure of non-current operating lease liability as reported in the balance sheet using XBRL extensible lists. (String/Array, optional)",
        "financeleaseliabilitycurrent": "Portion of finance lease liability due within the next 12 months (current liability). (Number, optional)",
        "financeleaseliabilitycurrentstatementoffinancialpositionextensiblelist": "List or breakdown of finance lease liabilities classified as current, as reported in the statement of financial position. (Array/Object, optional)",
        "financeleaseliabilitynoncurrent": "Long-term portion of finance lease liability, due beyond 12 months. (Number, optional)",
        "financeleaseliabilitynoncurrentstatementoffinancialpositionextensiblelist": "List or breakdown of noncurrent finance lease liabilities, as reported in the statement of financial position. (Array/Object, optional)",
        "operatingandfinanceleaseliability": "Total operating and finance lease liabilities recognized on the balance sheet. (Number, optional)",
        "lesseeoperatingleaseliabilitypaymentsduenexttwelvemonths": "Operating lease payments due in the next twelve months from the balance sheet date. (Number, optional)",
        "lesseeoperatingleaseliabilitypaymentsdueyeartwo": "Operating lease liability payments scheduled for the second year after the balance sheet date. (Number, optional)",
        "lesseeoperatingleaseliabilitypaymentsdueyearthree": "Operating lease liability payments scheduled for the third year after the balance sheet date. (Number, optional)",
        "lesseeoperatingleaseliabilitypaymentsdueyearfour": "Operating lease liability payments scheduled for the fourth year after the balance sheet date. (Number, optional)",
        "lesseeoperatingleaseliabilitypaymentsdueyearfive": "Operating lease liability payments scheduled for the fifth year after the balance sheet date. (Number, optional)",
        "lesseeoperatingleaseliabilitypaymentsdueafteryearfive": "Undiscounted operating lease payments due after five years from the balance sheet date. (Number, optional)",
        "lesseeoperatingleaseliabilitypaymentsdue": "Total undiscounted operating lease liability payments due in future periods. (Number, optional)",
        "lesseeoperatingleaseliabilityundiscountedexcessamount": "Total amount of undiscounted excess operating lease liabilities (often includes variable lease payments not included in lease liabilities). (Number, optional)",
        "operatingleaseliability": "Total operating lease liability recognized on the balance sheet. (Number, optional)",
        "financeleaseliabilitypaymentsduenexttwelvemonths": "Total minimum lease payments due within the next 12 months under finance leases. (Number, optional)",
        "financeleaseliabilitypaymentsdueyeartwo": "Total minimum lease payments due in year two after the reporting date under finance leases. (Number, optional)",
        "financeleaseliabilitypaymentsdueyearthree": "Total minimum lease payments due in year three after the reporting date under finance leases. (Number, optional)",
        "financeleaseliabilitypaymentsdueyearfour": "Total minimum lease payments due in year four after the reporting date under finance leases. (Number, optional)",
        "financeleaseliabilitypaymentsdueyearfive": "Total minimum lease payments due in year five after the reporting date under finance leases. (Number, optional)",
        "financeleaseliabilitypaymentsdueafteryearfive": "Total minimum lease payments due after five years from the reporting date under finance leases. (Number, optional)",
        "financeleaseliabilitypaymentsdue": "Total future payments due under all finance lease obligations. (Number, optional)",
        "financeleaseliabilityundiscountedexcessamount": "The amount by which undiscounted finance lease payments exceed the present value recognized as a liability. (Number, optional)",
        "financeleaseliability": "Total liability for finance (capital) leases outstanding at period end, including current and long-term portions. (Number, optional)",
        "lesseeoperatingandfinanceleaseliabilitytobepaidyearone": "Lease payments due in the first year after the balance sheet date. (Number, optional)",
        "lesseeoperatingandfinanceleaseliabilitytobepaidyeartwo": "Lease payments scheduled for the second year after the balance sheet date. (Number, optional)",
        "lesseeoperatingandfinanceleaseliabilitytobepaidyearthree": "Lease payments scheduled for the third year after the balance sheet date. (Number, optional)",
        "lesseeoperatingandfinanceleaseliabilitytobepaidyearfour": "Lease payments scheduled for the fourth year after the balance sheet date. (Number, optional)",
        "lesseeoperatingandfinanceleaseliabilitytobepaidyearfive": "Lease payments scheduled for the fifth year after the balance sheet date. (Number, optional)",
        "lesseeoperatingandfinanceleaseliabilitytobepaidafteryearfive": "Portion of lease liabilities to be paid after five years from the balance sheet date. (Number, optional)",
        "lesseeoperatingandfinanceleaseliabilitytobepaid": "Total undiscounted operating and finance lease liabilities to be paid in future periods. (Number, optional)",
        "lesseeoperatingandfinanceleaseliabilityundiscountedexcessamount": "Total excess amount of undiscounted lease liabilities (including variable lease payments not included in lease liabilities) for operating and finance leases. (Number, optional)",
        "debtinstrumentterm": "Term or length of a debt instrument in years. (Number, e.g., years)",
        "shorttermdebtweightedaverageinterestrate": "Weighted average interest rate paid on short-term debt obligations. (Number, percent, optional)",
        "longtermdebtfairvalue": "Fair value of long-term debt as disclosed in the notes to financial statements. (Number, optional)",
        "proceedsfromrepaymentsofshorttermdebtmaturinginthreemonthsorless": "Proceeds from repayments of short-term debt obligations maturing within three months. (Number, optional)",
        "debtinstrumentcarryingamount": "Carrying amount of a debt instrument on the balance sheet. (Number, e.g., USD)",
        "debtinstrumentunamortizeddiscountpremiumanddebtissuancecostsnet": "Net unamortized discount, premium, and issuance costs related to debt instruments. (Number, e.g., USD)",
        "hedgeaccountingadjustmentsrelatedtolongtermdebt": "Adjustments made to the carrying amount of long-term debt resulting from hedge accounting activities (e.g., fair value hedges). (Number, optional)",
        "longtermdebt": "Long-term debt outstanding as of the balance sheet date (due beyond one year). (Number, optional)",
        "debtinstrumentmaturityyearrangestart": "Starting year of the maturity range for a debt instrument. (Number, e.g., year)",
        "debtinstrumentmaturityyearrangeend": "Ending year of the maturity range for a debt instrument. (Number, e.g., year)",
        "debtinstrumentinterestratestatedpercentage": "Stated (nominal) interest rate for a debt instrument. (Percent)",
        "debtinstrumentinterestrateeffectivepercentage": "Effective interest rate (percentage) for a debt instrument. (Percent)",
        "longtermdebtmaturitiesrepaymentsofprincipalinnexttwelvemonths": "Repayments of principal on long-term debt due in the next twelve months. (Number, optional)",
        "longtermdebtmaturitiesrepaymentsofprincipalinyeartwo": "Repayments of principal on long-term debt scheduled for the second year after the balance sheet date. (Number, optional)",
        "longtermdebtmaturitiesrepaymentsofprincipalinyearthree": "Repayments of principal on long-term debt scheduled for the third year after the balance sheet date. (Number, optional)",
        "longtermdebtmaturitiesrepaymentsofprincipalinyearfour": "Repayments of principal on long-term debt scheduled for the fourth year after the balance sheet date. (Number, optional)",
        "longtermdebtmaturitiesrepaymentsofprincipalinyearfive": "Repayments of principal on long-term debt scheduled for the fifth year after the balance sheet date. (Number, optional)",
        "longtermdebtmaturitiesrepaymentsofprincipalafteryearfive": "Repayments of principal on long-term debt scheduled after five years from the balance sheet date. (Number, optional)",
        "stockrepurchasedandretiredduringperiodshares": "Number of shares repurchased and retired by the company during the period. (Number, optional)",
        "stockissuedduringperiodsharessharebasedpaymentarrangementnetofshareswithheldfortaxes": "Net shares issued during the period under share-based payment arrangements, after shares withheld for taxes. (Number, optional)",
        "sharebasedcompensationarrangementbysharebasedpaymentawardawardvestingperiod1": "Vesting period for the first tranche of share-based payment awards. (String/Number, optional)",
        "sharebasedcompensationarrangementbysharebasedpaymentawardequityinstrumentsotherthanoptionsnumberofsharesofcommonstockissuedperunituponvesting": "Number of common shares issued per unit upon vesting of non-option equity awards. (Number, optional)",
        "sharebasedcompensationarrangementbysharebasedpaymentawardequityinstrumentsotherthanoptionsvestedinperiodtotalfairvalue": "Total fair value of non-option equity awards vested during the period. (Number, optional)",
        "sharespaidfortaxwithholdingforsharebasedcompensation": "Shares withheld from employees to satisfy tax withholding obligations on share-based compensation. (Number, optional)",
        "employeeservicesharebasedcompensationnonvestedawardstotalcompensationcostnotyetrecognized": "Total compensation cost not yet recognized for non-vested employee share-based awards. (Number, e.g., USD)",
        "employeeservicesharebasedcompensationnonvestedawardstotalcompensationcostnotyetrecognizedperiodforrecognition1": "Period over which the unrecognized compensation cost for non-vested awards will be recognized. (Number, months/years)",
        "sharebasedcompensationarrangementbysharebasedpaymentawardequityinstrumentsotherthanoptionsnonvestednumber": "Number of non-option equity instruments not vested at period end. (Number, optional)",
        "sharebasedcompensationarrangementbysharebasedpaymentawardequityinstrumentsotherthanoptionsgrantsinperiod": "Number of non-option equity instruments granted in the period. (Number, optional)",
        "sharebasedcompensationarrangementbysharebasedpaymentawardequityinstrumentsotherthanoptionsvestedinperiod": "Number of non-option equity awards vested during the reporting period. (Number, optional)",
        "sharebasedcompensationarrangementbysharebasedpaymentawardequityinstrumentsotherthanoptionsforfeitedinperiod": "Number of equity instruments (other than options) forfeited during the period. (Number, optional)",
        "sharebasedcompensationarrangementbysharebasedpaymentawardequityinstrumentsotherthanoptionsnonvestedweightedaveragegrantdatefairvalue": "Weighted average grant date fair value of non-option equity awards not vested. (Number, optional)",
        "sharebasedcompensationarrangementbysharebasedpaymentawardequityinstrumentsotherthanoptionsgrantsinperiodweightedaveragegrantdatefairvalue": "Weighted average grant date fair value of non-option equity instruments granted in period. (Number, optional)",
        "sharebasedcompensationarrangementbysharebasedpaymentawardequityinstrumentsotherthanoptionsvestedinperiodweightedaveragegrantdatefairvalue": "Weighted average grant date fair value of vested non-option equity awards in period. (Number, optional)",
        "sharebasedcompensationarrangementbysharebasedpaymentawardequityinstrumentsotherthanoptionsforfeituresweightedaveragegrantdatefairvalue": "Weighted average grant date fair value of forfeited non-option equity awards. (Number, optional)",
        "sharebasedcompensationarrangementbysharebasedpaymentawardequityinstrumentsotherthanoptionsaggregateintrinsicvaluenonvested": "Aggregate intrinsic value of non-vested equity instruments (other than options) outstanding at period end. (Number, optional)",
        "allocatedsharebasedcompensationexpense": "Total share-based compensation expense allocated during the reporting period. (Number, e.g., USD)",
        "employeeservicesharebasedcompensationtaxbenefitfromcompensationexpense": "Tax benefit resulting from employee service share-based compensation expense. (Number, e.g., USD)",
        "unrecordedunconditionalpurchaseobligationbalanceonfirstanniversary": "Unrecorded unconditional purchase obligation balance due on the first anniversary from the reporting date. (Number, optional)",
        "unrecordedunconditionalpurchaseobligationbalanceonsecondanniversary": "Unrecorded unconditional purchase obligation balance due on the second anniversary from the reporting date. (Number, optional)",
        "unrecordedunconditionalpurchaseobligationbalanceonthirdanniversary": "Unrecorded unconditional purchase obligation balance due on the third anniversary from the reporting date. (Number, optional)",
        "unrecordedunconditionalpurchaseobligationbalanceonfourthanniversary": "Unrecorded unconditional purchase obligation balance due on the fourth anniversary from the reporting date. (Number, optional)",
        "unrecordedunconditionalpurchaseobligationbalanceonfifthanniversary": "Unrecorded unconditional purchase obligation (commitment) balance due on the fifth anniversary from the reporting date. (Number, optional)",
        "unrecordedunconditionalpurchaseobligationdueafterfiveyears": "Unrecorded unconditional purchase obligations due after five years from the reporting date. (Number, optional)",
        "othergeneralandadministrativeexpense": "General and administrative expenses not classified elsewhere. May include overhead, office costs, or miscellaneous administrative items. (Number, optional)",
        "noncurrentassets": "Total value of assets not expected to be converted to cash or used up within one year. (Number, optional)",
        "trdarrsecuritiesaggavailamt": "Aggregate available amount of securities (possibly in a trust or reporting group). (Number, optional)",
        "insidertrdpoliciesprocadoptedflag": "Indicates whether the company has adopted policies and procedures related to insider trading. Values: 'Y' or 'N'. (String, optional)"
      }
    }
  },
  {
    "name": "As Reported Financial Statements API",
    "description": "One endpoint, full filing. Submit `symbol`; throttle rows via `period` or `limit`. The JSON response fuses unaltered income, balance, and cash-flow tags—ideal for knowledge-graph construction, unified audit pipelines, and semantic search over complete financial statements with zero vendor re-labeling.",
    "category": "filings_raw",
    "use_cases": [
      "load entire statement set into vector DB",
      "semantic search across all GAAP tags",
      "benchmark vendor normalized vs raw numbers",
      "drive auto-tagging of financial chat answers",
      "compliance reviews needing holistic context"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {
        "limit": "An integer cap on the number of results returned by the endpoint. Example: 50 to restrict output to the top 50 matches. Must be ≥1 and ≤1000. (Integer, optional; defaults to 100)",
        "period": "A string or integer indicating the fiscal period for which data is requested. Example: \"annual\" or \"quarter\" to indicate annual or quarterly data. (String or Number, required for period-based endpoints)"
      }
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "fiscalYear": "The fiscal year to which a financial data point pertains, typically in four-digit format. Example: 2023. (Number or String)",
      "period": "The fiscal period associated with the data point, such as a quarter (\"Q2\") or full year. Example: \"Q2\". (String)",
      "reportedCurrency": "The currency in which all reported values are denominated, as per ISO 4217. Example: 'USD' for US dollars. (String, required for financial data integrity)",
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "data": {
        "documenttype": "Type of regulatory or financial statement document (e.g., 10-K, 10-Q, 8-K). (String)",
        "documentannualreport": "Flag indicating if the document is an annual report. (Boolean or String: 'Y'/'N')",
        "currentfiscalyearenddate": "End date of the current fiscal year. (String, date)",
        "documentperiodenddate": "The end date of the reporting period covered by the document. (String, date)",
        "documenttransitionreport": "Indicates whether the filing is a transition report. (Boolean or String: 'Y'/'N')",
        "entityfilenumber": "SEC file number assigned to the registrant or specific filing. Example: '001-36743'. Used to track filings and dockets. (String, optional)",
        "entityregistrantname": "Full legal name of the registrant (company or issuer) as filed with regulatory authorities. (String, required for filings)",
        "entityincorporationstatecountrycode": "State or country code where the company is incorporated or organized. Example: 'DE' for Delaware, 'US' for United States, 'KY' for Cayman Islands. (String, optional)",
        "entitytaxidentificationnumber": "Federal Tax Identification Number (TIN), EIN, or other regulatory identifier for the company, used for tax reporting. (String, optional, sensitive)",
        "entityaddressaddressline1": "Primary address line for the reporting entity. (String)",
        "entityaddresscityortown": "City or town of the reporting entity's address. (String)",
        "entityaddressstateorprovince": "State or province component of the registrant’s primary address, as reported in SEC filings. (String, optional)",
        "entityaddresspostalzipcode": "Postal or ZIP code for the reporting entity's address. (String)",
        "cityareacode": "City area code for issuer or reporting entity's primary address. (String)",
        "localphonenumber": "Local telephone number for the company or reporting entity. (String, optional)",
        "security12btitle": "Title of the class of securities as registered under Section 12(b) of the Securities Exchange Act. (String, optional)",
        "tradingsymbol": "Ticker or trading symbol under which the company’s securities are listed. (String, optional)",
        "notradingsymbolflag": "Flag indicating whether the entity’s security does not have a trading symbol. (String: 'Y' or 'N', optional)",
        "securityexchangename": "Name of the exchange where the security is registered and/or traded. (String, optional)",
        "entitywellknownseasonedissuer": "Flag indicating whether the registrant is classified as a Well-Known Seasoned Issuer (WKSI), impacting shelf registration rules. (String, 'Y'/'N', optional)",
        "entityvoluntaryfilers": "Boolean or string indicator if the company files with the SEC voluntarily (not due to regulatory requirement). (String, optional)",
        "entitycurrentreportingstatus": "Current reporting status of the entity, such as 'Active', 'Inactive', 'Delinquent', or 'Suspended'. Indicates ongoing filing compliance. (String, optional)",
        "entityinteractivedatacurrent": "Boolean flag indicating if the interactive data (XBRL) in the filing is current as of the filing date. (String, optional)",
        "entityfilercategory": "SEC filer category, such as 'Large Accelerated Filer', 'Accelerated Filer', 'Non-Accelerated Filer', or 'Smaller Reporting Company'. Impacts reporting obligations. (String, optional)",
        "entitysmallbusiness": "Boolean flag indicating if the entity qualifies as a small business under SEC or other regulatory definitions. (String, optional)",
        "entityemerginggrowthcompany": "Boolean flag ('true'/'false' or 'Y'/'N') indicating whether the company qualifies as an Emerging Growth Company under the JOBS Act. (String, optional)",
        "icfrauditorattestationflag": "Indicates whether the company's internal control over financial reporting has been attested to by the independent auditor. Values: 'Y' or 'N'. (String, optional)",
        "documentfinstmterrorcorrectionflag": "Indicates whether the financial statement document includes an error correction. (Boolean or String: 'Y'/'N')",
        "entityshellcompany": "Boolean flag indicating if the entity is a shell company as defined by the SEC. (String, 'Y'/'N', optional)",
        "amendmentflag": "Indicates whether the filing or report is an amendment ('true') or original ('false'). (Boolean)",
        "documentfiscalyearfocus": "The fiscal year focus of the document (e.g., 2023, 2024). (Number or String)",
        "documentfiscalperiodfocus": "The fiscal period focus of the document (e.g., Q1, Q2, FY). (String)",
        "entitycentralindexkey": "SEC Central Index Key (CIK), a unique 10-digit identifier for companies and individuals filing with the SEC. Example: '0000320193' for Apple Inc. (String, required for US filings)",
        "auditorname": "Official name of the external auditor who certified the financial statements. (String)",
        "auditorlocation": "Location or address of the auditing firm responsible for reviewing financial statements. (String)",
        "auditorfirmid": "Unique identifier assigned to the external audit firm for regulatory tracking. (String)",
        "revenuefromcontractwithcustomerexcludingassessedtax": "Revenue from contracts with customers, excluding amounts collected on behalf of third parties (assessed taxes). (Number, optional)",
        "costofgoodsandservicessold": "Total cost of goods and services sold (COGS) during the period. (Number, e.g., USD)",
        "grossprofit": "Gross profit for the reporting period, calculated as total revenues minus cost of goods sold (COGS). Indicates profitability before operating expenses. (Number, optional)",
        "researchanddevelopmentexpense": "Total expenses for research and development activities incurred during the period. (Number, optional)",
        "sellinggeneralandadministrativeexpense": "Total selling, general, and administrative (SG&A) expenses incurred during the period. (Number, optional)",
        "operatingexpenses": "Total operating expenses reported during the period, including SG&A, R&D, and other recurring costs. (Number, optional)",
        "operatingincomeloss": "Operating income (or loss) for the reporting period, calculated as revenue minus operating expenses. (Number, optional)",
        "nonoperatingincomeexpense": "Net income or expense from non-operating activities, such as interest income or expense, investment gains or losses, etc. (Number, optional)",
        "incomelossfromcontinuingoperationsbeforeincometaxesextraordinaryitemsnoncontrollinginterest": "Income or loss from continuing operations before income taxes, extraordinary items, and noncontrolling interest. (Number, optional)",
        "incometaxexpensebenefit": "Total provision for income tax expense (or benefit) recognized for the reporting period. (Number, optional)",
        "netincomeloss": "Net income or loss for the reporting period, as reported in the income statement. (Number, optional)",
        "earningspersharebasic": "Earnings per basic share reported for the period. (Number, e.g., USD per share)",
        "earningspersharediluted": "Diluted earnings per share for the period, including the effect of options and convertible securities. (Number, e.g., USD per share)",
        "weightedaveragenumberofsharesoutstandingbasic": "Weighted average number of basic shares outstanding during the reporting period. (Number, optional)",
        "weightedaveragenumberofdilutedsharesoutstanding": "Weighted average number of diluted shares outstanding during the reporting period. (Number, optional)",
        "othercomprehensiveincomelossforeigncurrencytransactionandtranslationadjustmentnetoftax": "OCI impact from foreign currency transaction and translation adjustments, net of tax. (Number, optional)",
        "othercomprehensiveincomelossderivativeinstrumentgainlossbeforereclassificationaftertax": "Gain or loss on derivative instruments included in other comprehensive income before reclassification, after tax. (Number, optional)",
        "othercomprehensiveincomelossderivativeinstrumentgainlossreclassificationaftertax": "Amount of derivative gain or loss reclassified from OCI to earnings, after tax. (Number, optional)",
        "othercomprehensiveincomelossderivativeinstrumentgainlossafterreclassificationandtax": "Net gain or loss on derivative instruments included in other comprehensive income after reclassification adjustments and tax effects. (Number, optional)",
        "othercomprehensiveincomeunrealizedholdinggainlossonsecuritiesarisingduringperiodnetoftax": "Unrealized holding gain or loss on securities during the period, recognized in OCI net of tax. (Number, optional)",
        "othercomprehensiveincomelossreclassificationadjustmentfromaociforsaleofsecuritiesnetoftax": "Reclassification adjustment from accumulated OCI related to sale of securities, net of tax. (Number, optional)",
        "othercomprehensiveincomelossavailableforsalesecuritiesadjustmentnetoftax": "Net adjustment to other comprehensive income (OCI) for available-for-sale securities, net of tax. Reflects gains or losses that have not been realized through sale. (Number, optional)",
        "othercomprehensiveincomelossnetoftaxportionattributabletoparent": "Portion of other comprehensive income/loss, net of tax, attributable to the parent company. (Number, optional)",
        "comprehensiveincomenetoftax": "Comprehensive net income after tax for the reporting period. (Number, e.g., USD)",
        "cashandcashequivalentsatcarryingvalue": "Carrying value of cash and cash equivalents, including highly liquid investments. (Number, e.g., USD)",
        "marketablesecuritiescurrent": "Marketable securities classified as current assets, typically investments expected to be liquidated within a year. (Number, optional)",
        "accountsreceivablenetcurrent": "Current net accounts receivable, i.e., amounts owed by customers minus allowances. (Number, e.g., USD)",
        "nontradereceivablescurrent": "Current portion of non-trade receivables, including receivables not related to the company’s principal business. (Number, optional)",
        "inventorynet": "Net value of inventory held at the end of the reporting period, after accounting for reserves and obsolescence. (Number, optional)",
        "otherassetscurrent": "Other current assets not specifically classified elsewhere on the balance sheet. (Number, optional)",
        "assetscurrent": "Total current assets, expected to be converted to cash or used within one year. (Number, e.g., USD)",
        "marketablesecuritiesnoncurrent": "Marketable securities classified as non-current assets (not expected to be liquidated within a year). (Number, optional)",
        "propertyplantandequipmentnet": "Net value of property, plant, and equipment after accumulated depreciation and amortization. (Number, optional)",
        "otherassetsnoncurrent": "Other non-current assets not specifically classified elsewhere on the balance sheet. (Number, optional)",
        "assetsnoncurrent": "Total non-current assets, not expected to be converted to cash within one year. (Number, e.g., USD)",
        "assets": "Total assets reported on the balance sheet as of the reporting date. (Number, e.g., USD)",
        "accountspayablecurrent": "Current accounts payable, representing short-term obligations to suppliers at the reporting date. (Number, e.g., USD)",
        "otherliabilitiescurrent": "Other current liabilities not classified under standard headings, due within one year. (Number, optional)",
        "contractwithcustomerliabilitycurrent": "Current portion of contract liabilities due within one year. (Number, e.g., USD)",
        "commercialpaper": "Outstanding commercial paper, a short-term unsecured promissory note issued by the company. (Number, e.g., USD)",
        "longtermdebtcurrent": "Current portion of long-term debt due within one year. (Number, optional)",
        "liabilitiescurrent": "Liabilities due within one year or the operating cycle, whichever is longer. (Number, optional)",
        "longtermdebtnoncurrent": "Portion of long-term debt not due within one year (non-current). (Number, optional)",
        "otherliabilitiesnoncurrent": "Other non-current liabilities not classified elsewhere, due after one year. (Number, optional)",
        "liabilitiesnoncurrent": "Liabilities not due within one year or the operating cycle. (Number, optional)",
        "liabilities": "Total liabilities of the company, including current and non-current obligations, as of the reporting date. (Number, optional)",
        "commonstocksharesoutstanding": "Total number of common shares outstanding (issued minus treasury shares). (Number)",
        "commonstocksharesissued": "Total number of common shares issued as of the reporting date. (Number)",
        "commonstocksincludingadditionalpaidincapital": "Combined value of common stock and additional paid-in capital. (Number, e.g., USD)",
        "retainedearningsaccumulateddeficit": "Cumulative net income minus dividends and other distributions to shareholders since inception. Positive for retained earnings, negative for accumulated deficit. (Number, optional)",
        "accumulatedothercomprehensiveincomelossnetoftax": "Accumulated other comprehensive income/loss, net of tax, for all periods presented. (Number, e.g., USD)",
        "stockholdersequity": "Total stockholders’ equity (net assets) at period end. (Number, optional)",
        "liabilitiesandstockholdersequity": "Sum of total liabilities and total stockholders’ equity, should match total assets on the balance sheet. (Number, optional)",
        "commonstockparorstatedvaluepershare": "Par or stated value per share of common stock. (Number, e.g., USD per share)",
        "commonstocksharesauthorized": "Total number of common shares authorized for issuance. (Number)",
        "stockissuedduringperiodvaluenewissues": "Value of new shares issued during the reporting period. (Number, optional)",
        "adjustmentsrelatedtotaxwithholdingforsharebasedcompensation": "Adjustments related to tax withholding obligations for share-based compensation plans. (Number, e.g., USD)",
        "adjustmentstoadditionalpaidincapitalsharebasedcompensationrequisiteserviceperiodrecognitionvalue": "Adjustments to additional paid-in capital for the requisite service period recognition value of share-based compensation.",
        "dividends": "Total dividends declared or paid during the period. (Number, e.g., USD)",
        "stockrepurchasedandretiredduringperiodvalue": "Total value of shares repurchased and retired during the period. (Number, optional)",
        "commonstockdividendspersharedeclared": "Dividends per share of common stock declared during the reporting period. (Number, e.g., USD per share)",
        "cashcashequivalentsrestrictedcashandrestrictedcashequivalents": "Total of cash, cash equivalents, and restricted cash. (Number, e.g., USD)",
        "depreciationdepletionandamortization": "Combined depreciation, depletion, and amortization expenses for the period. (Number, e.g., USD)",
        "sharebasedcompensation": "Total expense for share-based compensation recognized during the period (stock options, RSUs, etc.). (Number, optional)",
        "othernoncashincomeexpense": "Non-cash income or expense items not included in other specific categories. Used in reconciliation of net income to cash flows. (Number, optional)",
        "increasedecreaseinaccountsreceivable": "Change in accounts receivable balances during the reporting period (increase or decrease), as reported in the cash flow statement. (Number, optional)",
        "increasedecreaseinotherreceivables": "Change in other receivables during the reporting period, often related to non-trade receivables. (Number, optional)",
        "increasedecreaseininventories": "Change in inventory balances during the reporting period (increase or decrease), as reported in the cash flow statement. (Number, optional)",
        "increasedecreaseinotheroperatingassets": "Change in other operating asset balances (excluding accounts receivable and inventory) during the reporting period, as reflected in the cash flow statement. (Number, optional)",
        "increasedecreaseinaccountspayable": "Change in accounts payable balances during the reporting period (increase or decrease), as reported in the cash flow statement. (Number, optional)",
        "increasedecreaseinotheroperatingliabilities": "Change in other operating liability balances (excluding accounts payable) during the reporting period, as shown in the cash flow statement. (Number, optional)",
        "netcashprovidedbyusedinoperatingactivities": "Net cash provided by or used in operating activities during the reporting period. (Number, optional)",
        "paymentstoacquireavailableforsalesecuritiesdebt": "Cash paid to acquire debt securities classified as available-for-sale. (Number, optional)",
        "proceedsfrommaturitiesprepaymentsandcallsofavailableforsalesecurities": "Proceeds received from maturities, prepayments, or calls of available-for-sale securities. (Number, optional)",
        "proceedsfromsaleofavailableforsalesecuritiesdebt": "Proceeds from the sale of debt securities classified as available-for-sale. (Number, optional)",
        "paymentstoacquirepropertyplantandequipment": "Cash paid to acquire property, plant, and equipment (capital expenditures, or capex). (Number, optional)",
        "paymentsforproceedsfromotherinvestingactivities": "Cash paid for or received from miscellaneous investing activities not classified elsewhere (e.g., proceeds from the sale or purchase of intangible assets). (Number, optional)",
        "netcashprovidedbyusedininvestingactivities": "Net cash inflow or outflow resulting from investing activities during the reporting period. (Number, optional)",
        "paymentsrelatedtotaxwithholdingforsharebasedcompensation": "Payments related to tax withholding requirements on share-based compensation awards. (Number, optional)",
        "paymentsofdividends": "Total cash dividends paid to shareholders during the period. (Number, optional)",
        "paymentsforrepurchaseofcommonstock": "Total cash paid for the repurchase of the company's own common stock during the period. (Number, optional)",
        "repaymentsoflongtermdebt": "Cash repayments of principal amounts on long-term debt obligations during the period. (Number, optional)",
        "proceedsfromrepaymentsofcommercialpaper": "Proceeds from repayments of commercial paper borrowings. (Number, optional)",
        "proceedsfrompaymentsforotherfinancingactivities": "Net proceeds from or payments for financing activities not classified elsewhere. (Number, optional)",
        "netcashprovidedbyusedinfinancingactivities": "Net cash inflow or outflow resulting from financing activities during the reporting period. (Number, optional)",
        "cashcashequivalentsrestrictedcashandrestrictedcashequivalentsperiodincreasedecreaseincludingexchangerateeffect": "Net increase or decrease in cash, cash equivalents, and restricted cash including the effect of exchange rates. (Number, e.g., USD)",
        "incometaxespaidnet": "Net amount of income taxes paid (refunds received) during the reporting period, as shown in the cash flow statement. (Number, optional)",
        "commercialpapercashflowsummarytabletextblock": "Text block detailing the cash flow summary for commercial paper transactions. (String, may contain HTML or XBRL content)",
        "contractwithcustomerliabilityrevenuerecognized": "Amount of revenue recognized from contract liabilities during the period. (Number, e.g., USD)",
        "contractwithcustomerliability": "Total liability related to contracts with customers (e.g., deferred revenue). (Number, e.g., USD)",
        "revenueremainingperformanceobligationpercentage": "Percentage of total revenue represented by remaining performance obligations under customer contracts. (Number, percent, optional)",
        "revenueremainingperformanceobligationexpectedtimingofsatisfactionperiod1": "Expected timing (e.g., in years) for satisfaction of remaining performance obligations under customer contracts (period 1). (String/Number, optional)",
        "incrementalcommonsharesattributabletosharebasedpaymentarrangements": "Number of incremental common shares resulting from assumed conversion of share-based payment awards, used in diluted EPS calculation. (Number, optional)",
        "cash": "Total cash on hand and in bank accounts at the reporting date. (Number, e.g., USD)",
        "equitysecuritiesfvnicost": "Cost basis of equity securities measured at fair value through net income (FVNI). Represents original acquisition cost before adjustments for unrealized gains/losses. (Number, optional)",
        "equitysecuritiesfvniaccumulatedgrossunrealizedgainbeforetax": "Total gross unrealized gains on equity securities measured at fair value through net income (FVNI), before tax impact, as of the balance sheet date. (Number, optional)",
        "equitysecuritiesfvniaccumulatedgrossunrealizedlossbeforetax": "Total gross unrealized losses on equity securities measured at fair value through net income (FVNI), before tax impact. (Number, optional)",
        "equitysecuritiesfvnicurrentandnoncurrent": "Total fair value of all equity securities (current and noncurrent) measured at fair value through net income (FVNI) as of reporting date. (Number, optional)",
        "availableforsaledebtsecuritiesamortizedcostbasis": "Amortized cost basis of available-for-sale debt securities. (Number, e.g., USD)",
        "availableforsaledebtsecuritiesaccumulatedgrossunrealizedgainbeforetax": "Accumulated gross unrealized gain (before taxes) on available-for-sale debt securities. (Number, e.g., USD)",
        "availableforsaledebtsecuritiesaccumulatedgrossunrealizedlossbeforetax": "Accumulated gross unrealized loss (before taxes) on available-for-sale debt securities. (Number, e.g., USD)",
        "availableforsalesecuritiesdebtsecurities": "Book value or fair value of available-for-sale debt securities held by the company. (Number, e.g., USD)",
        "cashcashequivalentsandmarketablesecuritiescost": "Cost basis for cash, cash equivalents, and marketable securities. (Number, e.g., USD)",
        "cashequivalentsandmarketablesecuritiesaccumulatedgrossunrealizedgainbeforetax": "Accumulated gross unrealized gain (before taxes) on cash equivalents and marketable securities. (Number, e.g., USD)",
        "cashequivalentsandmarketablesecuritiesaccumulatedgrossunrealizedlossbeforetax": "Accumulated gross unrealized loss (before taxes) on cash equivalents and marketable securities. (Number, e.g., USD)",
        "cashcashequivalentsandmarketablesecurities": "Combined total of cash, cash equivalents, and marketable securities. (Number, e.g., USD)",
        "restrictedcashandcashequivalents": "Cash and equivalents that are restricted as to withdrawal or usage. (Number, optional)",
        "debtsecuritiesavailableforsalerestricted": "Value of restricted available-for-sale debt securities. (Number, e.g., USD)",
        "debtsecuritiesavailableforsalematurityallocatedandsinglematuritydaterollingafteronethroughfiveyearspercentage": "Percentage of available-for-sale debt securities maturing in one to five years. (Percent)",
        "debtsecuritiesavailableforsalematurityallocatedandsinglematuritydaterollingafterfivethroughtenyearspercentage": "Percentage of available-for-sale debt securities maturing in five to ten years. (Percent)",
        "debtsecuritiesavailableforsalematurityallocatedandsinglematuritydaterollingaftertenyearspercentage": "Percentage of available-for-sale debt securities maturing after ten years. (Percent)",
        "maximumlengthoftimeforeigncurrencycashflowhedge": "Maximum length of time over which a foreign currency cash flow hedge is expected to affect future cash flows. (Number/String, optional)",
        "concentrationriskpercentage1": "Percentage of revenue, assets, or risk concentrated in a specific customer, segment, or exposure. (Percent)",
        "numberofsignificantvendors": "Number of vendors considered significant to the company’s operations, usually disclosed for risk concentration purposes. (Number, optional)",
        "derivativenotionalamount": "Notional amount of outstanding derivative contracts. (Number, e.g., USD)",
        "hedgedassetstatementoffinancialpositionextensibleenumeration": "Enumeration of assets designated as hedged items in the statement of financial position, per XBRL tagging. (String/Array, optional)",
        "hedgedliabilityfairvaluehedge": "Fair value of liabilities designated as being hedged under a fair value hedge accounting relationship. (Number, optional)",
        "hedgedliabilitystatementoffinancialpositionextensibleenumeration": "Enumeration of liabilities designated as hedged items in the statement of financial position. (String/Array, optional)",
        "propertyplantandequipmentgross": "Gross value of property, plant, and equipment before accumulated depreciation or amortization. (Number, optional)",
        "accumulateddepreciationdepletionandamortizationpropertyplantandequipment": "Total accumulated depreciation, depletion, and amortization for property, plant, and equipment. (Number, e.g., USD)",
        "depreciation": "Depreciation expense recognized for the reporting period. (Number, e.g., USD)",
        "deferredincometaxassetsnet": "Net value of deferred income tax assets after offsetting with deferred tax liabilities. (Number, e.g., USD)",
        "otherassetsmiscellaneousnoncurrent": "Miscellaneous non-current assets not included in primary asset categories. (Number, optional)",
        "accruedincometaxescurrent": "Current portion of accrued income taxes owed by the company. (Number, e.g., USD)",
        "otheraccruedliabilitiescurrent": "Other accrued liabilities due within one year, not classified elsewhere. (Number, optional)",
        "accruedincometaxesnoncurrent": "Noncurrent portion of accrued income taxes, due beyond one year. (Number, e.g., USD)",
        "otheraccruedliabilitiesnoncurrent": "Other accrued liabilities not due within one year. (Number, optional)",
        "totalrestrictedcashcashequivalentsandavailableforsaledebtsecurities": "Sum of restricted cash, cash equivalents, and available-for-sale debt securities held at period end. (Number, optional)",
        "currentforeigntaxexpensebenefit": "Current period foreign tax expense or benefit. (Number, e.g., USD)",
        "currentfederaltaxexpensebenefit": "Current period federal tax expense or benefit. (Number, e.g., USD)",
        "unrecognizedtaxbenefitsdecreasesresultingfromsettlementswithtaxingauthorities": "Decrease in unrecognized tax benefits due to settlements with taxing authorities. (Number, optional)",
        "incomelossfromcontinuingoperationsbeforeincometaxesforeign": "Portion of income or loss from continuing operations before income taxes that is attributable to foreign operations. (Number, optional)",
        "effectiveincometaxratereconciliationatfederalstatutoryincometaxrate": "Reconciliation of the effective income tax rate to the U.S. federal statutory rate. (Percent)",
        "deferredtaxassetstaxcreditcarryforwardsforeign": "Portion of deferred tax assets attributable to foreign tax credit carryforwards. (Number, e.g., USD)",
        "deferredtaxassetstaxcreditcarryforwardsresearch": "Deferred tax assets related to research and development tax credit carryforwards. (Number, e.g., USD)",
        "unrecognizedtaxbenefits": "Total amount of unrecognized tax benefits (uncertain tax positions) as of the reporting date. (Number, optional)",
        "unrecognizedtaxbenefitsthatwouldimpacteffectivetaxrate": "Portion of unrecognized tax benefits that, if recognized, would affect the effective tax rate. (Number, optional)",
        "decreaseinunrecognizedtaxbenefitsisreasonablypossible": "Indicates if a decrease in unrecognized tax benefits is reasonably possible. (Boolean)",
        "deferredfederalincometaxexpensebenefit": "Deferred federal income tax expense or benefit for the period. (Number, e.g., USD)",
        "federalincometaxexpensebenefitcontinuingoperations": "Federal income tax expense (or benefit) related to continuing operations. Excludes taxes on discontinued or extraordinary items. (Number, optional)",
        "currentstateandlocaltaxexpensebenefit": "Current period state and local tax expense or benefit. (Number, e.g., USD)",
        "deferredstateandlocalincometaxexpensebenefit": "Deferred state and local income tax expense (or benefit), representing taxes incurred but not yet paid or realized for state and local authorities. (Number, optional)",
        "stateandlocalincometaxexpensebenefitcontinuingoperations": "State and local income tax expense (or benefit) related to continuing operations. (Number, optional)",
        "deferredforeignincometaxexpensebenefit": "Deferred foreign income tax expense or benefit recognized in the current period. (Number, e.g., USD)",
        "foreignincometaxexpensebenefitcontinuingoperations": "Foreign income tax expense (or benefit) related to continuing operations, excluding amounts from discontinued operations or extraordinary items. (Number, optional)",
        "incometaxreconciliationincometaxexpensebenefitatfederalstatutoryincometaxrate": "Income tax expense (benefit) calculated at the federal statutory rate, as reported in the effective tax rate reconciliation. (Number, optional)",
        "incometaxreconciliationstateandlocalincometaxes": "Portion of income tax expense attributable to state and local taxes, as shown in the tax rate reconciliation. (Number, optional)",
        "effectiveincometaxratereconciliationimpactofthestateaiddecisionamount": "Impact of state aid decisions on effective tax rate reconciliation. (Number, e.g., USD)",
        "incometaxreconciliationforeignincometaxratedifferential": "Difference between domestic and foreign income tax rates as reflected in the company’s effective tax rate reconciliation. (Number, optional)",
        "incometaxreconciliationtaxcreditsresearch": "Research and development tax credits recognized in the company’s effective tax rate reconciliation. (Number, optional)",
        "effectiveincometaxratereconciliationsharebasedcompensationexcesstaxbenefitamount": "Amount of excess tax benefit from share-based compensation included in the effective tax rate reconciliation. (Number, e.g., USD)",
        "incometaxreconciliationotheradjustments": "Other miscellaneous adjustments included in the reconciliation of reported income tax expense to the statutory rate. (Number, optional)",
        "effectiveincometaxratecontinuingoperations": "Effective income tax rate for continuing operations, expressed as a percentage. (Percent)",
        "deferredtaxassetscapitalizedresearchanddevelopment": "Deferred tax assets related to capitalized research and development expenditures. (Number, e.g., USD)",
        "deferredtaxassetstaxcreditcarryforwards": "Deferred tax assets related to tax credit carryforwards (e.g., R&D, foreign tax). (Number, e.g., USD)",
        "deferredtaxassetstaxdeferredexpensereservesandaccruals": "Deferred tax assets related to deferred expense reserves and accruals. (Number, e.g., USD)",
        "deferredtaxassetsdeferredincome": "Deferred tax assets resulting from deferred income or revenue. (Number, e.g., USD)",
        "deferredtaxassetsleaseliabilities": "Deferred tax assets arising from lease liabilities. (Number, e.g., USD)",
        "deferredtaxassetsothercomprehensiveloss": "Deferred tax assets related to other comprehensive loss items. (Number, e.g., USD)",
        "deferredtaxassetsother": "Other deferred tax assets not classified elsewhere. (Number, e.g., USD)",
        "deferredtaxassetsgross": "Total gross value of deferred tax assets before valuation allowance. (Number, e.g., USD)",
        "deferredtaxassetsvaluationallowance": "Valuation allowance reducing the gross deferred tax assets. (Number, e.g., USD)",
        "deferredtaxassetsnet": "Total net deferred tax assets reported by the company. (Number, e.g., USD)",
        "deferredtaxliabilitiespropertyplantandequipment": "Deferred tax liabilities related to property, plant, and equipment. (Number, e.g., USD)",
        "deferredtaxliabilitiesleasingarrangements": "Deferred tax liabilities arising from leasing arrangements. (Number, e.g., USD)",
        "deferredtaxliabilitiesminimumtaxonforeignearnings": "Deferred tax liabilities associated with minimum tax on foreign earnings. (Number, e.g., USD)",
        "deferredtaxliabilitiesother": "Other deferred tax liabilities not classified elsewhere. (Number, e.g., USD)",
        "deferredincometaxliabilities": "Total deferred income tax liabilities recognized on the balance sheet. (Number, e.g., USD)",
        "deferredtaxassetsliabilitiesnet": "Net amount of deferred tax assets and liabilities after offsetting. (Number, e.g., USD)",
        "unrecognizedtaxbenefitsincreasesresultingfrompriorperiodtaxpositions": "Increase in unrecognized tax benefits due to positions taken in prior periods. (Number, optional)",
        "unrecognizedtaxbenefitsdecreasesresultingfrompriorperiodtaxpositions": "Decrease in unrecognized tax benefits as a result of positions taken in prior periods. (Number, optional)",
        "unrecognizedtaxbenefitsincreasesresultingfromcurrentperiodtaxpositions": "Increase in unrecognized tax benefits due to positions taken in the current period. (Number, optional)",
        "unrecognizedtaxbenefitsreductionsresultingfromlapseofapplicablestatuteoflimitations": "Reduction in unrecognized tax benefits due to lapse of applicable statute of limitations. (Number, optional)",
        "lesseeoperatingandfinanceleasetermofcontract": "Length (in months or years) of the operating or finance lease contract term. (Number/String, optional)",
        "operatingleasecost": "Total cost of operating leases recognized in the income statement for the reporting period. (Number, optional)",
        "variableleasecost": "Total variable lease costs incurred during the period (not included in lease liability measurement). (Number, optional)",
        "operatingleasepayments": "Total cash payments made for operating leases during the reporting period. (Number, optional)",
        "rightofuseassetsobtainedinexchangeforoperatingandfinanceleaseliabilities": "Right-of-use assets obtained in exchange for new operating and finance lease liabilities. (Number, optional)",
        "operatingandfinanceleaseweightedaverageremainingleaseterm": "Weighted average remaining lease term (in years) for operating and finance leases. (Number, optional)",
        "operatingandfinanceleaseweightedaveragediscountratepercent": "Weighted average discount rate used for all operating and finance leases, expressed as a percent. (Number, percent, optional)",
        "unrecordedunconditionalpurchaseobligationbalancesheetamount": "Total unrecorded unconditional purchase obligation (commitment) balance reported on the balance sheet. (Number, optional)",
        "lesseeoperatingandfinanceleaseleasenotyetcommencedtermofcontract": "Term (in months or years) of operating or finance lease contracts that have been executed but have not yet commenced. (Number/String, optional)",
        "operatingleaserightofuseasset": "Carrying value of the right-of-use asset for operating leases recognized on the balance sheet. (Number, optional)",
        "operatingleaserightofuseassetstatementoffinancialpositionextensiblelist": "Detailed disclosure of right-of-use assets for operating leases as reported in the balance sheet using XBRL extensible lists. (String/Array, optional)",
        "financeleaserightofuseasset": "Carrying amount of right-of-use assets recognized for finance leases, representing the lessee's right to use leased assets over the lease term. (Number, optional)",
        "financeleaserightofuseassetstatementoffinancialpositionextensiblelist": "Breakdown or listing of right-of-use assets for finance leases in the statement of financial position. (Array/Object, optional)",
        "operatingandfinanceleaserightofuseasset": "Total right-of-use assets recognized for operating and finance leases on the balance sheet. (Number, optional)",
        "operatingleaseliabilitycurrent": "Current portion of operating lease liability due within one year. (Number, optional)",
        "operatingleaseliabilitycurrentstatementoffinancialpositionextensiblelist": "Detailed disclosure of current operating lease liability as reported in the balance sheet using XBRL extensible lists. (String/Array, optional)",
        "operatingleaseliabilitynoncurrent": "Non-current portion of operating lease liability due after one year. (Number, optional)",
        "operatingleaseliabilitynoncurrentstatementoffinancialpositionextensiblelist": "Detailed disclosure of non-current operating lease liability as reported in the balance sheet using XBRL extensible lists. (String/Array, optional)",
        "financeleaseliabilitycurrent": "Portion of finance lease liability due within the next 12 months (current liability). (Number, optional)",
        "financeleaseliabilitycurrentstatementoffinancialpositionextensiblelist": "List or breakdown of finance lease liabilities classified as current, as reported in the statement of financial position. (Array/Object, optional)",
        "financeleaseliabilitynoncurrent": "Long-term portion of finance lease liability, due beyond 12 months. (Number, optional)",
        "financeleaseliabilitynoncurrentstatementoffinancialpositionextensiblelist": "List or breakdown of noncurrent finance lease liabilities, as reported in the statement of financial position. (Array/Object, optional)",
        "operatingandfinanceleaseliability": "Total operating and finance lease liabilities recognized on the balance sheet. (Number, optional)",
        "lesseeoperatingleaseliabilitypaymentsduenexttwelvemonths": "Operating lease payments due in the next twelve months from the balance sheet date. (Number, optional)",
        "lesseeoperatingleaseliabilitypaymentsdueyeartwo": "Operating lease liability payments scheduled for the second year after the balance sheet date. (Number, optional)",
        "lesseeoperatingleaseliabilitypaymentsdueyearthree": "Operating lease liability payments scheduled for the third year after the balance sheet date. (Number, optional)",
        "lesseeoperatingleaseliabilitypaymentsdueyearfour": "Operating lease liability payments scheduled for the fourth year after the balance sheet date. (Number, optional)",
        "lesseeoperatingleaseliabilitypaymentsdueyearfive": "Operating lease liability payments scheduled for the fifth year after the balance sheet date. (Number, optional)",
        "lesseeoperatingleaseliabilitypaymentsdueafteryearfive": "Undiscounted operating lease payments due after five years from the balance sheet date. (Number, optional)",
        "lesseeoperatingleaseliabilitypaymentsdue": "Total undiscounted operating lease liability payments due in future periods. (Number, optional)",
        "lesseeoperatingleaseliabilityundiscountedexcessamount": "Total amount of undiscounted excess operating lease liabilities (often includes variable lease payments not included in lease liabilities). (Number, optional)",
        "operatingleaseliability": "Total operating lease liability recognized on the balance sheet. (Number, optional)",
        "financeleaseliabilitypaymentsduenexttwelvemonths": "Total minimum lease payments due within the next 12 months under finance leases. (Number, optional)",
        "financeleaseliabilitypaymentsdueyeartwo": "Total minimum lease payments due in year two after the reporting date under finance leases. (Number, optional)",
        "financeleaseliabilitypaymentsdueyearthree": "Total minimum lease payments due in year three after the reporting date under finance leases. (Number, optional)",
        "financeleaseliabilitypaymentsdueyearfour": "Total minimum lease payments due in year four after the reporting date under finance leases. (Number, optional)",
        "financeleaseliabilitypaymentsdueyearfive": "Total minimum lease payments due in year five after the reporting date under finance leases. (Number, optional)",
        "financeleaseliabilitypaymentsdueafteryearfive": "Total minimum lease payments due after five years from the reporting date under finance leases. (Number, optional)",
        "financeleaseliabilitypaymentsdue": "Total future payments due under all finance lease obligations. (Number, optional)",
        "financeleaseliabilityundiscountedexcessamount": "The amount by which undiscounted finance lease payments exceed the present value recognized as a liability. (Number, optional)",
        "financeleaseliability": "Total liability for finance (capital) leases outstanding at period end, including current and long-term portions. (Number, optional)",
        "lesseeoperatingandfinanceleaseliabilitytobepaidyearone": "Lease payments due in the first year after the balance sheet date. (Number, optional)",
        "lesseeoperatingandfinanceleaseliabilitytobepaidyeartwo": "Lease payments scheduled for the second year after the balance sheet date. (Number, optional)",
        "lesseeoperatingandfinanceleaseliabilitytobepaidyearthree": "Lease payments scheduled for the third year after the balance sheet date. (Number, optional)",
        "lesseeoperatingandfinanceleaseliabilitytobepaidyearfour": "Lease payments scheduled for the fourth year after the balance sheet date. (Number, optional)",
        "lesseeoperatingandfinanceleaseliabilitytobepaidyearfive": "Lease payments scheduled for the fifth year after the balance sheet date. (Number, optional)",
        "lesseeoperatingandfinanceleaseliabilitytobepaidafteryearfive": "Portion of lease liabilities to be paid after five years from the balance sheet date. (Number, optional)",
        "lesseeoperatingandfinanceleaseliabilitytobepaid": "Total undiscounted operating and finance lease liabilities to be paid in future periods. (Number, optional)",
        "lesseeoperatingandfinanceleaseliabilityundiscountedexcessamount": "Total excess amount of undiscounted lease liabilities (including variable lease payments not included in lease liabilities) for operating and finance leases. (Number, optional)",
        "debtinstrumentterm": "Term or length of a debt instrument in years. (Number, e.g., years)",
        "shorttermdebtweightedaverageinterestrate": "Weighted average interest rate paid on short-term debt obligations. (Number, percent, optional)",
        "longtermdebtfairvalue": "Fair value of long-term debt as disclosed in the notes to financial statements. (Number, optional)",
        "proceedsfromrepaymentsofshorttermdebtmaturinginthreemonthsorless": "Proceeds from repayments of short-term debt obligations maturing within three months. (Number, optional)",
        "debtinstrumentcarryingamount": "Carrying amount of a debt instrument on the balance sheet. (Number, e.g., USD)",
        "debtinstrumentunamortizeddiscountpremiumanddebtissuancecostsnet": "Net unamortized discount, premium, and issuance costs related to debt instruments. (Number, e.g., USD)",
        "hedgeaccountingadjustmentsrelatedtolongtermdebt": "Adjustments made to the carrying amount of long-term debt resulting from hedge accounting activities (e.g., fair value hedges). (Number, optional)",
        "longtermdebt": "Long-term debt outstanding as of the balance sheet date (due beyond one year). (Number, optional)",
        "debtinstrumentmaturityyearrangestart": "Starting year of the maturity range for a debt instrument. (Number, e.g., year)",
        "debtinstrumentmaturityyearrangeend": "Ending year of the maturity range for a debt instrument. (Number, e.g., year)",
        "debtinstrumentinterestratestatedpercentage": "Stated (nominal) interest rate for a debt instrument. (Percent)",
        "debtinstrumentinterestrateeffectivepercentage": "Effective interest rate (percentage) for a debt instrument. (Percent)",
        "longtermdebtmaturitiesrepaymentsofprincipalinnexttwelvemonths": "Repayments of principal on long-term debt due in the next twelve months. (Number, optional)",
        "longtermdebtmaturitiesrepaymentsofprincipalinyeartwo": "Repayments of principal on long-term debt scheduled for the second year after the balance sheet date. (Number, optional)",
        "longtermdebtmaturitiesrepaymentsofprincipalinyearthree": "Repayments of principal on long-term debt scheduled for the third year after the balance sheet date. (Number, optional)",
        "longtermdebtmaturitiesrepaymentsofprincipalinyearfour": "Repayments of principal on long-term debt scheduled for the fourth year after the balance sheet date. (Number, optional)",
        "longtermdebtmaturitiesrepaymentsofprincipalinyearfive": "Repayments of principal on long-term debt scheduled for the fifth year after the balance sheet date. (Number, optional)",
        "longtermdebtmaturitiesrepaymentsofprincipalafteryearfive": "Repayments of principal on long-term debt scheduled after five years from the balance sheet date. (Number, optional)",
        "stockrepurchasedandretiredduringperiodshares": "Number of shares repurchased and retired by the company during the period. (Number, optional)",
        "stockissuedduringperiodsharessharebasedpaymentarrangementnetofshareswithheldfortaxes": "Net shares issued during the period under share-based payment arrangements, after shares withheld for taxes. (Number, optional)",
        "sharebasedcompensationarrangementbysharebasedpaymentawardawardvestingperiod1": "Vesting period for the first tranche of share-based payment awards. (String/Number, optional)",
        "sharebasedcompensationarrangementbysharebasedpaymentawardequityinstrumentsotherthanoptionsnumberofsharesofcommonstockissuedperunituponvesting": "Number of common shares issued per unit upon vesting of non-option equity awards. (Number, optional)",
        "sharebasedcompensationarrangementbysharebasedpaymentawardequityinstrumentsotherthanoptionsvestedinperiodtotalfairvalue": "Total fair value of non-option equity awards vested during the period. (Number, optional)",
        "sharespaidfortaxwithholdingforsharebasedcompensation": "Shares withheld from employees to satisfy tax withholding obligations on share-based compensation. (Number, optional)",
        "employeeservicesharebasedcompensationnonvestedawardstotalcompensationcostnotyetrecognized": "Total compensation cost not yet recognized for non-vested employee share-based awards. (Number, e.g., USD)",
        "employeeservicesharebasedcompensationnonvestedawardstotalcompensationcostnotyetrecognizedperiodforrecognition1": "Period over which the unrecognized compensation cost for non-vested awards will be recognized. (Number, months/years)",
        "sharebasedcompensationarrangementbysharebasedpaymentawardequityinstrumentsotherthanoptionsnonvestednumber": "Number of non-option equity instruments not vested at period end. (Number, optional)",
        "sharebasedcompensationarrangementbysharebasedpaymentawardequityinstrumentsotherthanoptionsgrantsinperiod": "Number of non-option equity instruments granted in the period. (Number, optional)",
        "sharebasedcompensationarrangementbysharebasedpaymentawardequityinstrumentsotherthanoptionsvestedinperiod": "Number of non-option equity awards vested during the reporting period. (Number, optional)",
        "sharebasedcompensationarrangementbysharebasedpaymentawardequityinstrumentsotherthanoptionsforfeitedinperiod": "Number of equity instruments (other than options) forfeited during the period. (Number, optional)",
        "sharebasedcompensationarrangementbysharebasedpaymentawardequityinstrumentsotherthanoptionsnonvestedweightedaveragegrantdatefairvalue": "Weighted average grant date fair value of non-option equity awards not vested. (Number, optional)",
        "sharebasedcompensationarrangementbysharebasedpaymentawardequityinstrumentsotherthanoptionsgrantsinperiodweightedaveragegrantdatefairvalue": "Weighted average grant date fair value of non-option equity instruments granted in period. (Number, optional)",
        "sharebasedcompensationarrangementbysharebasedpaymentawardequityinstrumentsotherthanoptionsvestedinperiodweightedaveragegrantdatefairvalue": "Weighted average grant date fair value of vested non-option equity awards in period. (Number, optional)",
        "sharebasedcompensationarrangementbysharebasedpaymentawardequityinstrumentsotherthanoptionsforfeituresweightedaveragegrantdatefairvalue": "Weighted average grant date fair value of forfeited non-option equity awards. (Number, optional)",
        "sharebasedcompensationarrangementbysharebasedpaymentawardequityinstrumentsotherthanoptionsaggregateintrinsicvaluenonvested": "Aggregate intrinsic value of non-vested equity instruments (other than options) outstanding at period end. (Number, optional)",
        "allocatedsharebasedcompensationexpense": "Total share-based compensation expense allocated during the reporting period. (Number, e.g., USD)",
        "employeeservicesharebasedcompensationtaxbenefitfromcompensationexpense": "Tax benefit resulting from employee service share-based compensation expense. (Number, e.g., USD)",
        "unrecordedunconditionalpurchaseobligationbalanceonfirstanniversary": "Unrecorded unconditional purchase obligation balance due on the first anniversary from the reporting date. (Number, optional)",
        "unrecordedunconditionalpurchaseobligationbalanceonsecondanniversary": "Unrecorded unconditional purchase obligation balance due on the second anniversary from the reporting date. (Number, optional)",
        "unrecordedunconditionalpurchaseobligationbalanceonthirdanniversary": "Unrecorded unconditional purchase obligation balance due on the third anniversary from the reporting date. (Number, optional)",
        "unrecordedunconditionalpurchaseobligationbalanceonfourthanniversary": "Unrecorded unconditional purchase obligation balance due on the fourth anniversary from the reporting date. (Number, optional)",
        "unrecordedunconditionalpurchaseobligationbalanceonfifthanniversary": "Unrecorded unconditional purchase obligation (commitment) balance due on the fifth anniversary from the reporting date. (Number, optional)",
        "unrecordedunconditionalpurchaseobligationdueafterfiveyears": "Unrecorded unconditional purchase obligations due after five years from the reporting date. (Number, optional)",
        "othergeneralandadministrativeexpense": "General and administrative expenses not classified elsewhere. May include overhead, office costs, or miscellaneous administrative items. (Number, optional)",
        "noncurrentassets": "Total value of assets not expected to be converted to cash or used up within one year. (Number, optional)",
        "trdarrsecuritiesaggavailamt": "Aggregate available amount of securities (possibly in a trust or reporting group). (Number, optional)",
        "insidertrdpoliciesprocadoptedflag": "Indicates whether the company has adopted policies and procedures related to insider trading. Values: 'Y' or 'N'. (String, optional)"
      }
    }
  },
  {
    "name": "Institutional Ownership Filings API",
    "description": "Institutional Ownership Filings API surfaces the very latest Form 13F submissions straight from EDGAR. Required paging knobs `page` and `limit` return an array keyed by `cik`, `formType`, `filingDate`, and pre-resolved SEC links—ideal for live feed dashboards, regulatory-event triggers, and whale-watch alerts.",
    "category": "ownership_filings",
    "use_cases": [
      "real-time 13F newsfeeds",
      "trigger alerts on new mega-fund filings",
      "populate watchlists of fresh institutional activity",
      "ETL into ownership-tracking data lakes",
      "LLM Q&A on who just filed and when"
    ],
    "parameters": {
      "required": {
        "page": "A zero-based integer page index for paginated endpoints. Example: 2 to return the third page of results, given the configured `limit`. (Integer, optional; defaults to 0)",
        "limit": "An integer cap on the number of results returned by the endpoint. Example: 50 to restrict output to the top 50 matches. Must be ≥1 and ≤1000. (Integer, optional; defaults to 100)"
      },
      "optional": {}
    },
    "response_example": {
      "cik": "The Central Index Key, a unique nine-digit identifier assigned by the SEC to entities. Example: \"0001454889\". (String)",
      "name": "The full legal or common name of the company. Example: \"Apple Inc.\" (String)",
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "filingDate": "The date on which a regulatory filing was submitted (e.g., with the SEC), in ISO 8601 format. Example: \"2025-02-03\". (String, Date)",
      "acceptedDate": "The date on which a filing or document was accepted by the regulatory authority. Example: \"2025-02-03\". (String, Date)",
      "formType": "The type or designation of a regulatory filing (e.g., \"10-K\", \"10-Q\"). Example: \"10-K\". (String)",
      "link": "A URL linking to supporting documentation or filings for the corporate event or transaction. Example: \"https://www.sec.gov/Archives/edgar/data/849399/000114036125002752/ny20039778x6_s4.htm\". (String, URL)",
      "finalLink": "Final URL or direct link associated with a filing, report, or record. (String, URL)"
    }
  },
  {
    "name": "Institutional Ownership Filings API",
    "description": "Pull a continuous fire-hose of brand-new institutional filings. Just set `page` and `limit`; the endpoint responds with CIK identifiers, entity names, accepted timestamps, and both index & raw-XML links—perfect for feed ingestion, compliance monitoring, and market-moving ownership intel.",
    "category": "ownership_filings",
    "use_cases": [
      "feed sentiment models with fresh filings",
      "quick-link filings for sell-side research",
      "audit fund-reporting timeliness",
      "aggregate statistics on filing velocity",
      "construct filing heat maps by day"
    ],
    "parameters": {
      "required": {
        "page": "A zero-based integer page index for paginated endpoints. Example: 2 to return the third page of results, given the configured `limit`. (Integer, optional; defaults to 0)",
        "limit": "An integer cap on the number of results returned by the endpoint. Example: 50 to restrict output to the top 50 matches. Must be ≥1 and ≤1000. (Integer, optional; defaults to 100)"
      },
      "optional": {}
    },
    "response_example": {
      "cik": "The Central Index Key, a unique nine-digit identifier assigned by the SEC to entities. Example: \"0001454889\". (String)",
      "name": "The full legal or common name of the company. Example: \"Apple Inc.\" (String)",
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "filingDate": "The date on which a regulatory filing was submitted (e.g., with the SEC), in ISO 8601 format. Example: \"2025-02-03\". (String, Date)",
      "acceptedDate": "The date on which a filing or document was accepted by the regulatory authority. Example: \"2025-02-03\". (String, Date)",
      "formType": "The type or designation of a regulatory filing (e.g., \"10-K\", \"10-Q\"). Example: \"10-K\". (String)",
      "link": "A URL linking to supporting documentation or filings for the corporate event or transaction. Example: \"https://www.sec.gov/Archives/edgar/data/849399/000114036125002752/ny20039778x6_s4.htm\". (String, URL)",
      "finalLink": "Final URL or direct link associated with a filing, report, or record. (String, URL)"
    }
  },
  {
    "name": "Filings Extract API",
    "description": "Filings Extract API drills directly into an institution’s 13F XML to return line-item holdings—`securityCusip`, `symbol`, `shares`, `value`, etc. Feed it `cik`, `year`, and `quarter` to pull a full position list for that reporting period. Best for portfolio-reconstruction, position-sizing analytics, and cross-holder security tallies.",
    "category": "ownership_filings",
    "use_cases": [
      "rebuild hedge-fund 13F portfolios",
      "calculate sector exposures by holder",
      "merge 13F data with price series",
      "detect high-conviction stakes",
      "compare quarter-over-quarter position deltas"
    ],
    "parameters": {
      "required": {
        "cik": "The nine-digit Central Index Key assigned by the SEC, used to filter or look up specific filers. Example: \"0000320193\" for Apple Inc. (String, optional)",
        "year": "A four-digit calendar year or fiscal year number to filter period-based endpoints. Example: 2024 to retrieve data for the 2024 fiscal or calendar year. (Number or String, optional)",
        "quarter": "A fiscal quarter identifier, typically \"Q1\", \"Q2\", \"Q3\", or \"Q4\". Example: \"Q3\" to filter data to the third quarter of the specified year. (String, optional)"
      },
      "optional": {}
    },
    "response_example": {
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "filingDate": "The date on which a regulatory filing was submitted (e.g., with the SEC), in ISO 8601 format. Example: \"2025-02-03\". (String, Date)",
      "acceptedDate": "The date on which a filing or document was accepted by the regulatory authority. Example: \"2025-02-03\". (String, Date)",
      "cik": "The Central Index Key, a unique nine-digit identifier assigned by the SEC to entities. Example: \"0001454889\". (String)",
      "securityCusip": "The CUSIP identifier of the security (9 characters for US/Canada securities). Example: \"037833100\" for Apple Inc. (String, optional)",
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "nameOfIssuer": "The official name of the entity issuing the securities, typically the corporate issuer. Example: \"Acme Corp.\". (String)",
      "shares": "The number of shares involved in a transaction or corporate event. Example: \"None\" or 1000000. (Number or String)",
      "titleOfClass": "Legal or regulatory title for the class of securities. Example: 'Class A Common Stock'. (String, SEC filings/ownership disclosures)",
      "sharesType": "Classification of shares, such as 'Common', 'Preferred', or 'ADR'. Example: 'Common'. (String, share class identifier)",
      "putCallShare": "Proportion or number of put or call options outstanding relative to the total. (Number, percent, optional)",
      "value": "A generic numeric or string value associated with a data point, context-dependent. Example: 12345.67. (Number or String)",
      "link": "A URL linking to supporting documentation or filings for the corporate event or transaction. Example: \"https://www.sec.gov/Archives/edgar/data/849399/000114036125002752/ny20039778x6_s4.htm\". (String, URL)",
      "finalLink": "Final URL or direct link associated with a filing, report, or record. (String, URL)"
    }
  },
  {
    "name": "Filings Extract API",
    "description": "Need raw position granularity? Pass `cik`, `year`, `quarter` and get each security’s CUSIP, share count, market value, and XML link. Perfect for net-new holdings detection, overlap studies, and alpha capture on freshly reported buys.",
    "category": "ownership_filings",
    "use_cases": [
      "isolate brand-new stakes in small caps",
      "track fund rotation into/out of sectors",
      "run overlap matrices across funds",
      "feed risk engines with institutional weights",
      "train LLMs on security-level ownership"
    ],
    "parameters": {
      "required": {
        "cik": "The nine-digit Central Index Key assigned by the SEC, used to filter or look up specific filers. Example: \"0000320193\" for Apple Inc. (String, optional)",
        "year": "A four-digit calendar year or fiscal year number to filter period-based endpoints. Example: 2024 to retrieve data for the 2024 fiscal or calendar year. (Number or String, optional)",
        "quarter": "A fiscal quarter identifier, typically \"Q1\", \"Q2\", \"Q3\", or \"Q4\". Example: \"Q3\" to filter data to the third quarter of the specified year. (String, optional)"
      },
      "optional": {}
    },
    "response_example": {
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "filingDate": "The date on which a regulatory filing was submitted (e.g., with the SEC), in ISO 8601 format. Example: \"2025-02-03\". (String, Date)",
      "acceptedDate": "The date on which a filing or document was accepted by the regulatory authority. Example: \"2025-02-03\". (String, Date)",
      "cik": "The Central Index Key, a unique nine-digit identifier assigned by the SEC to entities. Example: \"0001454889\". (String)",
      "securityCusip": "The CUSIP identifier of the security (9 characters for US/Canada securities). Example: \"037833100\" for Apple Inc. (String, optional)",
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "nameOfIssuer": "The official name of the entity issuing the securities, typically the corporate issuer. Example: \"Acme Corp.\". (String)",
      "shares": "The number of shares involved in a transaction or corporate event. Example: \"None\" or 1000000. (Number or String)",
      "titleOfClass": "Legal or regulatory title for the class of securities. Example: 'Class A Common Stock'. (String, SEC filings/ownership disclosures)",
      "sharesType": "Classification of shares, such as 'Common', 'Preferred', or 'ADR'. Example: 'Common'. (String, share class identifier)",
      "putCallShare": "Proportion or number of put or call options outstanding relative to the total. (Number, percent, optional)",
      "value": "A generic numeric or string value associated with a data point, context-dependent. Example: 12345.67. (Number or String)",
      "link": "A URL linking to supporting documentation or filings for the corporate event or transaction. Example: \"https://www.sec.gov/Archives/edgar/data/849399/000114036125002752/ny20039778x6_s4.htm\". (String, URL)",
      "finalLink": "Final URL or direct link associated with a filing, report, or record. (String, URL)"
    }
  },
  {
    "name": "Form 13F Filings Dates API",
    "description": "Form 13F Filings Dates API lists every reporting date available for a given institutional CIK. Supply just `cik` and retrieve year/quarter tuples—critical for building filing calendars, delta checks, and automated backlog ingestion.",
    "category": "ownership_filings",
    "use_cases": [
      "validate which quarters are filed",
      "schedule ETL jobs for new dates",
      "flag late or missing filings",
      "build UI date pickers for analysts",
      "benchmark filing cadence across funds"
    ],
    "parameters": {
      "required": {
        "cik": "The nine-digit Central Index Key assigned by the SEC, used to filter or look up specific filers. Example: \"0000320193\" for Apple Inc. (String, optional)"
      },
      "optional": {}
    },
    "response_example": {
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "year": "The calendar year associated with a data point or report. Example: 2023. (Number or String)",
      "quarter": "The fiscal quarter associated with the data point, typically \"Q1\", \"Q2\", \"Q3\", or \"Q4\". Example: \"Q4\". (String)"
    }
  },
  {
    "name": "Form 13F Filings Dates API",
    "description": "Discover every quarter a fund has reported—one call returns an array of `year`, `quarter`, and `date` keys so you can backfill or sanity-check coverage before heavy extraction.",
    "category": "ownership_filings",
    "use_cases": [
      "control loops for historical backfill",
      "surface gaps for compliance investigation",
      "drive pull-down menus in dashboards",
      "measure timeliness vs statutory deadlines",
      "update vector DB only when new data exists"
    ],
    "parameters": {
      "required": {
        "cik": "The nine-digit Central Index Key assigned by the SEC, used to filter or look up specific filers. Example: \"0000320193\" for Apple Inc. (String, optional)"
      },
      "optional": {}
    },
    "response_example": {
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "year": "The calendar year associated with a data point or report. Example: 2023. (Number or String)",
      "quarter": "The fiscal quarter associated with the data point, typically \"Q1\", \"Q2\", \"Q3\", or \"Q4\". Example: \"Q4\". (String)"
    }
  },
  {
    "name": "Filings Extract With Analytics By Holder API",
    "description": "Filings Extract With Analytics By Holder API augments raw 13F lines with computed analytics—weight, change in shares, market-value delta, cost basis, performance, etc. Feed it `symbol`, `year`, `quarter`, and paging controls to see how every holder traded that name over the quarter.",
    "category": "ownership_analytics",
    "use_cases": [
      "rank top buyers/sellers of a stock",
      "spot conviction increases via weight delta",
      "trace average cost vs quarter-end price",
      "generate whale trade summaries",
      "feed sentiment signals into factor models"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)",
        "year": "A four-digit calendar year or fiscal year number to filter period-based endpoints. Example: 2024 to retrieve data for the 2024 fiscal or calendar year. (Number or String, optional)",
        "quarter": "A fiscal quarter identifier, typically \"Q1\", \"Q2\", \"Q3\", or \"Q4\". Example: \"Q3\" to filter data to the third quarter of the specified year. (String, optional)"
      },
      "optional": {
        "page": "A zero-based integer page index for paginated endpoints. Example: 2 to return the third page of results, given the configured `limit`. (Integer, optional; defaults to 0)",
        "limit": "An integer cap on the number of results returned by the endpoint. Example: 50 to restrict output to the top 50 matches. Must be ≥1 and ≤1000. (Integer, optional; defaults to 100)"
      }
    },
    "response_example": {
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "cik": "The Central Index Key, a unique nine-digit identifier assigned by the SEC to entities. Example: \"0001454889\". (String)",
      "filingDate": "The date on which a regulatory filing was submitted (e.g., with the SEC), in ISO 8601 format. Example: \"2025-02-03\". (String, Date)",
      "investorName": "The name of an investor or institutional holder. Example: \"Vanguard Group, Inc.\". (String)",
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "securityName": "The full name of the security or asset. Example: 'Apple Inc. Common Stock'. (String, identifier for clarity)",
      "typeOfSecurity": "The kind or class of security (stock, bond, option, etc.). Example: 'Equity'. (String, data classification)",
      "securityCusip": "The CUSIP identifier of the security (9 characters for US/Canada securities). Example: \"037833100\" for Apple Inc. (String, optional)",
      "sharesType": "Classification of shares, such as 'Common', 'Preferred', or 'ADR'. Example: 'Common'. (String, share class identifier)",
      "putCallShare": "Proportion or number of put or call options outstanding relative to the total. (Number, percent, optional)",
      "investmentDiscretion": "Indicates the authority to make investment decisions in an account or portfolio (e.g., 'discretionary', 'non-discretionary'). (String, optional)",
      "industryTitle": "The textual title or name of the industry in which the company operates. Example: \"Technology Hardware, Storage & Peripherals\". (String)",
      "weight": "The weight of an asset or security within a portfolio, expressed as a decimal or percentage. Example: \"0.05\" or 5%. (Number or String)",
      "lastWeight": "Portfolio weight of a security or asset as of the most recent reporting period. (Number, percent, optional)",
      "changeInWeight": "Change in the portfolio weighting or allocation of a particular asset or holding. (Percent)",
      "changeInWeightPercentage": "The percentage change in portfolio weight for a specific asset or holding. Example: 1.2. (Number, Percentage)",
      "marketValue": "The total market value of an asset or holding at the time of reporting, in the reporting currency. Example: 1500000. (Number)",
      "lastMarketValue": "Market value of an asset or security as of the last reporting date. (Number, in reporting currency, optional)",
      "changeInMarketValue": "Absolute change in the market value of an asset, security, or portfolio over a specific period. (Number, e.g., USD)",
      "changeInMarketValuePercentage": "Percentage change in market value over a period, showing relative gain or loss. (Percent)",
      "sharesNumber": "The number of shares held or reported in a specific context, such as a portfolio holding. Example: 1000. (Number)",
      "lastSharesNumber": "Number of shares outstanding at the most recent reporting date. (Number, optional)",
      "changeInSharesNumber": "Difference in the number of shares outstanding compared to a previous period. (Number)",
      "changeInSharesNumberPercentage": "The percentage change in the number of shares held by an investor over a period. Example: 2.5. (Number, Percentage)",
      "quarterEndPrice": "Price of a security or asset at the end of the fiscal quarter. (Number, optional)",
      "avgPricePaid": "The average price per share paid by an investor or fund for its holdings. Example: 125.75. (Number)",
      "isNew": "Boolean indicating if an asset, security, or entry is new to a dataset or portfolio. (Boolean, optional)",
      "isSoldOut": "Boolean flag indicating if all available units of a security or asset have been sold. (Boolean, optional)",
      "ownership": "Proportion or number of shares held in a security or company, often expressed as a percentage. (Number, percent, optional)",
      "lastOwnership": "Level or percent of ownership (stake) as of the most recent reporting date. (Number, percent, optional)",
      "changeInOwnership": "Absolute change in ownership position, often referring to number of shares or units held. (Number)",
      "changeInOwnershipPercentage": "Percentage change in ownership stake over a reporting period. (Percent)",
      "holdingPeriod": "Number of days, months, or years a security or asset is held in a portfolio. Example: 365 for a 1-year holding period. (Integer, optional)",
      "firstAdded": "The date the security, instrument, or entity was first added to a system, index, or database. (String, format: YYYY-MM-DD)",
      "performance": "Performance of an asset, portfolio, or security over a defined period, usually expressed as a return percentage. (Number, percent, optional)",
      "performancePercentage": "The percentage performance of a portfolio or security over a specified period. Example: 15.8. (Number, Percentage)",
      "lastPerformance": "Most recent performance value for an asset, security, or fund, such as monthly or quarterly return. (Number, percent, optional)",
      "changeInPerformance": "Change in performance metrics such as return or growth rate, usually period-over-period.",
      "isCountedForPerformance": "Boolean flag indicating whether a particular holding or security is included in performance calculations. (Boolean, optional)"
    }
  },
  {
    "name": "Filings Extract With Analytics By Holder API",
    "description": "Get more than counts—this endpoint layers performance, weight shifts, and ownership changes on top of each holder’s filing. Required `symbol`, `year`, `quarter`; optional paging. Perfect for differentiating passive drifts from active conviction moves.",
    "category": "ownership_analytics",
    "use_cases": [
      "flag aggressive accumulation campaigns",
      "filter out index-tracking noise",
      "enrich trade-surveillance dashboards",
      "quantify value-add vs benchmark",
      "LLM commentary on holder behavior"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)",
        "year": "A four-digit calendar year or fiscal year number to filter period-based endpoints. Example: 2024 to retrieve data for the 2024 fiscal or calendar year. (Number or String, optional)",
        "quarter": "A fiscal quarter identifier, typically \"Q1\", \"Q2\", \"Q3\", or \"Q4\". Example: \"Q3\" to filter data to the third quarter of the specified year. (String, optional)"
      },
      "optional": {
        "page": "A zero-based integer page index for paginated endpoints. Example: 2 to return the third page of results, given the configured `limit`. (Integer, optional; defaults to 0)",
        "limit": "An integer cap on the number of results returned by the endpoint. Example: 50 to restrict output to the top 50 matches. Must be ≥1 and ≤1000. (Integer, optional; defaults to 100)"
      }
    },
    "response_example": {
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "cik": "The Central Index Key, a unique nine-digit identifier assigned by the SEC to entities. Example: \"0001454889\". (String)",
      "filingDate": "The date on which a regulatory filing was submitted (e.g., with the SEC), in ISO 8601 format. Example: \"2025-02-03\". (String, Date)",
      "investorName": "The name of an investor or institutional holder. Example: \"Vanguard Group, Inc.\". (String)",
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "securityName": "The full name of the security or asset. Example: 'Apple Inc. Common Stock'. (String, identifier for clarity)",
      "typeOfSecurity": "The kind or class of security (stock, bond, option, etc.). Example: 'Equity'. (String, data classification)",
      "securityCusip": "The CUSIP identifier of the security (9 characters for US/Canada securities). Example: \"037833100\" for Apple Inc. (String, optional)",
      "sharesType": "Classification of shares, such as 'Common', 'Preferred', or 'ADR'. Example: 'Common'. (String, share class identifier)",
      "putCallShare": "Proportion or number of put or call options outstanding relative to the total. (Number, percent, optional)",
      "investmentDiscretion": "Indicates the authority to make investment decisions in an account or portfolio (e.g., 'discretionary', 'non-discretionary'). (String, optional)",
      "industryTitle": "The textual title or name of the industry in which the company operates. Example: \"Technology Hardware, Storage & Peripherals\". (String)",
      "weight": "The weight of an asset or security within a portfolio, expressed as a decimal or percentage. Example: \"0.05\" or 5%. (Number or String)",
      "lastWeight": "Portfolio weight of a security or asset as of the most recent reporting period. (Number, percent, optional)",
      "changeInWeight": "Change in the portfolio weighting or allocation of a particular asset or holding. (Percent)",
      "changeInWeightPercentage": "The percentage change in portfolio weight for a specific asset or holding. Example: 1.2. (Number, Percentage)",
      "marketValue": "The total market value of an asset or holding at the time of reporting, in the reporting currency. Example: 1500000. (Number)",
      "lastMarketValue": "Market value of an asset or security as of the last reporting date. (Number, in reporting currency, optional)",
      "changeInMarketValue": "Absolute change in the market value of an asset, security, or portfolio over a specific period. (Number, e.g., USD)",
      "changeInMarketValuePercentage": "Percentage change in market value over a period, showing relative gain or loss. (Percent)",
      "sharesNumber": "The number of shares held or reported in a specific context, such as a portfolio holding. Example: 1000. (Number)",
      "lastSharesNumber": "Number of shares outstanding at the most recent reporting date. (Number, optional)",
      "changeInSharesNumber": "Difference in the number of shares outstanding compared to a previous period. (Number)",
      "changeInSharesNumberPercentage": "The percentage change in the number of shares held by an investor over a period. Example: 2.5. (Number, Percentage)",
      "quarterEndPrice": "Price of a security or asset at the end of the fiscal quarter. (Number, optional)",
      "avgPricePaid": "The average price per share paid by an investor or fund for its holdings. Example: 125.75. (Number)",
      "isNew": "Boolean indicating if an asset, security, or entry is new to a dataset or portfolio. (Boolean, optional)",
      "isSoldOut": "Boolean flag indicating if all available units of a security or asset have been sold. (Boolean, optional)",
      "ownership": "Proportion or number of shares held in a security or company, often expressed as a percentage. (Number, percent, optional)",
      "lastOwnership": "Level or percent of ownership (stake) as of the most recent reporting date. (Number, percent, optional)",
      "changeInOwnership": "Absolute change in ownership position, often referring to number of shares or units held. (Number)",
      "changeInOwnershipPercentage": "Percentage change in ownership stake over a reporting period. (Percent)",
      "holdingPeriod": "Number of days, months, or years a security or asset is held in a portfolio. Example: 365 for a 1-year holding period. (Integer, optional)",
      "firstAdded": "The date the security, instrument, or entity was first added to a system, index, or database. (String, format: YYYY-MM-DD)",
      "performance": "Performance of an asset, portfolio, or security over a defined period, usually expressed as a return percentage. (Number, percent, optional)",
      "performancePercentage": "The percentage performance of a portfolio or security over a specified period. Example: 15.8. (Number, Percentage)",
      "lastPerformance": "Most recent performance value for an asset, security, or fund, such as monthly or quarterly return. (Number, percent, optional)",
      "changeInPerformance": "Change in performance metrics such as return or growth rate, usually period-over-period.",
      "isCountedForPerformance": "Boolean flag indicating whether a particular holding or security is included in performance calculations. (Boolean, optional)"
    }
  },
  {
    "name": "Holder Performance Summary API",
    "description": "Holder Performance Summary API aggregates a fund’s portfolio metrics—market value, turnover, multi-period performance, and SP500 relative—by filing date. Input `cik` (required) plus `page` for pagination. Use it to benchmark manager skill, turnover discipline, and long-term alpha.",
    "category": "ownership_analytics",
    "use_cases": [
      "rank managers by outperformance",
      "track turnover vs returns correlation",
      "screen for low-churn, high-alpha funds",
      "feed client-reporting dashboards",
      "compute Sharpe vs S&P proxies"
    ],
    "parameters": {
      "required": {
        "cik": "The nine-digit Central Index Key assigned by the SEC, used to filter or look up specific filers. Example: \"0000320193\" for Apple Inc. (String, optional)"
      },
      "optional": {
        "page": "A zero-based integer page index for paginated endpoints. Example: 2 to return the third page of results, given the configured `limit`. (Integer, optional; defaults to 0)"
      }
    },
    "response_example": {
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "cik": "The Central Index Key, a unique nine-digit identifier assigned by the SEC to entities. Example: \"0001454889\". (String)",
      "investorName": "The name of an investor or institutional holder. Example: \"Vanguard Group, Inc.\". (String)",
      "portfolioSize": "The total market value of a portfolio at a given time. Example: 5000000. (Number)",
      "securitiesAdded": "List or count of securities added to a portfolio, index, or list in the period. Example: ['AAPL', 'MSFT']. (Array or String, rebalancing disclosure)",
      "securitiesRemoved": "List or count of securities removed from a portfolio, index, or list in the period. Example: ['TSLA', 'META']. (Array or String, rebalancing disclosure)",
      "marketValue": "The total market value of an asset or holding at the time of reporting, in the reporting currency. Example: 1500000. (Number)",
      "previousMarketValue": "Market value of a security or asset in the previous reporting period. (Number, optional)",
      "changeInMarketValue": "Absolute change in the market value of an asset, security, or portfolio over a specific period. (Number, e.g., USD)",
      "changeInMarketValuePercentage": "Percentage change in market value over a period, showing relative gain or loss. (Percent)",
      "averageHoldingPeriod": "Average length of time (in days, months, or years) that holdings are retained in the portfolio.",
      "averageHoldingPeriodTop10": "Average holding period for the top 10 largest positions in a portfolio.",
      "averageHoldingPeriodTop20": "Average holding period for the top 20 largest positions in a portfolio.",
      "turnover": "The portfolio turnover rate, indicating how frequently holdings are bought or sold, expressed as a percentage. Example: 30.5. (Number, Percentage)",
      "turnoverAlternateSell": "Total value or count of alternate sell-side transactions. Example: 2,200,000. (Number, advanced trading analytics)",
      "turnoverAlternateBuy": "Total value or count of alternate buy-side transactions (non-standard turnover metric). Example: 1,500,000 in alternate buy turnover. (Number, advanced trading analytics)",
      "performance": "Performance of an asset, portfolio, or security over a defined period, usually expressed as a return percentage. (Number, percent, optional)",
      "performancePercentage": "The percentage performance of a portfolio or security over a specified period. Example: 15.8. (Number, Percentage)",
      "lastPerformance": "Most recent performance value for an asset, security, or fund, such as monthly or quarterly return. (Number, percent, optional)",
      "changeInPerformance": "Change in performance metrics such as return or growth rate, usually period-over-period.",
      "performance1year": "The percentage performance of a portfolio or security over the last 1 year. Example: 20.3. (Number, Percentage)",
      "performancePercentage1year": "1-year total return as a percentage. (Number, percent, optional)",
      "performance3year": "Annualized return or performance over a 3-year period. (Number, percent, optional)",
      "performancePercentage3year": "3-year total return as a percentage. (Number, percent, optional)",
      "performance5year": "Annualized return or performance over a 5-year period. (Number, percent, optional)",
      "performancePercentage5year": "5-year total return as a percentage. (Number, percent, optional)",
      "performanceSinceInception": "Total return since inception of a fund, security, or account. (Number, percent, optional)",
      "performanceSinceInceptionPercentage": "The percentage performance of a portfolio or fund since its inception. Example: 120.4. (Number, Percentage)",
      "performanceRelativeToSP500Percentage": "Return relative to the S&P 500 index over a custom or specified period. (Number, percent, optional)",
      "performance1yearRelativeToSP500Percentage": "1-year return relative to the S&P 500 index, measuring outperformance or underperformance against the benchmark. (Number, percent, optional)",
      "performance3yearRelativeToSP500Percentage": "3-year annualized return relative to the S&P 500. (Number, percent, optional)",
      "performance5yearRelativeToSP500Percentage": "5-year annualized return relative to the S&P 500. (Number, percent, optional)",
      "performanceSinceInceptionRelativeToSP500Percentage": "Total return since inception relative to S&P 500. (Number, percent, optional)"
    }
  },
  {
    "name": "Holder Performance Summary API",
    "description": "One call, full scoreboard: portfolio count, adds/drops, multi-horizon performance, turnover alternatives—all benchmarked to the S&P 500. Required `cik`, optional `page`. Ideal for due-diligence tear sheets and allocator selection tools.",
    "category": "ownership_analytics",
    "use_cases": [
      "produce investment-committee memos",
      "compare fund turnover regimes",
      "flag performance drawdowns early",
      "correlate portfolio size with alpha",
      "LLM summaries of fund track-record"
    ],
    "parameters": {
      "required": {
        "cik": "The nine-digit Central Index Key assigned by the SEC, used to filter or look up specific filers. Example: \"0000320193\" for Apple Inc. (String, optional)"
      },
      "optional": {
        "page": "A zero-based integer page index for paginated endpoints. Example: 2 to return the third page of results, given the configured `limit`. (Integer, optional; defaults to 0)"
      }
    },
    "response_example": {
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "cik": "The Central Index Key, a unique nine-digit identifier assigned by the SEC to entities. Example: \"0001454889\". (String)",
      "investorName": "The name of an investor or institutional holder. Example: \"Vanguard Group, Inc.\". (String)",
      "portfolioSize": "The total market value of a portfolio at a given time. Example: 5000000. (Number)",
      "securitiesAdded": "List or count of securities added to a portfolio, index, or list in the period. Example: ['AAPL', 'MSFT']. (Array or String, rebalancing disclosure)",
      "securitiesRemoved": "List or count of securities removed from a portfolio, index, or list in the period. Example: ['TSLA', 'META']. (Array or String, rebalancing disclosure)",
      "marketValue": "The total market value of an asset or holding at the time of reporting, in the reporting currency. Example: 1500000. (Number)",
      "previousMarketValue": "Market value of a security or asset in the previous reporting period. (Number, optional)",
      "changeInMarketValue": "Absolute change in the market value of an asset, security, or portfolio over a specific period. (Number, e.g., USD)",
      "changeInMarketValuePercentage": "Percentage change in market value over a period, showing relative gain or loss. (Percent)",
      "averageHoldingPeriod": "Average length of time (in days, months, or years) that holdings are retained in the portfolio.",
      "averageHoldingPeriodTop10": "Average holding period for the top 10 largest positions in a portfolio.",
      "averageHoldingPeriodTop20": "Average holding period for the top 20 largest positions in a portfolio.",
      "turnover": "The portfolio turnover rate, indicating how frequently holdings are bought or sold, expressed as a percentage. Example: 30.5. (Number, Percentage)",
      "turnoverAlternateSell": "Total value or count of alternate sell-side transactions. Example: 2,200,000. (Number, advanced trading analytics)",
      "turnoverAlternateBuy": "Total value or count of alternate buy-side transactions (non-standard turnover metric). Example: 1,500,000 in alternate buy turnover. (Number, advanced trading analytics)",
      "performance": "Performance of an asset, portfolio, or security over a defined period, usually expressed as a return percentage. (Number, percent, optional)",
      "performancePercentage": "The percentage performance of a portfolio or security over a specified period. Example: 15.8. (Number, Percentage)",
      "lastPerformance": "Most recent performance value for an asset, security, or fund, such as monthly or quarterly return. (Number, percent, optional)",
      "changeInPerformance": "Change in performance metrics such as return or growth rate, usually period-over-period.",
      "performance1year": "The percentage performance of a portfolio or security over the last 1 year. Example: 20.3. (Number, Percentage)",
      "performancePercentage1year": "1-year total return as a percentage. (Number, percent, optional)",
      "performance3year": "Annualized return or performance over a 3-year period. (Number, percent, optional)",
      "performancePercentage3year": "3-year total return as a percentage. (Number, percent, optional)",
      "performance5year": "Annualized return or performance over a 5-year period. (Number, percent, optional)",
      "performancePercentage5year": "5-year total return as a percentage. (Number, percent, optional)",
      "performanceSinceInception": "Total return since inception of a fund, security, or account. (Number, percent, optional)",
      "performanceSinceInceptionPercentage": "The percentage performance of a portfolio or fund since its inception. Example: 120.4. (Number, Percentage)",
      "performanceRelativeToSP500Percentage": "Return relative to the S&P 500 index over a custom or specified period. (Number, percent, optional)",
      "performance1yearRelativeToSP500Percentage": "1-year return relative to the S&P 500 index, measuring outperformance or underperformance against the benchmark. (Number, percent, optional)",
      "performance3yearRelativeToSP500Percentage": "3-year annualized return relative to the S&P 500. (Number, percent, optional)",
      "performance5yearRelativeToSP500Percentage": "5-year annualized return relative to the S&P 500. (Number, percent, optional)",
      "performanceSinceInceptionRelativeToSP500Percentage": "Total return since inception relative to S&P 500. (Number, percent, optional)"
    }
  },
  {
    "name": "Holders Industry Breakdown API",
    "description": "Holders Industry Breakdown API shows how a specific institutional investor allocates capital across industries. Provide `cik`, `year`, `quarter`; receive industry weights, changes, and performance deltas—critical for sector rotation analysis and mandate-drift monitoring.",
    "category": "ownership_analytics",
    "use_cases": [
      "detect stealthy style drift",
      "assess sector tilts vs benchmark",
      "feed heat-maps of industry exposure",
      "identify concentrated sector bets",
      "explain fund performance attribution"
    ],
    "parameters": {
      "required": {
        "cik": "The nine-digit Central Index Key assigned by the SEC, used to filter or look up specific filers. Example: \"0000320193\" for Apple Inc. (String, optional)",
        "year": "A four-digit calendar year or fiscal year number to filter period-based endpoints. Example: 2024 to retrieve data for the 2024 fiscal or calendar year. (Number or String, optional)",
        "quarter": "A fiscal quarter identifier, typically \"Q1\", \"Q2\", \"Q3\", or \"Q4\". Example: \"Q3\" to filter data to the third quarter of the specified year. (String, optional)"
      },
      "optional": {}
    },
    "response_example": {
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "cik": "The Central Index Key, a unique nine-digit identifier assigned by the SEC to entities. Example: \"0001454889\". (String)",
      "investorName": "The name of an investor or institutional holder. Example: \"Vanguard Group, Inc.\". (String)",
      "industryTitle": "The textual title or name of the industry in which the company operates. Example: \"Technology Hardware, Storage & Peripherals\". (String)",
      "weight": "The weight of an asset or security within a portfolio, expressed as a decimal or percentage. Example: \"0.05\" or 5%. (Number or String)",
      "lastWeight": "Portfolio weight of a security or asset as of the most recent reporting period. (Number, percent, optional)",
      "changeInWeight": "Change in the portfolio weighting or allocation of a particular asset or holding. (Percent)",
      "changeInWeightPercentage": "The percentage change in portfolio weight for a specific asset or holding. Example: 1.2. (Number, Percentage)",
      "performance": "Performance of an asset, portfolio, or security over a defined period, usually expressed as a return percentage. (Number, percent, optional)",
      "performancePercentage": "The percentage performance of a portfolio or security over a specified period. Example: 15.8. (Number, Percentage)",
      "lastPerformance": "Most recent performance value for an asset, security, or fund, such as monthly or quarterly return. (Number, percent, optional)",
      "changeInPerformance": "Change in performance metrics such as return or growth rate, usually period-over-period."
    }
  },
  {
    "name": "Holders Industry Breakdown API",
    "description": "Unpack an investor’s book by industry. Punch in `cik`, `year`, `quarter`; get real-time percentages and QoQ shifts, enabling forensic sector dive-ins and peer comparisons.",
    "category": "ownership_analytics",
    "use_cases": [
      "surface outsized energy bets",
      "quantify tech overweight vs peers",
      "track ESG-sensitive sectors exposure",
      "integrate into allocation dashboards",
      "train risk models on industry drift"
    ],
    "parameters": {
      "required": {
        "cik": "The nine-digit Central Index Key assigned by the SEC, used to filter or look up specific filers. Example: \"0000320193\" for Apple Inc. (String, optional)",
        "year": "A four-digit calendar year or fiscal year number to filter period-based endpoints. Example: 2024 to retrieve data for the 2024 fiscal or calendar year. (Number or String, optional)",
        "quarter": "A fiscal quarter identifier, typically \"Q1\", \"Q2\", \"Q3\", or \"Q4\". Example: \"Q3\" to filter data to the third quarter of the specified year. (String, optional)"
      },
      "optional": {}
    },
    "response_example": {
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "cik": "The Central Index Key, a unique nine-digit identifier assigned by the SEC to entities. Example: \"0001454889\". (String)",
      "investorName": "The name of an investor or institutional holder. Example: \"Vanguard Group, Inc.\". (String)",
      "industryTitle": "The textual title or name of the industry in which the company operates. Example: \"Technology Hardware, Storage & Peripherals\". (String)",
      "weight": "The weight of an asset or security within a portfolio, expressed as a decimal or percentage. Example: \"0.05\" or 5%. (Number or String)",
      "lastWeight": "Portfolio weight of a security or asset as of the most recent reporting period. (Number, percent, optional)",
      "changeInWeight": "Change in the portfolio weighting or allocation of a particular asset or holding. (Percent)",
      "changeInWeightPercentage": "The percentage change in portfolio weight for a specific asset or holding. Example: 1.2. (Number, Percentage)",
      "performance": "Performance of an asset, portfolio, or security over a defined period, usually expressed as a return percentage. (Number, percent, optional)",
      "performancePercentage": "The percentage performance of a portfolio or security over a specified period. Example: 15.8. (Number, Percentage)",
      "lastPerformance": "Most recent performance value for an asset, security, or fund, such as monthly or quarterly return. (Number, percent, optional)",
      "changeInPerformance": "Change in performance metrics such as return or growth rate, usually period-over-period."
    }
  },
  {
    "name": "Positions Summary API",
    "description": "Positions Summary API delivers a stock-centric snapshot: investor count, total 13F shares, invested dollars, new/increased/closed positions, options activity, and put-call ratio. Required `symbol`, `year`, `quarter`. Perfect for sentiment pulse, ownership-concentration monitoring, and option-skew intelligence.",
    "category": "ownership_analytics",
    "use_cases": [
      "measure hedge-fund crowding risk",
      "track ownership churn post-earnings",
      "monitor put-call ratio trends",
      "compare investor breadth across tickers",
      "inform liquidity stress tests"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)",
        "year": "A four-digit calendar year or fiscal year number to filter period-based endpoints. Example: 2024 to retrieve data for the 2024 fiscal or calendar year. (Number or String, optional)",
        "quarter": "A fiscal quarter identifier, typically \"Q1\", \"Q2\", \"Q3\", or \"Q4\". Example: \"Q3\" to filter data to the third quarter of the specified year. (String, optional)"
      },
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "cik": "The Central Index Key, a unique nine-digit identifier assigned by the SEC to entities. Example: \"0001454889\". (String)",
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "investorsHolding": "The number of investors or institutions currently holding a particular security. Example: 2500. (Number)",
      "lastInvestorsHolding": "Number or percentage of investors holding a security at the last reporting date. (Number, optional)",
      "investorsHoldingChange": "Change in the number or proportion of investors holding a particular security compared to the previous period. (Number, optional)",
      "numberOf13Fshares": "The number of shares reported in a Form 13F filing by institutional investors. Example: 1500000. (Number)",
      "lastNumberOf13Fshares": "Number of shares reported on the last SEC Form 13F filing, which discloses institutional holdings. (Number, optional)",
      "numberOf13FsharesChange": "Change in the number of shares reported on SEC Form 13F filings by institutional investors. (Number, optional)",
      "totalInvested": "Total amount of capital invested in a fund, security, or strategy. Example: 10,000,000,000 deployed in a private equity fund. (Number, capital at work)",
      "lastTotalInvested": "Total value invested in an asset, security, or portfolio as of the last reporting date. (Number, optional)",
      "totalInvestedChange": "Change in total invested capital over time. Example: -2,000,000 for reduced investments. (Number, delta in capital deployment)",
      "ownershipPercent": "The percentage of outstanding shares owned by a specific investor or group. Example: 5.25. (Number, Percentage)",
      "lastOwnershipPercent": "Ownership percentage as of the most recent report. (Number, percent, optional)",
      "ownershipPercentChange": "Change in percentage ownership compared to a previous period. (Number, percent, optional)",
      "newPositions": "Number of new positions initiated in a portfolio during the reporting period. (Number, optional)",
      "lastNewPositions": "Number of new positions initiated in the last reporting period. (Number, optional)",
      "newPositionsChange": "Change in new positions compared to a previous period. (Number, optional)",
      "increasedPositions": "Number or value of positions in a portfolio or fund that have increased since the last reporting period. (Number, optional)",
      "lastIncreasedPositions": "Number of positions increased in the last reporting period. (Number, optional)",
      "increasedPositionsChange": "Change in increased positions, showing the difference compared to a previous period. (Number, optional)",
      "closedPositions": "Number or list of positions in a portfolio that have been closed during the reporting period.",
      "lastClosedPositions": "Number of positions that were closed (sold/liquidated) in the most recent reporting period. (Number, optional)",
      "closedPositionsChange": "Change in the number of closed positions compared to a prior period.",
      "reducedPositions": "Number of portfolio positions reduced in the reporting period. (Number, optional)",
      "lastReducedPositions": "Number of portfolio positions reduced (trimmed) in the last reporting period. (Number, optional)",
      "reducedPositionsChange": "Change in the number of reduced positions compared to a previous period. (Number, optional)",
      "totalCalls": "Number of call option contracts outstanding for a security. Example: 12,000 call contracts on AAPL. (Number, options data)",
      "lastTotalCalls": "Total number of call option contracts at the last reporting date. (Number, optional)",
      "totalCallsChange": "Change in the number of call options versus prior period. Example: 800 means 800 more call options added. (Number, options activity tracker)",
      "totalPuts": "Number of put option contracts outstanding. Example: 8,000 put contracts on TSLA. (Number, options data)",
      "lastTotalPuts": "Total number of put option contracts at the last reporting date. (Number, optional)",
      "totalPutsChange": "Change in total put options versus the prior period. Example: -300 for 300 fewer puts. (Number, options activity delta)",
      "putCallRatio": "The put/call ratio measuring options market sentiment, calculated as put volume divided by call volume. Example: 0.85. (Number)",
      "lastPutCallRatio": "Put/Call ratio calculated at the last reporting date, used for market sentiment analysis. (Number, optional)",
      "putCallRatioChange": "Change in the put/call ratio between two periods, indicating shifts in market sentiment. (Number, optional)"
    }
  },
  {
    "name": "Positions Summary API",
    "description": "For any ticker, get the institutional-ownership pulse—headcount, share counts, dollar value, ownership %, new vs closed trades, and option stances. Pass `symbol`, `year`, `quarter` to fuel crowding dashboards and ownership change alerts.",
    "category": "ownership_analytics",
    "use_cases": [
      "flag spikes in investor exits",
      "monitor rising call activity for momentum plays",
      "feed factor screens with ownership % moves",
      "detect put-heavy sentiment shifts",
      "visualize shareholder base evolution"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)",
        "year": "A four-digit calendar year or fiscal year number to filter period-based endpoints. Example: 2024 to retrieve data for the 2024 fiscal or calendar year. (Number or String, optional)",
        "quarter": "A fiscal quarter identifier, typically \"Q1\", \"Q2\", \"Q3\", or \"Q4\". Example: \"Q3\" to filter data to the third quarter of the specified year. (String, optional)"
      },
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "cik": "The Central Index Key, a unique nine-digit identifier assigned by the SEC to entities. Example: \"0001454889\". (String)",
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "investorsHolding": "The number of investors or institutions currently holding a particular security. Example: 2500. (Number)",
      "lastInvestorsHolding": "Number or percentage of investors holding a security at the last reporting date. (Number, optional)",
      "investorsHoldingChange": "Change in the number or proportion of investors holding a particular security compared to the previous period. (Number, optional)",
      "numberOf13Fshares": "The number of shares reported in a Form 13F filing by institutional investors. Example: 1500000. (Number)",
      "lastNumberOf13Fshares": "Number of shares reported on the last SEC Form 13F filing, which discloses institutional holdings. (Number, optional)",
      "numberOf13FsharesChange": "Change in the number of shares reported on SEC Form 13F filings by institutional investors. (Number, optional)",
      "totalInvested": "Total amount of capital invested in a fund, security, or strategy. Example: 10,000,000,000 deployed in a private equity fund. (Number, capital at work)",
      "lastTotalInvested": "Total value invested in an asset, security, or portfolio as of the last reporting date. (Number, optional)",
      "totalInvestedChange": "Change in total invested capital over time. Example: -2,000,000 for reduced investments. (Number, delta in capital deployment)",
      "ownershipPercent": "The percentage of outstanding shares owned by a specific investor or group. Example: 5.25. (Number, Percentage)",
      "lastOwnershipPercent": "Ownership percentage as of the most recent report. (Number, percent, optional)",
      "ownershipPercentChange": "Change in percentage ownership compared to a previous period. (Number, percent, optional)",
      "newPositions": "Number of new positions initiated in a portfolio during the reporting period. (Number, optional)",
      "lastNewPositions": "Number of new positions initiated in the last reporting period. (Number, optional)",
      "newPositionsChange": "Change in new positions compared to a previous period. (Number, optional)",
      "increasedPositions": "Number or value of positions in a portfolio or fund that have increased since the last reporting period. (Number, optional)",
      "lastIncreasedPositions": "Number of positions increased in the last reporting period. (Number, optional)",
      "increasedPositionsChange": "Change in increased positions, showing the difference compared to a previous period. (Number, optional)",
      "closedPositions": "Number or list of positions in a portfolio that have been closed during the reporting period.",
      "lastClosedPositions": "Number of positions that were closed (sold/liquidated) in the most recent reporting period. (Number, optional)",
      "closedPositionsChange": "Change in the number of closed positions compared to a prior period.",
      "reducedPositions": "Number of portfolio positions reduced in the reporting period. (Number, optional)",
      "lastReducedPositions": "Number of portfolio positions reduced (trimmed) in the last reporting period. (Number, optional)",
      "reducedPositionsChange": "Change in the number of reduced positions compared to a previous period. (Number, optional)",
      "totalCalls": "Number of call option contracts outstanding for a security. Example: 12,000 call contracts on AAPL. (Number, options data)",
      "lastTotalCalls": "Total number of call option contracts at the last reporting date. (Number, optional)",
      "totalCallsChange": "Change in the number of call options versus prior period. Example: 800 means 800 more call options added. (Number, options activity tracker)",
      "totalPuts": "Number of put option contracts outstanding. Example: 8,000 put contracts on TSLA. (Number, options data)",
      "lastTotalPuts": "Total number of put option contracts at the last reporting date. (Number, optional)",
      "totalPutsChange": "Change in total put options versus the prior period. Example: -300 for 300 fewer puts. (Number, options activity delta)",
      "putCallRatio": "The put/call ratio measuring options market sentiment, calculated as put volume divided by call volume. Example: 0.85. (Number)",
      "lastPutCallRatio": "Put/Call ratio calculated at the last reporting date, used for market sentiment analysis. (Number, optional)",
      "putCallRatioChange": "Change in the put/call ratio between two periods, indicating shifts in market sentiment. (Number, optional)"
    }
  },
  {
    "name": "Industry Performance Summary API",
    "description": "Industry Performance Summary API aggregates total 13F market value by industry for a given quarter. Input `year`, `quarter`; output `industryTitle` and `industryValue`—perfect for macro rotation studies, sector flow analysis, and thematic research pieces.",
    "category": "ownership_analytics",
    "use_cases": [
      "identify industries attracting fresh capital",
      "compare quarterly flows across sectors",
      "back-test industry momentum strategies",
      "generate top-down allocation heat-maps",
      "feed LLMs for sector trend commentary"
    ],
    "parameters": {
      "required": {
        "year": "A four-digit calendar year or fiscal year number to filter period-based endpoints. Example: 2024 to retrieve data for the 2024 fiscal or calendar year. (Number or String, optional)",
        "quarter": "A fiscal quarter identifier, typically \"Q1\", \"Q2\", \"Q3\", or \"Q4\". Example: \"Q3\" to filter data to the third quarter of the specified year. (String, optional)"
      },
      "optional": {}
    },
    "response_example": {
      "industryTitle": "The textual title or name of the industry in which the company operates. Example: \"Technology Hardware, Storage & Peripherals\". (String)",
      "industryValue": "A quantitative metric representing industry performance or market share. Example: 230. (Number)",
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)"
    }
  },
  {
    "name": "Industry Performance Summary API",
    "description": "Use this endpoint to see where institutional dollars are flowing. Provide `year` and `quarter`; receive each industry’s aggregate 13F value so you can benchmark sector popularity, detect rotations, and power allocation models.",
    "category": "ownership_analytics",
    "use_cases": [
      "rank industries by capital inflow",
      "overlay industry flows with price returns",
      "inform sector ETF creation",
      "track de-risking outflows before downturns",
      "support macro commentary in research notes"
    ],
    "parameters": {
      "required": {
        "year": "A four-digit calendar year or fiscal year number to filter period-based endpoints. Example: 2024 to retrieve data for the 2024 fiscal or calendar year. (Number or String, optional)",
        "quarter": "A fiscal quarter identifier, typically \"Q1\", \"Q2\", \"Q3\", or \"Q4\". Example: \"Q3\" to filter data to the third quarter of the specified year. (String, optional)"
      },
      "optional": {}
    },
    "response_example": {
      "industryTitle": "The textual title or name of the industry in which the company operates. Example: \"Technology Hardware, Storage & Peripherals\". (String)",
      "industryValue": "A quantitative metric representing industry performance or market share. Example: 230. (Number)",
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)"
    }
  },
  {
    "name": "Stock Market Indexes List API",
    "description": "Stock Market Indexes List API delivers the master file of global benchmark identifiers—symbol, name, exchange, and trading currency. Point your discovery layer here to seed index pick-lists, validate upstream quotes, or light up coverage maps. Zero inputs required; one call, complete catalog.",
    "category": "indexes",
    "use_cases": [
      "populate dropdown selectors for index analytics",
      "bulk-validate user-supplied index symbols",
      "scan exchanges for newly launched benchmarks",
      "ETL seed for market-data master tables",
      "drive autocomplete in portfolio apps"
    ],
    "parameters": {
      "required": {},
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "name": "The full legal or common name of the company. Example: \"Apple Inc.\" (String)",
      "exchange": "The abbreviated code or name of the exchange where the security is traded. Example: \"NASDAQ\". (String)",
      "currency": "The ISO 4217 three-letter currency code representing the trading currency of the security. Example: \"USD\" for US Dollars. (String)"
    }
  },
  {
    "name": "Stock Market Indexes List API",
    "description": "Need a definitive symbol roster? This endpoint spits out every live index across major and regional exchanges—no query params, no fuss. Perfect for compliance checks, cross-vendor mapping, and ensuring your coverage matrix is bulletproof.",
    "category": "indexes",
    "use_cases": [
      "compare vendor symbol maps",
      "kick-start index-universe back-testing",
      "feed BI dashboards with coverage stats",
      "scrape for new thematic index launches",
      "support LLM queries on available benchmarks"
    ],
    "parameters": {
      "required": {},
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "name": "The full legal or common name of the company. Example: \"Apple Inc.\" (String)",
      "exchange": "The abbreviated code or name of the exchange where the security is traded. Example: \"NASDAQ\". (String)",
      "currency": "The ISO 4217 three-letter currency code representing the trading currency of the security. Example: \"USD\" for US Dollars. (String)"
    }
  },
  {
    "name": "Index Quote API",
    "description": "Index Quote API streams real-time benchmark pricing—open, high, low, last, change %, and rolling averages. Supply `symbol` (e.g., ^GSPC) to arm trading blotters, risk engines, or real-time market dashboards with instant pulse on the index level.",
    "category": "indexes",
    "use_cases": [
      "drive live heat maps for macro desks",
      "update PnL models with intraday moves",
      "fire risk-off/on signals in algo strategies",
      "feed ticker tapes in mobile apps",
      "benchmark basket performance vs index"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "name": "The full legal or common name of the company. Example: \"Apple Inc.\" (String)",
      "price": "The last traded price or intrinsic value of the security or asset. Example: 130.75. (Number)",
      "changePercentage": "The percentage change in price or value compared to the previous close. Example: \"+0.97%\". (Number, Percentage)",
      "change": "The absolute change in price or value compared to the previous close. Example: \"+1.25\". (String)",
      "volume": "The total number of shares or contracts traded during a given period (typically daily). Example: 105000000. (Number)",
      "dayLow": "The lowest price recorded for the security during that trading day. Example: 129.50. (Number)",
      "dayHigh": "The highest price recorded for the security during that trading day. Example: 131.00. (Number)",
      "yearHigh": "The highest price recorded for the security over the trailing 52-week period. Example: 150.25. (Number)",
      "yearLow": "The lowest price recorded for the security over the trailing 52-week period. Example: 110.25. (Number)",
      "marketCap": "The market capitalization of the company, calculated as share price multiplied by total shares outstanding. Example: \"None\" or 1500000000000 (1.5 trillion). (Number or String)",
      "priceAvg50": "The 50-day moving average price of the security. Example: 127.50. (Number)",
      "priceAvg200": "The 200-day moving average price of the security. Example: 125.75. (Number)",
      "exchange": "The abbreviated code or name of the exchange where the security is traded. Example: \"NASDAQ\". (String)",
      "open": "The opening price of the security at the start of the trading session. Example: 130.00. (Number)",
      "previousClose": "The closing price of the security from the prior trading session. Example: 129.50. (Number)",
      "timestamp": "The exact timestamp of the data point, typically in Unix epoch time. Example: 1629475200. (Number)"
    }
  },
  {
    "name": "Index Quote API",
    "description": "Pipe a single benchmark’s full quote stack into your workflow—day range, 52-week stats, turnover, and timestamp. One mandatory arg `symbol`; the payload is latency-optimized for sub-second dashboards and alerting layers.",
    "category": "indexes",
    "use_cases": [
      "latency-sensitive market monitors",
      "generate push notifications on index spikes",
      "validate exchange closed vs open detection",
      "chart VWAP convergence throughout the day",
      "power voice assistants for market briefs"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "name": "The full legal or common name of the company. Example: \"Apple Inc.\" (String)",
      "price": "The last traded price or intrinsic value of the security or asset. Example: 130.75. (Number)",
      "changePercentage": "The percentage change in price or value compared to the previous close. Example: \"+0.97%\". (Number, Percentage)",
      "change": "The absolute change in price or value compared to the previous close. Example: \"+1.25\". (String)",
      "volume": "The total number of shares or contracts traded during a given period (typically daily). Example: 105000000. (Number)",
      "dayLow": "The lowest price recorded for the security during that trading day. Example: 129.50. (Number)",
      "dayHigh": "The highest price recorded for the security during that trading day. Example: 131.00. (Number)",
      "yearHigh": "The highest price recorded for the security over the trailing 52-week period. Example: 150.25. (Number)",
      "yearLow": "The lowest price recorded for the security over the trailing 52-week period. Example: 110.25. (Number)",
      "marketCap": "The market capitalization of the company, calculated as share price multiplied by total shares outstanding. Example: \"None\" or 1500000000000 (1.5 trillion). (Number or String)",
      "priceAvg50": "The 50-day moving average price of the security. Example: 127.50. (Number)",
      "priceAvg200": "The 200-day moving average price of the security. Example: 125.75. (Number)",
      "exchange": "The abbreviated code or name of the exchange where the security is traded. Example: \"NASDAQ\". (String)",
      "open": "The opening price of the security at the start of the trading session. Example: 130.00. (Number)",
      "previousClose": "The closing price of the security from the prior trading session. Example: 129.50. (Number)",
      "timestamp": "The exact timestamp of the data point, typically in Unix epoch time. Example: 1629475200. (Number)"
    }
  },
  {
    "name": "Index Short Quote API",
    "description": "Index Short Quote API is the lean, low-payload cousin—price, absolute change, and volume only. Same `symbol` input, 80 % lighter response for bandwidth-sensitive feeds, IoT tickers, or edge devices.",
    "category": "indexes",
    "use_cases": [
      "low-bandwidth ticker widgets",
      "IoT display boards in trading floors",
      "SMS alerts with minimal data cost",
      "sparkline visualizations",
      "scaling high-frequency polling without bloat"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "price": "The last traded price or intrinsic value of the security or asset. Example: 130.75. (Number)",
      "change": "The absolute change in price or value compared to the previous close. Example: \"+1.25\". (String)",
      "volume": "The total number of shares or contracts traded during a given period (typically daily). Example: 105000000. (Number)"
    }
  },
  {
    "name": "Index Short Quote API",
    "description": "When you just need the headline numbers—price, delta, prints—this endpoint trims the fat. Feed `symbol`; get instantaneous micro-payloads ideal for serverless functions and ultra-fast dashboards.",
    "category": "indexes",
    "use_cases": [
      "power smartwatch market complications",
      "rapid-fire CLI market checks",
      "cache-friendly web tickers",
      "drive LED ticker walls",
      "cut cloud egress costs on quote polling"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "price": "The last traded price or intrinsic value of the security or asset. Example: 130.75. (Number)",
      "change": "The absolute change in price or value compared to the previous close. Example: \"+1.25\". (String)",
      "volume": "The total number of shares or contracts traded during a given period (typically daily). Example: 105000000. (Number)"
    }
  },
  {
    "name": "All Index Quotes API",
    "description": "All Index Quotes API batch-delivers live prices for the entire benchmark universe in one shot. Toggle `short=true` for condensed payloads. Use it to populate macro dashboards or run cross-market correlation scans without N calls per symbol.",
    "category": "indexes",
    "use_cases": [
      "build global index heat maps",
      "run pairwise correlation matrices",
      "kick off market-breadth analytics",
      "snapshot all benchmarks pre-open",
      "feed data-warehouse intraday snapshots"
    ],
    "parameters": {
      "required": {
        "short": "A Boolean or flag string indicating whether to return a compact or abbreviated set of fields. Example: true to retrieve only key metrics (symbol, price). (Boolean or String, optional)"
      },
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "price": "The last traded price or intrinsic value of the security or asset. Example: 130.75. (Number)",
      "change": "The absolute change in price or value compared to the previous close. Example: \"+1.25\". (String)",
      "volume": "The total number of shares or contracts traded during a given period (typically daily). Example: 105000000. (Number)"
    }
  },
  {
    "name": "All Index Quotes API",
    "description": "One request, full global dashboard. Set `short=false` (default) for detailed fields or `short=true` for skinny mode. Eliminates N-by-1 quote calls, slashing latency and API overhead in broad-market monitors.",
    "category": "indexes",
    "use_cases": [
      "morning market-breadth snapshots",
      "populate global macro spreadsheets",
      "mass-update Redis cache for indices",
      "drive TV newsroom tickers",
      "feed anomaly detectors across benchmarks"
    ],
    "parameters": {
      "required": {
        "short": "A Boolean or flag string indicating whether to return a compact or abbreviated set of fields. Example: true to retrieve only key metrics (symbol, price). (Boolean or String, optional)"
      },
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "price": "The last traded price or intrinsic value of the security or asset. Example: 130.75. (Number)",
      "change": "The absolute change in price or value compared to the previous close. Example: \"+1.25\". (String)",
      "volume": "The total number of shares or contracts traded during a given period (typically daily). Example: 105000000. (Number)"
    }
  },
  {
    "name": "Historical Index Light Chart API",
    "description": "Historical Index Light Chart API returns end-of-day price and volume for quick back-tests or sparkline plots. Required `symbol`; optional `from`, `to` filters. Lean dataset keeps transfer bloat minimal while still powering trend analytics.",
    "category": "indexes_history",
    "use_cases": [
      "generate lightweight historical charts",
      "compute simple moving averages",
      "back-test breakout strategies",
      "export CSV for Google Sheets models",
      "cache daily closes for risk dashboards"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {
        "from": "The ISO 8601 date (YYYY-MM-DD) indicating the start of a time range filter. Example: \"2025-01-01\" to include only data from January 1, 2025 onward. Must be ≤ `to`. (String, Date, optional)",
        "to": "The ISO 8601 date (YYYY-MM-DD) indicating the end of a time range filter. Example: \"2025-12-31\" to include only data up to December 31, 2025. Must be ≥ `from`. (String, Date, optional)"
      }
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "price": "The last traded price or intrinsic value of the security or asset. Example: 130.75. (Number)",
      "volume": "The total number of shares or contracts traded during a given period (typically daily). Example: 105000000. (Number)"
    }
  },
  {
    "name": "Historical Index Light Chart API",
    "description": "Need fast EOD pulls without OHLC overhead? This endpoint serves date, close, volume—nothing more. Pass `symbol` plus optional date range to fuel lightweight mobile charts and quick momentum scans.",
    "category": "indexes_history",
    "use_cases": [
      "mobile-app sparkline rendering",
      "compute daily returns for factor tiles",
      "query volume spikes over custom windows",
      "drive Slack bots with day-level stats",
      "populate minimalistic price APIs"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {
        "from": "The ISO 8601 date (YYYY-MM-DD) indicating the start of a time range filter. Example: \"2025-01-01\" to include only data from January 1, 2025 onward. Must be ≤ `to`. (String, Date, optional)",
        "to": "The ISO 8601 date (YYYY-MM-DD) indicating the end of a time range filter. Example: \"2025-12-31\" to include only data up to December 31, 2025. Must be ≥ `from`. (String, Date, optional)"
      }
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "price": "The last traded price or intrinsic value of the security or asset. Example: 130.75. (Number)",
      "volume": "The total number of shares or contracts traded during a given period (typically daily). Example: 105000000. (Number)"
    }
  },
  {
    "name": "Historical Index Full Chart API",
    "description": "Historical Index Full Chart API ships full-fat OHLCV plus derived metrics (change %, VWAP). Perfect for deep quant work, pattern recognition, or candle-chart generation. Inputs: `symbol` and optional `from`, `to` boundaries.",
    "category": "indexes_history",
    "use_cases": [
      "candlestick charting libraries",
      "volatility and ATR calculations",
      "train ML models on OHLCV sequences",
      "build risk-model stress scenarios",
      "run event-study regressions"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {
        "from": "The ISO 8601 date (YYYY-MM-DD) indicating the start of a time range filter. Example: \"2025-01-01\" to include only data from January 1, 2025 onward. Must be ≤ `to`. (String, Date, optional)",
        "to": "The ISO 8601 date (YYYY-MM-DD) indicating the end of a time range filter. Example: \"2025-12-31\" to include only data up to December 31, 2025. Must be ≥ `from`. (String, Date, optional)"
      }
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "open": "The opening price of the security at the start of the trading session. Example: 130.00. (Number)",
      "high": "The highest intraday price recorded for the security. Example: 131.25. (Number)",
      "low": "The lowest intraday price recorded for the security. Example: 129.75. (Number)",
      "close": "The closing price of the security at the end of the trading session. Example: 130.75. (Number)",
      "volume": "The total number of shares or contracts traded during a given period (typically daily). Example: 105000000. (Number)",
      "change": "The absolute change in price or value compared to the previous close. Example: \"+1.25\". (String)",
      "changePercent": "The percentage change in value over a specified period, such as daily or yearly. Example: 2.5. (Number, Percentage)",
      "vwap": "The Volume-Weighted Average Price, representing the average price at which the security traded weighted by volume. Example: 130.82. (Number)"
    }
  },
  {
    "name": "Historical Index Full Chart API",
    "description": "For quants who refuse to cut corners, this endpoint dumps every EOD field—open through VWAP. Slice by `from`/`to` or pull the full archive. Optimized for back-testing engines and serious analytics.",
    "category": "indexes_history",
    "use_cases": [
      "recreate total-return series",
      "generate technical indicator libraries",
      "stress-test portfolios with historical shocks",
      "teach LLMs candle-pattern vocabulary",
      "feed python/pandas back-test notebooks"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {
        "from": "The ISO 8601 date (YYYY-MM-DD) indicating the start of a time range filter. Example: \"2025-01-01\" to include only data from January 1, 2025 onward. Must be ≤ `to`. (String, Date, optional)",
        "to": "The ISO 8601 date (YYYY-MM-DD) indicating the end of a time range filter. Example: \"2025-12-31\" to include only data up to December 31, 2025. Must be ≥ `from`. (String, Date, optional)"
      }
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "open": "The opening price of the security at the start of the trading session. Example: 130.00. (Number)",
      "high": "The highest intraday price recorded for the security. Example: 131.25. (Number)",
      "low": "The lowest intraday price recorded for the security. Example: 129.75. (Number)",
      "close": "The closing price of the security at the end of the trading session. Example: 130.75. (Number)",
      "volume": "The total number of shares or contracts traded during a given period (typically daily). Example: 105000000. (Number)",
      "change": "The absolute change in price or value compared to the previous close. Example: \"+1.25\". (String)",
      "changePercent": "The percentage change in value over a specified period, such as daily or yearly. Example: 2.5. (Number, Percentage)",
      "vwap": "The Volume-Weighted Average Price, representing the average price at which the security traded weighted by volume. Example: 130.82. (Number)"
    }
  },
  {
    "name": "1-Minute Interval Index Price API",
    "description": "1-Minute Interval Index Price API throws off granular intraday bars for high-frequency analysis—open, high, low, close, volume every 60 seconds. Send `symbol`; optionally bracket with `from`/`to`. A must-have for microstructure and scalping algorithms.",
    "category": "indexes_intraday",
    "use_cases": [
      "time-and-sales reconciliation",
      "construct minute-level VWAP curves",
      "feed real-time algo strategies",
      "back-test breakout triggers",
      "latency benchmarking across feeds"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {
        "from": "The ISO 8601 date (YYYY-MM-DD) indicating the start of a time range filter. Example: \"2025-01-01\" to include only data from January 1, 2025 onward. Must be ≤ `to`. (String, Date, optional)",
        "to": "The ISO 8601 date (YYYY-MM-DD) indicating the end of a time range filter. Example: \"2025-12-31\" to include only data up to December 31, 2025. Must be ≥ `from`. (String, Date, optional)"
      }
    },
    "response_example": {
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "open": "The opening price of the security at the start of the trading session. Example: 130.00. (Number)",
      "high": "The highest intraday price recorded for the security. Example: 131.25. (Number)",
      "low": "The lowest intraday price recorded for the security. Example: 129.75. (Number)",
      "close": "The closing price of the security at the end of the trading session. Example: 130.75. (Number)",
      "volume": "The total number of shares or contracts traded during a given period (typically daily). Example: 105000000. (Number)"
    }
  },
  {
    "name": "1-Minute Interval Index Price API",
    "description": "When tick data is overkill but EOD is useless, grab these one-minute bars. Plug into intraday quant models, liquidity heat maps, or broker TCA without drowning in full-tick firehoses.",
    "category": "indexes_intraday",
    "use_cases": [
      "fine-tune execution algos",
      "chart intraday momentum shifts",
      "compute micro alpha signals",
      "overlay order-book stats",
      "detect opening/closing auction effects"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {
        "from": "The ISO 8601 date (YYYY-MM-DD) indicating the start of a time range filter. Example: \"2025-01-01\" to include only data from January 1, 2025 onward. Must be ≤ `to`. (String, Date, optional)",
        "to": "The ISO 8601 date (YYYY-MM-DD) indicating the end of a time range filter. Example: \"2025-12-31\" to include only data up to December 31, 2025. Must be ≥ `from`. (String, Date, optional)"
      }
    },
    "response_example": {
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "open": "The opening price of the security at the start of the trading session. Example: 130.00. (Number)",
      "high": "The highest intraday price recorded for the security. Example: 131.25. (Number)",
      "low": "The lowest intraday price recorded for the security. Example: 129.75. (Number)",
      "close": "The closing price of the security at the end of the trading session. Example: 130.75. (Number)",
      "volume": "The total number of shares or contracts traded during a given period (typically daily). Example: 105000000. (Number)"
    }
  },
  {
    "name": "5-Minute Interval Index Price API",
    "description": "5-Minute Interval Index Price API aggregates price action into five-minute chunks—ideal granularity for day-traders, volatility scalers, and intraday back-tests. Inputs mirror other intraday endpoints (`symbol`, optional dates).",
    "category": "indexes_intraday",
    "use_cases": [
      "generate Renko/Kagi charts with smoother data",
      "monitor mid-session drift",
      "feed ML models predicting next bar returns",
      "align with options data that prints every 5m",
      "calculate rolling real-time beta"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {
        "from": "The ISO 8601 date (YYYY-MM-DD) indicating the start of a time range filter. Example: \"2025-01-01\" to include only data from January 1, 2025 onward. Must be ≤ `to`. (String, Date, optional)",
        "to": "The ISO 8601 date (YYYY-MM-DD) indicating the end of a time range filter. Example: \"2025-12-31\" to include only data up to December 31, 2025. Must be ≥ `from`. (String, Date, optional)"
      }
    },
    "response_example": {
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "open": "The opening price of the security at the start of the trading session. Example: 130.00. (Number)",
      "high": "The highest intraday price recorded for the security. Example: 131.25. (Number)",
      "low": "The lowest intraday price recorded for the security. Example: 129.75. (Number)",
      "close": "The closing price of the security at the end of the trading session. Example: 130.75. (Number)",
      "volume": "The total number of shares or contracts traded during a given period (typically daily). Example: 105000000. (Number)"
    }
  },
  {
    "name": "5-Minute Interval Index Price API",
    "description": "Five-minute bars hit the sweet spot between noise and signal. Pull this feed to power tactical dashboards, intraday Bollinger bands, and short-term swing models without the bloat of one-minute ticks.",
    "category": "indexes_intraday",
    "use_cases": [
      "drive trading-floor wallboards",
      "compute short-term ATR indicators",
      "back-test lunchtime fade strategies",
      "populate Excel models with RTD links",
      "overlay futures vs cash index"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {
        "from": "The ISO 8601 date (YYYY-MM-DD) indicating the start of a time range filter. Example: \"2025-01-01\" to include only data from January 1, 2025 onward. Must be ≤ `to`. (String, Date, optional)",
        "to": "The ISO 8601 date (YYYY-MM-DD) indicating the end of a time range filter. Example: \"2025-12-31\" to include only data up to December 31, 2025. Must be ≥ `from`. (String, Date, optional)"
      }
    },
    "response_example": {
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "open": "The opening price of the security at the start of the trading session. Example: 130.00. (Number)",
      "high": "The highest intraday price recorded for the security. Example: 131.25. (Number)",
      "low": "The lowest intraday price recorded for the security. Example: 129.75. (Number)",
      "close": "The closing price of the security at the end of the trading session. Example: 130.75. (Number)",
      "volume": "The total number of shares or contracts traded during a given period (typically daily). Example: 105000000. (Number)"
    }
  },
  {
    "name": "1-Hour Interval Index Price API",
    "description": "1-Hour Interval Index Price API compiles intraday candles at the top of every hour. Perfect for swing-trading back-tests, medium-frequency strategies, or overlaying macro news events against price moves. Same param trio: `symbol`, `from`, `to`.",
    "category": "indexes_intraday",
    "use_cases": [
      "align price with economic releases",
      "compute hourly RSI and MACD",
      "generate mid-term VWAP reversion models",
      "visualize session phases (Asia/Europe/US)",
      "feed chatbots hourly market summaries"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {
        "from": "The ISO 8601 date (YYYY-MM-DD) indicating the start of a time range filter. Example: \"2025-01-01\" to include only data from January 1, 2025 onward. Must be ≤ `to`. (String, Date, optional)",
        "to": "The ISO 8601 date (YYYY-MM-DD) indicating the end of a time range filter. Example: \"2025-12-31\" to include only data up to December 31, 2025. Must be ≥ `from`. (String, Date, optional)"
      }
    },
    "response_example": {
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "open": "The opening price of the security at the start of the trading session. Example: 130.00. (Number)",
      "high": "The highest intraday price recorded for the security. Example: 131.25. (Number)",
      "low": "The lowest intraday price recorded for the security. Example: 129.75. (Number)",
      "close": "The closing price of the security at the end of the trading session. Example: 130.75. (Number)",
      "volume": "The total number of shares or contracts traded during a given period (typically daily). Example: 105000000. (Number)"
    }
  },
  {
    "name": "1-Hour Interval Index Price API",
    "description": "Need a cleaner view of intraday trends? Hourly bars strip out minute-level noise while preserving actionable swings. Pass `symbol` and optional date filters—great for macro dashboards, swing setups, and overnight-carry analysis.",
    "category": "indexes_intraday",
    "use_cases": [
      "track session-to-session momentum",
      "calculate rolling hourly volatility",
      "overlay FX moves with equity index",
      "perform gap-fill studies post open",
      "summarize market moves for exec briefings"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {
        "from": "The ISO 8601 date (YYYY-MM-DD) indicating the start of a time range filter. Example: \"2025-01-01\" to include only data from January 1, 2025 onward. Must be ≤ `to`. (String, Date, optional)",
        "to": "The ISO 8601 date (YYYY-MM-DD) indicating the end of a time range filter. Example: \"2025-12-31\" to include only data up to December 31, 2025. Must be ≥ `from`. (String, Date, optional)"
      }
    },
    "response_example": {
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "open": "The opening price of the security at the start of the trading session. Example: 130.00. (Number)",
      "high": "The highest intraday price recorded for the security. Example: 131.25. (Number)",
      "low": "The lowest intraday price recorded for the security. Example: 129.75. (Number)",
      "close": "The closing price of the security at the end of the trading session. Example: 130.75. (Number)",
      "volume": "The total number of shares or contracts traded during a given period (typically daily). Example: 105000000. (Number)"
    }
  },
  {
    "name": "S&P 500 Index API",
    "description": "S&P 500 Index API returns the live roster of S&P 500 constituents—symbol, company name, sector, subsector, headquarters, first-added date, CIK, and founding year. No parameters: one request loads the full benchmark makeup, powering index trackers, thematic screeners, and instant ESG universe pulls.",
    "category": "index_constituents",
    "use_cases": [
      "seed equity-universe tables for S&P 500 ETFs",
      "back-test factor models on today’s basket",
      "detect sector drift inside the benchmark",
      "feed LLMs for index-member Q&A",
      "validate portfolio compliance with mandate"
    ],
    "parameters": {
      "required": {},
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "name": "The full legal or common name of the company. Example: \"Apple Inc.\" (String)",
      "sector": "The broad sector classification for the company, often aligned with GICS sectors. Example: \"Information Technology\". (String)",
      "subSector": "A more granular industry classification under the main sector. Example: 'Consumer Electronics' under 'Technology'. (String, industry taxonomy)",
      "headQuarter": "The city and country where a company’s corporate headquarters is located. Example: \"Cupertino, CA\". (String)",
      "dateFirstAdded": "The date on which a security was first added to a given index or dataset. Example: \"2023-04-15\". (String, Date)",
      "cik": "The Central Index Key, a unique nine-digit identifier assigned by the SEC to entities. Example: \"0001454889\". (String)",
      "founded": "The date on which the company was founded, typically in ISO 8601 format. Example: \"1976-04-01\". (String, Date)"
    }
  },
  {
    "name": "S&P 500 Index API",
    "description": "Need a canonical S&P 500 member list for risk models or compliance checks? Fire this zero-parameter endpoint to download a clean JSON of every constituent—complete with CIKs and add-dates—for instant ingestion into data lakes or BI dashboards.",
    "category": "index_constituents",
    "use_cases": [
      "reconcile vendor symbol universes",
      "drive weighting engines for equal-weight products",
      "track new-entrant corporate actions",
      "feed change-detection alerts to Slack",
      "build drill-down widgets in research portals"
    ],
    "parameters": {
      "required": {},
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "name": "The full legal or common name of the company. Example: \"Apple Inc.\" (String)",
      "sector": "The broad sector classification for the company, often aligned with GICS sectors. Example: \"Information Technology\". (String)",
      "subSector": "A more granular industry classification under the main sector. Example: 'Consumer Electronics' under 'Technology'. (String, industry taxonomy)",
      "headQuarter": "The city and country where a company’s corporate headquarters is located. Example: \"Cupertino, CA\". (String)",
      "dateFirstAdded": "The date on which a security was first added to a given index or dataset. Example: \"2023-04-15\". (String, Date)",
      "cik": "The Central Index Key, a unique nine-digit identifier assigned by the SEC to entities. Example: \"0001454889\". (String)",
      "founded": "The date on which the company was founded, typically in ISO 8601 format. Example: \"1976-04-01\". (String, Date)"
    }
  },
  {
    "name": "Nasdaq Index API",
    "description": "Nasdaq Index API pushes the full Nasdaq-100 (and broader Nasdaq composite) company roster—symbol, name, sector taxonomy, HQ, CIK, inception date. No inputs required. Ideal for growth-tilt analytics, tech-heavy universe screens, and rapid-fire constituent validation.",
    "category": "index_constituents",
    "use_cases": [
      "build tech-beta portfolios",
      "compare Nasdaq vs S&P overlap",
      "drive sector weighting heat maps",
      "feed IPO research on fresh inclusions",
      "populate autocomplete in retail apps"
    ],
    "parameters": {
      "required": {},
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "name": "The full legal or common name of the company. Example: \"Apple Inc.\" (String)",
      "sector": "The broad sector classification for the company, often aligned with GICS sectors. Example: \"Information Technology\". (String)",
      "subSector": "A more granular industry classification under the main sector. Example: 'Consumer Electronics' under 'Technology'. (String, industry taxonomy)",
      "headQuarter": "The city and country where a company’s corporate headquarters is located. Example: \"Cupertino, CA\". (String)",
      "dateFirstAdded": "The date on which a security was first added to a given index or dataset. Example: \"2023-04-15\". (String, Date)",
      "cik": "The Central Index Key, a unique nine-digit identifier assigned by the SEC to entities. Example: \"0001454889\". (String)",
      "founded": "The date on which the company was founded, typically in ISO 8601 format. Example: \"1976-04-01\". (String, Date)"
    }
  },
  {
    "name": "Nasdaq Index API",
    "description": "Grab a turnkey JSON dump of every Nasdaq constituent—perfect for high-growth tech analytics, momentum screens, or benchmarking smart-beta strategies. No query params: just request and load.",
    "category": "index_constituents",
    "use_cases": [
      "risk-exposure calc for QQQ substitutes",
      "cross-list ADR filtering",
      "automate constituent drift alerts",
      "seed machine-learning stock pickers",
      "train language models on Nasdaq universe metadata"
    ],
    "parameters": {
      "required": {},
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "name": "The full legal or common name of the company. Example: \"Apple Inc.\" (String)",
      "sector": "The broad sector classification for the company, often aligned with GICS sectors. Example: \"Information Technology\". (String)",
      "subSector": "A more granular industry classification under the main sector. Example: 'Consumer Electronics' under 'Technology'. (String, industry taxonomy)",
      "headQuarter": "The city and country where a company’s corporate headquarters is located. Example: \"Cupertino, CA\". (String)",
      "dateFirstAdded": "The date on which a security was first added to a given index or dataset. Example: \"2023-04-15\". (String, Date)",
      "cik": "The Central Index Key, a unique nine-digit identifier assigned by the SEC to entities. Example: \"0001454889\". (String)",
      "founded": "The date on which the company was founded, typically in ISO 8601 format. Example: \"1976-04-01\". (String, Date)"
    }
  },
  {
    "name": "Dow Jones API",
    "description": "Dow Jones API surfaces the thirty blue-chip components of the DJIA—symbol, name, sector, subsector, headquarters, inclusion dates. Zero-parameter call delivers a slim JSON, enabling industrial-sector dashboards, dividend-income models, and legacy index exposure checks.",
    "category": "index_constituents",
    "use_cases": [
      "construct price-weighted replication baskets",
      "track component swaps for news flashes",
      "benchmark industrial vs tech leadership",
      "feed heritage-index widgets in terminals",
      "support curriculum materials on index theory"
    ],
    "parameters": {
      "required": {},
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "name": "The full legal or common name of the company. Example: \"Apple Inc.\" (String)",
      "sector": "The broad sector classification for the company, often aligned with GICS sectors. Example: \"Information Technology\". (String)",
      "subSector": "A more granular industry classification under the main sector. Example: 'Consumer Electronics' under 'Technology'. (String, industry taxonomy)",
      "headQuarter": "The city and country where a company’s corporate headquarters is located. Example: \"Cupertino, CA\". (String)",
      "dateFirstAdded": "The date on which a security was first added to a given index or dataset. Example: \"2023-04-15\". (String, Date)",
      "cik": "The Central Index Key, a unique nine-digit identifier assigned by the SEC to entities. Example: \"0001454889\". (String)",
      "founded": "The date on which the company was founded, typically in ISO 8601 format. Example: \"1976-04-01\". (String, Date)"
    }
  },
  {
    "name": "Dow Jones API",
    "description": "One hit to this endpoint returns the DJIA’s current thirty—essential for price-weighted calculators and classic market-barometer visualizations. No inputs needed; JSON is ready for immediate ETL.",
    "category": "index_constituents",
    "use_cases": [
      "maintain live Dow ticker crawls",
      "alert traders on component rebalances",
      "contrast Dow vs S&P hit rates post-earnings",
      "drive educational dashboards on legacy indices",
      "feed dividend-yield ranking tools"
    ],
    "parameters": {
      "required": {},
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "name": "The full legal or common name of the company. Example: \"Apple Inc.\" (String)",
      "sector": "The broad sector classification for the company, often aligned with GICS sectors. Example: \"Information Technology\". (String)",
      "subSector": "A more granular industry classification under the main sector. Example: 'Consumer Electronics' under 'Technology'. (String, industry taxonomy)",
      "headQuarter": "The city and country where a company’s corporate headquarters is located. Example: \"Cupertino, CA\". (String)",
      "dateFirstAdded": "The date on which a security was first added to a given index or dataset. Example: \"2023-04-15\". (String, Date)",
      "cik": "The Central Index Key, a unique nine-digit identifier assigned by the SEC to entities. Example: \"0001454889\". (String)",
      "founded": "The date on which the company was founded, typically in ISO 8601 format. Example: \"1976-04-01\". (String, Date)"
    }
  },
  {
    "name": "Historical S&P 500 API",
    "description": "Historical S&P 500 API chronicles every add/drop event in the index—date, added security, removed ticker, and stated reason. No parameters. Perfect for survivorship-bias-free back-tests, event studies, and portfolio-turnover attribution.",
    "category": "index_history",
    "use_cases": [
      "recreate true-to-history back-tests",
      "study market-cap rule impacts on inclusion",
      "generate data stories on index churn",
      "educate interns on survivorship bias",
      "trigger alerts on upcoming additions"
    ],
    "parameters": {
      "required": {},
      "optional": {}
    },
    "response_example": {
      "dateAdded": "The date on which the data record was added to the database, in ISO 8601 format. Example: \"2025-03-01\". (String, Date)",
      "addedSecurity": "The ticker symbol of a security that was added to an index or watchlist. Example: \"TSLA\". (String)",
      "removedTicker": "The ticker symbol of a security that was removed from an index or watchlist. Example: \"XOM\". (String)",
      "removedSecurity": "Identifier or name of a security removed from an index, portfolio, or list. Example: 'AAPL' if Apple is dropped from S&P 500. (String, portfolio rebalancing)",
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "reason": "The rationale or explanation for a corporate action or index change. Example: \"Market capitalization fell below threshold\". (String)"
    }
  },
  {
    "name": "Historical S&P 500 API",
    "description": "Unpack decades of S&P 500 composition changes in a single call. Output lists every inclusion/exclusion event—fueling research on post-addition alpha, turnover costs, and index methodology tweaks.",
    "category": "index_history",
    "use_cases": [
      "quantify post-inclusion performance drift",
      "model index turnover transaction costs",
      "track sector weight evolution over time",
      "feed LLM narratives on historic index shifts",
      "audit ETF replication errors"
    ],
    "parameters": {
      "required": {},
      "optional": {}
    },
    "response_example": {
      "dateAdded": "The date on which the data record was added to the database, in ISO 8601 format. Example: \"2025-03-01\". (String, Date)",
      "addedSecurity": "The ticker symbol of a security that was added to an index or watchlist. Example: \"TSLA\". (String)",
      "removedTicker": "The ticker symbol of a security that was removed from an index or watchlist. Example: \"XOM\". (String)",
      "removedSecurity": "Identifier or name of a security removed from an index, portfolio, or list. Example: 'AAPL' if Apple is dropped from S&P 500. (String, portfolio rebalancing)",
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "reason": "The rationale or explanation for a corporate action or index change. Example: \"Market capitalization fell below threshold\". (String)"
    }
  },
  {
    "name": "Historical Nasdaq API",
    "description": "Historical Nasdaq API logs every constituent shuffle for the Nasdaq index—dates, adds, drops, and motives. Immediate use for analyzing tech-heavy turnover rates, IPO pipeline impacts, and survivorship-clean factor studies.",
    "category": "index_history",
    "use_cases": [
      "simulate true-to-period Nasdaq returns",
      "examine IPO to index-inclusion lag",
      "feed newsroom graphics on re-rankings",
      "spot themes in removals (e.g., M&A)",
      "train ML classifiers on index-change alpha"
    ],
    "parameters": {
      "required": {},
      "optional": {}
    },
    "response_example": {
      "dateAdded": "The date on which the data record was added to the database, in ISO 8601 format. Example: \"2025-03-01\". (String, Date)",
      "addedSecurity": "The ticker symbol of a security that was added to an index or watchlist. Example: \"TSLA\". (String)",
      "removedTicker": "The ticker symbol of a security that was removed from an index or watchlist. Example: \"XOM\". (String)",
      "removedSecurity": "Identifier or name of a security removed from an index, portfolio, or list. Example: 'AAPL' if Apple is dropped from S&P 500. (String, portfolio rebalancing)",
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "reason": "The rationale or explanation for a corporate action or index change. Example: \"Market capitalization fell below threshold\". (String)"
    }
  },
  {
    "name": "Historical Nasdaq API",
    "description": "One endpoint, full Nasdaq-100 churn log. No inputs. Leverage for timing studies around inclusion, turnover cost modeling, or simply tracking who’s climbing into—or falling out of—the growth index.",
    "category": "index_history",
    "use_cases": [
      "test inclusion-pop jump hypotheses",
      "benchmark index turnover vs peers",
      "compile history for academic papers",
      "feed compliance on benchmark changes",
      "animate timeline charts in BI tools"
    ],
    "parameters": {
      "required": {},
      "optional": {}
    },
    "response_example": {
      "dateAdded": "The date on which the data record was added to the database, in ISO 8601 format. Example: \"2025-03-01\". (String, Date)",
      "addedSecurity": "The ticker symbol of a security that was added to an index or watchlist. Example: \"TSLA\". (String)",
      "removedTicker": "The ticker symbol of a security that was removed from an index or watchlist. Example: \"XOM\". (String)",
      "removedSecurity": "Identifier or name of a security removed from an index, portfolio, or list. Example: 'AAPL' if Apple is dropped from S&P 500. (String, portfolio rebalancing)",
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "reason": "The rationale or explanation for a corporate action or index change. Example: \"Market capitalization fell below threshold\". (String)"
    }
  },
  {
    "name": "Historical Dow Jones API",
    "description": "Historical Dow Jones API captures every DJIA component change since inception—add date, removed ticker, and rationale. Zero params. Crucial for studying price-weighted bias, turnover triggers, and blue-chip evolution.",
    "category": "index_history",
    "use_cases": [
      "back-test Dow-linked structured products",
      "analyze legacy vs new-economy rotations",
      "build PR narratives on Dow history",
      "calculate historical divisor adjustments",
      "explore post-removal share performance"
    ],
    "parameters": {
      "required": {},
      "optional": {}
    },
    "response_example": {
      "dateAdded": "The date on which the data record was added to the database, in ISO 8601 format. Example: \"2025-03-01\". (String, Date)",
      "addedSecurity": "The ticker symbol of a security that was added to an index or watchlist. Example: \"TSLA\". (String)",
      "removedTicker": "The ticker symbol of a security that was removed from an index or watchlist. Example: \"XOM\". (String)",
      "removedSecurity": "Identifier or name of a security removed from an index, portfolio, or list. Example: 'AAPL' if Apple is dropped from S&P 500. (String, portfolio rebalancing)",
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "reason": "The rationale or explanation for a corporate action or index change. Example: \"Market capitalization fell below threshold\". (String)"
    }
  },
  {
    "name": "Historical Dow Jones API",
    "description": "This endpoint lists every addition or removal in the Dow—great for historians, quants fighting survivorship bias, or media looking to contextualize today’s component swaps with a century of precedent.",
    "category": "index_history",
    "use_cases": [
      "study price-weighted vs cap-weighted churn effects",
      "explain Dow methodology shifts to clients",
      "model dividend yield evolution post swaps",
      "line up corporate events with Dow exits",
      "support university coursework on index construction"
    ],
    "parameters": {
      "required": {},
      "optional": {}
    },
    "response_example": {
      "dateAdded": "The date on which the data record was added to the database, in ISO 8601 format. Example: \"2025-03-01\". (String, Date)",
      "addedSecurity": "The ticker symbol of a security that was added to an index or watchlist. Example: \"TSLA\". (String)",
      "removedTicker": "The ticker symbol of a security that was removed from an index or watchlist. Example: \"XOM\". (String)",
      "removedSecurity": "Identifier or name of a security removed from an index, portfolio, or list. Example: 'AAPL' if Apple is dropped from S&P 500. (String, portfolio rebalancing)",
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "reason": "The rationale or explanation for a corporate action or index change. Example: \"Market capitalization fell below threshold\". (String)"
    }
  },
  {
    "name": "Latest Insider Trading API",
    "description": "Latest Insider Trading API streams the most recent Form 4 disclosures, delivering symbol, transaction metadata, share counts, prices, and SEC links in a single, paged call—fuel for real-time compliance dashboards, trade-surveillance engines, and sentiment scanners.",
    "category": "insider_trades",
    "use_cases": [
      "real-time push alerts on C-suite buys & sells",
      "quant models that factor insider momentum",
      "feed compliance monitoring back-ends",
      "LLM-powered deal-rumor validation",
      "dashboard widgets tracking officer activity"
    ],
    "parameters": {
      "required": {
        "page": "A zero-based integer page index for paginated endpoints. Example: 2 to return the third page of results, given the configured `limit`. (Integer, optional; defaults to 0)",
        "limit": "An integer cap on the number of results returned by the endpoint. Example: 50 to restrict output to the top 50 matches. Must be ≥1 and ≤1000. (Integer, optional; defaults to 100)"
      },
      "optional": {
        "date": "An ISO 8601 date (YYYY-MM-DD) used to filter or specify the reference date for historical or point-in-time data. Example: \"2025-06-01\". (String, Date, optional)"
      }
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "filingDate": "The date on which a regulatory filing was submitted (e.g., with the SEC), in ISO 8601 format. Example: \"2025-02-03\". (String, Date)",
      "transactionType": "The type of corporate or market transaction, such as \"Buy\", \"Sell\", \"Split\", or \"Dividend\". Example: \"Buy\". (String)",
      "securitiesOwned": "The total number of securities owned by an investor or fund. Example: 500000. (Number)",
      "reportingName": "The name of the person or entity filing a report or disclosure. Example: \"Jane Smith\". (String)",
      "formType": "The type or designation of a regulatory filing (e.g., \"10-K\", \"10-Q\"). Example: \"10-K\". (String)",
      "securitiesTransacted": "The number of securities involved in a specific transaction. Example: 10000. (Number)",
      "url": "The URL linking to the full document, filing, or resource, often on a regulatory or official site. Example: \"https://www.sec.gov/Archives/edgar/data/1454889/000114336225000044/SCCR020325.pdf\". (String, URL)"
    }
  },
  {
    "name": "Latest Insider Trading API",
    "description": "Tap this endpoint to surface every fresh insider Form 4 across the market—optimized for low-latency ingestion and capped with `limit`/`page` controls so you never miss a high-signal executive trade.",
    "category": "insider_trades",
    "use_cases": [
      "populate daily insider-buy newsletters",
      "train models spotting cluster buys",
      "benchmark officer purchase patterns",
      "ETL into proprietary insider DBs",
      "trigger portfolio hedges on large sales"
    ],
    "parameters": {
      "required": {
        "page": "A zero-based integer page index for paginated endpoints. Example: 2 to return the third page of results, given the configured `limit`. (Integer, optional; defaults to 0)",
        "limit": "An integer cap on the number of results returned by the endpoint. Example: 50 to restrict output to the top 50 matches. Must be ≥1 and ≤1000. (Integer, optional; defaults to 100)"
      },
      "optional": {
        "date": "An ISO 8601 date (YYYY-MM-DD) used to filter or specify the reference date for historical or point-in-time data. Example: \"2025-06-01\". (String, Date, optional)"
      }
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "filingDate": "The date on which a regulatory filing was submitted (e.g., with the SEC), in ISO 8601 format. Example: \"2025-02-03\". (String, Date)",
      "transactionType": "The type of corporate or market transaction, such as \"Buy\", \"Sell\", \"Split\", or \"Dividend\". Example: \"Buy\". (String)",
      "price": "The last traded price or intrinsic value of the security or asset. Example: 130.75. (Number)",
      "reportingName": "The name of the person or entity filing a report or disclosure. Example: \"Jane Smith\". (String)"
    }
  },
  {
    "name": "Search Insider Trades API",
    "description": "Search Insider Trades API lets you query the insider tape by `symbol`, CIKs, or specific `transactionType`, returning granular trade details for targeted surveillance, historical audits, or headline-driven analytics.",
    "category": "insider_trades_search",
    "use_cases": [
      "drill into insider flows for a single name",
      "screen CFO buys vs CEO sells",
      "build historical sale-ratio charts",
      "cross-reference insiders across tickers",
      "automate form-4 summarization in research notes"
    ],
    "parameters": {
      "required": {
        "page": "A zero-based integer page index for paginated endpoints. Example: 2 to return the third page of results, given the configured `limit`. (Integer, optional; defaults to 0)",
        "limit": "An integer cap on the number of results returned by the endpoint. Example: 50 to restrict output to the top 50 matches. Must be ≥1 and ≤1000. (Integer, optional; defaults to 100)"
      },
      "optional": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)",
        "reportingCik": "The CIK of the entity that filed or reported the data, such as a fund manager or insider. Example: \"0000320193\" for Apple’s 13F filings. (String, optional)",
        "companyCik": "The Central Index Key (CIK) of the company for which data is requested. Example: \"0000320193\" for Apple Inc. (String, optional)",
        "transactionType": "A string specifying the type of corporate or market transaction being queried, such as \"buy\", \"sell\", \"split\", or \"dividend\". Example: \"split\" to retrieve only stock-split events. (String, optional)"
      }
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "transactionDate": "The effective date of a specific corporate transaction or event. Example: \"2025-02-03\". (String, Date)",
      "reportingName": "The name of the person or entity filing a report or disclosure. Example: \"Jane Smith\". (String)",
      "transactionType": "The type of corporate or market transaction, such as \"Buy\", \"Sell\", \"Split\", or \"Dividend\". Example: \"Buy\". (String)",
      "price": "The last traded price or intrinsic value of the security or asset. Example: 130.75. (Number)"
    }
  },
  {
    "name": "Search Insider Trades API",
    "description": "Pinpoint any insider transaction—filter by ticker, individual CIK, corporate CIK, or action code (e.g., `M`, `P`, `S`). The endpoint’s flexible search grid backs compliance drill-downs and forensic trading research.",
    "category": "insider_trades_search",
    "use_cases": [
      "validate pre-earnings executive trading",
      "generate insider activity heatmaps",
      "identify high-velocity sellers in small caps",
      "feed ML anomaly detectors",
      "enhance whistle-blower investigations"
    ],
    "parameters": {
      "required": {
        "page": "A zero-based integer page index for paginated endpoints. Example: 2 to return the third page of results, given the configured `limit`. (Integer, optional; defaults to 0)",
        "limit": "An integer cap on the number of results returned by the endpoint. Example: 50 to restrict output to the top 50 matches. Must be ≥1 and ≤1000. (Integer, optional; defaults to 100)"
      },
      "optional": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)",
        "reportingCik": "The CIK of the entity that filed or reported the data, such as a fund manager or insider. Example: \"0000320193\" for Apple’s 13F filings. (String, optional)",
        "companyCik": "The Central Index Key (CIK) of the company for which data is requested. Example: \"0000320193\" for Apple Inc. (String, optional)",
        "transactionType": "A string specifying the type of corporate or market transaction being queried, such as \"buy\", \"sell\", \"split\", or \"dividend\". Example: \"split\" to retrieve only stock-split events. (String, optional)"
      }
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "transactionDate": "The effective date of a specific corporate transaction or event. Example: \"2025-02-03\". (String, Date)",
      "reportingName": "The name of the person or entity filing a report or disclosure. Example: \"Jane Smith\". (String)",
      "transactionType": "The type of corporate or market transaction, such as \"Buy\", \"Sell\", \"Split\", or \"Dividend\". Example: \"Buy\". (String)",
      "securitiesTransacted": "The number of securities involved in a specific transaction. Example: 10000. (Number)"
    }
  },
  {
    "name": "Search Insider Trades by Reporting Name API",
    "description": "Search Insider Trades by Reporting Name API resolves a human name to its SEC CIK identifier—critical for tracking multi-entity insiders across filings and mapping aliases to a single reporting profile.",
    "category": "insider_identity",
    "use_cases": [
      "link common names to unique CIKs",
      "unify insider personas across holdings",
      "drive person-centric dashboards",
      "pre-fill search boxes in analyst tools",
      "entity-resolution for graph databases"
    ],
    "parameters": {
      "required": {
        "name": "A free-form string representing a full or partial company or fund name used for filtering or lookup. Example: \"Apple Inc.\" to match the exact legal name. (String, optional)"
      },
      "optional": {}
    },
    "response_example": {
      "reportingCik": "The Central Index Key (CIK) of the reporting entity in a regulatory filing. Example: \"0000320193\". (String)",
      "reportingName": "The name of the person or entity filing a report or disclosure. Example: \"Jane Smith\". (String)"
    }
  },
  {
    "name": "Search Insider Trades by Reporting Name API",
    "description": "Enter a surname, receive the authoritative CIK(s). This lookup cleans up fuzzy name matching for downstream insider-trade queries and KYC workflows.",
    "category": "insider_identity",
    "use_cases": [
      "normalize insider names in CRM systems",
      "bootstrap watch-lists for key executives",
      "resolve spelling variants in old filings",
      "enhance person-level sanction screens",
      "support voice commands for insider lookup"
    ],
    "parameters": {
      "required": {
        "name": "A free-form string representing a full or partial company or fund name used for filtering or lookup. Example: \"Apple Inc.\" to match the exact legal name. (String, optional)"
      },
      "optional": {}
    },
    "response_example": {
      "reportingCik": "The Central Index Key (CIK) of the reporting entity in a regulatory filing. Example: \"0000320193\". (String)",
      "reportingName": "The name of the person or entity filing a report or disclosure. Example: \"Jane Smith\". (String)"
    }
  },
  {
    "name": "All Insider Transaction Types API",
    "description": "All Insider Transaction Types API enumerates every Form 4 action code (e.g., `A-Award`, `S-Sale`)—the Rosetta stone for decoding insider filings and standardizing transaction semantics in your data lake.",
    "category": "insider_reference",
    "use_cases": [
      "map raw filings to business-friendly labels",
      "train NLP models to classify insider events",
      "populate dropdowns in admin UIs",
      "validate ETL pipelines for new codes",
      "educate junior analysts on SEC taxonomy"
    ],
    "parameters": {
      "required": {},
      "optional": {}
    },
    "response_example": {
      "transactionType": "The type of corporate or market transaction, such as \"Buy\", \"Sell\", \"Split\", or \"Dividend\". Example: \"Buy\". (String)"
    }
  },
  {
    "name": "All Insider Transaction Types API",
    "description": "Grab the authoritative list of insider action codes in one lightweight call—no params, no surprises. Essential for reference data hygiene and audit-ready classification.",
    "category": "insider_reference",
    "use_cases": [
      "sync code tables nightly",
      "ensure dashboards reflect new SEC codes",
      "build validation rules against mis-tagged trades",
      "translate codes in multilingual UIs",
      "quick-reference cheat sheets for interns"
    ],
    "parameters": {
      "required": {},
      "optional": {}
    },
    "response_example": {
      "transactionType": "The type of corporate or market transaction, such as \"Buy\", \"Sell\", \"Split\", or \"Dividend\". Example: \"Buy\". (String)"
    }
  },
  {
    "name": "Insider Trade Statistics API",
    "description": "Insider Trade Statistics API aggregates Form 4 data into quarterly roll-ups—count of buy/sell events, share totals, and acquired-to-disposed ratios—unlocking macro views of insider sentiment for any ticker.",
    "category": "insider_stats",
    "use_cases": [
      "build insider-sentiment factor scores",
      "flag tickers with accelerating sales",
      "overlay insider activity with price returns",
      "drive institutional research notes",
      "feed quant filters for long/short selection"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "year": "The calendar year associated with a data point or report. Example: 2023. (Number or String)",
      "quarter": "The fiscal quarter associated with the data point, typically \"Q1\", \"Q2\", \"Q3\", or \"Q4\". Example: \"Q4\". (String)",
      "acquiredDisposedRatio": "The ratio of acquired to disposed securities by an institutional investor. Example: 1.2. (Number)",
      "totalPurchases": "The total number of securities purchased by an investor over a period. Example: 150000. (Number)",
      "totalSales": "The total number of securities sold by an investor over a period. Example: 120000. (Number)"
    }
  },
  {
    "name": "Insider Trade Statistics API",
    "description": "This endpoint converts raw Form 4 noise into actionable KPIs—per-quarter purchase vs sale tallies, share counts, and average trade sizes—ideal for high-level dashboards and factor back-tests.",
    "category": "insider_stats",
    "use_cases": [
      "quantify net insider sentiment over time",
      "screen for buy clusters ahead of catalysts",
      "benchmark insider dryness vs peer group",
      "feed machine-learning alpha signals",
      "produce heat maps for portfolio managers"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "year": "The calendar year associated with a data point or report. Example: 2023. (Number or String)",
      "quarter": "The fiscal quarter associated with the data point, typically \"Q1\", \"Q2\", \"Q3\", or \"Q4\". Example: \"Q4\". (String)",
      "acquiredTransactions": "The number of separate transactions in which securities were acquired. Example: 5. (Number)",
      "disposedTransactions": "The number of separate transactions in which securities were disposed. Example: 4. (Number)",
      "acquiredDisposedRatio": "The ratio of acquired to disposed securities by an institutional investor. Example: 1.2. (Number)"
    }
  },
  {
    "name": "Acquisition Ownership API",
    "description": "Acquisition Ownership API surfaces Schedule 13D/G amendments and other beneficial-ownership filings—detailing voting power, dispositive control, and percent-of-class for activists, funds, and corporate acquirers.",
    "category": "beneficial_ownership",
    "use_cases": [
      "track activist build-ups pre-takeover",
      "alert PMs when ownership crosses 5 %",
      "analyze control shifts after mergers",
      "integrate beneficial-ownership into risk engines",
      "feed newsrooms with real-time stake changes"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {
        "limit": "An integer cap on the number of results returned by the endpoint. Example: 50 to restrict output to the top 50 matches. Must be ≥1 and ≤1000. (Integer, optional; defaults to 100)"
      }
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "filingDate": "The date on which a regulatory filing was submitted (e.g., with the SEC), in ISO 8601 format. Example: \"2025-02-03\". (String, Date)",
      "nameOfReportingPerson": "The name of the person responsible for reporting a transaction or filing. Example: \"John Doe\". (String)",
      "sharedVotingPower": "The number of shares for which shared voting power is exercised. Example: 50000. (Number)",
      "percentOfClass": "The percentage of a single class of stock owned by a reporting person. Example: 3.4. (Number, Percentage)"
    }
  },
  {
    "name": "Acquisition Ownership API",
    "description": "Monitor major stake moves with one call—this endpoint lists the latest 13D/G and SC 13G/A filings for a ticker, complete with voting power breakdowns and filer taxonomy (IC, EP, IN, CO).",
    "category": "beneficial_ownership",
    "use_cases": [
      "alert on Berkshire-style accumulation",
      "map fund family ownership structures",
      "quantify passive vs active voting blocs",
      "build takeover-probability models",
      "enhance governance scorecards"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {
        "limit": "An integer cap on the number of results returned by the endpoint. Example: 50 to restrict output to the top 50 matches. Must be ≥1 and ≤1000. (Integer, optional; defaults to 100)"
      }
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "filingDate": "The date on which a regulatory filing was submitted (e.g., with the SEC), in ISO 8601 format. Example: \"2025-02-03\". (String, Date)",
      "nameOfReportingPerson": "The name of the person responsible for reporting a transaction or filing. Example: \"John Doe\". (String)",
      "sharedVotingPower": "The number of shares for which shared voting power is exercised. Example: 50000. (Number)",
      "percentOfClass": "The percentage of a single class of stock owned by a reporting person. Example: 3.4. (Number, Percentage)"
    }
  },
  {
    "name": "Market Sector Performance Snapshot API",
    "description": "Market Sector Performance Snapshot API fires a one-day heat-map of sector returns—average price change per sector, exchange, and optional subsector filter. Use this zero-lag pulse to steer macro commentary, rotate factors, or validate systematic sector bets before the opening bell.",
    "category": "sector_performance_snapshot",
    "use_cases": [
      "drive real-time sector heatmaps in dashboards",
      "fuel momentum screens for tactical rotations",
      "trigger alerting pipelines on outsized moves",
      "benchmark ETF sector tilts against peers",
      "populate LLM answers on ‘best-performing sector today’"
    ],
    "parameters": {
      "required": {
        "date": "An ISO 8601 date (YYYY-MM-DD) used to filter or specify the reference date for historical or point-in-time data. Example: \"2025-06-01\". (String, Date, optional)"
      },
      "optional": {
        "exchange": "The exchange code or abbreviation to scope results to a specific trading venue. Example: \"NASDAQ\" or \"NYSE\". Filters out tickers not listed on that exchange. (String, optional)",
        "sector": "A high-level sector classification string to filter companies by economic sector. Example: \"Technology\" to return only names in the technology sector. Matches standardized GICS or ICB sector names. (String, optional)",
        "page": "A zero-based integer page index for paginated endpoints. Example: 2 to return the third page of results, given the configured `limit`. (Integer, optional; defaults to 0)",
        "limit": "An integer cap on the number of results returned by the endpoint. Example: 50 to restrict output to the top 50 matches. Must be ≥1 and ≤1000. (Integer, optional; defaults to 100)"
      }
    },
    "response_example": {
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "sector": "The broad sector classification for the company, often aligned with GICS sectors. Example: \"Information Technology\". (String)",
      "exchange": "The abbreviated code or name of the exchange where the security is traded. Example: \"NASDAQ\". (String)",
      "averageChange": "The average change in a metric (e.g., price, volume) over a period. Example: 1.5. (Number)"
    }
  },
  {
    "name": "Market Sector Performance Snapshot API",
    "description": "Need the daily scoreboard? Provide `date` (plus optional `exchange` or single `sector`) and get a precise snapshot of average % change for every sector. Lean JSON, latency-optimized—perfect for risk boards and morning note generation.",
    "category": "sector_performance_snapshot",
    "use_cases": [
      "publish pre-market client briefs",
      "back-test sector mean-reversion signals",
      "compare cross-exchange sector dispersion",
      "feed broadcast tickers with sector leaders/laggards",
      "support chatbots delivering sector stats on demand"
    ],
    "parameters": {
      "required": {
        "date": "An ISO 8601 date (YYYY-MM-DD) used to filter or specify the reference date for historical or point-in-time data. Example: \"2025-06-01\". (String, Date, optional)"
      },
      "optional": {
        "exchange": "The exchange code or abbreviation to scope results to a specific trading venue. Example: \"NASDAQ\" or \"NYSE\". Filters out tickers not listed on that exchange. (String, optional)",
        "sector": "A high-level sector classification string to filter companies by economic sector. Example: \"Technology\" to return only names in the technology sector. Matches standardized GICS or ICB sector names. (String, optional)",
        "page": "A zero-based integer page index for paginated endpoints. Example: 2 to return the third page of results, given the configured `limit`. (Integer, optional; defaults to 0)",
        "limit": "An integer cap on the number of results returned by the endpoint. Example: 50 to restrict output to the top 50 matches. Must be ≥1 and ≤1000. (Integer, optional; defaults to 100)"
      }
    },
    "response_example": {
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "sector": "The broad sector classification for the company, often aligned with GICS sectors. Example: \"Information Technology\". (String)",
      "exchange": "The abbreviated code or name of the exchange where the security is traded. Example: \"NASDAQ\". (String)",
      "averageChange": "The average change in a metric (e.g., price, volume) over a period. Example: 1.5. (Number)"
    }
  },
  {
    "name": "Industry Performance Snapshot API",
    "description": "Industry Performance Snapshot API drills to the next layer—returning average price change by GICS industry. Add `exchange` and `industry` filters for a laser view. Instant intelligence for subsector traders and thematic-fund PMs.",
    "category": "industry_performance_snapshot",
    "use_cases": [
      "rank biotech vs semi vs fintech intraday",
      "detect micro-industry breakouts",
      "feed thematic ETF creation tools",
      "enrich NLP market-wrap headlines",
      "stress-test portfolio industry concentration"
    ],
    "parameters": {
      "required": {
        "date": "An ISO 8601 date (YYYY-MM-DD) used to filter or specify the reference date for historical or point-in-time data. Example: \"2025-06-01\". (String, Date, optional)"
      },
      "optional": {
        "exchange": "The exchange code or abbreviation to scope results to a specific trading venue. Example: \"NASDAQ\" or \"NYSE\". Filters out tickers not listed on that exchange. (String, optional)",
        "industry": "A granular industry classification string to narrow results to specific industry verticals. Example: \"Semiconductors\" to retrieve only chipmakers. Must match FMP’s industry taxonomy. (String, optional)",
        "page": "A zero-based integer page index for paginated endpoints. Example: 2 to return the third page of results, given the configured `limit`. (Integer, optional; defaults to 0)",
        "limit": "An integer cap on the number of results returned by the endpoint. Example: 50 to restrict output to the top 50 matches. Must be ≥1 and ≤1000. (Integer, optional; defaults to 100)"
      }
    },
    "response_example": {
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "industry": "The primary industry classification of the company, typically using NAICS or SIC nomenclature. Example: \"Technology\". (String)",
      "exchange": "The abbreviated code or name of the exchange where the security is traded. Example: \"NASDAQ\". (String)",
      "averageChange": "The average change in a metric (e.g., price, volume) over a period. Example: 1.5. (Number)"
    }
  },
  {
    "name": "Industry Performance Snapshot API",
    "description": "One endpoint, granular view: pass `date` to pull every industry’s average % move, or tighten with `exchange` / specific `industry`. Designed for content creators, quants, and alert-bots tracking niche pockets of the market.",
    "category": "industry_performance_snapshot",
    "use_cases": [
      "generate midday ‘hot industry’ tweets",
      "power screener facets by performance",
      "update sector-industry pyramids in BI tools",
      "benchmark long/short baskets by sub-industry",
      "feed academic research on industry rotations"
    ],
    "parameters": {
      "required": {
        "date": "An ISO 8601 date (YYYY-MM-DD) used to filter or specify the reference date for historical or point-in-time data. Example: \"2025-06-01\". (String, Date, optional)"
      },
      "optional": {
        "exchange": "The exchange code or abbreviation to scope results to a specific trading venue. Example: \"NASDAQ\" or \"NYSE\". Filters out tickers not listed on that exchange. (String, optional)",
        "industry": "A granular industry classification string to narrow results to specific industry verticals. Example: \"Semiconductors\" to retrieve only chipmakers. Must match FMP’s industry taxonomy. (String, optional)",
        "page": "A zero-based integer page index for paginated endpoints. Example: 2 to return the third page of results, given the configured `limit`. (Integer, optional; defaults to 0)",
        "limit": "An integer cap on the number of results returned by the endpoint. Example: 50 to restrict output to the top 50 matches. Must be ≥1 and ≤1000. (Integer, optional; defaults to 100)"
      }
    },
    "response_example": {
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "industry": "The primary industry classification of the company, typically using NAICS or SIC nomenclature. Example: \"Technology\". (String)",
      "exchange": "The abbreviated code or name of the exchange where the security is traded. Example: \"NASDAQ\". (String)",
      "averageChange": "The average change in a metric (e.g., price, volume) over a period. Example: 1.5. (Number)"
    }
  },
  {
    "name": "Historical Market Sector Performance API",
    "description": "Historical Market Sector Performance API rolls back time—fetch multi-day sector return series to quantify momentum, mean-reversion, or macro shocks. Feed `sector`, optional `exchange`, and `from`/`to` date rails.",
    "category": "sector_performance_history",
    "use_cases": [
      "build sector momentum factors",
      "chart drawdowns for risk reports",
      "study policy impact across sectors",
      "train ML models on sector regimes",
      "animate interactive timelines in dashboards"
    ],
    "parameters": {
      "required": {
        "sector": "A high-level sector classification string to filter companies by economic sector. Example: \"Technology\" to return only names in the technology sector. Matches standardized GICS or ICB sector names. (String, optional)"
      },
      "optional": {
        "exchange": "The exchange code or abbreviation to scope results to a specific trading venue. Example: \"NASDAQ\" or \"NYSE\". Filters out tickers not listed on that exchange. (String, optional)",
        "from": "The ISO 8601 date (YYYY-MM-DD) indicating the start of a time range filter. Example: \"2025-01-01\" to include only data from January 1, 2025 onward. Must be ≤ `to`. (String, Date, optional)",
        "to": "The ISO 8601 date (YYYY-MM-DD) indicating the end of a time range filter. Example: \"2025-12-31\" to include only data up to December 31, 2025. Must be ≥ `from`. (String, Date, optional)",
        "page": "A zero-based integer page index for paginated endpoints. Example: 2 to return the third page of results, given the configured `limit`. (Integer, optional; defaults to 0)",
        "limit": "An integer cap on the number of results returned by the endpoint. Example: 50 to restrict output to the top 50 matches. Must be ≥1 and ≤1000. (Integer, optional; defaults to 100)"
      }
    },
    "response_example": {
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "sector": "The broad sector classification for the company, often aligned with GICS sectors. Example: \"Information Technology\". (String)",
      "exchange": "The abbreviated code or name of the exchange where the security is traded. Example: \"NASDAQ\". (String)",
      "averageChange": "The average change in a metric (e.g., price, volume) over a period. Example: 1.5. (Number)"
    }
  },
  {
    "name": "Historical Market Sector Performance API",
    "description": "Pull a full vector of daily sector moves—handy for factor back-tests or writing whitepapers on sector cyclicality. Supports pagination for long horizons; plug straight into pandas for rolling-window analytics.",
    "category": "sector_performance_history",
    "use_cases": [
      "compute Sharpe ratios by sector",
      "contrast pre/post-COVID sector paths",
      "benchmark active managers’ timing skill",
      "feed generative AI for historical narratives",
      "evaluate defensive vs cyclical rotations"
    ],
    "parameters": {
      "required": {
        "sector": "A high-level sector classification string to filter companies by economic sector. Example: \"Technology\" to return only names in the technology sector. Matches standardized GICS or ICB sector names. (String, optional)"
      },
      "optional": {
        "exchange": "The exchange code or abbreviation to scope results to a specific trading venue. Example: \"NASDAQ\" or \"NYSE\". Filters out tickers not listed on that exchange. (String, optional)",
        "from": "The ISO 8601 date (YYYY-MM-DD) indicating the start of a time range filter. Example: \"2025-01-01\" to include only data from January 1, 2025 onward. Must be ≤ `to`. (String, Date, optional)",
        "to": "The ISO 8601 date (YYYY-MM-DD) indicating the end of a time range filter. Example: \"2025-12-31\" to include only data up to December 31, 2025. Must be ≥ `from`. (String, Date, optional)",
        "page": "A zero-based integer page index for paginated endpoints. Example: 2 to return the third page of results, given the configured `limit`. (Integer, optional; defaults to 0)",
        "limit": "An integer cap on the number of results returned by the endpoint. Example: 50 to restrict output to the top 50 matches. Must be ≥1 and ≤1000. (Integer, optional; defaults to 100)"
      }
    },
    "response_example": {
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "sector": "The broad sector classification for the company, often aligned with GICS sectors. Example: \"Information Technology\". (String)",
      "exchange": "The abbreviated code or name of the exchange where the security is traded. Example: \"NASDAQ\". (String)",
      "averageChange": "The average change in a metric (e.g., price, volume) over a period. Example: 1.5. (Number)"
    }
  },
  {
    "name": "Historical Industry Performance API",
    "description": "Historical Industry Performance API serves a time-series of average daily returns for any GICS industry—perfect for deep-dive alpha studies or building custom thematic indices.",
    "category": "industry_performance_history",
    "use_cases": [
      "quantify biotech crash-recovery arcs",
      "calculate rolling beta to S&P 500",
      "identify industries with persistent alpha",
      "feed LSTM models predicting industry moves",
      "publish interactive industry trend charts"
    ],
    "parameters": {
      "required": {
        "industry": "A granular industry classification string to narrow results to specific industry verticals. Example: \"Semiconductors\" to retrieve only chipmakers. Must match FMP’s industry taxonomy. (String, optional)"
      },
      "optional": {
        "exchange": "The exchange code or abbreviation to scope results to a specific trading venue. Example: \"NASDAQ\" or \"NYSE\". Filters out tickers not listed on that exchange. (String, optional)",
        "from": "The ISO 8601 date (YYYY-MM-DD) indicating the start of a time range filter. Example: \"2025-01-01\" to include only data from January 1, 2025 onward. Must be ≤ `to`. (String, Date, optional)",
        "to": "The ISO 8601 date (YYYY-MM-DD) indicating the end of a time range filter. Example: \"2025-12-31\" to include only data up to December 31, 2025. Must be ≥ `from`. (String, Date, optional)",
        "page": "A zero-based integer page index for paginated endpoints. Example: 2 to return the third page of results, given the configured `limit`. (Integer, optional; defaults to 0)",
        "limit": "An integer cap on the number of results returned by the endpoint. Example: 50 to restrict output to the top 50 matches. Must be ≥1 and ≤1000. (Integer, optional; defaults to 100)"
      }
    },
    "response_example": {
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "industry": "The primary industry classification of the company, typically using NAICS or SIC nomenclature. Example: \"Technology\". (String)",
      "exchange": "The abbreviated code or name of the exchange where the security is traded. Example: \"NASDAQ\". (String)",
      "averageChange": "The average change in a metric (e.g., price, volume) over a period. Example: 1.5. (Number)"
    }
  },
  {
    "name": "Historical Industry Performance API",
    "description": "From clean-tech to cyber-security, query historical return traces for any industry code. Inputs mirror sector endpoint but offer sub-sector precision for sophisticated rotation models.",
    "category": "industry_performance_history",
    "use_cases": [
      "run event studies on FDA approvals",
      "build long-short spreads across industries",
      "validate hypothesis on industry seasonality",
      "feed classroom case studies on market cycles",
      "augment newsletters with multi-year charts"
    ],
    "parameters": {
      "required": {
        "industry": "A granular industry classification string to narrow results to specific industry verticals. Example: \"Semiconductors\" to retrieve only chipmakers. Must match FMP’s industry taxonomy. (String, optional)"
      },
      "optional": {
        "exchange": "The exchange code or abbreviation to scope results to a specific trading venue. Example: \"NASDAQ\" or \"NYSE\". Filters out tickers not listed on that exchange. (String, optional)",
        "from": "The ISO 8601 date (YYYY-MM-DD) indicating the start of a time range filter. Example: \"2025-01-01\" to include only data from January 1, 2025 onward. Must be ≤ `to`. (String, Date, optional)",
        "to": "The ISO 8601 date (YYYY-MM-DD) indicating the end of a time range filter. Example: \"2025-12-31\" to include only data up to December 31, 2025. Must be ≥ `from`. (String, Date, optional)",
        "page": "A zero-based integer page index for paginated endpoints. Example: 2 to return the third page of results, given the configured `limit`. (Integer, optional; defaults to 0)",
        "limit": "An integer cap on the number of results returned by the endpoint. Example: 50 to restrict output to the top 50 matches. Must be ≥1 and ≤1000. (Integer, optional; defaults to 100)"
      }
    },
    "response_example": {
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "industry": "The primary industry classification of the company, typically using NAICS or SIC nomenclature. Example: \"Technology\". (String)",
      "exchange": "The abbreviated code or name of the exchange where the security is traded. Example: \"NASDAQ\". (String)",
      "averageChange": "The average change in a metric (e.g., price, volume) over a period. Example: 1.5. (Number)"
    }
  },
  {
    "name": "Sector PE Snapshot API",
    "description": "Sector PE Snapshot API prints point-in-time valuation multiples—aggregate P/E per sector and exchange. A single call surfaces which segments are priced for perfection versus value territory.",
    "category": "sector_pe_snapshot",
    "use_cases": [
      "compare sector valuations in pitch decks",
      "flag over-extended P/E bubbles",
      "normalize factor models by valuation quartiles",
      "generate LLM commentary on market richness",
      "drive allocation tilts toward cheap sectors"
    ],
    "parameters": {
      "required": {
        "date": "An ISO 8601 date (YYYY-MM-DD) used to filter or specify the reference date for historical or point-in-time data. Example: \"2025-06-01\". (String, Date, optional)"
      },
      "optional": {
        "exchange": "The exchange code or abbreviation to scope results to a specific trading venue. Example: \"NASDAQ\" or \"NYSE\". Filters out tickers not listed on that exchange. (String, optional)",
        "sector": "A high-level sector classification string to filter companies by economic sector. Example: \"Technology\" to return only names in the technology sector. Matches standardized GICS or ICB sector names. (String, optional)",
        "page": "A zero-based integer page index for paginated endpoints. Example: 2 to return the third page of results, given the configured `limit`. (Integer, optional; defaults to 0)",
        "limit": "An integer cap on the number of results returned by the endpoint. Example: 50 to restrict output to the top 50 matches. Must be ≥1 and ≤1000. (Integer, optional; defaults to 100)"
      }
    },
    "response_example": {
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "sector": "The broad sector classification for the company, often aligned with GICS sectors. Example: \"Information Technology\". (String)",
      "exchange": "The abbreviated code or name of the exchange where the security is traded. Example: \"NASDAQ\". (String)",
      "pe": "The Price-to-Earnings ratio, calculated as share price divided by earnings per share. Example: 18.5. (Number)"
    }
  },
  {
    "name": "Sector PE Snapshot API",
    "description": "Drop in `date`, optionally filter by `sector` or `exchange`, and receive the blended P/E—critical for macro valuation dashboards, relative-value screens, and risk-parity overlays.",
    "category": "sector_pe_snapshot",
    "use_cases": [
      "contextualize earnings seasons",
      "optimize sector weights by valuation bands",
      "alert PMs when sector P/E breaks historical z-scores",
      "train ML features on cross-sectional valuation",
      "educate retail users on cheap vs expensive sectors"
    ],
    "parameters": {
      "required": {
        "date": "An ISO 8601 date (YYYY-MM-DD) used to filter or specify the reference date for historical or point-in-time data. Example: \"2025-06-01\". (String, Date, optional)"
      },
      "optional": {
        "exchange": "The exchange code or abbreviation to scope results to a specific trading venue. Example: \"NASDAQ\" or \"NYSE\". Filters out tickers not listed on that exchange. (String, optional)",
        "sector": "A high-level sector classification string to filter companies by economic sector. Example: \"Technology\" to return only names in the technology sector. Matches standardized GICS or ICB sector names. (String, optional)",
        "page": "A zero-based integer page index for paginated endpoints. Example: 2 to return the third page of results, given the configured `limit`. (Integer, optional; defaults to 0)",
        "limit": "An integer cap on the number of results returned by the endpoint. Example: 50 to restrict output to the top 50 matches. Must be ≥1 and ≤1000. (Integer, optional; defaults to 100)"
      }
    },
    "response_example": {
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "sector": "The broad sector classification for the company, often aligned with GICS sectors. Example: \"Information Technology\". (String)",
      "exchange": "The abbreviated code or name of the exchange where the security is traded. Example: \"NASDAQ\". (String)",
      "pe": "The Price-to-Earnings ratio, calculated as share price divided by earnings per share. Example: 18.5. (Number)"
    }
  },
  {
    "name": "Industry PE Snapshot API",
    "description": "Industry PE Snapshot API dives into valuation granularity—returning aggregated P/E ratios for every industry slice on the specified date. Pinpoint pockets of froth or value inside broader sectors.",
    "category": "industry_pe_snapshot",
    "use_cases": [
      "rank industries by valuation spreads",
      "feed factor-tilt engines for smart-beta ETFs",
      "craft sell-side notes on industry overpricing",
      "augment chatbot answers on ‘cheapest biotech names’",
      "bootstrap screening tools with valuation filters"
    ],
    "parameters": {
      "required": {
        "date": "An ISO 8601 date (YYYY-MM-DD) used to filter or specify the reference date for historical or point-in-time data. Example: \"2025-06-01\". (String, Date, optional)"
      },
      "optional": {
        "exchange": "The exchange code or abbreviation to scope results to a specific trading venue. Example: \"NASDAQ\" or \"NYSE\". Filters out tickers not listed on that exchange. (String, optional)",
        "industry": "A granular industry classification string to narrow results to specific industry verticals. Example: \"Semiconductors\" to retrieve only chipmakers. Must match FMP’s industry taxonomy. (String, optional)",
        "page": "A zero-based integer page index for paginated endpoints. Example: 2 to return the third page of results, given the configured `limit`. (Integer, optional; defaults to 0)",
        "limit": "An integer cap on the number of results returned by the endpoint. Example: 50 to restrict output to the top 50 matches. Must be ≥1 and ≤1000. (Integer, optional; defaults to 100)"
      }
    },
    "response_example": {
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "industry": "The primary industry classification of the company, typically using NAICS or SIC nomenclature. Example: \"Technology\". (String)",
      "exchange": "The abbreviated code or name of the exchange where the security is traded. Example: \"NASDAQ\". (String)",
      "pe": "The Price-to-Earnings ratio, calculated as share price divided by earnings per share. Example: 18.5. (Number)"
    }
  },
  {
    "name": "Industry PE Snapshot API",
    "description": "Supply a `date` plus optional `industry` or `exchange` to extract real-time P/E multiples for every niche—from cloud software to oil refining—ideal for analysts benchmarking comps or rotation quants hunting vertical mispricings.",
    "category": "industry_pe_snapshot",
    "use_cases": [
      "compare valuation dispersion within tech",
      "feed AI models predicting mean-reversion in P/E",
      "monitor bubble risk in speculative niches",
      "populate interactive valuation maps",
      "drive long-short pair ideas by relative P/E"
    ],
    "parameters": {
      "required": {
        "date": "An ISO 8601 date (YYYY-MM-DD) used to filter or specify the reference date for historical or point-in-time data. Example: \"2025-06-01\". (String, Date, optional)"
      },
      "optional": {
        "exchange": "The exchange code or abbreviation to scope results to a specific trading venue. Example: \"NASDAQ\" or \"NYSE\". Filters out tickers not listed on that exchange. (String, optional)",
        "industry": "A granular industry classification string to narrow results to specific industry verticals. Example: \"Semiconductors\" to retrieve only chipmakers. Must match FMP’s industry taxonomy. (String, optional)",
        "page": "A zero-based integer page index for paginated endpoints. Example: 2 to return the third page of results, given the configured `limit`. (Integer, optional; defaults to 0)",
        "limit": "An integer cap on the number of results returned by the endpoint. Example: 50 to restrict output to the top 50 matches. Must be ≥1 and ≤1000. (Integer, optional; defaults to 100)"
      }
    },
    "response_example": {
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "industry": "The primary industry classification of the company, typically using NAICS or SIC nomenclature. Example: \"Technology\". (String)",
      "exchange": "The abbreviated code or name of the exchange where the security is traded. Example: \"NASDAQ\". (String)",
      "pe": "The Price-to-Earnings ratio, calculated as share price divided by earnings per share. Example: 18.5. (Number)"
    }
  },
  {
    "name": "Historical Sector PE API",
    "description": "Historical Sector PE API streams daily aggregated P/E ratios for a chosen sector—arms you with multi-year valuation curves to judge whether ‘cheap’ today is really cheap versus history.",
    "category": "sector_pe_history",
    "use_cases": [
      "plot valuation z-score charts by sector",
      "integrate time-series into asset-allocation models",
      "run regime analysis for sector P/E regimes",
      "teach students about valuation cycles",
      "power blog content on sector bubbles"
    ],
    "parameters": {
      "required": {
        "sector": "A high-level sector classification string to filter companies by economic sector. Example: \"Technology\" to return only names in the technology sector. Matches standardized GICS or ICB sector names. (String, optional)"
      },
      "optional": {
        "exchange": "The exchange code or abbreviation to scope results to a specific trading venue. Example: \"NASDAQ\" or \"NYSE\". Filters out tickers not listed on that exchange. (String, optional)",
        "from": "The ISO 8601 date (YYYY-MM-DD) indicating the start of a time range filter. Example: \"2025-01-01\" to include only data from January 1, 2025 onward. Must be ≤ `to`. (String, Date, optional)",
        "to": "The ISO 8601 date (YYYY-MM-DD) indicating the end of a time range filter. Example: \"2025-12-31\" to include only data up to December 31, 2025. Must be ≥ `from`. (String, Date, optional)",
        "page": "A zero-based integer page index for paginated endpoints. Example: 2 to return the third page of results, given the configured `limit`. (Integer, optional; defaults to 0)",
        "limit": "An integer cap on the number of results returned by the endpoint. Example: 50 to restrict output to the top 50 matches. Must be ≥1 and ≤1000. (Integer, optional; defaults to 100)"
      }
    },
    "response_example": {
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "sector": "The broad sector classification for the company, often aligned with GICS sectors. Example: \"Information Technology\". (String)",
      "exchange": "The abbreviated code or name of the exchange where the security is traded. Example: \"NASDAQ\". (String)",
      "pe": "The Price-to-Earnings ratio, calculated as share price divided by earnings per share. Example: 18.5. (Number)"
    }
  },
  {
    "name": "Historical Sector PE API",
    "description": "Fetch a longitudinal series of sector-level P/Es—supports `from`/`to` ranges for back-tests, valuation research, or macro slide decks. Easily pipe into pandas to calculate percentile ranks and valuation bands.",
    "category": "sector_pe_history",
    "use_cases": [
      "back-test sector-valuation timing models",
      "quantify expansion/contraction cycles",
      "compare cross-exchange valuation trends",
      "feed financial-education portals with charts",
      "monitor structural shifts in sector profitability"
    ],
    "parameters": {
      "required": {
        "sector": "A high-level sector classification string to filter companies by economic sector. Example: \"Technology\" to return only names in the technology sector. Matches standardized GICS or ICB sector names. (String, optional)"
      },
      "optional": {
        "exchange": "The exchange code or abbreviation to scope results to a specific trading venue. Example: \"NASDAQ\" or \"NYSE\". Filters out tickers not listed on that exchange. (String, optional)",
        "from": "The ISO 8601 date (YYYY-MM-DD) indicating the start of a time range filter. Example: \"2025-01-01\" to include only data from January 1, 2025 onward. Must be ≤ `to`. (String, Date, optional)",
        "to": "The ISO 8601 date (YYYY-MM-DD) indicating the end of a time range filter. Example: \"2025-12-31\" to include only data up to December 31, 2025. Must be ≥ `from`. (String, Date, optional)",
        "page": "A zero-based integer page index for paginated endpoints. Example: 2 to return the third page of results, given the configured `limit`. (Integer, optional; defaults to 0)",
        "limit": "An integer cap on the number of results returned by the endpoint. Example: 50 to restrict output to the top 50 matches. Must be ≥1 and ≤1000. (Integer, optional; defaults to 100)"
      }
    },
    "response_example": {
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "sector": "The broad sector classification for the company, often aligned with GICS sectors. Example: \"Information Technology\". (String)",
      "exchange": "The abbreviated code or name of the exchange where the security is traded. Example: \"NASDAQ\". (String)",
      "pe": "The Price-to-Earnings ratio, calculated as share price divided by earnings per share. Example: 18.5. (Number)"
    }
  },
  {
    "name": "Historical Industry PE API",
    "description": "Historical Industry PE API provides a rolling record of industry-level valuation multiples—empowering quants, strategists, and educators to study how niche segments cycle through cheap and expensive.",
    "category": "industry_pe_history",
    "use_cases": [
      "detect valuation mean-reversion windows",
      "drive industry-specific risk models",
      "spot persistent premium industries",
      "craft storyline charts for sell-side notes",
      "train AI to forecast valuation shifts"
    ],
    "parameters": {
      "required": {
        "industry": "A granular industry classification string to narrow results to specific industry verticals. Example: \"Semiconductors\" to retrieve only chipmakers. Must match FMP’s industry taxonomy. (String, optional)"
      },
      "optional": {
        "exchange": "The exchange code or abbreviation to scope results to a specific trading venue. Example: \"NASDAQ\" or \"NYSE\". Filters out tickers not listed on that exchange. (String, optional)",
        "from": "The ISO 8601 date (YYYY-MM-DD) indicating the start of a time range filter. Example: \"2025-01-01\" to include only data from January 1, 2025 onward. Must be ≤ `to`. (String, Date, optional)",
        "to": "The ISO 8601 date (YYYY-MM-DD) indicating the end of a time range filter. Example: \"2025-12-31\" to include only data up to December 31, 2025. Must be ≥ `from`. (String, Date, optional)",
        "page": "A zero-based integer page index for paginated endpoints. Example: 2 to return the third page of results, given the configured `limit`. (Integer, optional; defaults to 0)",
        "limit": "An integer cap on the number of results returned by the endpoint. Example: 50 to restrict output to the top 50 matches. Must be ≥1 and ≤1000. (Integer, optional; defaults to 100)"
      }
    },
    "response_example": {
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "industry": "The primary industry classification of the company, typically using NAICS or SIC nomenclature. Example: \"Technology\". (String)",
      "exchange": "The abbreviated code or name of the exchange where the security is traded. Example: \"NASDAQ\". (String)",
      "pe": "The Price-to-Earnings ratio, calculated as share price divided by earnings per share. Example: 18.5. (Number)"
    }
  },
  {
    "name": "Historical Industry PE API",
    "description": "Need to see how biotech P/Es collapsed post-bubble or how semis blew out after AI hype? This endpoint delivers industry valuation time-series for any exchange—plug into factor research or narrative visualizations.",
    "category": "industry_pe_history",
    "use_cases": [
      "build valuation-based rotation signals",
      "highlight extremes for contrarian calls",
      "benchmark portfolio industry valuations vs history",
      "feed academic research on valuation regimes",
      "augment chatbots with historical valuation context"
    ],
    "parameters": {
      "required": {
        "industry": "A granular industry classification string to narrow results to specific industry verticals. Example: \"Semiconductors\" to retrieve only chipmakers. Must match FMP’s industry taxonomy. (String, optional)"
      },
      "optional": {
        "exchange": "The exchange code or abbreviation to scope results to a specific trading venue. Example: \"NASDAQ\" or \"NYSE\". Filters out tickers not listed on that exchange. (String, optional)",
        "from": "The ISO 8601 date (YYYY-MM-DD) indicating the start of a time range filter. Example: \"2025-01-01\" to include only data from January 1, 2025 onward. Must be ≤ `to`. (String, Date, optional)",
        "to": "The ISO 8601 date (YYYY-MM-DD) indicating the end of a time range filter. Example: \"2025-12-31\" to include only data up to December 31, 2025. Must be ≥ `from`. (String, Date, optional)",
        "page": "A zero-based integer page index for paginated endpoints. Example: 2 to return the third page of results, given the configured `limit`. (Integer, optional; defaults to 0)",
        "limit": "An integer cap on the number of results returned by the endpoint. Example: 50 to restrict output to the top 50 matches. Must be ≥1 and ≤1000. (Integer, optional; defaults to 100)"
      }
    },
    "response_example": {
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "industry": "The primary industry classification of the company, typically using NAICS or SIC nomenclature. Example: \"Technology\". (String)",
      "exchange": "The abbreviated code or name of the exchange where the security is traded. Example: \"NASDAQ\". (String)",
      "pe": "The Price-to-Earnings ratio, calculated as share price divided by earnings per share. Example: 18.5. (Number)"
    }
  },
  {
    "name": "Biggest Stock Gainers API",
    "description": "Biggest Stock Gainers API streams a pre-sorted list of the day’s top percentage advancers across all U.S. listed equities—symbol, name, latest price, change, and volume. Zero parameters, zero fuss. Ideal for momentum dashboards, trader alerts, and morning-note ‘leaders’ tables.",
    "category": "market_movers_gainers",
    "use_cases": [
      "populate heat-maps of breakout names",
      "train ML models on intraday momentum",
      "push real-time ‘top gainers’ notifications",
      "benchmark strategy P&L vs market leaders",
      "seed retail-app carousels with hottest stocks"
    ],
    "parameters": {
      "required": {},
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "name": "The full legal or common name of the company. Example: \"Apple Inc.\" (String)",
      "price": "The last traded price or intrinsic value of the security or asset. Example: 130.75. (Number)",
      "change": "The absolute change in price or value compared to the previous close. Example: \"+1.25\". (String)",
      "changesPercentage": "The percentage change in a metric (e.g., price, index value) over a specified time frame. Example: 2.5. (Number, Percentage)",
      "volume": "The total number of shares or contracts traded during a given period (typically daily). Example: 105000000. (Number)"
    }
  },
  {
    "name": "Biggest Stock Gainers API",
    "description": "Need the day’s rocket ships? Hit this endpoint—no query string needed—and receive an auto-ranked JSON of the largest percentage price increases. Perfect for scanners, social-media market recaps, or quant factor filters looking for fresh momentum.",
    "category": "market_movers_gainers",
    "use_cases": [
      "flash newsrooms with ‘stocks on fire’",
      "feed quant long-entry filters",
      "drive YouTube ‘top movers’ segments",
      "integrate into Discord trading bots",
      "archive daily leaderboards for research"
    ],
    "parameters": {
      "required": {},
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "name": "The full legal or common name of the company. Example: \"Apple Inc.\" (String)",
      "price": "The last traded price or intrinsic value of the security or asset. Example: 130.75. (Number)",
      "change": "The absolute change in price or value compared to the previous close. Example: \"+1.25\". (String)",
      "changesPercentage": "The percentage change in a metric (e.g., price, index value) over a specified time frame. Example: 2.5. (Number, Percentage)",
      "volume": "The total number of shares or contracts traded during a given period (typically daily). Example: 105000000. (Number)"
    }
  },
  {
    "name": "Biggest Stock Losers API",
    "description": "Biggest Stock Losers API returns the market’s steepest decliners—ranked by percentage drop—so risk managers and bargain hunters can see which names are under pressure in real time.",
    "category": "market_movers_losers",
    "use_cases": [
      "trigger risk dashboards on portfolio names",
      "screen for oversold rebound candidates",
      "power news tickers on heavy sell-offs",
      "feed ML anomaly detection for flash crashes",
      "compile end-of-day loser summaries"
    ],
    "parameters": {
      "required": {},
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "name": "The full legal or common name of the company. Example: \"Apple Inc.\" (String)",
      "price": "The last traded price or intrinsic value of the security or asset. Example: 130.75. (Number)",
      "change": "The absolute change in price or value compared to the previous close. Example: \"+1.25\". (String)",
      "changesPercentage": "The percentage change in a metric (e.g., price, index value) over a specified time frame. Example: 2.5. (Number, Percentage)",
      "volume": "The total number of shares or contracts traded during a given period (typically daily). Example: 105000000. (Number)"
    }
  },
  {
    "name": "Biggest Stock Losers API",
    "description": "One call surfaces every stock in free-fall—ranked by worst percentage performance—enabling tactical short lists, volatility-spike alerts, and value-screen pipelines.",
    "category": "market_movers_losers",
    "use_cases": [
      "auto-hedge engines watching holdings",
      "contrarian buy-the-dip scanners",
      "volatility product back-tests",
      "populate brokerage ‘top losers’ widgets",
      "journalist quick-grab for sell-off charts"
    ],
    "parameters": {
      "required": {},
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "name": "The full legal or common name of the company. Example: \"Apple Inc.\" (String)",
      "price": "The last traded price or intrinsic value of the security or asset. Example: 130.75. (Number)",
      "change": "The absolute change in price or value compared to the previous close. Example: \"+1.25\". (String)",
      "changesPercentage": "The percentage change in a metric (e.g., price, index value) over a specified time frame. Example: 2.5. (Number, Percentage)",
      "volume": "The total number of shares or contracts traded during a given period (typically daily). Example: 105000000. (Number)"
    }
  },
  {
    "name": "Top Traded Stocks API",
    "description": "Top Traded Stocks API delivers a live leaderboard of highest-volume equities—cutting through the noise to show where liquidity and attention are concentrated each session.",
    "category": "market_movers_volume",
    "use_cases": [
      "route orders to thickest liquidity names",
      "back-test volume-based factors",
      "surface conversation starters for broadcasters",
      "alert algo desks to unusual activity spikes",
      "feed social-app leaderboards"
    ],
    "parameters": {
      "required": {},
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "name": "The full legal or common name of the company. Example: \"Apple Inc.\" (String)",
      "price": "The last traded price or intrinsic value of the security or asset. Example: 130.75. (Number)",
      "changesPercentage": "The percentage change in a metric (e.g., price, index value) over a specified time frame. Example: 2.5. (Number, Percentage)",
      "change": "The absolute change in price or value compared to the previous close. Example: \"+1.25\". (String)",
      "volume": "The total number of shares or contracts traded during a given period (typically daily). Example: 105000000. (Number)"
    }
  },
  {
    "name": "Top Traded Stocks API",
    "description": "Grab the day’s most active tickers—ranked by raw share volume—in one no-param request. Perfect for liquidity dashboards, pre-trade analytics, or high-frequency strategy inputs.",
    "category": "market_movers_volume",
    "use_cases": [
      "cross-check dark-pool interest vs lit volume",
      "fuel market-open ‘most active’ TV graphics",
      "train AI sentiment vs volume correlations",
      "benchmark execution algos on liquid names",
      "archive daily volume peaks for research"
    ],
    "parameters": {
      "required": {},
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "name": "The full legal or common name of the company. Example: \"Apple Inc.\" (String)",
      "price": "The last traded price or intrinsic value of the security or asset. Example: 130.75. (Number)",
      "changesPercentage": "The percentage change in a metric (e.g., price, index value) over a specified time frame. Example: 2.5. (Number, Percentage)",
      "change": "The absolute change in price or value compared to the previous close. Example: \"+1.25\". (String)",
      "volume": "The total number of shares or contracts traded during a given period (typically daily). Example: 105000000. (Number)"
    }
  },
  {
    "name": "Global Exchange Market Hours API",
    "description": "Global Exchange Market Hours API returns opening/closing times, timezone, and open-status for a specified exchange symbol—critical for cross-border trading, algo scheduling, and pre-market analytics.",
    "category": "exchange_hours_single",
    "use_cases": [
      "sync algorithm start/stop triggers",
      "display live clock widgets in apps",
      "prevent order routing outside session",
      "convert economic-release times to local market clocks",
      "educate clients on global session overlaps"
    ],
    "parameters": {
      "required": {
        "exchange": "The exchange code or abbreviation to scope results to a specific trading venue. Example: \"NASDAQ\" or \"NYSE\". Filters out tickers not listed on that exchange. (String, optional)"
      },
      "optional": {}
    },
    "response_example": {
      "exchange": "The abbreviated code or name of the exchange where the security is traded. Example: \"NASDAQ\". (String)",
      "name": "The full legal or common name of the company. Example: \"Apple Inc.\" (String)",
      "openingHour": "The local exchange opening hour, typically in HH:MM format. Example: \"09:30\". (String)",
      "closingHour": "The local exchange closing hour, typically in HH:MM format. Example: \"16:00\". (String)",
      "timezone": "The timezone of the exchange or data point, using standard TZ identifiers. Example: \"America/New_York\". (String)",
      "isMarketOpen": "Boolean flag indicating whether the market is currently open for trading. Example: true. (Boolean)"
    }
  },
  {
    "name": "Global Exchange Market Hours API",
    "description": "Feed an `exchange` code (e.g., NYSE, LSE, TSE) and get precise regular-session hours plus real-time open flag—fueling compliance engines, trading-bot schedulers, and global-macro dashboards.",
    "category": "exchange_hours_single",
    "use_cases": [
      "guardrails against after-hours order errors",
      "create world-clock visualizations for traders",
      "align back-test time windows with real sessions",
      "trigger news scrapers at session open",
      "calculate overlap windows for pair trading"
    ],
    "parameters": {
      "required": {
        "exchange": "The exchange code or abbreviation to scope results to a specific trading venue. Example: \"NASDAQ\" or \"NYSE\". Filters out tickers not listed on that exchange. (String, optional)"
      },
      "optional": {}
    },
    "response_example": {
      "exchange": "The abbreviated code or name of the exchange where the security is traded. Example: \"NASDAQ\". (String)",
      "name": "The full legal or common name of the company. Example: \"Apple Inc.\" (String)",
      "openingHour": "The local exchange opening hour, typically in HH:MM format. Example: \"09:30\". (String)",
      "closingHour": "The local exchange closing hour, typically in HH:MM format. Example: \"16:00\". (String)",
      "timezone": "The timezone of the exchange or data point, using standard TZ identifiers. Example: \"America/New_York\". (String)",
      "isMarketOpen": "Boolean flag indicating whether the market is currently open for trading. Example: true. (Boolean)"
    }
  },
  {
    "name": "All Exchange Market Hours API",
    "description": "All Exchange Market Hours API outputs session times and open status for every supported exchange in one shot—essential for global trading desks, portfolio analytics, and travel-desk scheduling.",
    "category": "exchange_hours_all",
    "use_cases": [
      "build rolling ‘markets open now’ banners",
      "map session overlaps for cross-asset strategies",
      "generate holiday calendars automatically",
      "educate interns on world exchange hours",
      "feed global ETF arbitrage engines"
    ],
    "parameters": {
      "required": {},
      "optional": {}
    },
    "response_example": {
      "exchange": "The abbreviated code or name of the exchange where the security is traded. Example: \"NASDAQ\". (String)",
      "name": "The full legal or common name of the company. Example: \"Apple Inc.\" (String)",
      "openingHour": "The local exchange opening hour, typically in HH:MM format. Example: \"09:30\". (String)",
      "closingHour": "The local exchange closing hour, typically in HH:MM format. Example: \"16:00\". (String)",
      "timezone": "The timezone of the exchange or data point, using standard TZ identifiers. Example: \"America/New_York\". (String)",
      "isMarketOpen": "Boolean flag indicating whether the market is currently open for trading. Example: true. (Boolean)"
    }
  },
  {
    "name": "All Exchange Market Hours API",
    "description": "One call, worldwide answers—this endpoint dumps opening and closing times across every major exchange, complete with timezone tags and live open flag. Plug into risk dashboards, global macro research, or travel itineraries for roadshows.",
    "category": "exchange_hours_all",
    "use_cases": [
      "coordinate earnings coverage across timezones",
      "schedule server maintenance outside all sessions",
      "calculate 24-hour volatility segmented by open market",
      "trigger liquidity models by active venues",
      "feed airline-style ‘world clocks’ in trading floors"
    ],
    "parameters": {
      "required": {},
      "optional": {}
    },
    "response_example": {
      "exchange": "The abbreviated code or name of the exchange where the security is traded. Example: \"NASDAQ\". (String)",
      "name": "The full legal or common name of the company. Example: \"Apple Inc.\" (String)",
      "openingHour": "The local exchange opening hour, typically in HH:MM format. Example: \"09:30\". (String)",
      "closingHour": "The local exchange closing hour, typically in HH:MM format. Example: \"16:00\". (String)",
      "timezone": "The timezone of the exchange or data point, using standard TZ identifiers. Example: \"America/New_York\". (String)",
      "isMarketOpen": "Boolean flag indicating whether the market is currently open for trading. Example: true. (Boolean)"
    }
  },
  {
    "name": "FMP Articles API",
    "description": "Pull the latest Financial Modeling Prep editorials—fully enriched with headline, teaser text, tickers, author, hero image, and canonical URL—in a single paginated call. Perfect for news tickers, market-open briefings, and sentiment engines.",
    "category": "news_articles",
    "use_cases": [
      "populate news carousels in trading apps",
      "train headline-sentiment models",
      "create broker daily-wrap e-mails",
      "surface ticker-linked article banners",
      "archive newsroom research feeds"
    ],
    "parameters": {
      "required": {
        "page": "A zero-based integer page index for paginated endpoints. Example: 2 to return the third page of results, given the configured `limit`. (Integer, optional; defaults to 0)",
        "limit": "An integer cap on the number of results returned by the endpoint. Example: 50 to restrict output to the top 50 matches. Must be ≥1 and ≤1000. (Integer, optional; defaults to 100)"
      },
      "optional": {}
    },
    "response_example": {
      "title": "The full title or designation of a fixed-income instrument, bond, or note. Example: \"1.000% Notes due 2022\". (String)",
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "content": "The full body text of a news article, research note, or report. Example: \"Apple reported quarterly revenue above analyst expectations...\". (String)",
      "tickers": "An array of ticker symbols, often used in batch queries or portfolio listings. Example: [\"AAPL\",\"MSFT\",\"GOOGL\"]. (Array of Strings)",
      "image": "A URL pointing to the company’s logo or representative image. Example: \"https://images.financialmodelingprep.com/symbol/AAPL.png\". (String, URL)",
      "link": "A URL linking to supporting documentation or filings for the corporate event or transaction. Example: \"https://www.sec.gov/Archives/edgar/data/849399/000114036125002752/ny20039778x6_s4.htm\". (String, URL)",
      "author": "The author of an article, report, or research note. Example: \"Jane Smith\". (String)",
      "site": "The website or platform hosting the content, such as a news portal or research platform. Example: \"benzinga.com\". (String)"
    }
  },
  {
    "name": "FMP Articles API",
    "description": "One endpoint, zero filters—stream every fresh in-house FMP article in reverse-chronological order. Ideal for intraday dashboards, RSS replacements, or pushing instant-alert webhooks when your covered tickers hit the tape.",
    "category": "news_articles",
    "use_cases": [
      "real-time slack alerts for covered symbols",
      "auto-curate newsletter content",
      "feed generative-AI summarizers",
      "enrich portfolio holdings with story count",
      "back-test news velocity vs price move"
    ],
    "parameters": {
      "required": {
        "page": "A zero-based integer page index for paginated endpoints. Example: 2 to return the third page of results, given the configured `limit`. (Integer, optional; defaults to 0)",
        "limit": "An integer cap on the number of results returned by the endpoint. Example: 50 to restrict output to the top 50 matches. Must be ≥1 and ≤1000. (Integer, optional; defaults to 100)"
      },
      "optional": {}
    },
    "response_example": {
      "title": "The full title or designation of a fixed-income instrument, bond, or note. Example: \"1.000% Notes due 2022\". (String)",
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "content": "The full body text of a news article, research note, or report. Example: \"Apple reported quarterly revenue above analyst expectations...\". (String)",
      "tickers": "An array of ticker symbols, often used in batch queries or portfolio listings. Example: [\"AAPL\",\"MSFT\",\"GOOGL\"]. (Array of Strings)",
      "image": "A URL pointing to the company’s logo or representative image. Example: \"https://images.financialmodelingprep.com/symbol/AAPL.png\". (String, URL)",
      "link": "A URL linking to supporting documentation or filings for the corporate event or transaction. Example: \"https://www.sec.gov/Archives/edgar/data/849399/000114036125002752/ny20039778x6_s4.htm\". (String, URL)",
      "author": "The author of an article, report, or research note. Example: \"Jane Smith\". (String)",
      "site": "The website or platform hosting the content, such as a news portal or research platform. Example: \"benzinga.com\". (String)"
    }
  },
  {
    "name": "General News API",
    "description": "General News API aggregates the broadest market headlines from top wires (CNBC, Reuters, WSJ, etc.). Filter by date range plus pagination to power full-featured news walls and macro dashboards.",
    "category": "news_general",
    "use_cases": [
      "build global-macro timeline apps",
      "train LLMs on market narrative",
      "generate push alerts for geopolitical risk",
      "compile daily ‘what moved markets’ memos",
      "drive multi-asset news heat-maps"
    ],
    "parameters": {
      "required": {
        "from": "The ISO 8601 date (YYYY-MM-DD) indicating the start of a time range filter. Example: \"2025-01-01\" to include only data from January 1, 2025 onward. Must be ≤ `to`. (String, Date, optional)",
        "to": "The ISO 8601 date (YYYY-MM-DD) indicating the end of a time range filter. Example: \"2025-12-31\" to include only data up to December 31, 2025. Must be ≥ `from`. (String, Date, optional)",
        "page": "A zero-based integer page index for paginated endpoints. Example: 2 to return the third page of results, given the configured `limit`. (Integer, optional; defaults to 0)",
        "limit": "An integer cap on the number of results returned by the endpoint. Example: 50 to restrict output to the top 50 matches. Must be ≥1 and ≤1000. (Integer, optional; defaults to 100)"
      },
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "publishedDate": "The date and time when the news article or analyst report was published, in ISO 8601 format. Example: \"2025-01-21T01:24:32.000Z\". (String, DateTime)",
      "publisher": "The publisher or media outlet responsible for the content. Example: \"Benzinga\". (String)",
      "title": "The full title or designation of a fixed-income instrument, bond, or note. Example: \"1.000% Notes due 2022\". (String)",
      "image": "A URL pointing to the company’s logo or representative image. Example: \"https://images.financialmodelingprep.com/symbol/AAPL.png\". (String, URL)",
      "site": "The website or platform hosting the content, such as a news portal or research platform. Example: \"benzinga.com\". (String)",
      "text": "The plaintext content of a research report, article, or note. Example: \"Full transcript of earnings call...\". (String)",
      "url": "The URL linking to the full document, filing, or resource, often on a regulatory or official site. Example: \"https://www.sec.gov/Archives/edgar/data/1454889/000114336225000044/SCCR020325.pdf\". (String, URL)"
    }
  },
  {
    "name": "General News API",
    "description": "Fire a date-window query and receive cross-asset market headlines—complete with publisher, blurb, image, and deep link—ready for any newsreader UI or NLP pipeline.",
    "category": "news_general",
    "use_cases": [
      "dashboard macroeconomic headline flow",
      "auto-summarize risk events for PMs",
      "identify news sentiment vs sector moves",
      "populate smart beta ETFs’ disclosure pages",
      "create curriculum datasets for finance-GPT"
    ],
    "parameters": {
      "required": {
        "from": "The ISO 8601 date (YYYY-MM-DD) indicating the start of a time range filter. Example: \"2025-01-01\" to include only data from January 1, 2025 onward. Must be ≤ `to`. (String, Date, optional)",
        "to": "The ISO 8601 date (YYYY-MM-DD) indicating the end of a time range filter. Example: \"2025-12-31\" to include only data up to December 31, 2025. Must be ≥ `from`. (String, Date, optional)",
        "page": "A zero-based integer page index for paginated endpoints. Example: 2 to return the third page of results, given the configured `limit`. (Integer, optional; defaults to 0)",
        "limit": "An integer cap on the number of results returned by the endpoint. Example: 50 to restrict output to the top 50 matches. Must be ≥1 and ≤1000. (Integer, optional; defaults to 100)"
      },
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "publishedDate": "The date and time when the news article or analyst report was published, in ISO 8601 format. Example: \"2025-01-21T01:24:32.000Z\". (String, DateTime)",
      "publisher": "The publisher or media outlet responsible for the content. Example: \"Benzinga\". (String)",
      "title": "The full title or designation of a fixed-income instrument, bond, or note. Example: \"1.000% Notes due 2022\". (String)",
      "image": "A URL pointing to the company’s logo or representative image. Example: \"https://images.financialmodelingprep.com/symbol/AAPL.png\". (String, URL)",
      "site": "The website or platform hosting the content, such as a news portal or research platform. Example: \"benzinga.com\". (String)",
      "text": "The plaintext content of a research report, article, or note. Example: \"Full transcript of earnings call...\". (String)",
      "url": "The URL linking to the full document, filing, or resource, often on a regulatory or official site. Example: \"https://www.sec.gov/Archives/edgar/data/1454889/000114336225000044/SCCR020325.pdf\". (String, URL)"
    }
  },
  {
    "name": "Press Releases API",
    "description": "Press Releases API pipes raw corporate announcements—in earnings-wire format—direct from Business Wire, PR Newswire, and more. Instant insight into guidance, M&A, and litigation headlines.",
    "category": "news_press_releases",
    "use_cases": [
      "feed earnings alert dashboards",
      "trigger algo trading on headline keywords",
      "archive disclosure compliance libraries",
      "surface IR feeds on investor portals",
      "monitor class-action suit notices"
    ],
    "parameters": {
      "required": {
        "from": "The ISO 8601 date (YYYY-MM-DD) indicating the start of a time range filter. Example: \"2025-01-01\" to include only data from January 1, 2025 onward. Must be ≤ `to`. (String, Date, optional)",
        "to": "The ISO 8601 date (YYYY-MM-DD) indicating the end of a time range filter. Example: \"2025-12-31\" to include only data up to December 31, 2025. Must be ≥ `from`. (String, Date, optional)",
        "page": "A zero-based integer page index for paginated endpoints. Example: 2 to return the third page of results, given the configured `limit`. (Integer, optional; defaults to 0)",
        "limit": "An integer cap on the number of results returned by the endpoint. Example: 50 to restrict output to the top 50 matches. Must be ≥1 and ≤1000. (Integer, optional; defaults to 100)"
      },
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "publishedDate": "The date and time when the news article or analyst report was published, in ISO 8601 format. Example: \"2025-01-21T01:24:32.000Z\". (String, DateTime)",
      "publisher": "The publisher or media outlet responsible for the content. Example: \"Benzinga\". (String)",
      "title": "The full title or designation of a fixed-income instrument, bond, or note. Example: \"1.000% Notes due 2022\". (String)",
      "image": "A URL pointing to the company’s logo or representative image. Example: \"https://images.financialmodelingprep.com/symbol/AAPL.png\". (String, URL)",
      "site": "The website or platform hosting the content, such as a news portal or research platform. Example: \"benzinga.com\". (String)",
      "text": "The plaintext content of a research report, article, or note. Example: \"Full transcript of earnings call...\". (String)",
      "url": "The URL linking to the full document, filing, or resource, often on a regulatory or official site. Example: \"https://www.sec.gov/Archives/edgar/data/1454889/000114336225000044/SCCR020325.pdf\". (String, URL)"
    }
  },
  {
    "name": "Press Releases API",
    "description": "Need raw company wires fast? This endpoint streams the latest PRs across exchanges—metadata-rich and ticker-tagged—ready for investor-relations apps, compliance tools, or machine-read earnings parsers.",
    "category": "news_press_releases",
    "use_cases": [
      "build real-time PR ticker at brokerages",
      "detect M&A or strategic review language",
      "enrich portfolio monitoring with corporate actions",
      "generate AI summaries for retail push",
      "fuel sentiment models around guidance"
    ],
    "parameters": {
      "required": {
        "from": "The ISO 8601 date (YYYY-MM-DD) indicating the start of a time range filter. Example: \"2025-01-01\" to include only data from January 1, 2025 onward. Must be ≤ `to`. (String, Date, optional)",
        "to": "The ISO 8601 date (YYYY-MM-DD) indicating the end of a time range filter. Example: \"2025-12-31\" to include only data up to December 31, 2025. Must be ≥ `from`. (String, Date, optional)",
        "page": "A zero-based integer page index for paginated endpoints. Example: 2 to return the third page of results, given the configured `limit`. (Integer, optional; defaults to 0)",
        "limit": "An integer cap on the number of results returned by the endpoint. Example: 50 to restrict output to the top 50 matches. Must be ≥1 and ≤1000. (Integer, optional; defaults to 100)"
      },
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "publishedDate": "The date and time when the news article or analyst report was published, in ISO 8601 format. Example: \"2025-01-21T01:24:32.000Z\". (String, DateTime)",
      "publisher": "The publisher or media outlet responsible for the content. Example: \"Benzinga\". (String)",
      "title": "The full title or designation of a fixed-income instrument, bond, or note. Example: \"1.000% Notes due 2022\". (String)",
      "image": "A URL pointing to the company’s logo or representative image. Example: \"https://images.financialmodelingprep.com/symbol/AAPL.png\". (String, URL)",
      "site": "The website or platform hosting the content, such as a news portal or research platform. Example: \"benzinga.com\". (String)",
      "text": "The plaintext content of a research report, article, or note. Example: \"Full transcript of earnings call...\". (String)",
      "url": "The URL linking to the full document, filing, or resource, often on a regulatory or official site. Example: \"https://www.sec.gov/Archives/edgar/data/1454889/000114336225000044/SCCR020325.pdf\". (String, URL)"
    }
  },
  {
    "name": "Stock News API",
    "description": "Stock News API curates equity-specific headlines from financial media and blogs, tagged with ticker symbols for plug-and-play integration into quote pages or trading algos.",
    "category": "news_stock",
    "use_cases": [
      "display company-level news tabs",
      "run event-driven back-tests",
      "spot unusual media-coverage spikes",
      "train symbol-level sentiment indicators",
      "feed CRM alerts for sales-trader desks"
    ],
    "parameters": {
      "required": {
        "from": "The ISO 8601 date (YYYY-MM-DD) indicating the start of a time range filter. Example: \"2025-01-01\" to include only data from January 1, 2025 onward. Must be ≤ `to`. (String, Date, optional)",
        "to": "The ISO 8601 date (YYYY-MM-DD) indicating the end of a time range filter. Example: \"2025-12-31\" to include only data up to December 31, 2025. Must be ≥ `from`. (String, Date, optional)",
        "page": "A zero-based integer page index for paginated endpoints. Example: 2 to return the third page of results, given the configured `limit`. (Integer, optional; defaults to 0)",
        "limit": "An integer cap on the number of results returned by the endpoint. Example: 50 to restrict output to the top 50 matches. Must be ≥1 and ≤1000. (Integer, optional; defaults to 100)"
      },
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "publishedDate": "The date and time when the news article or analyst report was published, in ISO 8601 format. Example: \"2025-01-21T01:24:32.000Z\". (String, DateTime)",
      "publisher": "The publisher or media outlet responsible for the content. Example: \"Benzinga\". (String)",
      "title": "The full title or designation of a fixed-income instrument, bond, or note. Example: \"1.000% Notes due 2022\". (String)",
      "image": "A URL pointing to the company’s logo or representative image. Example: \"https://images.financialmodelingprep.com/symbol/AAPL.png\". (String, URL)",
      "site": "The website or platform hosting the content, such as a news portal or research platform. Example: \"benzinga.com\". (String)",
      "text": "The plaintext content of a research report, article, or note. Example: \"Full transcript of earnings call...\". (String)",
      "url": "The URL linking to the full document, filing, or resource, often on a regulatory or official site. Example: \"https://www.sec.gov/Archives/edgar/data/1454889/000114336225000044/SCCR020325.pdf\". (String, URL)"
    }
  },
  {
    "name": "Stock News API",
    "description": "Fire a date-range query and receive the freshest stock-coded headlines, ideal for populating watch-list widgets or piping into AI co-pilots for traders.",
    "category": "news_stock",
    "use_cases": [
      "annotate price charts with news markers",
      "identify headline-driven volatility",
      "automate sell-side note generation",
      "benchmark news velocity vs option IV",
      "scrape alternative data signals"
    ],
    "parameters": {
      "required": {
        "from": "The ISO 8601 date (YYYY-MM-DD) indicating the start of a time range filter. Example: \"2025-01-01\" to include only data from January 1, 2025 onward. Must be ≤ `to`. (String, Date, optional)",
        "to": "The ISO 8601 date (YYYY-MM-DD) indicating the end of a time range filter. Example: \"2025-12-31\" to include only data up to December 31, 2025. Must be ≥ `from`. (String, Date, optional)",
        "page": "A zero-based integer page index for paginated endpoints. Example: 2 to return the third page of results, given the configured `limit`. (Integer, optional; defaults to 0)",
        "limit": "An integer cap on the number of results returned by the endpoint. Example: 50 to restrict output to the top 50 matches. Must be ≥1 and ≤1000. (Integer, optional; defaults to 100)"
      },
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "publishedDate": "The date and time when the news article or analyst report was published, in ISO 8601 format. Example: \"2025-01-21T01:24:32.000Z\". (String, DateTime)",
      "publisher": "The publisher or media outlet responsible for the content. Example: \"Benzinga\". (String)",
      "title": "The full title or designation of a fixed-income instrument, bond, or note. Example: \"1.000% Notes due 2022\". (String)",
      "image": "A URL pointing to the company’s logo or representative image. Example: \"https://images.financialmodelingprep.com/symbol/AAPL.png\". (String, URL)",
      "site": "The website or platform hosting the content, such as a news portal or research platform. Example: \"benzinga.com\". (String)",
      "text": "The plaintext content of a research report, article, or note. Example: \"Full transcript of earnings call...\". (String)",
      "url": "The URL linking to the full document, filing, or resource, often on a regulatory or official site. Example: \"https://www.sec.gov/Archives/edgar/data/1454889/000114336225000044/SCCR020325.pdf\". (String, URL)"
    }
  },
  {
    "name": "Crypto News API",
    "description": "Crypto News API streams real-time digital-asset coverage—BTC, ETH, altcoins—across specialist sites and mainstream outlets, delivering headline, summary, image, and link.",
    "category": "news_crypto",
    "use_cases": [
      "drive crypto-focused mobile feeds",
      "alert HFT desks to regulatory chatter",
      "feed L2 on-chain analytics dashboards",
      "generate sentiment indices for tokens",
      "illustrate DeFi newsletter stories"
    ],
    "parameters": {
      "required": {
        "from": "The ISO 8601 date (YYYY-MM-DD) indicating the start of a time range filter. Example: \"2025-01-01\" to include only data from January 1, 2025 onward. Must be ≤ `to`. (String, Date, optional)",
        "to": "The ISO 8601 date (YYYY-MM-DD) indicating the end of a time range filter. Example: \"2025-12-31\" to include only data up to December 31, 2025. Must be ≥ `from`. (String, Date, optional)",
        "page": "A zero-based integer page index for paginated endpoints. Example: 2 to return the third page of results, given the configured `limit`. (Integer, optional; defaults to 0)",
        "limit": "An integer cap on the number of results returned by the endpoint. Example: 50 to restrict output to the top 50 matches. Must be ≥1 and ≤1000. (Integer, optional; defaults to 100)"
      },
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "publishedDate": "The date and time when the news article or analyst report was published, in ISO 8601 format. Example: \"2025-01-21T01:24:32.000Z\". (String, DateTime)",
      "publisher": "The publisher or media outlet responsible for the content. Example: \"Benzinga\". (String)",
      "title": "The full title or designation of a fixed-income instrument, bond, or note. Example: \"1.000% Notes due 2022\". (String)",
      "image": "A URL pointing to the company’s logo or representative image. Example: \"https://images.financialmodelingprep.com/symbol/AAPL.png\". (String, URL)",
      "site": "The website or platform hosting the content, such as a news portal or research platform. Example: \"benzinga.com\". (String)",
      "text": "The plaintext content of a research report, article, or note. Example: \"Full transcript of earnings call...\". (String)",
      "url": "The URL linking to the full document, filing, or resource, often on a regulatory or official site. Example: \"https://www.sec.gov/Archives/edgar/data/1454889/000114336225000044/SCCR020325.pdf\". (String, URL)"
    }
  },
  {
    "name": "Crypto News API",
    "description": "Instantly aggregate the crypto market’s narrative—macro, exchange hacks, memecoin spikes—filtered by date range and volume-friendly paging for lightweight mobile consumption.",
    "category": "news_crypto",
    "use_cases": [
      "populate coin-detail pages with news",
      "back-test tweet vs headline synergy",
      "create regulatory-risk monitors",
      "feed voice-assistant ‘crypto briefing’",
      "track sentiment shifts before price moves"
    ],
    "parameters": {
      "required": {
        "from": "The ISO 8601 date (YYYY-MM-DD) indicating the start of a time range filter. Example: \"2025-01-01\" to include only data from January 1, 2025 onward. Must be ≤ `to`. (String, Date, optional)",
        "to": "The ISO 8601 date (YYYY-MM-DD) indicating the end of a time range filter. Example: \"2025-12-31\" to include only data up to December 31, 2025. Must be ≥ `from`. (String, Date, optional)",
        "page": "A zero-based integer page index for paginated endpoints. Example: 2 to return the third page of results, given the configured `limit`. (Integer, optional; defaults to 0)",
        "limit": "An integer cap on the number of results returned by the endpoint. Example: 50 to restrict output to the top 50 matches. Must be ≥1 and ≤1000. (Integer, optional; defaults to 100)"
      },
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "publishedDate": "The date and time when the news article or analyst report was published, in ISO 8601 format. Example: \"2025-01-21T01:24:32.000Z\". (String, DateTime)",
      "publisher": "The publisher or media outlet responsible for the content. Example: \"Benzinga\". (String)",
      "title": "The full title or designation of a fixed-income instrument, bond, or note. Example: \"1.000% Notes due 2022\". (String)",
      "image": "A URL pointing to the company’s logo or representative image. Example: \"https://images.financialmodelingprep.com/symbol/AAPL.png\". (String, URL)",
      "site": "The website or platform hosting the content, such as a news portal or research platform. Example: \"benzinga.com\". (String)",
      "text": "The plaintext content of a research report, article, or note. Example: \"Full transcript of earnings call...\". (String)",
      "url": "The URL linking to the full document, filing, or resource, often on a regulatory or official site. Example: \"https://www.sec.gov/Archives/edgar/data/1454889/000114336225000044/SCCR020325.pdf\". (String, URL)"
    }
  },
  {
    "name": "Forex News API",
    "description": "Forex News API curates FX and macro-commodity headlines—EUR/USD, USD/JPY, XAU/USD—complete with timestamps and blurbs, enabling currency strategists to stay ahead of central-bank-driven swings.",
    "category": "news_forex",
    "use_cases": [
      "embed FX news ribbons in charting tools",
      "train FX volatility prediction models",
      "alert corporate treasurers to rate-hike chatter",
      "correlate news flow and spot moves",
      "feed economic-calendar companions"
    ],
    "parameters": {
      "required": {
        "from": "The ISO 8601 date (YYYY-MM-DD) indicating the start of a time range filter. Example: \"2025-01-01\" to include only data from January 1, 2025 onward. Must be ≤ `to`. (String, Date, optional)",
        "to": "The ISO 8601 date (YYYY-MM-DD) indicating the end of a time range filter. Example: \"2025-12-31\" to include only data up to December 31, 2025. Must be ≥ `from`. (String, Date, optional)",
        "page": "A zero-based integer page index for paginated endpoints. Example: 2 to return the third page of results, given the configured `limit`. (Integer, optional; defaults to 0)",
        "limit": "An integer cap on the number of results returned by the endpoint. Example: 50 to restrict output to the top 50 matches. Must be ≥1 and ≤1000. (Integer, optional; defaults to 100)"
      },
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "publishedDate": "The date and time when the news article or analyst report was published, in ISO 8601 format. Example: \"2025-01-21T01:24:32.000Z\". (String, DateTime)",
      "publisher": "The publisher or media outlet responsible for the content. Example: \"Benzinga\". (String)",
      "title": "The full title or designation of a fixed-income instrument, bond, or note. Example: \"1.000% Notes due 2022\". (String)",
      "image": "A URL pointing to the company’s logo or representative image. Example: \"https://images.financialmodelingprep.com/symbol/AAPL.png\". (String, URL)",
      "site": "The website or platform hosting the content, such as a news portal or research platform. Example: \"benzinga.com\". (String)",
      "text": "The plaintext content of a research report, article, or note. Example: \"Full transcript of earnings call...\". (String)",
      "url": "The URL linking to the full document, filing, or resource, often on a regulatory or official site. Example: \"https://www.sec.gov/Archives/edgar/data/1454889/000114336225000044/SCCR020325.pdf\". (String, URL)"
    }
  },
  {
    "name": "Forex News API",
    "description": "One query, all things FX—this endpoint delivers currency-pair headlines and macro-commodity blurbs for traders needing fast context during rallies or flash crashes.",
    "category": "news_forex",
    "use_cases": [
      "populate MT4/MT5 plugin news panels",
      "generate morning FX recaps",
      "monitor central-bank statements",
      "feed automated hedge-rebalancing rules",
      "study news-driven pip jumps"
    ],
    "parameters": {
      "required": {
        "from": "The ISO 8601 date (YYYY-MM-DD) indicating the start of a time range filter. Example: \"2025-01-01\" to include only data from January 1, 2025 onward. Must be ≤ `to`. (String, Date, optional)",
        "to": "The ISO 8601 date (YYYY-MM-DD) indicating the end of a time range filter. Example: \"2025-12-31\" to include only data up to December 31, 2025. Must be ≥ `from`. (String, Date, optional)",
        "page": "A zero-based integer page index for paginated endpoints. Example: 2 to return the third page of results, given the configured `limit`. (Integer, optional; defaults to 0)",
        "limit": "An integer cap on the number of results returned by the endpoint. Example: 50 to restrict output to the top 50 matches. Must be ≥1 and ≤1000. (Integer, optional; defaults to 100)"
      },
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "publishedDate": "The date and time when the news article or analyst report was published, in ISO 8601 format. Example: \"2025-01-21T01:24:32.000Z\". (String, DateTime)",
      "publisher": "The publisher or media outlet responsible for the content. Example: \"Benzinga\". (String)",
      "title": "The full title or designation of a fixed-income instrument, bond, or note. Example: \"1.000% Notes due 2022\". (String)",
      "image": "A URL pointing to the company’s logo or representative image. Example: \"https://images.financialmodelingprep.com/symbol/AAPL.png\". (String, URL)",
      "site": "The website or platform hosting the content, such as a news portal or research platform. Example: \"benzinga.com\". (String)",
      "text": "The plaintext content of a research report, article, or note. Example: \"Full transcript of earnings call...\". (String)",
      "url": "The URL linking to the full document, filing, or resource, often on a regulatory or official site. Example: \"https://www.sec.gov/Archives/edgar/data/1454889/000114336225000044/SCCR020325.pdf\". (String, URL)"
    }
  },
  {
    "name": "Search Press Releases API",
    "description": "Search Press Releases API filters the PR wire by one or more symbols—returning company-specific announcements for earnings, product launches, and legal updates.",
    "category": "news_press_releases_search",
    "use_cases": [
      "embed AAPL-only PR feed on IR site",
      "trigger sentiment analysis on holdings",
      "alert analysts to surprise pre-market releases",
      "monitor class-action notices by ticker",
      "compile historical PR corpus for NLP"
    ],
    "parameters": {
      "required": {
        "symbols": "A comma-separated list of ticker symbols used to request data for multiple securities in a single call. Example: \"AAPL,MSFT,GOOGL\". (String, optional)"
      },
      "optional": {
        "from": "The ISO 8601 date (YYYY-MM-DD) indicating the start of a time range filter. Example: \"2025-01-01\" to include only data from January 1, 2025 onward. Must be ≤ `to`. (String, Date, optional)",
        "to": "The ISO 8601 date (YYYY-MM-DD) indicating the end of a time range filter. Example: \"2025-12-31\" to include only data up to December 31, 2025. Must be ≥ `from`. (String, Date, optional)",
        "page": "A zero-based integer page index for paginated endpoints. Example: 2 to return the third page of results, given the configured `limit`. (Integer, optional; defaults to 0)",
        "limit": "An integer cap on the number of results returned by the endpoint. Example: 50 to restrict output to the top 50 matches. Must be ≥1 and ≤1000. (Integer, optional; defaults to 100)"
      }
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "publishedDate": "The date and time when the news article or analyst report was published, in ISO 8601 format. Example: \"2025-01-21T01:24:32.000Z\". (String, DateTime)",
      "publisher": "The publisher or media outlet responsible for the content. Example: \"Benzinga\". (String)",
      "title": "The full title or designation of a fixed-income instrument, bond, or note. Example: \"1.000% Notes due 2022\". (String)",
      "image": "A URL pointing to the company’s logo or representative image. Example: \"https://images.financialmodelingprep.com/symbol/AAPL.png\". (String, URL)",
      "site": "The website or platform hosting the content, such as a news portal or research platform. Example: \"benzinga.com\". (String)",
      "text": "The plaintext content of a research report, article, or note. Example: \"Full transcript of earnings call...\". (String)",
      "url": "The URL linking to the full document, filing, or resource, often on a regulatory or official site. Example: \"https://www.sec.gov/Archives/edgar/data/1454889/000114336225000044/SCCR020325.pdf\". (String, URL)"
    }
  },
  {
    "name": "Search Press Releases API",
    "description": "Point this endpoint at any ticker list to fetch only those companies’ press releases—handy for focused watch lists or compliance pipelines needing exact disclosure streams.",
    "category": "news_press_releases_search",
    "use_cases": [
      "curate sector-specific PR newsletters",
      "feed ML models that link PR tone to price jumps",
      "detect dividend or buyback declarations",
      "scrape product launch cadence by firm",
      "store legal action updates per holding"
    ],
    "parameters": {
      "required": {
        "symbols": "A comma-separated list of ticker symbols used to request data for multiple securities in a single call. Example: \"AAPL,MSFT,GOOGL\". (String, optional)"
      },
      "optional": {
        "from": "The ISO 8601 date (YYYY-MM-DD) indicating the start of a time range filter. Example: \"2025-01-01\" to include only data from January 1, 2025 onward. Must be ≤ `to`. (String, Date, optional)",
        "to": "The ISO 8601 date (YYYY-MM-DD) indicating the end of a time range filter. Example: \"2025-12-31\" to include only data up to December 31, 2025. Must be ≥ `from`. (String, Date, optional)",
        "page": "A zero-based integer page index for paginated endpoints. Example: 2 to return the third page of results, given the configured `limit`. (Integer, optional; defaults to 0)",
        "limit": "An integer cap on the number of results returned by the endpoint. Example: 50 to restrict output to the top 50 matches. Must be ≥1 and ≤1000. (Integer, optional; defaults to 100)"
      }
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "publishedDate": "The date and time when the news article or analyst report was published, in ISO 8601 format. Example: \"2025-01-21T01:24:32.000Z\". (String, DateTime)",
      "publisher": "The publisher or media outlet responsible for the content. Example: \"Benzinga\". (String)",
      "title": "The full title or designation of a fixed-income instrument, bond, or note. Example: \"1.000% Notes due 2022\". (String)",
      "image": "A URL pointing to the company’s logo or representative image. Example: \"https://images.financialmodelingprep.com/symbol/AAPL.png\". (String, URL)",
      "site": "The website or platform hosting the content, such as a news portal or research platform. Example: \"benzinga.com\". (String)",
      "text": "The plaintext content of a research report, article, or note. Example: \"Full transcript of earnings call...\". (String)",
      "url": "The URL linking to the full document, filing, or resource, often on a regulatory or official site. Example: \"https://www.sec.gov/Archives/edgar/data/1454889/000114336225000044/SCCR020325.pdf\". (String, URL)"
    }
  },
  {
    "name": "Search Stock News API",
    "description": "Search Stock News API surfaces headlines for specific tickers—ideal for watch-list widgets, portfolio alerts, or bespoke research dashboards.",
    "category": "news_stock_search",
    "use_cases": [
      "push trader alerts on holdings",
      "run symbol-level news sentiment studies",
      "back-fill news gaps for historical testing",
      "integrate with charting-platform news tabs",
      "filter spam out of universal feed"
    ],
    "parameters": {
      "required": {
        "symbols": "A comma-separated list of ticker symbols used to request data for multiple securities in a single call. Example: \"AAPL,MSFT,GOOGL\". (String, optional)"
      },
      "optional": {
        "from": "The ISO 8601 date (YYYY-MM-DD) indicating the start of a time range filter. Example: \"2025-01-01\" to include only data from January 1, 2025 onward. Must be ≤ `to`. (String, Date, optional)",
        "to": "The ISO 8601 date (YYYY-MM-DD) indicating the end of a time range filter. Example: \"2025-12-31\" to include only data up to December 31, 2025. Must be ≥ `from`. (String, Date, optional)",
        "page": "A zero-based integer page index for paginated endpoints. Example: 2 to return the third page of results, given the configured `limit`. (Integer, optional; defaults to 0)",
        "limit": "An integer cap on the number of results returned by the endpoint. Example: 50 to restrict output to the top 50 matches. Must be ≥1 and ≤1000. (Integer, optional; defaults to 100)"
      }
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "publishedDate": "The date and time when the news article or analyst report was published, in ISO 8601 format. Example: \"2025-01-21T01:24:32.000Z\". (String, DateTime)",
      "publisher": "The publisher or media outlet responsible for the content. Example: \"Benzinga\". (String)",
      "title": "The full title or designation of a fixed-income instrument, bond, or note. Example: \"1.000% Notes due 2022\". (String)",
      "image": "A URL pointing to the company’s logo or representative image. Example: \"https://images.financialmodelingprep.com/symbol/AAPL.png\". (String, URL)",
      "site": "The website or platform hosting the content, such as a news portal or research platform. Example: \"benzinga.com\". (String)",
      "text": "The plaintext content of a research report, article, or note. Example: \"Full transcript of earnings call...\". (String)",
      "url": "The URL linking to the full document, filing, or resource, often on a regulatory or official site. Example: \"https://www.sec.gov/Archives/edgar/data/1454889/000114336225000044/SCCR020325.pdf\". (String, URL)"
    }
  },
  {
    "name": "Search Stock News API",
    "description": "Query any combination of tickers and date range to pull only those equity headlines—great for building per-symbol news archives or feeding LLM context windows before generating analysis.",
    "category": "news_stock_search",
    "use_cases": [
      "accelerate sell-side research drafting",
      "overlay last-hour headlines on live charts",
      "generate custom Slack alerts for big holders",
      "fuel robo-advisor commentary on holdings",
      "link price spikes to specific news events"
    ],
    "parameters": {
      "required": {
        "symbols": "A comma-separated list of ticker symbols used to request data for multiple securities in a single call. Example: \"AAPL,MSFT,GOOGL\". (String, optional)"
      },
      "optional": {
        "from": "The ISO 8601 date (YYYY-MM-DD) indicating the start of a time range filter. Example: \"2025-01-01\" to include only data from January 1, 2025 onward. Must be ≤ `to`. (String, Date, optional)",
        "to": "The ISO 8601 date (YYYY-MM-DD) indicating the end of a time range filter. Example: \"2025-12-31\" to include only data up to December 31, 2025. Must be ≥ `from`. (String, Date, optional)",
        "page": "A zero-based integer page index for paginated endpoints. Example: 2 to return the third page of results, given the configured `limit`. (Integer, optional; defaults to 0)",
        "limit": "An integer cap on the number of results returned by the endpoint. Example: 50 to restrict output to the top 50 matches. Must be ≥1 and ≤1000. (Integer, optional; defaults to 100)"
      }
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "publishedDate": "The date and time when the news article or analyst report was published, in ISO 8601 format. Example: \"2025-01-21T01:24:32.000Z\". (String, DateTime)",
      "publisher": "The publisher or media outlet responsible for the content. Example: \"Benzinga\". (String)",
      "title": "The full title or designation of a fixed-income instrument, bond, or note. Example: \"1.000% Notes due 2022\". (String)",
      "image": "A URL pointing to the company’s logo or representative image. Example: \"https://images.financialmodelingprep.com/symbol/AAPL.png\". (String, URL)",
      "site": "The website or platform hosting the content, such as a news portal or research platform. Example: \"benzinga.com\". (String)",
      "text": "The plaintext content of a research report, article, or note. Example: \"Full transcript of earnings call...\". (String)",
      "url": "The URL linking to the full document, filing, or resource, often on a regulatory or official site. Example: \"https://www.sec.gov/Archives/edgar/data/1454889/000114336225000044/SCCR020325.pdf\". (String, URL)"
    }
  },
  {
    "name": "Search Crypto News API",
    "description": "Search Crypto News API retrieves coin-specific headlines—e.g., BTCUSD, ETHUSD—enabling focused digital-asset research, alerting, and portfolio commentary.",
    "category": "news_crypto_search",
    "use_cases": [
      "monitor regulatory talk per coin",
      "drive token-specific sentiment dashboards",
      "fuel trading-bot decision trees",
      "trigger DeFi protocol alerts",
      "back-test headline impact on spot prices"
    ],
    "parameters": {
      "required": {
        "symbols": "A comma-separated list of ticker symbols used to request data for multiple securities in a single call. Example: \"AAPL,MSFT,GOOGL\". (String, optional)"
      },
      "optional": {
        "from": "The ISO 8601 date (YYYY-MM-DD) indicating the start of a time range filter. Example: \"2025-01-01\" to include only data from January 1, 2025 onward. Must be ≤ `to`. (String, Date, optional)",
        "to": "The ISO 8601 date (YYYY-MM-DD) indicating the end of a time range filter. Example: \"2025-12-31\" to include only data up to December 31, 2025. Must be ≥ `from`. (String, Date, optional)",
        "page": "A zero-based integer page index for paginated endpoints. Example: 2 to return the third page of results, given the configured `limit`. (Integer, optional; defaults to 0)",
        "limit": "An integer cap on the number of results returned by the endpoint. Example: 50 to restrict output to the top 50 matches. Must be ≥1 and ≤1000. (Integer, optional; defaults to 100)"
      }
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "publishedDate": "The date and time when the news article or analyst report was published, in ISO 8601 format. Example: \"2025-01-21T01:24:32.000Z\". (String, DateTime)",
      "publisher": "The publisher or media outlet responsible for the content. Example: \"Benzinga\". (String)",
      "title": "The full title or designation of a fixed-income instrument, bond, or note. Example: \"1.000% Notes due 2022\". (String)",
      "image": "A URL pointing to the company’s logo or representative image. Example: \"https://images.financialmodelingprep.com/symbol/AAPL.png\". (String, URL)",
      "site": "The website or platform hosting the content, such as a news portal or research platform. Example: \"benzinga.com\". (String)",
      "text": "The plaintext content of a research report, article, or note. Example: \"Full transcript of earnings call...\". (String)",
      "url": "The URL linking to the full document, filing, or resource, often on a regulatory or official site. Example: \"https://www.sec.gov/Archives/edgar/data/1454889/000114336225000044/SCCR020325.pdf\". (String, URL)"
    }
  },
  {
    "name": "Search Crypto News API",
    "description": "Slice the crypto narrative by symbol—this endpoint returns only the coins you care about, filtered by optional date window for lightweight, latency-sensitive use cases.",
    "category": "news_crypto_search",
    "use_cases": [
      "curate per-coin Telegram alerts",
      "drive NFT platform ‘coin news’ sidebars",
      "run on-chain correlation studies",
      "detect FUD/FOMO cycles",
      "populate VC deal-sourcing dashboards"
    ],
    "parameters": {
      "required": {
        "symbols": "A comma-separated list of ticker symbols used to request data for multiple securities in a single call. Example: \"AAPL,MSFT,GOOGL\". (String, optional)"
      },
      "optional": {
        "from": "The ISO 8601 date (YYYY-MM-DD) indicating the start of a time range filter. Example: \"2025-01-01\" to include only data from January 1, 2025 onward. Must be ≤ `to`. (String, Date, optional)",
        "to": "The ISO 8601 date (YYYY-MM-DD) indicating the end of a time range filter. Example: \"2025-12-31\" to include only data up to December 31, 2025. Must be ≥ `from`. (String, Date, optional)",
        "page": "A zero-based integer page index for paginated endpoints. Example: 2 to return the third page of results, given the configured `limit`. (Integer, optional; defaults to 0)",
        "limit": "An integer cap on the number of results returned by the endpoint. Example: 50 to restrict output to the top 50 matches. Must be ≥1 and ≤1000. (Integer, optional; defaults to 100)"
      }
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "publishedDate": "The date and time when the news article or analyst report was published, in ISO 8601 format. Example: \"2025-01-21T01:24:32.000Z\". (String, DateTime)",
      "publisher": "The publisher or media outlet responsible for the content. Example: \"Benzinga\". (String)",
      "title": "The full title or designation of a fixed-income instrument, bond, or note. Example: \"1.000% Notes due 2022\". (String)",
      "image": "A URL pointing to the company’s logo or representative image. Example: \"https://images.financialmodelingprep.com/symbol/AAPL.png\". (String, URL)",
      "site": "The website or platform hosting the content, such as a news portal or research platform. Example: \"benzinga.com\". (String)",
      "text": "The plaintext content of a research report, article, or note. Example: \"Full transcript of earnings call...\". (String)",
      "url": "The URL linking to the full document, filing, or resource, often on a regulatory or official site. Example: \"https://www.sec.gov/Archives/edgar/data/1454889/000114336225000044/SCCR020325.pdf\". (String, URL)"
    }
  },
  {
    "name": "Search Forex News API",
    "description": "Search Forex News API returns targeted currency-pair headlines for symbols like EURUSD or USDJPY—vital for FX desks, macro quants, and economic-calendar mashups.",
    "category": "news_forex_search",
    "use_cases": [
      "alert FX traders to pair-specific news",
      "study headline count vs pip moves",
      "feed voice assistants ‘EURUSD update’",
      "back-test carry strategies with news overlay",
      "build chat-bot Q&A context"
    ],
    "parameters": {
      "required": {
        "symbols": "A comma-separated list of ticker symbols used to request data for multiple securities in a single call. Example: \"AAPL,MSFT,GOOGL\". (String, optional)"
      },
      "optional": {
        "from": "The ISO 8601 date (YYYY-MM-DD) indicating the start of a time range filter. Example: \"2025-01-01\" to include only data from January 1, 2025 onward. Must be ≤ `to`. (String, Date, optional)",
        "to": "The ISO 8601 date (YYYY-MM-DD) indicating the end of a time range filter. Example: \"2025-12-31\" to include only data up to December 31, 2025. Must be ≥ `from`. (String, Date, optional)",
        "page": "A zero-based integer page index for paginated endpoints. Example: 2 to return the third page of results, given the configured `limit`. (Integer, optional; defaults to 0)",
        "limit": "An integer cap on the number of results returned by the endpoint. Example: 50 to restrict output to the top 50 matches. Must be ≥1 and ≤1000. (Integer, optional; defaults to 100)"
      }
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "publishedDate": "The date and time when the news article or analyst report was published, in ISO 8601 format. Example: \"2025-01-21T01:24:32.000Z\". (String, DateTime)",
      "publisher": "The publisher or media outlet responsible for the content. Example: \"Benzinga\". (String)",
      "title": "The full title or designation of a fixed-income instrument, bond, or note. Example: \"1.000% Notes due 2022\". (String)",
      "image": "A URL pointing to the company’s logo or representative image. Example: \"https://images.financialmodelingprep.com/symbol/AAPL.png\". (String, URL)",
      "site": "The website or platform hosting the content, such as a news portal or research platform. Example: \"benzinga.com\". (String)",
      "text": "The plaintext content of a research report, article, or note. Example: \"Full transcript of earnings call...\". (String)",
      "url": "The URL linking to the full document, filing, or resource, often on a regulatory or official site. Example: \"https://www.sec.gov/Archives/edgar/data/1454889/000114336225000044/SCCR020325.pdf\". (String, URL)"
    }
  },
  {
    "name": "Search Forex News API",
    "description": "Pinpoint FX coverage by supplying currency-pair symbols; optional date filters let you pull historical news slices for quant studies or compliance audits.",
    "category": "news_forex_search",
    "use_cases": [
      "enrich spot-rate charts with news markers",
      "model headline-driven volatility for options",
      "push SMS alerts for import-export businesses",
      "generate FX strategist morning briefs",
      "archive macro-sensitive events"
    ],
    "parameters": {
      "required": {
        "symbols": "A comma-separated list of ticker symbols used to request data for multiple securities in a single call. Example: \"AAPL,MSFT,GOOGL\". (String, optional)"
      },
      "optional": {
        "from": "The ISO 8601 date (YYYY-MM-DD) indicating the start of a time range filter. Example: \"2025-01-01\" to include only data from January 1, 2025 onward. Must be ≤ `to`. (String, Date, optional)",
        "to": "The ISO 8601 date (YYYY-MM-DD) indicating the end of a time range filter. Example: \"2025-12-31\" to include only data up to December 31, 2025. Must be ≥ `from`. (String, Date, optional)",
        "page": "A zero-based integer page index for paginated endpoints. Example: 2 to return the third page of results, given the configured `limit`. (Integer, optional; defaults to 0)",
        "limit": "An integer cap on the number of results returned by the endpoint. Example: 50 to restrict output to the top 50 matches. Must be ≥1 and ≤1000. (Integer, optional; defaults to 100)"
      }
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "publishedDate": "The date and time when the news article or analyst report was published, in ISO 8601 format. Example: \"2025-01-21T01:24:32.000Z\". (String, DateTime)",
      "publisher": "The publisher or media outlet responsible for the content. Example: \"Benzinga\". (String)",
      "title": "The full title or designation of a fixed-income instrument, bond, or note. Example: \"1.000% Notes due 2022\". (String)",
      "image": "A URL pointing to the company’s logo or representative image. Example: \"https://images.financialmodelingprep.com/symbol/AAPL.png\". (String, URL)",
      "site": "The website or platform hosting the content, such as a news portal or research platform. Example: \"benzinga.com\". (String)",
      "text": "The plaintext content of a research report, article, or note. Example: \"Full transcript of earnings call...\". (String)",
      "url": "The URL linking to the full document, filing, or resource, often on a regulatory or official site. Example: \"https://www.sec.gov/Archives/edgar/data/1454889/000114336225000044/SCCR020325.pdf\". (String, URL)"
    }
  },
  {
    "name": "Simple Moving Average (SMA) API",
    "description": "Returns the N-period simple moving average for any supported timeframe—perfect for building classic trend-following signals or smoothing noisy price action.",
    "category": "technical_indicator",
    "use_cases": [
      "draw SMA overlays on chart widgets",
      "generate golden-cross / death-cross alerts",
      "screen for momentum breakouts",
      "feed quantitative back-tests",
      "compute fair-value bands in robo-advisors"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)",
        "periodLength": "An integer indicating the length of the period in months or days to retrieve rolling metrics. Example: 12 to retrieve a trailing 12-month metric. (Integer, optional)",
        "timeframe": "A string specifying a predefined time range shorthand. Example: \"1d\", \"1w\", \"1m\", \"1y\" to select 1 day, 1 week, 1 month, or 1 year of data. (String, optional)"
      },
      "optional": {
        "from": "The ISO 8601 date (YYYY-MM-DD) indicating the start of a time range filter. Example: \"2025-01-01\" to include only data from January 1, 2025 onward. Must be ≤ `to`. (String, Date, optional)",
        "to": "The ISO 8601 date (YYYY-MM-DD) indicating the end of a time range filter. Example: \"2025-12-31\" to include only data up to December 31, 2025. Must be ≥ `from`. (String, Date, optional)"
      }
    },
    "response_example": {
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "open": "The opening price of the security at the start of the trading session. Example: 130.00. (Number)",
      "high": "The highest intraday price recorded for the security. Example: 131.25. (Number)",
      "low": "The lowest intraday price recorded for the security. Example: 129.75. (Number)",
      "close": "The closing price of the security at the end of the trading session. Example: 130.75. (Number)",
      "volume": "The total number of shares or contracts traded during a given period (typically daily). Example: 105000000. (Number)",
      "sma": "The Simple Moving Average value for a specified lookback period. Example: 128.50. (Number)"
    }
  },
  {
    "name": "Simple Moving Average (SMA) API",
    "description": "Delivers a straightforward rolling mean—useful as a baseline yard-stick for comparing more sophisticated momentum filters.",
    "category": "technical_indicator",
    "use_cases": [
      "benchmark other MA signals",
      "visualize long-term trend bias",
      "combine with RSI for regime filters",
      "drive passive re-balancing triggers",
      "teach technical-analysis basics in tutorials"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)",
        "periodLength": "An integer indicating the length of the period in months or days to retrieve rolling metrics. Example: 12 to retrieve a trailing 12-month metric. (Integer, optional)",
        "timeframe": "A string specifying a predefined time range shorthand. Example: \"1d\", \"1w\", \"1m\", \"1y\" to select 1 day, 1 week, 1 month, or 1 year of data. (String, optional)"
      },
      "optional": {
        "from": "The ISO 8601 date (YYYY-MM-DD) indicating the start of a time range filter. Example: \"2025-01-01\" to include only data from January 1, 2025 onward. Must be ≤ `to`. (String, Date, optional)",
        "to": "The ISO 8601 date (YYYY-MM-DD) indicating the end of a time range filter. Example: \"2025-12-31\" to include only data up to December 31, 2025. Must be ≥ `from`. (String, Date, optional)"
      }
    },
    "response_example": {
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "open": "The opening price of the security at the start of the trading session. Example: 130.00. (Number)",
      "high": "The highest intraday price recorded for the security. Example: 131.25. (Number)",
      "low": "The lowest intraday price recorded for the security. Example: 129.75. (Number)",
      "close": "The closing price of the security at the end of the trading session. Example: 130.75. (Number)",
      "volume": "The total number of shares or contracts traded during a given period (typically daily). Example: 105000000. (Number)",
      "sma": "The Simple Moving Average value for a specified lookback period. Example: 128.50. (Number)"
    }
  },
  {
    "name": "Exponential Moving Average (EMA) API",
    "description": "Delivers an exponentially-weighted moving average, giving more emphasis to recent prices—favoured by swing traders and algorithmic scalpers.",
    "category": "technical_indicator",
    "use_cases": [
      "design crossover systems (e.g., 8/21-EMA)",
      "drive dynamic support/resistance zones",
      "calculate adaptive trailing stops",
      "feed high-frequency trading models",
      "compare lag vs SMA in research reports"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)",
        "periodLength": "An integer indicating the length of the period in months or days to retrieve rolling metrics. Example: 12 to retrieve a trailing 12-month metric. (Integer, optional)",
        "timeframe": "A string specifying a predefined time range shorthand. Example: \"1d\", \"1w\", \"1m\", \"1y\" to select 1 day, 1 week, 1 month, or 1 year of data. (String, optional)"
      },
      "optional": {
        "from": "The ISO 8601 date (YYYY-MM-DD) indicating the start of a time range filter. Example: \"2025-01-01\" to include only data from January 1, 2025 onward. Must be ≤ `to`. (String, Date, optional)",
        "to": "The ISO 8601 date (YYYY-MM-DD) indicating the end of a time range filter. Example: \"2025-12-31\" to include only data up to December 31, 2025. Must be ≥ `from`. (String, Date, optional)"
      }
    },
    "response_example": {
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "open": "The opening price of the security at the start of the trading session. Example: 130.00. (Number)",
      "high": "The highest intraday price recorded for the security. Example: 131.25. (Number)",
      "low": "The lowest intraday price recorded for the security. Example: 129.75. (Number)",
      "close": "The closing price of the security at the end of the trading session. Example: 130.75. (Number)",
      "volume": "The total number of shares or contracts traded during a given period (typically daily). Example: 105000000. (Number)",
      "ema": "The Exponential Moving Average value for a specified lookback period. Example: 129.20. (Number)"
    }
  },
  {
    "name": "Exponential Moving Average (EMA) API",
    "description": "Produces a fast-reacting mean that hugs price action more tightly than an SMA—ideal for momentum-based entries and exits.",
    "category": "technical_indicator",
    "use_cases": [
      "trigger short-term breakout trades",
      "visualize intraday trend shifts",
      "fine-tune stop-loss placement",
      "layer into volatility-adjusted channels",
      "support adaptive risk-parity models"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)",
        "periodLength": "An integer indicating the length of the period in months or days to retrieve rolling metrics. Example: 12 to retrieve a trailing 12-month metric. (Integer, optional)",
        "timeframe": "A string specifying a predefined time range shorthand. Example: \"1d\", \"1w\", \"1m\", \"1y\" to select 1 day, 1 week, 1 month, or 1 year of data. (String, optional)"
      },
      "optional": {
        "from": "The ISO 8601 date (YYYY-MM-DD) indicating the start of a time range filter. Example: \"2025-01-01\" to include only data from January 1, 2025 onward. Must be ≤ `to`. (String, Date, optional)",
        "to": "The ISO 8601 date (YYYY-MM-DD) indicating the end of a time range filter. Example: \"2025-12-31\" to include only data up to December 31, 2025. Must be ≥ `from`. (String, Date, optional)"
      }
    },
    "response_example": {
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "open": "The opening price of the security at the start of the trading session. Example: 130.00. (Number)",
      "high": "The highest intraday price recorded for the security. Example: 131.25. (Number)",
      "low": "The lowest intraday price recorded for the security. Example: 129.75. (Number)",
      "close": "The closing price of the security at the end of the trading session. Example: 130.75. (Number)",
      "volume": "The total number of shares or contracts traded during a given period (typically daily). Example: 105000000. (Number)",
      "ema": "The Exponential Moving Average value for a specified lookback period. Example: 129.20. (Number)"
    }
  },
  {
    "name": "Weighted Moving Average (WMA) API",
    "description": "Outputs a linearly-weighted average where recent observations carry greater weight—useful for traders wanting faster reactions than standard SMA.",
    "category": "technical_indicator",
    "use_cases": [
      "fine-tune crossover strategies",
      "construct fast mean-reversion filters",
      "visualize short-term price velocity",
      "compare EMA vs WMA responsiveness",
      "feed intraday trading bots"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)",
        "periodLength": "An integer indicating the length of the period in months or days to retrieve rolling metrics. Example: 12 to retrieve a trailing 12-month metric. (Integer, optional)",
        "timeframe": "A string specifying a predefined time range shorthand. Example: \"1d\", \"1w\", \"1m\", \"1y\" to select 1 day, 1 week, 1 month, or 1 year of data. (String, optional)"
      },
      "optional": {
        "from": "The ISO 8601 date (YYYY-MM-DD) indicating the start of a time range filter. Example: \"2025-01-01\" to include only data from January 1, 2025 onward. Must be ≤ `to`. (String, Date, optional)",
        "to": "The ISO 8601 date (YYYY-MM-DD) indicating the end of a time range filter. Example: \"2025-12-31\" to include only data up to December 31, 2025. Must be ≥ `from`. (String, Date, optional)"
      }
    },
    "response_example": {
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "open": "The opening price of the security at the start of the trading session. Example: 130.00. (Number)",
      "high": "The highest intraday price recorded for the security. Example: 131.25. (Number)",
      "low": "The lowest intraday price recorded for the security. Example: 129.75. (Number)",
      "close": "The closing price of the security at the end of the trading session. Example: 130.75. (Number)",
      "volume": "The total number of shares or contracts traded during a given period (typically daily). Example: 105000000. (Number)",
      "wma": "The Weighted Moving Average value for a specified lookback period. Example: 128.75. (Number)"
    }
  },
  {
    "name": "Weighted Moving Average (WMA) API",
    "description": "Calculates a weighted mean that discounts older bars—handy for strategists who need an MA that sits between EMA speed and SMA stability.",
    "category": "technical_indicator",
    "use_cases": [
      "craft turbo-charged MA ribbons",
      "detect momentum shifts earlier",
      "study lag differentials across MA types",
      "power short-dated option gamma scalps",
      "educate users on weighting schemes"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)",
        "periodLength": "An integer indicating the length of the period in months or days to retrieve rolling metrics. Example: 12 to retrieve a trailing 12-month metric. (Integer, optional)",
        "timeframe": "A string specifying a predefined time range shorthand. Example: \"1d\", \"1w\", \"1m\", \"1y\" to select 1 day, 1 week, 1 month, or 1 year of data. (String, optional)"
      },
      "optional": {
        "from": "The ISO 8601 date (YYYY-MM-DD) indicating the start of a time range filter. Example: \"2025-01-01\" to include only data from January 1, 2025 onward. Must be ≤ `to`. (String, Date, optional)",
        "to": "The ISO 8601 date (YYYY-MM-DD) indicating the end of a time range filter. Example: \"2025-12-31\" to include only data up to December 31, 2025. Must be ≥ `from`. (String, Date, optional)"
      }
    },
    "response_example": {
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "open": "The opening price of the security at the start of the trading session. Example: 130.00. (Number)",
      "high": "The highest intraday price recorded for the security. Example: 131.25. (Number)",
      "low": "The lowest intraday price recorded for the security. Example: 129.75. (Number)",
      "close": "The closing price of the security at the end of the trading session. Example: 130.75. (Number)",
      "volume": "The total number of shares or contracts traded during a given period (typically daily). Example: 105000000. (Number)",
      "wma": "The Weighted Moving Average value for a specified lookback period. Example: 128.75. (Number)"
    }
  },
  {
    "name": "Double Exponential Moving Average (DEMA) API",
    "description": "Provides a double-smoothed EMA to reduce lag while keeping noise low—great for timing entries in fast markets.",
    "category": "technical_indicator",
    "use_cases": [
      "detect trend shifts sooner than EMA",
      "optimize algo triggers for volatile assets",
      "compare signal lag across MA families",
      "visualize cleaner trend lines",
      "support machine-learning feature sets"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)",
        "periodLength": "An integer indicating the length of the period in months or days to retrieve rolling metrics. Example: 12 to retrieve a trailing 12-month metric. (Integer, optional)",
        "timeframe": "A string specifying a predefined time range shorthand. Example: \"1d\", \"1w\", \"1m\", \"1y\" to select 1 day, 1 week, 1 month, or 1 year of data. (String, optional)"
      },
      "optional": {
        "from": "The ISO 8601 date (YYYY-MM-DD) indicating the start of a time range filter. Example: \"2025-01-01\" to include only data from January 1, 2025 onward. Must be ≤ `to`. (String, Date, optional)",
        "to": "The ISO 8601 date (YYYY-MM-DD) indicating the end of a time range filter. Example: \"2025-12-31\" to include only data up to December 31, 2025. Must be ≥ `from`. (String, Date, optional)"
      }
    },
    "response_example": {
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "open": "The opening price of the security at the start of the trading session. Example: 130.00. (Number)",
      "high": "The highest intraday price recorded for the security. Example: 131.25. (Number)",
      "low": "The lowest intraday price recorded for the security. Example: 129.75. (Number)",
      "close": "The closing price of the security at the end of the trading session. Example: 130.75. (Number)",
      "volume": "The total number of shares or contracts traded during a given period (typically daily). Example: 105000000. (Number)",
      "dema": "The Double Exponential Moving Average value for a specified lookback period. Example: 129.00. (Number)"
    }
  },
  {
    "name": "Double Exponential Moving Average (DEMA) API",
    "description": "Combines two EMAs to create a snappier line with less lag—favoured by traders hunting earlier confirmation of breakouts.",
    "category": "technical_indicator",
    "use_cases": [
      "build faster MA crossover pairs",
      "minimise whipsaw in sideways ranges",
      "compare DEMA vs TEMA in R&D notebooks",
      "embed as feature in neural nets",
      "produce smoother visualisations for dashboards"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)",
        "periodLength": "An integer indicating the length of the period in months or days to retrieve rolling metrics. Example: 12 to retrieve a trailing 12-month metric. (Integer, optional)",
        "timeframe": "A string specifying a predefined time range shorthand. Example: \"1d\", \"1w\", \"1m\", \"1y\" to select 1 day, 1 week, 1 month, or 1 year of data. (String, optional)"
      },
      "optional": {
        "from": "The ISO 8601 date (YYYY-MM-DD) indicating the start of a time range filter. Example: \"2025-01-01\" to include only data from January 1, 2025 onward. Must be ≤ `to`. (String, Date, optional)",
        "to": "The ISO 8601 date (YYYY-MM-DD) indicating the end of a time range filter. Example: \"2025-12-31\" to include only data up to December 31, 2025. Must be ≥ `from`. (String, Date, optional)"
      }
    },
    "response_example": {
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "open": "The opening price of the security at the start of the trading session. Example: 130.00. (Number)",
      "high": "The highest intraday price recorded for the security. Example: 131.25. (Number)",
      "low": "The lowest intraday price recorded for the security. Example: 129.75. (Number)",
      "close": "The closing price of the security at the end of the trading session. Example: 130.75. (Number)",
      "volume": "The total number of shares or contracts traded during a given period (typically daily). Example: 105000000. (Number)",
      "dema": "The Double Exponential Moving Average value for a specified lookback period. Example: 129.00. (Number)"
    }
  },
  {
    "name": "Triple Exponential Moving Average (TEMA) API",
    "description": "Returns the triple-smoothed EMA (TEMA) which further minimizes lag—ideal for ultra-responsive trend following without excessive whipsaw.",
    "category": "technical_indicator",
    "use_cases": [
      "design fast crossover alerts on intraday data",
      "build adaptive channel indicators",
      "compare performance vs DEMA in back-tests",
      "feed latency-sensitive scalping algos",
      "reduce repainting in strategy dashboards"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)",
        "periodLength": "An integer indicating the length of the period in months or days to retrieve rolling metrics. Example: 12 to retrieve a trailing 12-month metric. (Integer, optional)",
        "timeframe": "A string specifying a predefined time range shorthand. Example: \"1d\", \"1w\", \"1m\", \"1y\" to select 1 day, 1 week, 1 month, or 1 year of data. (String, optional)"
      },
      "optional": {
        "from": "The ISO 8601 date (YYYY-MM-DD) indicating the start of a time range filter. Example: \"2025-01-01\" to include only data from January 1, 2025 onward. Must be ≤ `to`. (String, Date, optional)",
        "to": "The ISO 8601 date (YYYY-MM-DD) indicating the end of a time range filter. Example: \"2025-12-31\" to include only data up to December 31, 2025. Must be ≥ `from`. (String, Date, optional)"
      }
    },
    "response_example": {
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "open": "The opening price of the security at the start of the trading session. Example: 130.00. (Number)",
      "high": "The highest intraday price recorded for the security. Example: 131.25. (Number)",
      "low": "The lowest intraday price recorded for the security. Example: 129.75. (Number)",
      "close": "The closing price of the security at the end of the trading session. Example: 130.75. (Number)",
      "volume": "The total number of shares or contracts traded during a given period (typically daily). Example: 105000000. (Number)",
      "tema": "The Triple Exponential Moving Average value for a specified lookback period. Example: 128.95. (Number)"
    }
  },
  {
    "name": "Triple Exponential Moving Average (TEMA) API",
    "description": "Stacks three EMA calculations to yield a hyper-reactive moving average—perfect for traders who need minimal lag without sacrificing smoothness.",
    "category": "technical_indicator",
    "use_cases": [
      "signal micro-trend changes",
      "overlay on high-frequency charts",
      "benchmark fastest MA alternatives",
      "research TEMA lag statistics",
      "fuel ultra-short-term breakout bots"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)",
        "periodLength": "An integer indicating the length of the period in months or days to retrieve rolling metrics. Example: 12 to retrieve a trailing 12-month metric. (Integer, optional)",
        "timeframe": "A string specifying a predefined time range shorthand. Example: \"1d\", \"1w\", \"1m\", \"1y\" to select 1 day, 1 week, 1 month, or 1 year of data. (String, optional)"
      },
      "optional": {
        "from": "The ISO 8601 date (YYYY-MM-DD) indicating the start of a time range filter. Example: \"2025-01-01\" to include only data from January 1, 2025 onward. Must be ≤ `to`. (String, Date, optional)",
        "to": "The ISO 8601 date (YYYY-MM-DD) indicating the end of a time range filter. Example: \"2025-12-31\" to include only data up to December 31, 2025. Must be ≥ `from`. (String, Date, optional)"
      }
    },
    "response_example": {
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "open": "The opening price of the security at the start of the trading session. Example: 130.00. (Number)",
      "high": "The highest intraday price recorded for the security. Example: 131.25. (Number)",
      "low": "The lowest intraday price recorded for the security. Example: 129.75. (Number)",
      "close": "The closing price of the security at the end of the trading session. Example: 130.75. (Number)",
      "volume": "The total number of shares or contracts traded during a given period (typically daily). Example: 105000000. (Number)",
      "tema": "The Triple Exponential Moving Average value for a specified lookback period. Example: 128.95. (Number)"
    }
  },
  {
    "name": "Relative Strength Index (RSI) API",
    "description": "Computes the classic momentum oscillator (0-100) measuring the magnitude of recent gains vs losses—popular for spotting overbought/oversold conditions.",
    "category": "technical_indicator",
    "use_cases": [
      "flag >70 / <30 reversal zones",
      "drive divergence scanners",
      "feed risk-on / risk-off dashboards",
      "layer momentum filter into stock screeners",
      "back-test RSI mean-reversion plays"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)",
        "periodLength": "An integer indicating the length of the period in months or days to retrieve rolling metrics. Example: 12 to retrieve a trailing 12-month metric. (Integer, optional)",
        "timeframe": "A string specifying a predefined time range shorthand. Example: \"1d\", \"1w\", \"1m\", \"1y\" to select 1 day, 1 week, 1 month, or 1 year of data. (String, optional)"
      },
      "optional": {
        "from": "The ISO 8601 date (YYYY-MM-DD) indicating the start of a time range filter. Example: \"2025-01-01\" to include only data from January 1, 2025 onward. Must be ≤ `to`. (String, Date, optional)",
        "to": "The ISO 8601 date (YYYY-MM-DD) indicating the end of a time range filter. Example: \"2025-12-31\" to include only data up to December 31, 2025. Must be ≥ `from`. (String, Date, optional)"
      }
    },
    "response_example": {
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "open": "The opening price of the security at the start of the trading session. Example: 130.00. (Number)",
      "high": "The highest intraday price recorded for the security. Example: 131.25. (Number)",
      "low": "The lowest intraday price recorded for the security. Example: 129.75. (Number)",
      "close": "The closing price of the security at the end of the trading session. Example: 130.75. (Number)",
      "volume": "The total number of shares or contracts traded during a given period (typically daily). Example: 105000000. (Number)",
      "rsi": "The Relative Strength Index value, a momentum oscillator measuring overbought or oversold conditions. Example: 55.2. (Number)"
    }
  },
  {
    "name": "Relative Strength Index (RSI) API",
    "description": "Outputs Wilder’s momentum gauge—essential for measuring price thrust and identifying potential exhaustion points.",
    "category": "technical_indicator",
    "use_cases": [
      "trigger contrarian entries at extremes",
      "confirm trend continuation with mid-zone holds",
      "plot multi-timeframe RSI heatmaps",
      "blend momentum into composite scores",
      "teach classic oscillator concepts"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)",
        "periodLength": "An integer indicating the length of the period in months or days to retrieve rolling metrics. Example: 12 to retrieve a trailing 12-month metric. (Integer, optional)",
        "timeframe": "A string specifying a predefined time range shorthand. Example: \"1d\", \"1w\", \"1m\", \"1y\" to select 1 day, 1 week, 1 month, or 1 year of data. (String, optional)"
      },
      "optional": {
        "from": "The ISO 8601 date (YYYY-MM-DD) indicating the start of a time range filter. Example: \"2025-01-01\" to include only data from January 1, 2025 onward. Must be ≤ `to`. (String, Date, optional)",
        "to": "The ISO 8601 date (YYYY-MM-DD) indicating the end of a time range filter. Example: \"2025-12-31\" to include only data up to December 31, 2025. Must be ≥ `from`. (String, Date, optional)"
      }
    },
    "response_example": {
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "open": "The opening price of the security at the start of the trading session. Example: 130.00. (Number)",
      "high": "The highest intraday price recorded for the security. Example: 131.25. (Number)",
      "low": "The lowest intraday price recorded for the security. Example: 129.75. (Number)",
      "close": "The closing price of the security at the end of the trading session. Example: 130.75. (Number)",
      "volume": "The total number of shares or contracts traded during a given period (typically daily). Example: 105000000. (Number)",
      "rsi": "The Relative Strength Index value, a momentum oscillator measuring overbought or oversold conditions. Example: 55.2. (Number)"
    }
  },
  {
    "name": "Standard Deviation (Volatility) API",
    "description": "Outputs the rolling standard deviation of closing prices—handy for building Bollinger-style bands or quantifying historical volatility.",
    "category": "technical_indicator",
    "use_cases": [
      "construct volatility bands",
      "size position risk dynamically",
      "detect volatility breakouts",
      "feed GARCH or VaR models",
      "compare asset vol across sectors"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)",
        "periodLength": "An integer indicating the length of the period in months or days to retrieve rolling metrics. Example: 12 to retrieve a trailing 12-month metric. (Integer, optional)",
        "timeframe": "A string specifying a predefined time range shorthand. Example: \"1d\", \"1w\", \"1m\", \"1y\" to select 1 day, 1 week, 1 month, or 1 year of data. (String, optional)"
      },
      "optional": {
        "from": "The ISO 8601 date (YYYY-MM-DD) indicating the start of a time range filter. Example: \"2025-01-01\" to include only data from January 1, 2025 onward. Must be ≤ `to`. (String, Date, optional)",
        "to": "The ISO 8601 date (YYYY-MM-DD) indicating the end of a time range filter. Example: \"2025-12-31\" to include only data up to December 31, 2025. Must be ≥ `from`. (String, Date, optional)"
      }
    },
    "response_example": {
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "open": "The opening price of the security at the start of the trading session. Example: 130.00. (Number)",
      "high": "The highest intraday price recorded for the security. Example: 131.25. (Number)",
      "low": "The lowest intraday price recorded for the security. Example: 129.75. (Number)",
      "close": "The closing price of the security at the end of the trading session. Example: 130.75. (Number)",
      "volume": "The total number of shares or contracts traded during a given period (typically daily). Example: 105000000. (Number)",
      "standardDeviation": "The standard deviation of price or returns over a specified period, indicating volatility. Example: 2.35. (Number)"
    }
  },
  {
    "name": "Standard Deviation (Volatility) API",
    "description": "Returns a simple dispersion metric—indispensable for risk managers gauging price variability over a rolling window.",
    "category": "technical_indicator",
    "use_cases": [
      "flag sudden spikes in vol",
      "adjust option pricing inputs",
      "blend into ATR-style indicators",
      "monitor regime changes",
      "visualize vol clustering"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)",
        "periodLength": "An integer indicating the length of the period in months or days to retrieve rolling metrics. Example: 12 to retrieve a trailing 12-month metric. (Integer, optional)",
        "timeframe": "A string specifying a predefined time range shorthand. Example: \"1d\", \"1w\", \"1m\", \"1y\" to select 1 day, 1 week, 1 month, or 1 year of data. (String, optional)"
      },
      "optional": {
        "from": "The ISO 8601 date (YYYY-MM-DD) indicating the start of a time range filter. Example: \"2025-01-01\" to include only data from January 1, 2025 onward. Must be ≤ `to`. (String, Date, optional)",
        "to": "The ISO 8601 date (YYYY-MM-DD) indicating the end of a time range filter. Example: \"2025-12-31\" to include only data up to December 31, 2025. Must be ≥ `from`. (String, Date, optional)"
      }
    },
    "response_example": {
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "open": "The opening price of the security at the start of the trading session. Example: 130.00. (Number)",
      "high": "The highest intraday price recorded for the security. Example: 131.25. (Number)",
      "low": "The lowest intraday price recorded for the security. Example: 129.75. (Number)",
      "close": "The closing price of the security at the end of the trading session. Example: 130.75. (Number)",
      "volume": "The total number of shares or contracts traded during a given period (typically daily). Example: 105000000. (Number)",
      "standardDeviation": "The standard deviation of price or returns over a specified period, indicating volatility. Example: 2.35. (Number)"
    }
  },
  {
    "name": "Williams %R (Williams) API",
    "description": "Calculates Williams %R oscillator (-100 to 0) highlighting overbought (>-20) and oversold (<-80) states—favoured by swing traders for timing fades.",
    "category": "technical_indicator",
    "use_cases": [
      "signal potential reversals",
      "combine with MA crossovers for confirmation",
      "back-test %R extreme filters",
      "visualize momentum exhaustion",
      "feed contrarian trading bots"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)",
        "periodLength": "An integer indicating the length of the period in months or days to retrieve rolling metrics. Example: 12 to retrieve a trailing 12-month metric. (Integer, optional)",
        "timeframe": "A string specifying a predefined time range shorthand. Example: \"1d\", \"1w\", \"1m\", \"1y\" to select 1 day, 1 week, 1 month, or 1 year of data. (String, optional)"
      },
      "optional": {
        "from": "The ISO 8601 date (YYYY-MM-DD) indicating the start of a time range filter. Example: \"2025-01-01\" to include only data from January 1, 2025 onward. Must be ≤ `to`. (String, Date, optional)",
        "to": "The ISO 8601 date (YYYY-MM-DD) indicating the end of a time range filter. Example: \"2025-12-31\" to include only data up to December 31, 2025. Must be ≥ `from`. (String, Date, optional)"
      }
    },
    "response_example": {
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "open": "The opening price of the security at the start of the trading session. Example: 130.00. (Number)",
      "high": "The highest intraday price recorded for the security. Example: 131.25. (Number)",
      "low": "The lowest intraday price recorded for the security. Example: 129.75. (Number)",
      "close": "The closing price of the security at the end of the trading session. Example: 130.75. (Number)",
      "volume": "The total number of shares or contracts traded during a given period (typically daily). Example: 105000000. (Number)",
      "williams": "The Williams %R value, an oscillator indicating overbought or oversold conditions. Example: -15.4. (Number)"
    }
  },
  {
    "name": "Williams %R (Williams) API",
    "description": "Delivers Larry Williams’ fast oscillator—great for spotting short-term momentum swings within broader trends.",
    "category": "technical_indicator",
    "use_cases": [
      "identify exhaustion after parabolic moves",
      "layer into multi-oscillator templates",
      "confirm pullback entries",
      "teach overbought/oversold dynamics",
      "study momentum cycles"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)",
        "periodLength": "An integer indicating the length of the period in months or days to retrieve rolling metrics. Example: 12 to retrieve a trailing 12-month metric. (Integer, optional)",
        "timeframe": "A string specifying a predefined time range shorthand. Example: \"1d\", \"1w\", \"1m\", \"1y\" to select 1 day, 1 week, 1 month, or 1 year of data. (String, optional)"
      },
      "optional": {
        "from": "The ISO 8601 date (YYYY-MM-DD) indicating the start of a time range filter. Example: \"2025-01-01\" to include only data from January 1, 2025 onward. Must be ≤ `to`. (String, Date, optional)",
        "to": "The ISO 8601 date (YYYY-MM-DD) indicating the end of a time range filter. Example: \"2025-12-31\" to include only data up to December 31, 2025. Must be ≥ `from`. (String, Date, optional)"
      }
    },
    "response_example": {
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "open": "The opening price of the security at the start of the trading session. Example: 130.00. (Number)",
      "high": "The highest intraday price recorded for the security. Example: 131.25. (Number)",
      "low": "The lowest intraday price recorded for the security. Example: 129.75. (Number)",
      "close": "The closing price of the security at the end of the trading session. Example: 130.75. (Number)",
      "volume": "The total number of shares or contracts traded during a given period (typically daily). Example: 105000000. (Number)",
      "williams": "The Williams %R value, an oscillator indicating overbought or oversold conditions. Example: -15.4. (Number)"
    }
  },
  {
    "name": "Average Directional Index (ADX) API",
    "description": "Returns the ADX trend-strength metric (0-100) along with +DI/-DI (internally) to gauge whether a market is trending or ranging.",
    "category": "technical_indicator",
    "use_cases": [
      "filter breakout strategies (e.g., ADX > 25)",
      "avoid whipsaws in range-bound periods",
      "visualize trend strength heatmaps",
      "feed systematic allocation models",
      "pair with RSI for regime detection"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)",
        "periodLength": "An integer indicating the length of the period in months or days to retrieve rolling metrics. Example: 12 to retrieve a trailing 12-month metric. (Integer, optional)",
        "timeframe": "A string specifying a predefined time range shorthand. Example: \"1d\", \"1w\", \"1m\", \"1y\" to select 1 day, 1 week, 1 month, or 1 year of data. (String, optional)"
      },
      "optional": {
        "from": "The ISO 8601 date (YYYY-MM-DD) indicating the start of a time range filter. Example: \"2025-01-01\" to include only data from January 1, 2025 onward. Must be ≤ `to`. (String, Date, optional)",
        "to": "The ISO 8601 date (YYYY-MM-DD) indicating the end of a time range filter. Example: \"2025-12-31\" to include only data up to December 31, 2025. Must be ≥ `from`. (String, Date, optional)"
      }
    },
    "response_example": {
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "open": "The opening price of the security at the start of the trading session. Example: 130.00. (Number)",
      "high": "The highest intraday price recorded for the security. Example: 131.25. (Number)",
      "low": "The lowest intraday price recorded for the security. Example: 129.75. (Number)",
      "close": "The closing price of the security at the end of the trading session. Example: 130.75. (Number)",
      "volume": "The total number of shares or contracts traded during a given period (typically daily). Example: 105000000. (Number)",
      "adx": "The Average Directional Index value, measuring trend strength. Example: 23.7. (Number)"
    }
  },
  {
    "name": "Average Directional Index (ADX) API",
    "description": "Supplies Wilder’s trend-strength gauge—use it to separate strong moves from choppy markets before deploying breakout or mean-reversion logic.",
    "category": "technical_indicator",
    "use_cases": [
      "turn on/off trend-following systems",
      "colour-code charts by ADX regime",
      "research optimal ADX thresholds",
      "blend into composite trend scores",
      "drive dynamic position sizing"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)",
        "periodLength": "An integer indicating the length of the period in months or days to retrieve rolling metrics. Example: 12 to retrieve a trailing 12-month metric. (Integer, optional)",
        "timeframe": "A string specifying a predefined time range shorthand. Example: \"1d\", \"1w\", \"1m\", \"1y\" to select 1 day, 1 week, 1 month, or 1 year of data. (String, optional)"
      },
      "optional": {
        "from": "The ISO 8601 date (YYYY-MM-DD) indicating the start of a time range filter. Example: \"2025-01-01\" to include only data from January 1, 2025 onward. Must be ≤ `to`. (String, Date, optional)",
        "to": "The ISO 8601 date (YYYY-MM-DD) indicating the end of a time range filter. Example: \"2025-12-31\" to include only data up to December 31, 2025. Must be ≥ `from`. (String, Date, optional)"
      }
    },
    "response_example": {
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "open": "The opening price of the security at the start of the trading session. Example: 130.00. (Number)",
      "high": "The highest intraday price recorded for the security. Example: 131.25. (Number)",
      "low": "The lowest intraday price recorded for the security. Example: 129.75. (Number)",
      "close": "The closing price of the security at the end of the trading session. Example: 130.75. (Number)",
      "volume": "The total number of shares or contracts traded during a given period (typically daily). Example: 105000000. (Number)",
      "adx": "The Average Directional Index value, measuring trend strength. Example: 23.7. (Number)"
    }
  },
  {
    "name": "Stock Price Change API",
    "description": "Returns % change across multiple horizons (1D to max) letting you benchmark relative performance, build momentum factors, or render heat maps in a single call.",
    "category": "quote",
    "use_cases": [
      "populate screener columns (1D, 1W, 1M returns)",
      "rank stocks for momentum strategies",
      "generate performance badges in emails",
      "feed relative-strength comparative charts",
      "quickly answer “how’s it doing vs last year?”"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "1D": "The performance value (e.g., return percentage) over a 1-day period. Example: 0.97. (Number, Percentage)",
      "5D": "The value or metric for a 5-day period, typically indicating short-term performance or change.",
      "1M": "The performance value over a 1-month period. Example: 5.25. (Number, Percentage)",
      "3M": "The value or metric for a 3-month period, such as return, change, or average over the most recent quarter.",
      "6M": "The performance value over a 6-month period. Example: 12.8. (Number, Percentage)",
      "ytd": "The Year-to-Date performance value from January 1st of the current year. Example: 8.5. (Number, Percentage)",
      "1Y": "The performance value over a 1-year period. Example: 25.4. (Number, Percentage)",
      "3Y": "The value or metric for a 3-year period, often used for historical trends or multi-year analysis.",
      "5Y": "The value or metric for a 5-year period, commonly used for long-term comparisons.",
      "10Y": "The value or metric for a 10-year period, often used for performance, yield, or trend comparisons. Example: 8.42%.",
      "max": "The maximum performance or value over the entire available history. Example: 150.0. (Number, Percentage)"
    }
  },
  {
    "name": "Stock Price Change API",
    "description": "Provides a compact return-matrix (daily → decade) for any ticker—ideal for time-series factor analysis or quick comparative dashboards.",
    "category": "quote",
    "use_cases": [
      "build relative-rotation graphs (RRG)",
      "export return tables to CSV/Excel",
      "feed API results into factor libraries",
      "drive UI badges showing YTD vs 1Y",
      "support podcast/TV graphics with rapid stats"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "1D": "The performance value (e.g., return percentage) over a 1-day period. Example: 0.97. (Number, Percentage)",
      "5D": "The value or metric for a 5-day period, typically indicating short-term performance or change.",
      "1M": "The performance value over a 1-month period. Example: 5.25. (Number, Percentage)",
      "3M": "The value or metric for a 3-month period, such as return, change, or average over the most recent quarter.",
      "6M": "The performance value over a 6-month period. Example: 12.8. (Number, Percentage)",
      "ytd": "The Year-to-Date performance value from January 1st of the current year. Example: 8.5. (Number, Percentage)",
      "1Y": "The performance value over a 1-year period. Example: 25.4. (Number, Percentage)",
      "3Y": "The value or metric for a 3-year period, often used for historical trends or multi-year analysis.",
      "5Y": "The value or metric for a 5-year period, commonly used for long-term comparisons.",
      "10Y": "The value or metric for a 10-year period, often used for performance, yield, or trend comparisons. Example: 8.42%.",
      "max": "The maximum performance or value over the entire available history. Example: 150.0. (Number, Percentage)"
    }
  },
  {
    "name": "Stock Batch Quote API",
    "description": "Fetches full-detail real-time quotes for dozens of tickers in one HTTP call—cuts latency and simplifies portfolio refresh cycles.",
    "category": "quote_batch",
    "use_cases": [
      "update watch-lists every few seconds",
      "drive grid views in trading terminals",
      "sync live data to databases with fewer calls",
      "off-load polling from front-end to back-end",
      "hydrate AI models with synchronous price states"
    ],
    "parameters": {
      "required": {
        "symbols": "A comma-separated list of ticker symbols used to request data for multiple securities in a single call. Example: \"AAPL,MSFT,GOOGL\". (String, optional)"
      },
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "name": "The full legal or common name of the company. Example: \"Apple Inc.\" (String)",
      "price": "The last traded price or intrinsic value of the security or asset. Example: 130.75. (Number)",
      "changePercentage": "The percentage change in price or value compared to the previous close. Example: \"+0.97%\". (Number, Percentage)",
      "change": "The absolute change in price or value compared to the previous close. Example: \"+1.25\". (String)",
      "volume": "The total number of shares or contracts traded during a given period (typically daily). Example: 105000000. (Number)",
      "dayLow": "The lowest price recorded for the security during that trading day. Example: 129.50. (Number)",
      "dayHigh": "The highest price recorded for the security during that trading day. Example: 131.00. (Number)",
      "yearHigh": "The highest price recorded for the security over the trailing 52-week period. Example: 150.25. (Number)",
      "yearLow": "The lowest price recorded for the security over the trailing 52-week period. Example: 110.25. (Number)",
      "marketCap": "The market capitalization of the company, calculated as share price multiplied by total shares outstanding. Example: \"None\" or 1500000000000 (1.5 trillion). (Number or String)",
      "priceAvg50": "The 50-day moving average price of the security. Example: 127.50. (Number)",
      "priceAvg200": "The 200-day moving average price of the security. Example: 125.75. (Number)",
      "exchange": "The abbreviated code or name of the exchange where the security is traded. Example: \"NASDAQ\". (String)",
      "open": "The opening price of the security at the start of the trading session. Example: 130.00. (Number)",
      "previousClose": "The closing price of the security from the prior trading session. Example: 129.50. (Number)",
      "timestamp": "The exact timestamp of the data point, typically in Unix epoch time. Example: 1629475200. (Number)"
    }
  },
  {
    "name": "Stock Batch Quote API",
    "description": "Aggregates full quote payloads for a comma-separated list of tickers—ideal for portfolio tools, spreadsheet add-ins, or bulk analytics.",
    "category": "quote_batch",
    "use_cases": [
      "refresh 1000-stock universe for quants",
      "power Excel add-ins via single call",
      "export minute-level snapshots to S3 / BigQuery",
      "drive multi-asset sentiment models",
      "reduce API throttling vs per-symbol calls"
    ],
    "parameters": {
      "required": {
        "symbols": "A comma-separated list of ticker symbols used to request data for multiple securities in a single call. Example: \"AAPL,MSFT,GOOGL\". (String, optional)"
      },
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "name": "The full legal or common name of the company. Example: \"Apple Inc.\" (String)",
      "price": "The last traded price or intrinsic value of the security or asset. Example: 130.75. (Number)",
      "changePercentage": "The percentage change in price or value compared to the previous close. Example: \"+0.97%\". (Number, Percentage)",
      "change": "The absolute change in price or value compared to the previous close. Example: \"+1.25\". (String)",
      "volume": "The total number of shares or contracts traded during a given period (typically daily). Example: 105000000. (Number)",
      "dayLow": "The lowest price recorded for the security during that trading day. Example: 129.50. (Number)",
      "dayHigh": "The highest price recorded for the security during that trading day. Example: 131.00. (Number)",
      "yearHigh": "The highest price recorded for the security over the trailing 52-week period. Example: 150.25. (Number)",
      "yearLow": "The lowest price recorded for the security over the trailing 52-week period. Example: 110.25. (Number)",
      "marketCap": "The market capitalization of the company, calculated as share price multiplied by total shares outstanding. Example: \"None\" or 1500000000000 (1.5 trillion). (Number or String)",
      "priceAvg50": "The 50-day moving average price of the security. Example: 127.50. (Number)",
      "priceAvg200": "The 200-day moving average price of the security. Example: 125.75. (Number)",
      "exchange": "The abbreviated code or name of the exchange where the security is traded. Example: \"NASDAQ\". (String)",
      "open": "The opening price of the security at the start of the trading session. Example: 130.00. (Number)",
      "previousClose": "The closing price of the security from the prior trading session. Example: 129.50. (Number)",
      "timestamp": "The exact timestamp of the data point, typically in Unix epoch time. Example: 1629475200. (Number)"
    }
  },
  {
    "name": "Batch Aftermarket Trade API",
    "description": "Streams post-market prints for multiple tickers simultaneously—capture out-of-hours price discovery across an entire watch-list in real-time.",
    "category": "quote_afterhours_batch",
    "use_cases": [
      "scan for large after-hours blocks",
      "build overnight liquidity dashboards",
      "feed statistical arbitrage overnight models",
      "compare trade sizes vs regular session",
      "alert on significant aftermarket price gaps"
    ],
    "parameters": {
      "required": {
        "symbols": "A comma-separated list of ticker symbols used to request data for multiple securities in a single call. Example: \"AAPL,MSFT,GOOGL\". (String, optional)"
      },
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "price": "The last traded price or intrinsic value of the security or asset. Example: 130.75. (Number)",
      "tradeSize": "The size of the most recent trade in quantity of shares. Example: 500. (Number)",
      "timestamp": "The exact timestamp of the data point, typically in Unix epoch time. Example: 1629475200. (Number)"
    }
  },
  {
    "name": "Batch Aftermarket Trade API",
    "description": "Returns tick-level post-market trade data for a comma list of symbols—ideal for quant desks monitoring extended-hours activity at scale.",
    "category": "quote_afterhours_batch",
    "use_cases": [
      "generate after-hours VWAP benchmarks",
      "study event-driven price action post earnings",
      "identify illiquid names outside regular hours",
      "merge with options data for overnight Greeks",
      "fuel ML models predicting next-day gaps"
    ],
    "parameters": {
      "required": {
        "symbols": "A comma-separated list of ticker symbols used to request data for multiple securities in a single call. Example: \"AAPL,MSFT,GOOGL\". (String, optional)"
      },
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "price": "The last traded price or intrinsic value of the security or asset. Example: 130.75. (Number)",
      "tradeSize": "The size of the most recent trade in quantity of shares. Example: 500. (Number)",
      "timestamp": "The exact timestamp of the data point, typically in Unix epoch time. Example: 1629475200. (Number)"
    }
  },
  {
    "name": "Batch Aftermarket Quote API",
    "description": "Fetches live best-bid/ask pairs for multiple tickers during the extended session—essential for routing batch orders or feeding overnight dashboards.",
    "category": "quote_afterhours_batch",
    "use_cases": [
      "display after-hours spreads side-by-side",
      "evaluate liquidity before placing blocks",
      "drive overnight smart order routers",
      "research spread widening patterns",
      "update P&L marks after the bell"
    ],
    "parameters": {
      "required": {
        "symbols": "A comma-separated list of ticker symbols used to request data for multiple securities in a single call. Example: \"AAPL,MSFT,GOOGL\". (String, optional)"
      },
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "bidSize": "The number of shares available at the best bid price. Example: 300. (Number)",
      "bidPrice": "The highest price a buyer is willing to pay for the security. Example: 130.70. (Number)",
      "askSize": "The number of shares available at the best ask price. Example: 400. (Number)",
      "askPrice": "The lowest price a seller is willing to accept for the security. Example: 130.80. (Number)",
      "volume": "The total number of shares or contracts traded during a given period (typically daily). Example: 105000000. (Number)",
      "timestamp": "The exact timestamp of the data point, typically in Unix epoch time. Example: 1629475200. (Number)"
    }
  },
  {
    "name": "Batch Aftermarket Quote API",
    "description": "Supplies bid/ask and volume data for several symbols in the post-market window—lets you gauge cross-asset liquidity with one request.",
    "category": "quote_afterhours_batch",
    "use_cases": [
      "compare extended-hours spreads vs main session",
      "build cross-sector liquidity heatmaps",
      "optimize overnight hedging executions",
      "provide real-time P&L marks to middle office",
      "study quote volatility after macro events"
    ],
    "parameters": {
      "required": {
        "symbols": "A comma-separated list of ticker symbols used to request data for multiple securities in a single call. Example: \"AAPL,MSFT,GOOGL\". (String, optional)"
      },
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "bidSize": "The number of shares available at the best bid price. Example: 300. (Number)",
      "bidPrice": "The highest price a buyer is willing to pay for the security. Example: 130.70. (Number)",
      "askSize": "The number of shares available at the best ask price. Example: 400. (Number)",
      "askPrice": "The lowest price a seller is willing to accept for the security. Example: 130.80. (Number)",
      "volume": "The total number of shares or contracts traded during a given period (typically daily). Example: 105000000. (Number)",
      "timestamp": "The exact timestamp of the data point, typically in Unix epoch time. Example: 1629475200. (Number)"
    }
  },
  {
    "name": "Exchange Stock Quotes API",
    "description": "Streams real-time quotes for every listed stock on a specified exchange—ideal for populating ticker tapes or monitoring entire markets at once.",
    "category": "quote_exchange_batch",
    "use_cases": [
      "power full-exchange heat-maps",
      "build market-wide alert engines",
      "feed exchange-breadth statistics",
      "populate screener grids in terminals",
      "snapshot liquidity across sectors"
    ],
    "parameters": {
      "required": {
        "exchange": "The exchange code or abbreviation to scope results to a specific trading venue. Example: \"NASDAQ\" or \"NYSE\". Filters out tickers not listed on that exchange. (String, optional)"
      },
      "optional": {
        "short": "A Boolean or flag string indicating whether to return a compact or abbreviated set of fields. Example: true to retrieve only key metrics (symbol, price). (Boolean or String, optional)"
      }
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "price": "The last traded price or intrinsic value of the security or asset. Example: 130.75. (Number)",
      "change": "The absolute change in price or value compared to the previous close. Example: \"+1.25\". (String)",
      "volume": "The total number of shares or contracts traded during a given period (typically daily). Example: 105000000. (Number)"
    }
  },
  {
    "name": "Exchange Stock Quotes API",
    "description": "Returns batched, up-to-the-second price, change and volume data for all symbols on an exchange—perfect for refreshing dashboards with one call.",
    "category": "quote_exchange_batch",
    "use_cases": [
      "track exchange advance/decline lines",
      "drive sector rotation algorithms",
      "benchmark market-on-close imbalances",
      "archive tick-by-tick exchange snapshots",
      "study microstructure across listings"
    ],
    "parameters": {
      "required": {
        "exchange": "The exchange code or abbreviation to scope results to a specific trading venue. Example: \"NASDAQ\" or \"NYSE\". Filters out tickers not listed on that exchange. (String, optional)"
      },
      "optional": {
        "short": "A Boolean or flag string indicating whether to return a compact or abbreviated set of fields. Example: true to retrieve only key metrics (symbol, price). (Boolean or String, optional)"
      }
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "price": "The last traded price or intrinsic value of the security or asset. Example: 130.75. (Number)",
      "change": "The absolute change in price or value compared to the previous close. Example: \"+1.25\". (String)",
      "volume": "The total number of shares or contracts traded during a given period (typically daily). Example: 105000000. (Number)"
    }
  },
  {
    "name": "Mutual Fund Price Quotes API",
    "description": "Provides live NAV quotes for a universe of mutual funds—great for client portals and wealth-management dashboards.",
    "category": "quote_mutualfund_batch",
    "use_cases": [
      "update nightly fund NAV tables",
      "power robo-advisor allocation widgets",
      "compare fund moves to benchmarks",
      "trigger re-balancing alerts",
      "populate performance leaderboards"
    ],
    "parameters": {
      "required": {},
      "optional": {
        "short": "A Boolean or flag string indicating whether to return a compact or abbreviated set of fields. Example: true to retrieve only key metrics (symbol, price). (Boolean or String, optional)"
      }
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "price": "The last traded price or intrinsic value of the security or asset. Example: 130.75. (Number)",
      "change": "The absolute change in price or value compared to the previous close. Example: \"+1.25\". (String)",
      "volume": "The total number of shares or contracts traded during a given period (typically daily). Example: 105000000. (Number)"
    }
  },
  {
    "name": "Mutual Fund Price Quotes API",
    "description": "Fetches batch price and change data for mutual funds—handy for monitoring broad fund universes with a single request.",
    "category": "quote_mutualfund_batch",
    "use_cases": [
      "drive fund-screener rankings",
      "feed risk-profiling engines",
      "automate NAV change notifications",
      "study sector fund flows",
      "synchronize nightly back-office records"
    ],
    "parameters": {
      "required": {},
      "optional": {
        "short": "A Boolean or flag string indicating whether to return a compact or abbreviated set of fields. Example: true to retrieve only key metrics (symbol, price). (Boolean or String, optional)"
      }
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "price": "The last traded price or intrinsic value of the security or asset. Example: 130.75. (Number)",
      "change": "The absolute change in price or value compared to the previous close. Example: \"+1.25\". (String)",
      "volume": "The total number of shares or contracts traded during a given period (typically daily). Example: 105000000. (Number)"
    }
  },
  {
    "name": "ETF Price Quotes API",
    "description": "Delivers real-time quotes for ETFs across all sectors—crucial for passive-strategy dashboards or ETF arbitrage models.",
    "category": "quote_etf_batch",
    "use_cases": [
      "track sector-rotation baskets",
      "calculate live intraday beta",
      "feed ETF relative-strength charts",
      "monitor liquidity for large orders",
      "drive smart beta allocation engines"
    ],
    "parameters": {
      "required": {},
      "optional": {
        "short": "A Boolean or flag string indicating whether to return a compact or abbreviated set of fields. Example: true to retrieve only key metrics (symbol, price). (Boolean or String, optional)"
      }
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "price": "The last traded price or intrinsic value of the security or asset. Example: 130.75. (Number)",
      "change": "The absolute change in price or value compared to the previous close. Example: \"+1.25\". (String)",
      "volume": "The total number of shares or contracts traded during a given period (typically daily). Example: 105000000. (Number)"
    }
  },
  {
    "name": "ETF Price Quotes API",
    "description": "Returns up-to-date price, change and volume data for a broad list of ETFs—perfect for building cross-asset market monitors.",
    "category": "quote_etf_batch",
    "use_cases": [
      "compare ETF performance vs benchmarks",
      "fuel pair-trading statistical models",
      "update watch-list widgets",
      "research intraday ETF flows",
      "audit tracking-error in real time"
    ],
    "parameters": {
      "required": {},
      "optional": {
        "short": "A Boolean or flag string indicating whether to return a compact or abbreviated set of fields. Example: true to retrieve only key metrics (symbol, price). (Boolean or String, optional)"
      }
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "price": "The last traded price or intrinsic value of the security or asset. Example: 130.75. (Number)",
      "change": "The absolute change in price or value compared to the previous close. Example: \"+1.25\". (String)",
      "volume": "The total number of shares or contracts traded during a given period (typically daily). Example: 105000000. (Number)"
    }
  },
  {
    "name": "Full Commodities Quotes API",
    "description": "Streams live quotes for a wide array of commodities—from energy to agriculture—ideal for macro dashboards and hedging tools.",
    "category": "quote_commodity_batch",
    "use_cases": [
      "populate commodity price tickers",
      "drive CTA trend-following systems",
      "hedge corporate exposure in real time",
      "monitor inflation-linked assets",
      "feed cross-asset correlation studies"
    ],
    "parameters": {
      "required": {},
      "optional": {
        "short": "A Boolean or flag string indicating whether to return a compact or abbreviated set of fields. Example: true to retrieve only key metrics (symbol, price). (Boolean or String, optional)"
      }
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "price": "The last traded price or intrinsic value of the security or asset. Example: 130.75. (Number)",
      "change": "The absolute change in price or value compared to the previous close. Example: \"+1.25\". (String)",
      "volume": "The total number of shares or contracts traded during a given period (typically daily). Example: 105000000. (Number)"
    }
  },
  {
    "name": "Full Commodities Quotes API",
    "description": "Returns batch price, change and volume for major commodity contracts—handy for energy desks and agri-trade monitors.",
    "category": "quote_commodity_batch",
    "use_cases": [
      "update commodity heat-maps",
      "alert on sharp price spikes",
      "benchmark producer hedges",
      "construct inflation dashboards",
      "feed risk-parity allocation models"
    ],
    "parameters": {
      "required": {},
      "optional": {
        "short": "A Boolean or flag string indicating whether to return a compact or abbreviated set of fields. Example: true to retrieve only key metrics (symbol, price). (Boolean or String, optional)"
      }
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "price": "The last traded price or intrinsic value of the security or asset. Example: 130.75. (Number)",
      "change": "The absolute change in price or value compared to the previous close. Example: \"+1.25\". (String)",
      "volume": "The total number of shares or contracts traded during a given period (typically daily). Example: 105000000. (Number)"
    }
  },
  {
    "name": "Full Cryptocurrency Quotes API",
    "description": "Supplies real-time prices for an extensive list of digital assets—perfect for crypto exchanges, wallets, or DeFi dashboards.",
    "category": "quote_crypto_batch",
    "use_cases": [
      "display multi-coin quote tickers",
      "compute portfolio P&L in real time",
      "feed arbitrage opportunity scanners",
      "drive on-chain analytics overlays",
      "alert on high-volatility moves"
    ],
    "parameters": {
      "required": {},
      "optional": {
        "short": "A Boolean or flag string indicating whether to return a compact or abbreviated set of fields. Example: true to retrieve only key metrics (symbol, price). (Boolean or String, optional)"
      }
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "price": "The last traded price or intrinsic value of the security or asset. Example: 130.75. (Number)",
      "change": "The absolute change in price or value compared to the previous close. Example: \"+1.25\". (String)",
      "volume": "The total number of shares or contracts traded during a given period (typically daily). Example: 105000000. (Number)"
    }
  },
  {
    "name": "Full Cryptocurrency Quotes API",
    "description": "Returns batched live quotes—including price change and volume—for hundreds of crypto pairs in one lightweight call.",
    "category": "quote_crypto_batch",
    "use_cases": [
      "power crypto leaderboards",
      "calculate rolling beta vs BTC",
      "track stable-coin pegs in real time",
      "fuel sentiment-driven trading bots",
      "archive minute-level crypto history"
    ],
    "parameters": {
      "required": {},
      "optional": {
        "short": "A Boolean or flag string indicating whether to return a compact or abbreviated set of fields. Example: true to retrieve only key metrics (symbol, price). (Boolean or String, optional)"
      }
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "price": "The last traded price or intrinsic value of the security or asset. Example: 130.75. (Number)",
      "change": "The absolute change in price or value compared to the previous close. Example: \"+1.25\". (String)",
      "volume": "The total number of shares or contracts traded during a given period (typically daily). Example: 105000000. (Number)"
    }
  },
  {
    "name": "Full Forex Quote API",
    "description": "Delivers real-time FX quotes for a broad basket of currency pairs—essential for multi-asset trading platforms and treasury systems.",
    "category": "quote_forex_batch",
    "use_cases": [
      "update global FX dashboards",
      "calculate cross-pair correlations",
      "feed automated hedging algos",
      "alert on sharp pip moves",
      "drive carry-trade models"
    ],
    "parameters": {
      "required": {},
      "optional": {
        "short": "A Boolean or flag string indicating whether to return a compact or abbreviated set of fields. Example: true to retrieve only key metrics (symbol, price). (Boolean or String, optional)"
      }
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "price": "The last traded price or intrinsic value of the security or asset. Example: 130.75. (Number)",
      "change": "The absolute change in price or value compared to the previous close. Example: \"+1.25\". (String)",
      "volume": "The total number of shares or contracts traded during a given period (typically daily). Example: 105000000. (Number)"
    }
  },
  {
    "name": "Full Forex Quote API",
    "description": "Returns batched spot quotes, changes and volumes for dozens of currency pairs—great for FX risk management dashboards.",
    "category": "quote_forex_batch",
    "use_cases": [
      "fuel FX option pricing engines",
      "monitor emerging-market pairs",
      "update travel-FX web widgets",
      "research intraday volatility patterns",
      "archive tick data for back-testing"
    ],
    "parameters": {
      "required": {},
      "optional": {
        "short": "A Boolean or flag string indicating whether to return a compact or abbreviated set of fields. Example: true to retrieve only key metrics (symbol, price). (Boolean or String, optional)"
      }
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "price": "The last traded price or intrinsic value of the security or asset. Example: 130.75. (Number)",
      "change": "The absolute change in price or value compared to the previous close. Example: \"+1.25\". (String)",
      "volume": "The total number of shares or contracts traded during a given period (typically daily). Example: 105000000. (Number)"
    }
  },
  {
    "name": "Full Index Quotes API",
    "description": "Streams real-time levels for major and niche equity indexes—handy for macro traders and index-tracking dashboards.",
    "category": "quote_index_batch",
    "use_cases": [
      "populate index overview tables",
      "drive asset-allocation signals",
      "compare global risk-on / risk-off moves",
      "benchmark ETF tracking error",
      "alert on record highs/lows"
    ],
    "parameters": {
      "required": {},
      "optional": {
        "short": "A Boolean or flag string indicating whether to return a compact or abbreviated set of fields. Example: true to retrieve only key metrics (symbol, price). (Boolean or String, optional)"
      }
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "price": "The last traded price or intrinsic value of the security or asset. Example: 130.75. (Number)",
      "change": "The absolute change in price or value compared to the previous close. Example: \"+1.25\". (String)",
      "volume": "The total number of shares or contracts traded during a given period (typically daily). Example: 105000000. (Number)"
    }
  },
  {
    "name": "Full Index Quotes API",
    "description": "Returns live quote data for a basket of stock market indexes worldwide—ideal for dashboards needing fast macro snapshots.",
    "category": "quote_index_batch",
    "use_cases": [
      "update index heat-maps",
      "power global sentiment gauges",
      "feed tactical asset-allocation models",
      "track relative performance across regions",
      "store intraday index archives"
    ],
    "parameters": {
      "required": {},
      "optional": {
        "short": "A Boolean or flag string indicating whether to return a compact or abbreviated set of fields. Example: true to retrieve only key metrics (symbol, price). (Boolean or String, optional)"
      }
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "price": "The last traded price or intrinsic value of the security or asset. Example: 130.75. (Number)",
      "change": "The absolute change in price or value compared to the previous close. Example: \"+1.25\". (String)",
      "volume": "The total number of shares or contracts traded during a given period (typically daily). Example: 105000000. (Number)"
    }
  },
  {
    "name": "Company Profile Bulk API",
    "description": "Delivers full corporate profiles (logo, sector, executives, fundamentals, etc.) for thousands of tickers in one shot—ideal for rapidly populating equity master-files or autocomplete search back-ends.",
    "category": "profile_bulk",
    "use_cases": [
      "seed company databases with rich metadata",
      "render profile cards in portfolio apps",
      "enrich ESG or alternative-data lakes",
      "bulk-sync IPO information nightly",
      "drive screening filters (sector, country, market-cap)"
    ],
    "parameters": {
      "required": {
        "part": "A string or integer indicating a specific partition or segment of multipart data. For example, \"financials\" to fetch only the financials portion of a multi-section response. (String or Integer, optional)"
      },
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "price": "The last traded price or intrinsic value of the security or asset. Example: 130.75. (Number)",
      "marketCap": "The market capitalization of the company, calculated as share price multiplied by total shares outstanding. Example: \"None\" or 1500000000000 (1.5 trillion). (Number or String)",
      "beta": "A measure of the stock's volatility relative to the overall market; beta > 1 indicates higher volatility. Example: 1.20. (Number)",
      "lastDividend": "The amount of the most recent dividend paid per share. Example: 0.22. (Number)",
      "range": "The trading range (low–high) for the security during the trading session. Example: \"129.50–131.00\". (String)",
      "change": "The absolute change in price or value compared to the previous close. Example: \"+1.25\". (String)",
      "changePercentage": "The percentage change in price or value compared to the previous close. Example: \"+0.97%\". (Number, Percentage)",
      "volume": "The total number of shares or contracts traded during a given period (typically daily). Example: 105000000. (Number)",
      "averageVolume": "The average number of shares or contracts traded over a predefined period (e.g., 30 days). Example: 95000000. (Number)",
      "companyName": "The registered legal name of the company. Example: \"Apple Inc.\". (String)",
      "currency": "The ISO 4217 three-letter currency code representing the trading currency of the security. Example: \"USD\" for US Dollars. (String)",
      "cik": "The Central Index Key, a unique nine-digit identifier assigned by the SEC to entities. Example: \"0001454889\". (String)",
      "isin": "The International Securities Identification Number, a 12-character alphanumeric code for identifying securities. Example: \"US0378331005\". (String)",
      "cusip": "The Committee on Uniform Securities Identification Procedures number, a unique 9-character identifier for U.S. securities. Example: \"037833100\". (String)",
      "exchangeFullName": "The full name of the stock exchange where the security is listed. Example: \"NASDAQ Global Select\". (String)",
      "exchange": "The abbreviated code or name of the exchange where the security is traded. Example: \"NASDAQ\". (String)",
      "industry": "The primary industry classification of the company, typically using NAICS or SIC nomenclature. Example: \"Technology\". (String)",
      "website": "The official corporate website URL of the company. Example: \"https://www.apple.com\". (String, URL)",
      "description": "A brief description of the company’s business model, product lines, or the context of the data point. Example: \"Apple Inc. designs, manufactures, and markets smartphones, personal computers, tablets, wearables, and accessories worldwide.\". (String)",
      "ceo": "The name of the Chief Executive Officer of the company. Example: \"Tim Cook\". (String)",
      "sector": "The broad sector classification for the company, often aligned with GICS sectors. Example: \"Information Technology\". (String)",
      "country": "The country where the company is headquartered or primarily operates, using the ISO 3166-1 alpha-2 code. Example: \"US\". (String)",
      "fullTimeEmployees": "The total number of full-time employees at the company. Example: 164000. (Number)",
      "phone": "The primary contact phone number for the company’s investor relations or corporate headquarters. Example: \"(408) 996-1010\". (String)",
      "address": "The registered address of the company’s corporate headquarters. Example: \"One Apple Park Way\". (String)",
      "city": "The city where the company’s headquarters is located. Example: \"Cupertino\". (String)",
      "state": "The state or region where the company’s headquarters is located. Example: \"CA\". (String)",
      "zip": "The postal or ZIP code for the company’s headquarters. Example: \"95014\". (String)",
      "image": "A URL pointing to the company’s logo or representative image. Example: \"https://images.financialmodelingprep.com/symbol/AAPL.png\". (String, URL)",
      "ipoDate": "The date on which the company completed its Initial Public Offering (IPO). Example: \"2022-03-20\". (String, Date)",
      "defaultImage": "Boolean flag indicating whether the returned image is a default placeholder (true) or a custom company logo (false). Example: false. (Boolean)",
      "isEtf": "Boolean flag indicating if the security is an Exchange-Traded Fund (ETF). Example: false. (Boolean)",
      "isActivelyTrading": "Boolean flag indicating if the security is currently trading on the exchange. Example: true. (Boolean)",
      "isAdr": "Boolean flag indicating if the security is an American Depositary Receipt (ADR). Example: false. (Boolean)",
      "isFund": "Boolean flag indicating if the security is a mutual fund or other investment fund. Example: false. (Boolean)"
    }
  },
  {
    "name": "Company Profile Bulk API",
    "description": "Returns chunked snapshots of every listed company—split by numeric ‘part’ so you can iterate through the entire universe without hitting size limits.",
    "category": "profile_bulk",
    "use_cases": [
      "schedule rolling refreshes of static data",
      "compare profile changes quarter-over-quarter",
      "feed identity resolution engines for ticker ↔ CIK mapping",
      "generate watch-list thumbnails with logos",
      "support multilingual research portals"
    ],
    "parameters": {
      "required": {
        "part": "A string or integer indicating a specific partition or segment of multipart data. For example, \"financials\" to fetch only the financials portion of a multi-section response. (String or Integer, optional)"
      },
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "price": "The last traded price or intrinsic value of the security or asset. Example: 130.75. (Number)",
      "marketCap": "The market capitalization of the company, calculated as share price multiplied by total shares outstanding. Example: \"None\" or 1500000000000 (1.5 trillion). (Number or String)",
      "beta": "A measure of the stock's volatility relative to the overall market; beta > 1 indicates higher volatility. Example: 1.20. (Number)",
      "lastDividend": "The amount of the most recent dividend paid per share. Example: 0.22. (Number)",
      "range": "The trading range (low–high) for the security during the trading session. Example: \"129.50–131.00\". (String)",
      "change": "The absolute change in price or value compared to the previous close. Example: \"+1.25\". (String)",
      "changePercentage": "The percentage change in price or value compared to the previous close. Example: \"+0.97%\". (Number, Percentage)",
      "volume": "The total number of shares or contracts traded during a given period (typically daily). Example: 105000000. (Number)",
      "averageVolume": "The average number of shares or contracts traded over a predefined period (e.g., 30 days). Example: 95000000. (Number)",
      "companyName": "The registered legal name of the company. Example: \"Apple Inc.\". (String)",
      "currency": "The ISO 4217 three-letter currency code representing the trading currency of the security. Example: \"USD\" for US Dollars. (String)",
      "cik": "The Central Index Key, a unique nine-digit identifier assigned by the SEC to entities. Example: \"0001454889\". (String)",
      "isin": "The International Securities Identification Number, a 12-character alphanumeric code for identifying securities. Example: \"US0378331005\". (String)",
      "cusip": "The Committee on Uniform Securities Identification Procedures number, a unique 9-character identifier for U.S. securities. Example: \"037833100\". (String)",
      "exchangeFullName": "The full name of the stock exchange where the security is listed. Example: \"NASDAQ Global Select\". (String)",
      "exchange": "The abbreviated code or name of the exchange where the security is traded. Example: \"NASDAQ\". (String)",
      "industry": "The primary industry classification of the company, typically using NAICS or SIC nomenclature. Example: \"Technology\". (String)",
      "website": "The official corporate website URL of the company. Example: \"https://www.apple.com\". (String, URL)",
      "description": "A brief description of the company’s business model, product lines, or the context of the data point. Example: \"Apple Inc. designs, manufactures, and markets smartphones, personal computers, tablets, wearables, and accessories worldwide.\". (String)",
      "ceo": "The name of the Chief Executive Officer of the company. Example: \"Tim Cook\". (String)",
      "sector": "The broad sector classification for the company, often aligned with GICS sectors. Example: \"Information Technology\". (String)",
      "country": "The country where the company is headquartered or primarily operates, using the ISO 3166-1 alpha-2 code. Example: \"US\". (String)",
      "fullTimeEmployees": "The total number of full-time employees at the company. Example: 164000. (Number)",
      "phone": "The primary contact phone number for the company’s investor relations or corporate headquarters. Example: \"(408) 996-1010\". (String)",
      "address": "The registered address of the company’s corporate headquarters. Example: \"One Apple Park Way\". (String)",
      "city": "The city where the company’s headquarters is located. Example: \"Cupertino\". (String)",
      "state": "The state or region where the company’s headquarters is located. Example: \"CA\". (String)",
      "zip": "The postal or ZIP code for the company’s headquarters. Example: \"95014\". (String)",
      "image": "A URL pointing to the company’s logo or representative image. Example: \"https://images.financialmodelingprep.com/symbol/AAPL.png\". (String, URL)",
      "ipoDate": "The date on which the company completed its Initial Public Offering (IPO). Example: \"2022-03-20\". (String, Date)",
      "defaultImage": "Boolean flag indicating whether the returned image is a default placeholder (true) or a custom company logo (false). Example: false. (Boolean)",
      "isEtf": "Boolean flag indicating if the security is an Exchange-Traded Fund (ETF). Example: false. (Boolean)",
      "isActivelyTrading": "Boolean flag indicating if the security is currently trading on the exchange. Example: true. (Boolean)",
      "isAdr": "Boolean flag indicating if the security is an American Depositary Receipt (ADR). Example: false. (Boolean)",
      "isFund": "Boolean flag indicating if the security is a mutual fund or other investment fund. Example: false. (Boolean)"
    }
  },
  {
    "name": "Stock Rating Bulk API",
    "description": "Streams aggregated letter-grade ratings and buy/sell recommendations for the whole market—perfect for heat-map dashboards or quant signals.",
    "category": "rating_bulk",
    "use_cases": [
      "rank stocks by overall rating",
      "color-code screener results (Strong Buy → Strong Sell)",
      "back-test factor portfolios with historical ratings",
      "surface outliers where consensus shifts suddenly",
      "combine with technicals for multi-factor models"
    ],
    "parameters": {
      "required": {},
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "rating": "The letter or grade rating assigned to the company, reflecting financial health or analyst consensus. Example: \"A-\". (String)",
      "ratingRecommendation": "The overall rating recommendation for the security (e.g., \"Buy\", \"Hold\", \"Sell\"). Example: \"Buy\". (String)",
      "ratingDetailsDCFRecommendation": "The DCF-based rating recommendation, indicating buy/sell/hold based on discounted cash flow analysis. Example: \"Hold\". (String)",
      "ratingDetailsROERecommendation": "Recommendation based on return on equity analysis. (String, optional)",
      "ratingDetailsROARecommendation": "Recommendation based on return on assets analysis. (String, optional)",
      "ratingDetailsDERecommendation": "Recommendation rating for the security based on dividend yield or earnings analysis (DE). (String, optional)",
      "ratingDetailsPERecommendation": "The P/E-based rating recommendation, indicating buy/sell/hold based on price-to-earnings analysis. Example: \"Buy\". (String)",
      "ratingDetailsPBRecommendation": "Recommendation rating based on price-to-book ratio analysis. (String, optional)"
    }
  },
  {
    "name": "Stock Rating Bulk API",
    "description": "Provides at-a-glance fundamental sub-scores (DCF, ROE, PE, etc.) for every ticker—great for side-by-side comparison in research terminals.",
    "category": "rating_bulk",
    "use_cases": [
      "export full rating matrix to Excel in one call",
      "track upgrades/downgrades by sector",
      "trigger alerts when a stock flips to ‘Buy’",
      "feed sentiment columns in public APIs",
      "power AI models that learn from rating transitions"
    ],
    "parameters": {
      "required": {},
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "rating": "The letter or grade rating assigned to the company, reflecting financial health or analyst consensus. Example: \"A-\". (String)",
      "ratingRecommendation": "The overall rating recommendation for the security (e.g., \"Buy\", \"Hold\", \"Sell\"). Example: \"Buy\". (String)",
      "ratingDetailsDCFRecommendation": "The DCF-based rating recommendation, indicating buy/sell/hold based on discounted cash flow analysis. Example: \"Hold\". (String)",
      "ratingDetailsROERecommendation": "Recommendation based on return on equity analysis. (String, optional)",
      "ratingDetailsROARecommendation": "Recommendation based on return on assets analysis. (String, optional)",
      "ratingDetailsDERecommendation": "Recommendation rating for the security based on dividend yield or earnings analysis (DE). (String, optional)",
      "ratingDetailsPERecommendation": "The P/E-based rating recommendation, indicating buy/sell/hold based on price-to-earnings analysis. Example: \"Buy\". (String)",
      "ratingDetailsPBRecommendation": "Recommendation rating based on price-to-book ratio analysis. (String, optional)"
    }
  },
  {
    "name": "DCF Valuations Bulk API",
    "description": "Returns latest discounted-cash-flow valuations for all symbols—instantly reveal undervalued or overvalued names at scale.",
    "category": "dcf_bulk",
    "use_cases": [
      "build value screens ranked by DCF upside",
      "plot market price vs fair value scatter charts",
      "rebalance long/short books based on mispricing",
      "feed valuation widgets in investor portals",
      "audit internal analyst models against external DCFs"
    ],
    "parameters": {
      "required": {},
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "discountedCashFlow": "The raw Discounted Cash Flow valuation figure generated by an internal model. Example: 2500000000000. (Number)",
      "dcfPercentDiff": "The percentage difference between current market price and DCF valuation. Example: 12.5. (Number, Percentage)"
    }
  },
  {
    "name": "DCF Valuations Bulk API",
    "description": "Supplies one-line DCF outputs (fair value & % diff) for every listed company—handy for nightly screening or batch factor pipelines.",
    "category": "dcf_bulk",
    "use_cases": [
      "refresh fair-value columns in CRM tools",
      "visualize valuation spreads by industry",
      "train ML models on DCF dispersion signals",
      "identify extreme negative DCF gaps for risk review",
      "export full universe to CSV for ad-hoc analysis"
    ],
    "parameters": {
      "required": {},
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "discountedCashFlow": "The raw Discounted Cash Flow valuation figure generated by an internal model. Example: 2500000000000. (Number)",
      "dcfPercentDiff": "The percentage difference between current market price and DCF valuation. Example: 12.5. (Number, Percentage)"
    }
  },
  {
    "name": "Financial Scores Bulk API",
    "description": "Aggregates Altman-Z, Piotroski, working capital, and other health metrics for all tickers—great for credit-risk or distress-prediction models.",
    "category": "scores_bulk",
    "use_cases": [
      "screen out firms with Z-Score < 1.8",
      "rank quality factor portfolios by Piotroski ≥ 7",
      "monitor covenant health in bond research",
      "flag potential bankruptcy candidates",
      "feed composite scoring engines"
    ],
    "parameters": {
      "required": {},
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "reportedCurrency": "The currency in which all reported values are denominated, as per ISO 4217. Example: 'USD' for US dollars. (String, required for financial data integrity)",
      "altmanZScore": "The Altman Z-Score, a formula used to predict the likelihood of bankruptcy. Example: 3.1. (Number)",
      "piotroskiScore": "The Piotroski F-Score, measuring financial strength on a scale from 0 to 9. Example: 7. (Number)",
      "workingCapital": "Working Capital, calculated as current assets minus current liabilities. Example: 20000000. (Number)",
      "totalAssets": "The total assets value, representing the entire asset base of the company. Example: 120000000. (Number)",
      "retainedEarnings": "Accumulated net income kept in the company after dividends, reinvested into the business. Example: 90,000,000,000 for long-standing profitable firms. (Number, equity section of balance sheet)",
      "ebit": "The actual reported Earnings Before Interest and Taxes for the period. Example: 22000000. (Number)",
      "marketCap": "The market capitalization of the company, calculated as share price multiplied by total shares outstanding. Example: \"None\" or 1500000000000 (1.5 trillion). (Number or String)",
      "totalLiabilities": "The total liabilities value, representing all debts and obligations. Example: 40000000. (Number)",
      "revenue": "The total revenue value reported or projected for the period. Example: 100000000. (Number)"
    }
  },
  {
    "name": "Financial Scores Bulk API",
    "description": "Delivers a buffet of solvency, profitability, and efficiency metrics in one payload—ideal for multifactor screening without multiple round-trips.",
    "category": "scores_bulk",
    "use_cases": [
      "generate credit dashboards for loan desks",
      "batch-update risk-model parameters weekly",
      "tie Piotroski changes to price reactions",
      "power academic research on distress cycles",
      "augment private-equity deal filters"
    ],
    "parameters": {
      "required": {},
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "reportedCurrency": "The currency in which all reported values are denominated, as per ISO 4217. Example: 'USD' for US dollars. (String, required for financial data integrity)",
      "altmanZScore": "The Altman Z-Score, a formula used to predict the likelihood of bankruptcy. Example: 3.1. (Number)",
      "piotroskiScore": "The Piotroski F-Score, measuring financial strength on a scale from 0 to 9. Example: 7. (Number)",
      "workingCapital": "Working Capital, calculated as current assets minus current liabilities. Example: 20000000. (Number)",
      "totalAssets": "The total assets value, representing the entire asset base of the company. Example: 120000000. (Number)",
      "retainedEarnings": "Accumulated net income kept in the company after dividends, reinvested into the business. Example: 90,000,000,000 for long-standing profitable firms. (Number, equity section of balance sheet)",
      "ebit": "The actual reported Earnings Before Interest and Taxes for the period. Example: 22000000. (Number)",
      "marketCap": "The market capitalization of the company, calculated as share price multiplied by total shares outstanding. Example: \"None\" or 1500000000000 (1.5 trillion). (Number or String)",
      "totalLiabilities": "The total liabilities value, representing all debts and obligations. Example: 40000000. (Number)",
      "revenue": "The total revenue value reported or projected for the period. Example: 100000000. (Number)"
    }
  },
  {
    "name": "Price Target Summary Bulk API",
    "description": "Compiles analyst average price targets (1-mo, 3-mo, 1-yr, etc.) for every ticker—perfect for sentiment dashboards and expectation gap studies.",
    "category": "price_target_bulk",
    "use_cases": [
      "identify names trading above consensus PT",
      "quantify PT momentum over time",
      "feed ‘Street vs Price’ widgets",
      "spot thin-coverage stocks lacking PTs",
      "benchmark internal research vs market consensus"
    ],
    "parameters": {
      "required": {},
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "lastMonth": "Reference to data from the previous month, often used for performance or position change. (String/Date, optional)",
      "lastMonthAvgPT": "The average price target for the last month issued by analysts. Example: 200.75. (Number)",
      "lastMonthAvgPTPercentDif": "Average percent difference of price targets in the last month. Useful for tracking analyst or internal forecast changes. (Number, percent, optional)",
      "lastQuarter": "Reference to data or period covering the most recent fiscal quarter. (String/Date, optional)",
      "lastQuarterAvgPT": "Average price target in the last quarter. (Number, optional)",
      "lastQuarterAvgPTPercentDif": "Average percent difference of price targets in the last quarter. (Number, percent, optional)",
      "lastYear": "Reference to data from the previous year, used for historical comparison. (String/Date, optional)",
      "lastYearAvgPT": "Average price target in the last year. (Number, optional)",
      "lastYearAvgPTPercentDif": "The percentage difference between current price and last year’s average price target. Example: 5.0. (Number, Percentage)",
      "allTime": "Cumulative or total value since inception, typically used for performance or volume metrics.",
      "allTimeAvgPT": "The average price target issued since inception. Example: 201.21. (Number)",
      "allTimeAvgPTPercentDif": "The percentage difference between current price and all-time average price target. Example: 8.25. (Number, Percentage)",
      "publishers": "An array of publishers or sources contributing to analyst price targets. Example: [\"Benzinga\",\"StreetInsider\",...]. (Array of Strings)"
    }
  },
  {
    "name": "Price Target Summary Bulk API",
    "description": "Returns historical rolling averages of analyst PTs across multiple horizons—ideal for back-testing PT dispersion strategies.",
    "category": "price_target_bulk",
    "use_cases": [
      "track PT convergence/divergence patterns",
      "drive contrarian plays when price > PT",
      "rank sectors by PT upside potential",
      "supply data to newsroom graphics",
      "audit analysts’ target accuracy"
    ],
    "parameters": {
      "required": {},
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "lastMonth": "Reference to data from the previous month, often used for performance or position change. (String/Date, optional)",
      "lastMonthAvgPT": "The average price target for the last month issued by analysts. Example: 200.75. (Number)",
      "lastMonthAvgPTPercentDif": "Average percent difference of price targets in the last month. Useful for tracking analyst or internal forecast changes. (Number, percent, optional)",
      "lastQuarter": "Reference to data or period covering the most recent fiscal quarter. (String/Date, optional)",
      "lastQuarterAvgPT": "Average price target in the last quarter. (Number, optional)",
      "lastQuarterAvgPTPercentDif": "Average percent difference of price targets in the last quarter. (Number, percent, optional)",
      "lastYear": "Reference to data from the previous year, used for historical comparison. (String/Date, optional)",
      "lastYearAvgPT": "Average price target in the last year. (Number, optional)",
      "lastYearAvgPTPercentDif": "The percentage difference between current price and last year’s average price target. Example: 5.0. (Number, Percentage)",
      "allTime": "Cumulative or total value since inception, typically used for performance or volume metrics.",
      "allTimeAvgPT": "The average price target issued since inception. Example: 201.21. (Number)",
      "allTimeAvgPTPercentDif": "The percentage difference between current price and all-time average price target. Example: 8.25. (Number, Percentage)",
      "publishers": "An array of publishers or sources contributing to analyst price targets. Example: [\"Benzinga\",\"StreetInsider\",...]. (Array of Strings)"
    }
  },
  {
    "name": "ETF Holder Bulk API",
    "description": "Lists every asset inside global ETFs with weight, shares, and market value—great for constructing fund look-through exposures at scale.",
    "category": "etf_holder_bulk",
    "use_cases": [
      "compute aggregate factor exposures of portfolios",
      "monitor weighting changes for passive funds",
      "detect hidden concentration risks",
      "power thematic ETF screeners",
      "build cross-holding networks"
    ],
    "parameters": {
      "required": {
        "part": "A string or integer indicating a specific partition or segment of multipart data. For example, \"financials\" to fetch only the financials portion of a multi-section response. (String or Integer, optional)"
      },
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "sharesNumber": "The number of shares held or reported in a specific context, such as a portfolio holding. Example: 1000. (Number)",
      "asset": "The asset identifier, such as a stock ticker, ISIN, or unique code. Example: \"AAPL\". (String)",
      "weightPercentage": "The percentage weight of an asset or holding within a portfolio. Example: 5.25. (Number, Percentage)",
      "cusip": "The Committee on Uniform Securities Identification Procedures number, a unique 9-character identifier for U.S. securities. Example: \"037833100\". (String)",
      "isin": "The International Securities Identification Number, a 12-character alphanumeric code for identifying securities. Example: \"US0378331005\". (String)",
      "name": "The full legal or common name of the company. Example: \"Apple Inc.\" (String)",
      "marketValue": "The total market value of an asset or holding at the time of reporting, in the reporting currency. Example: 1500000. (Number)",
      "updatedAt": "The exact timestamp when the data record was last updated, in ISO 8601 format. Example: \"2025-02-04T15:30:00Z\". (String, DateTime)"
    }
  },
  {
    "name": "ETF Holder Bulk API",
    "description": "Retrieves chunked ETF constituent lists via ‘part’ pagination—ideal for nightly refreshes without timeouts.",
    "category": "etf_holder_bulk",
    "use_cases": [
      "update risk models with latest ETF baskets",
      "calculate overlap between ETFs and direct holdings",
      "track bond ETF duration drift",
      "feed portfolio-look-through APIs",
      "analyze liquidity of underlying ETF assets"
    ],
    "parameters": {
      "required": {
        "part": "A string or integer indicating a specific partition or segment of multipart data. For example, \"financials\" to fetch only the financials portion of a multi-section response. (String or Integer, optional)"
      },
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "sharesNumber": "The number of shares held or reported in a specific context, such as a portfolio holding. Example: 1000. (Number)",
      "asset": "The asset identifier, such as a stock ticker, ISIN, or unique code. Example: \"AAPL\". (String)",
      "weightPercentage": "The percentage weight of an asset or holding within a portfolio. Example: 5.25. (Number, Percentage)",
      "cusip": "The Committee on Uniform Securities Identification Procedures number, a unique 9-character identifier for U.S. securities. Example: \"037833100\". (String)",
      "isin": "The International Securities Identification Number, a 12-character alphanumeric code for identifying securities. Example: \"US0378331005\". (String)",
      "name": "The full legal or common name of the company. Example: \"Apple Inc.\" (String)",
      "marketValue": "The total market value of an asset or holding at the time of reporting, in the reporting currency. Example: 1500000. (Number)",
      "updatedAt": "The exact timestamp when the data record was last updated, in ISO 8601 format. Example: \"2025-02-04T15:30:00Z\". (String, DateTime)"
    }
  },
  {
    "name": "Upgrades Downgrades Consensus Bulk API",
    "description": "Aggregates analyst rating distributions (Strong Buy → Strong Sell) for every covered equity—great for sentiment heat-maps.",
    "category": "upgrades_downgrades_bulk",
    "use_cases": [
      "highlight stocks with fresh downgrades",
      "quant back-test rating-change alpha",
      "feed social sentiment bots",
      "monitor consensus shifts post-earnings",
      "cluster industries by analyst optimism"
    ],
    "parameters": {
      "required": {},
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "strongBuy": "The number of 'Strong Buy' recommendations currently issued. Example: 1. (Number)",
      "buy": "The total number of 'Buy' recommendations. Example: 29. (Number)",
      "hold": "The total number of 'Hold' recommendations. Example: 11. (Number)",
      "sell": "The total number of 'Sell' recommendations. Example: 4. (Number)",
      "strongSell": "The total number of 'Strong Sell' recommendations. Example: 0. (Number)",
      "consensus": "The aggregated consensus rating or recommendation for the security (e.g., 'Buy', 'Hold', or 'Sell'). Example: \"Buy\". (String)"
    }
  },
  {
    "name": "Upgrades Downgrades Consensus Bulk API",
    "description": "Delivers full market-wide tally of buy/hold/sell counts—ideal for comparing sell-side conviction across tickers or sectors.",
    "category": "upgrades_downgrades_bulk",
    "use_cases": [
      "feed rating pie charts in UI widgets",
      "spot unloved stocks (high sells, zero buys)",
      "cross-reference rating dispersion with volatility",
      "generate brokerage league tables",
      "track progressive upgrades toward IPOs"
    ],
    "parameters": {
      "required": {},
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "strongBuy": "The number of 'Strong Buy' recommendations currently issued. Example: 1. (Number)",
      "buy": "The total number of 'Buy' recommendations. Example: 29. (Number)",
      "hold": "The total number of 'Hold' recommendations. Example: 11. (Number)",
      "sell": "The total number of 'Sell' recommendations. Example: 4. (Number)",
      "strongSell": "The total number of 'Strong Sell' recommendations. Example: 0. (Number)",
      "consensus": "The aggregated consensus rating or recommendation for the security (e.g., 'Buy', 'Hold', or 'Sell'). Example: \"Buy\". (String)"
    }
  },
  {
    "name": "Key Metrics TTM Bulk API",
    "description": "Returns trailing-twelve-month valuation, leverage, and efficiency metrics for the entire universe in one call—fueling factor research at lightning speed.",
    "category": "key_metrics_ttm_bulk",
    "use_cases": [
      "construct composite quality/value factors",
      "benchmark peers on ROIC or FCF yield",
      "screen for low EV/EBITDA bargains",
      "feed machine-learning feature stores",
      "populate snapshot tables in analytics suites"
    ],
    "parameters": {
      "required": {},
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "marketCapTTM": "The trailing twelve months market capitalization, updated quarterly. Example: 2500000000000. (Number)",
      "enterpriseValueTTM": "Enterprise value calculated using trailing twelve months data. (Number, currency)",
      "evToSalesTTM": "Enterprise Value to Sales ratio (Trailing Twelve Months). Example: 3.5. (Number)",
      "evToOperatingCashFlowTTM": "Trailing twelve months EV to operating cash flow. (Number, ratio)",
      "evToFreeCashFlowTTM": "Trailing twelve months EV to free cash flow. (Number, ratio)",
      "evToEBITDATTM": "The Enterprise Value to EBITDA (Trailing Twelve Months) multiple. Example: 10.8. (Number)",
      "netDebtToEBITDATTM": "Net Debt to EBITDA (Trailing Twelve Months) ratio. Example: 1.5. (Number)",
      "currentRatioTTM": "The trailing twelve months Current Ratio. Example: 2.0. (Number)",
      "incomeQualityTTM": "Trailing twelve months (TTM) value for income quality. Example: 1.12. (Number, optional)",
      "grahamNumberTTM": "The Graham Number calculated using trailing twelve months earnings and book value. Example: 50.30. (Number)",
      "grahamNetNetTTM": "Graham Net-Net calculation using trailing twelve months (TTM) values for the most up-to-date deep value assessment. Example: 2,100,000 updated for last four quarters. (Number, TTM-based valuation)",
      "taxBurdenTTM": "Tax burden ratio (net income/pre-tax income) using TTM values, showing effective tax impact. Example: 0.8 means 80% of pre-tax income is retained. (Number, TTM tax efficiency)",
      "interestBurdenTTM": "Interest burden calculated on a trailing twelve months basis. Example: 0.76. (Number, optional)",
      "workingCapitalTTM": "Working capital (current assets minus current liabilities) over the trailing twelve months. Example: 25,000,000,000. (Number, TTM liquidity metric)",
      "investedCapitalTTM": "Trailing twelve month figure for invested capital. (Number, optional)",
      "returnOnAssetsTTM": "Return on assets calculated over the trailing twelve months. Example: 0.185 for 18.5%. (Number, TTM metric)",
      "operatingReturnOnAssetsTTM": "Trailing twelve month value for operating return on assets. (Number, percent, optional)",
      "returnOnTangibleAssetsTTM": "Return on tangible assets using TTM data. Example: 0.18 for 18%. (Number, conservative TTM analysis)",
      "returnOnEquityTTM": "Return on Equity (Trailing Twelve Months), measuring profitability relative to shareholder equity. Example: 15.2. (Number, Percentage)",
      "returnOnInvestedCapitalTTM": "Return on invested capital (ROIC) calculated using TTM numbers. Example: 0.16 for 16%. (Number, capital allocation efficiency)",
      "returnOnCapitalEmployedTTM": "Return on capital employed, trailing twelve months. Example: 0.21 for 21%. (Number, TTM efficiency metric)",
      "earningsYieldTTM": "Earnings Yield (Trailing Twelve Months), calculated as EPS divided by share price. Example: 5.6. (Number, Percentage)",
      "freeCashFlowYieldTTM": "Free Cash Flow yield (Trailing Twelve Months), representing free cash flow as a percentage of market capitalization. Example: 5.0. (Number, Percentage)",
      "capexToOperatingCashFlowTTM": "Capex to operating cash flow ratio for the trailing twelve months.",
      "capexToDepreciationTTM": "Capex to depreciation ratio for the trailing twelve months.",
      "capexToRevenueTTM": "Capex to revenue ratio for the trailing twelve months.",
      "salesGeneralAndAdministrativeToRevenueTTM": "SG&A to revenue, trailing twelve months. Example: 0. (Number, optional)",
      "researchAndDevelopementToRevenueTTM": "R&D to revenue ratio calculated over the trailing twelve months (TTM). Example: 0.055 for 5.5%. (Number, TTM analysis)",
      "stockBasedCompensationToRevenueTTM": "Stock-based compensation to revenue ratio using TTM values. Example: 0.038 for 3.8%. (Number, updated compensation metric)",
      "intangiblesToTotalAssetsTTM": "Trailing twelve month ratio of intangible assets to total assets. (Number, percent, optional)",
      "averageReceivablesTTM": "Average accounts receivable over the trailing twelve months.",
      "averagePayablesTTM": "Average accounts payable over the trailing twelve months.",
      "averageInventoryTTM": "Average inventory value for the trailing twelve months.",
      "daysOfSalesOutstandingTTM": "Trailing twelve months average for days sales outstanding. (Number, days)",
      "daysOfPayablesOutstandingTTM": "Trailing twelve months average for days of payables outstanding. (Number, days)",
      "daysOfInventoryOutstandingTTM": "Trailing twelve months average for days of inventory outstanding. (Number, days)",
      "operatingCycleTTM": "Operating cycle, trailing twelve months. Example: 66.61 days. (Number, optional)",
      "cashConversionCycleTTM": "Cash Conversion Cycle (Trailing Twelve Months), indicating operational efficiency in days. Example: 48. (Number)",
      "freeCashFlowToEquityTTM": "Trailing twelve months free cash flow to equity. (Number, currency)",
      "freeCashFlowToFirmTTM": "Trailing twelve months free cash flow to firm. (Number, currency)",
      "tangibleAssetValueTTM": "Tangible asset value using TTM data for ongoing asset quality assessment. Example: 295,000,000,000. (Number, updated asset analysis)",
      "netCurrentAssetValueTTM": "Trailing twelve months net current asset value. Example: -144087000000. (Number, optional)"
    }
  },
  {
    "name": "Key Metrics TTM Bulk API",
    "description": "Bulk-delivers hundreds of TTM ratios—current ratio, Graham number, FCF yield, etc.—perfect for deep fundamental screens without per-ticker calls.",
    "category": "key_metrics_ttm_bulk",
    "use_cases": [
      "refresh quantitative ranking tables daily",
      "drive portfolio rebalancing engines",
      "create academic datasets on corporate finance",
      "identify deteriorating liquidity early",
      "compare tangible book gaps across markets"
    ],
    "parameters": {
      "required": {},
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "marketCapTTM": "The trailing twelve months market capitalization, updated quarterly. Example: 2500000000000. (Number)",
      "enterpriseValueTTM": "Enterprise value calculated using trailing twelve months data. (Number, currency)",
      "evToSalesTTM": "Enterprise Value to Sales ratio (Trailing Twelve Months). Example: 3.5. (Number)",
      "evToOperatingCashFlowTTM": "Trailing twelve months EV to operating cash flow. (Number, ratio)",
      "evToFreeCashFlowTTM": "Trailing twelve months EV to free cash flow. (Number, ratio)",
      "evToEBITDATTM": "The Enterprise Value to EBITDA (Trailing Twelve Months) multiple. Example: 10.8. (Number)",
      "netDebtToEBITDATTM": "Net Debt to EBITDA (Trailing Twelve Months) ratio. Example: 1.5. (Number)",
      "currentRatioTTM": "The trailing twelve months Current Ratio. Example: 2.0. (Number)",
      "incomeQualityTTM": "Trailing twelve months (TTM) value for income quality. Example: 1.12. (Number, optional)",
      "grahamNumberTTM": "The Graham Number calculated using trailing twelve months earnings and book value. Example: 50.30. (Number)",
      "grahamNetNetTTM": "Graham Net-Net calculation using trailing twelve months (TTM) values for the most up-to-date deep value assessment. Example: 2,100,000 updated for last four quarters. (Number, TTM-based valuation)",
      "taxBurdenTTM": "Tax burden ratio (net income/pre-tax income) using TTM values, showing effective tax impact. Example: 0.8 means 80% of pre-tax income is retained. (Number, TTM tax efficiency)",
      "interestBurdenTTM": "Interest burden calculated on a trailing twelve months basis. Example: 0.76. (Number, optional)",
      "workingCapitalTTM": "Working capital (current assets minus current liabilities) over the trailing twelve months. Example: 25,000,000,000. (Number, TTM liquidity metric)",
      "investedCapitalTTM": "Trailing twelve month figure for invested capital. (Number, optional)",
      "returnOnAssetsTTM": "Return on assets calculated over the trailing twelve months. Example: 0.185 for 18.5%. (Number, TTM metric)",
      "operatingReturnOnAssetsTTM": "Trailing twelve month value for operating return on assets. (Number, percent, optional)",
      "returnOnTangibleAssetsTTM": "Return on tangible assets using TTM data. Example: 0.18 for 18%. (Number, conservative TTM analysis)",
      "returnOnEquityTTM": "Return on Equity (Trailing Twelve Months), measuring profitability relative to shareholder equity. Example: 15.2. (Number, Percentage)",
      "returnOnInvestedCapitalTTM": "Return on invested capital (ROIC) calculated using TTM numbers. Example: 0.16 for 16%. (Number, capital allocation efficiency)",
      "returnOnCapitalEmployedTTM": "Return on capital employed, trailing twelve months. Example: 0.21 for 21%. (Number, TTM efficiency metric)",
      "earningsYieldTTM": "Earnings Yield (Trailing Twelve Months), calculated as EPS divided by share price. Example: 5.6. (Number, Percentage)",
      "freeCashFlowYieldTTM": "Free Cash Flow yield (Trailing Twelve Months), representing free cash flow as a percentage of market capitalization. Example: 5.0. (Number, Percentage)",
      "capexToOperatingCashFlowTTM": "Capex to operating cash flow ratio for the trailing twelve months.",
      "capexToDepreciationTTM": "Capex to depreciation ratio for the trailing twelve months.",
      "capexToRevenueTTM": "Capex to revenue ratio for the trailing twelve months.",
      "salesGeneralAndAdministrativeToRevenueTTM": "SG&A to revenue, trailing twelve months. Example: 0. (Number, optional)",
      "researchAndDevelopementToRevenueTTM": "R&D to revenue ratio calculated over the trailing twelve months (TTM). Example: 0.055 for 5.5%. (Number, TTM analysis)",
      "stockBasedCompensationToRevenueTTM": "Stock-based compensation to revenue ratio using TTM values. Example: 0.038 for 3.8%. (Number, updated compensation metric)",
      "intangiblesToTotalAssetsTTM": "Trailing twelve month ratio of intangible assets to total assets. (Number, percent, optional)",
      "averageReceivablesTTM": "Average accounts receivable over the trailing twelve months.",
      "averagePayablesTTM": "Average accounts payable over the trailing twelve months.",
      "averageInventoryTTM": "Average inventory value for the trailing twelve months.",
      "daysOfSalesOutstandingTTM": "Trailing twelve months average for days sales outstanding. (Number, days)",
      "daysOfPayablesOutstandingTTM": "Trailing twelve months average for days of payables outstanding. (Number, days)",
      "daysOfInventoryOutstandingTTM": "Trailing twelve months average for days of inventory outstanding. (Number, days)",
      "operatingCycleTTM": "Operating cycle, trailing twelve months. Example: 66.61 days. (Number, optional)",
      "cashConversionCycleTTM": "Cash Conversion Cycle (Trailing Twelve Months), indicating operational efficiency in days. Example: 48. (Number)",
      "freeCashFlowToEquityTTM": "Trailing twelve months free cash flow to equity. (Number, currency)",
      "freeCashFlowToFirmTTM": "Trailing twelve months free cash flow to firm. (Number, currency)",
      "tangibleAssetValueTTM": "Tangible asset value using TTM data for ongoing asset quality assessment. Example: 295,000,000,000. (Number, updated asset analysis)",
      "netCurrentAssetValueTTM": "Trailing twelve months net current asset value. Example: -144087000000. (Number, optional)"
    }
  },
  {
    "name": "Ratios TTM Bulk API",
    "description": "Provides profitability, liquidity, leverage, and valuation ratios for every company based on latest TTM data—essential for multi-factor quant screens.",
    "category": "ratios_ttm_bulk",
    "use_cases": [
      "rank stocks by ROE or gross margin",
      "monitor debt-to-equity spikes",
      "feed screening rules in trading platforms",
      "evaluate dividend sustainability via payout ratio",
      "study cross-country valuation gaps"
    ],
    "parameters": {
      "required": {},
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "grossProfitMarginTTM": "Gross Profit margin (Trailing Twelve Months), expressed as a percentage. Example: 41.2. (Number, Percentage)",
      "ebitMarginTTM": "Trailing twelve months EBIT margin. (Number, percent)",
      "ebitdaMarginTTM": "Trailing twelve months EBITDA margin (EBITDA/Revenue). (Number, percent)",
      "operatingProfitMarginTTM": "Operating profit margin, trailing twelve months. Example: 0.318. (Number, optional)",
      "pretaxProfitMarginTTM": "Pre-tax profit margin calculated for the trailing twelve months. Example: 0.3177. (Number, optional)",
      "continuousOperationsProfitMarginTTM": "Continuous operations profit margin over the trailing twelve months.",
      "netProfitMarginTTM": "Net Profit margin (Trailing Twelve Months), expressed as a percentage of revenue. Example: 12.5. (Number, Percentage)",
      "bottomLineProfitMarginTTM": "Net profit margin for the trailing twelve months.",
      "receivablesTurnoverTTM": "Trailing twelve month value for receivables turnover. (Number, optional)",
      "payablesTurnoverTTM": "Trailing twelve month value for payables turnover. (Number, optional)",
      "inventoryTurnoverTTM": "Trailing twelve months inventory turnover ratio. Example: 30.62. (Number, optional)",
      "fixedAssetTurnoverTTM": "Trailing twelve months fixed asset turnover. (Number, ratio)",
      "assetTurnoverTTM": "Asset turnover ratio for the trailing twelve months: revenue divided by average total assets. (Ratio, e.g., 0.82)",
      "currentRatioTTM": "The trailing twelve months Current Ratio. Example: 2.0. (Number)",
      "quickRatioTTM": "Quick Ratio (Trailing Twelve Months), a liquidity metric excluding inventories from current assets. Example: 1.1. (Number)",
      "solvencyRatioTTM": "Solvency ratio calculated with TTM data. Example: 2.1 for improved solvency over last year. (Number, updated solvency metric)",
      "cashRatioTTM": "Cash ratio (cash and equivalents divided by current liabilities) over the trailing twelve months. Indicates short-term solvency. (Ratio)",
      "priceToEarningsRatioTTM": "The trailing twelve months Price-to-Earnings ratio. Example: 17.8. (Number)",
      "priceToEarningsGrowthRatioTTM": "Trailing twelve month PEG ratio. (Number, optional)",
      "priceToBookRatioTTM": "Trailing twelve month price to book ratio. (Number, optional)",
      "priceToSalesRatioTTM": "Price to Sales ratio (Trailing Twelve Months), comparing share price to revenue per share. Example: 7.5. (Number)",
      "priceToFreeCashFlowTTM": "Trailing twelve month free cash flow per share or per company. (Number, optional)",
      "priceToOperatingCashFlowRatioTTM": "Trailing twelve month value for price to operating cash flow ratio. (Number, optional)",
      "debtToAssetsRatioTTM": "Debt to Assets ratio (Trailing Twelve Months), measuring leverage relative to total assets. Example: 0.28. (Number)",
      "debtToEquityRatioTTM": "Trailing twelve months ratio of total debt to shareholders' equity. (Number, ratio)",
      "debtToCapitalRatioTTM": "Trailing twelve months debt to capital ratio. (Number, ratio)",
      "longTermDebtToCapitalRatioTTM": "Trailing twelve month value of the long-term debt to capital ratio. Useful for analyzing recent capital structure trends. (Number, percent, optional)",
      "financialLeverageRatioTTM": "Financial Leverage ratio (Trailing Twelve Months), measuring the ratio of total assets to equity. Example: 2.8. (Number)",
      "workingCapitalTurnoverRatioTTM": "Working capital turnover ratio using TTM numbers. Example: 5.3 TTM. (Number, updated efficiency metric)",
      "operatingCashFlowRatioTTM": "Trailing twelve month operating cash flow ratio. (Number, optional)",
      "operatingCashFlowSalesRatioTTM": "Trailing twelve month value for the operating cash flow to sales ratio. (Number, percent, optional)",
      "freeCashFlowOperatingCashFlowRatioTTM": "Trailing twelve months ratio of free cash flow to operating cash flow. (Number, ratio)",
      "debtServiceCoverageRatioTTM": "Trailing twelve months debt service coverage ratio. (Number, ratio)",
      "interestCoverageRatioTTM": "Trailing twelve months interest coverage ratio. Example: 8.39. (Number, optional)",
      "shortTermOperatingCashFlowCoverageRatioTTM": "Short-term operating cash flow coverage ratio using TTM values. Example: 1.6 TTM. (Number, updated liquidity view)",
      "operatingCashFlowCoverageRatioTTM": "Operating cash flow coverage ratio, trailing twelve months. Example: 1.12. (Number, optional)",
      "capitalExpenditureCoverageRatioTTM": "Capex coverage ratio for the trailing twelve months.",
      "dividendPaidAndCapexCoverageRatioTTM": "Trailing twelve months ratio of cash from operations to dividends plus capex. (Number, ratio)",
      "dividendPayoutRatioTTM": "Trailing twelve months dividend payout ratio. (Number, percent)",
      "dividendYieldTTM": "Trailing twelve months dividend yield. (Number, percent)",
      "dividendYieldPercentageTTM": "The trailing twelve months dividend yield expressed as a percentage. Example: 1.8. (Number, Percentage)",
      "revenuePerShareTTM": "Revenue per share calculated over the trailing twelve months. Example: 27.12 TTM. (Number, updated per-share analysis)",
      "netIncomePerShareTTM": "Trailing twelve month net income per share. (Number, optional)",
      "interestDebtPerShareTTM": "Interest-bearing debt per share, TTM. Example: 6.41. (Number, optional)",
      "cashPerShareTTM": "Cash per share measured over the trailing twelve months.",
      "bookValuePerShareTTM": "Book value per share for the trailing twelve months.",
      "tangibleBookValuePerShareTTM": "Tangible book value per share over TTM. Example: 8.40 TTM. (Number, updated per-share view)",
      "shareholdersEquityPerShareTTM": "Shareholders’ equity per share using TTM data. Example: 11.00 TTM. (Number, updated equity view)",
      "operatingCashFlowPerShareTTM": "Operating cash flow per share, trailing twelve months. Example: 7.18. (Number, optional)",
      "capexPerShareTTM": "Capex per share for the trailing twelve months.",
      "freeCashFlowPerShareTTM": "Trailing twelve months free cash flow per share. (Number, currency per share)",
      "netIncomePerEBTTTM": "Trailing twelve month value for net income to EBT ratio. (Number, optional)",
      "ebtPerEbitTTM": "Trailing twelve months EBT to EBIT ratio. (Number, ratio)",
      "priceToFairValueTTM": "Trailing twelve month value for price to fair value ratio. (Number, optional)",
      "debtToMarketCapTTM": "Trailing twelve months debt to market capitalization ratio. (Number, ratio)",
      "effectiveTaxRateTTM": "Trailing twelve months effective tax rate. (Number, percent)",
      "enterpriseValueMultipleTTM": "Trailing twelve months enterprise value multiple. (Number, ratio)"
    }
  },
  {
    "name": "Ratios TTM Bulk API",
    "description": "Returns an exhaustive table of TTM financial ratios in a single download—handy for CSV exports and back-tests that require the full market snapshot.",
    "category": "ratios_ttm_bulk",
    "use_cases": [
      "quick-load ratio data into SQL warehouses",
      "compare cash ratios across banking sectors",
      "develop screening presets for retail brokers",
      "train AI models to detect ratio anomalies",
      "publish sector fact sheets with fresh ratios"
    ],
    "parameters": {
      "required": {},
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "grossProfitMarginTTM": "Gross Profit margin (Trailing Twelve Months), expressed as a percentage. Example: 41.2. (Number, Percentage)",
      "ebitMarginTTM": "Trailing twelve months EBIT margin. (Number, percent)",
      "ebitdaMarginTTM": "Trailing twelve months EBITDA margin (EBITDA/Revenue). (Number, percent)",
      "operatingProfitMarginTTM": "Operating profit margin, trailing twelve months. Example: 0.318. (Number, optional)",
      "pretaxProfitMarginTTM": "Pre-tax profit margin calculated for the trailing twelve months. Example: 0.3177. (Number, optional)",
      "continuousOperationsProfitMarginTTM": "Continuous operations profit margin over the trailing twelve months.",
      "netProfitMarginTTM": "Net Profit margin (Trailing Twelve Months), expressed as a percentage of revenue. Example: 12.5. (Number, Percentage)",
      "bottomLineProfitMarginTTM": "Net profit margin for the trailing twelve months.",
      "receivablesTurnoverTTM": "Trailing twelve month value for receivables turnover. (Number, optional)",
      "payablesTurnoverTTM": "Trailing twelve month value for payables turnover. (Number, optional)",
      "inventoryTurnoverTTM": "Trailing twelve months inventory turnover ratio. Example: 30.62. (Number, optional)",
      "fixedAssetTurnoverTTM": "Trailing twelve months fixed asset turnover. (Number, ratio)",
      "assetTurnoverTTM": "Asset turnover ratio for the trailing twelve months: revenue divided by average total assets. (Ratio, e.g., 0.82)",
      "currentRatioTTM": "The trailing twelve months Current Ratio. Example: 2.0. (Number)",
      "quickRatioTTM": "Quick Ratio (Trailing Twelve Months), a liquidity metric excluding inventories from current assets. Example: 1.1. (Number)",
      "solvencyRatioTTM": "Solvency ratio calculated with TTM data. Example: 2.1 for improved solvency over last year. (Number, updated solvency metric)",
      "cashRatioTTM": "Cash ratio (cash and equivalents divided by current liabilities) over the trailing twelve months. Indicates short-term solvency. (Ratio)",
      "priceToEarningsRatioTTM": "The trailing twelve months Price-to-Earnings ratio. Example: 17.8. (Number)",
      "priceToEarningsGrowthRatioTTM": "Trailing twelve month PEG ratio. (Number, optional)",
      "priceToBookRatioTTM": "Trailing twelve month price to book ratio. (Number, optional)",
      "priceToSalesRatioTTM": "Price to Sales ratio (Trailing Twelve Months), comparing share price to revenue per share. Example: 7.5. (Number)",
      "priceToFreeCashFlowTTM": "Trailing twelve month free cash flow per share or per company. (Number, optional)",
      "priceToOperatingCashFlowRatioTTM": "Trailing twelve month value for price to operating cash flow ratio. (Number, optional)",
      "debtToAssetsRatioTTM": "Debt to Assets ratio (Trailing Twelve Months), measuring leverage relative to total assets. Example: 0.28. (Number)",
      "debtToEquityRatioTTM": "Trailing twelve months ratio of total debt to shareholders' equity. (Number, ratio)",
      "debtToCapitalRatioTTM": "Trailing twelve months debt to capital ratio. (Number, ratio)",
      "longTermDebtToCapitalRatioTTM": "Trailing twelve month value of the long-term debt to capital ratio. Useful for analyzing recent capital structure trends. (Number, percent, optional)",
      "financialLeverageRatioTTM": "Financial Leverage ratio (Trailing Twelve Months), measuring the ratio of total assets to equity. Example: 2.8. (Number)",
      "workingCapitalTurnoverRatioTTM": "Working capital turnover ratio using TTM numbers. Example: 5.3 TTM. (Number, updated efficiency metric)",
      "operatingCashFlowRatioTTM": "Trailing twelve month operating cash flow ratio. (Number, optional)",
      "operatingCashFlowSalesRatioTTM": "Trailing twelve month value for the operating cash flow to sales ratio. (Number, percent, optional)",
      "freeCashFlowOperatingCashFlowRatioTTM": "Trailing twelve months ratio of free cash flow to operating cash flow. (Number, ratio)",
      "debtServiceCoverageRatioTTM": "Trailing twelve months debt service coverage ratio. (Number, ratio)",
      "interestCoverageRatioTTM": "Trailing twelve months interest coverage ratio. Example: 8.39. (Number, optional)",
      "shortTermOperatingCashFlowCoverageRatioTTM": "Short-term operating cash flow coverage ratio using TTM values. Example: 1.6 TTM. (Number, updated liquidity view)",
      "operatingCashFlowCoverageRatioTTM": "Operating cash flow coverage ratio, trailing twelve months. Example: 1.12. (Number, optional)",
      "capitalExpenditureCoverageRatioTTM": "Capex coverage ratio for the trailing twelve months.",
      "dividendPaidAndCapexCoverageRatioTTM": "Trailing twelve months ratio of cash from operations to dividends plus capex. (Number, ratio)",
      "dividendPayoutRatioTTM": "Trailing twelve months dividend payout ratio. (Number, percent)",
      "dividendYieldTTM": "Trailing twelve months dividend yield. (Number, percent)",
      "dividendYieldPercentageTTM": "The trailing twelve months dividend yield expressed as a percentage. Example: 1.8. (Number, Percentage)",
      "revenuePerShareTTM": "Revenue per share calculated over the trailing twelve months. Example: 27.12 TTM. (Number, updated per-share analysis)",
      "netIncomePerShareTTM": "Trailing twelve month net income per share. (Number, optional)",
      "interestDebtPerShareTTM": "Interest-bearing debt per share, TTM. Example: 6.41. (Number, optional)",
      "cashPerShareTTM": "Cash per share measured over the trailing twelve months.",
      "bookValuePerShareTTM": "Book value per share for the trailing twelve months.",
      "tangibleBookValuePerShareTTM": "Tangible book value per share over TTM. Example: 8.40 TTM. (Number, updated per-share view)",
      "shareholdersEquityPerShareTTM": "Shareholders’ equity per share using TTM data. Example: 11.00 TTM. (Number, updated equity view)",
      "operatingCashFlowPerShareTTM": "Operating cash flow per share, trailing twelve months. Example: 7.18. (Number, optional)",
      "capexPerShareTTM": "Capex per share for the trailing twelve months.",
      "freeCashFlowPerShareTTM": "Trailing twelve months free cash flow per share. (Number, currency per share)",
      "netIncomePerEBTTTM": "Trailing twelve month value for net income to EBT ratio. (Number, optional)",
      "ebtPerEbitTTM": "Trailing twelve months EBT to EBIT ratio. (Number, ratio)",
      "priceToFairValueTTM": "Trailing twelve month value for price to fair value ratio. (Number, optional)",
      "debtToMarketCapTTM": "Trailing twelve months debt to market capitalization ratio. (Number, ratio)",
      "effectiveTaxRateTTM": "Trailing twelve months effective tax rate. (Number, percent)",
      "enterpriseValueMultipleTTM": "Trailing twelve months enterprise value multiple. (Number, ratio)"
    }
  },
  {
    "name": "Stock Peers Bulk API",
    "description": "Fetches each ticker’s closest listed competitors in a single sweep—great for instant relative-performance dashboards or clustering analysis.",
    "category": "peers_bulk",
    "use_cases": [
      "pre-load peer sets for quote comparison widgets",
      "drive sector-neutral hedge baskets",
      "feed factor models that require industry cohorts",
      "benchmark company KPIs against rivals",
      "surface substitution risks in supply-chain tools"
    ],
    "parameters": {
      "required": {},
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "peers": "An array of peer ticker symbols used for comparative analysis. Example: [\"MSFT\",\"GOOGL\",\"AMZN\"] . (Array of Strings)"
    }
  },
  {
    "name": "Stock Peers Bulk API",
    "description": "Returns a full-market mapping of ticker → peer list—ideal for building pair-trading engines or thematic screeners with zero extra calls.",
    "category": "peers_bulk",
    "use_cases": [
      "generate correlation heat-maps quickly",
      "identify underperformers vs peer median",
      "build watch-lists that auto-expand to peers",
      "enhance NLP news tagging with competitor sets",
      "bulk-export industry networks into graph DBs"
    ],
    "parameters": {
      "required": {},
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "peers": "An array of peer ticker symbols used for comparative analysis. Example: [\"MSFT\",\"GOOGL\",\"AMZN\"] . (Array of Strings)"
    }
  },
  {
    "name": "Earnings Surprises Bulk API",
    "description": "Delivers actual vs estimated EPS for an entire year’s reports—perfect for spotting broad beat/miss patterns across markets.",
    "category": "earnings_surprises_bulk",
    "use_cases": [
      "back-test post-earnings drift strategies",
      "rank sectors by surprise frequency",
      "trigger alerts on extreme beats",
      "feed sentiment scores into quant models",
      "compile surprise statistics for research notes"
    ],
    "parameters": {
      "required": {
        "year": "A four-digit calendar year or fiscal year number to filter period-based endpoints. Example: 2024 to retrieve data for the 2024 fiscal or calendar year. (Number or String, optional)"
      },
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "epsActual": "The actual reported Earnings Per Share (EPS) for the period, as reported by the company. Example: \"None\" or 3.25. (Number or String)",
      "epsEstimated": "The consensus estimated EPS for the period, typically drawn from analyst forecasts. Example: \"None\" or 3.40. (Number or String)",
      "lastUpdated": "The last date and time when this dataset or data field was updated in the system. Example: \"2025-02-04\". (String, Date)"
    }
  },
  {
    "name": "Earnings Surprises Bulk API",
    "description": "Bulk-retrieves historical EPS surprise data so you can analyze who consistently beats the Street and who chronically disappoints.",
    "category": "earnings_surprises_bulk",
    "use_cases": [
      "construct factor ‘earnings-beat streak’",
      "visualize surprise magnitude heat-bars",
      "study analyst estimate accuracy over time",
      "filter swing-trades around earnings events",
      "fuel machine-learning alpha features"
    ],
    "parameters": {
      "required": {
        "year": "A four-digit calendar year or fiscal year number to filter period-based endpoints. Example: 2024 to retrieve data for the 2024 fiscal or calendar year. (Number or String, optional)"
      },
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "epsActual": "The actual reported Earnings Per Share (EPS) for the period, as reported by the company. Example: \"None\" or 3.25. (Number or String)",
      "epsEstimated": "The consensus estimated EPS for the period, typically drawn from analyst forecasts. Example: \"None\" or 3.40. (Number or String)",
      "lastUpdated": "The last date and time when this dataset or data field was updated in the system. Example: \"2025-02-04\". (String, Date)"
    }
  },
  {
    "name": "Income Statement Bulk API",
    "description": "Provides full income-statement lines for thousands of firms in one hit—ideal for large-scale fundamental screening or data warehousing.",
    "category": "income_statement_bulk",
    "use_cases": [
      "populate financial databases nightly",
      "compute sector revenue aggregates",
      "compare YoY margin shifts across peers",
      "back-test profitability factors",
      "feed BI dashboards with fresh fundamentals"
    ],
    "parameters": {
      "required": {
        "year": "A four-digit calendar year or fiscal year number to filter period-based endpoints. Example: 2024 to retrieve data for the 2024 fiscal or calendar year. (Number or String, optional)",
        "period": "A string or integer indicating the fiscal period for which data is requested. Example: \"annual\" or \"quarter\" to indicate annual or quarterly data. (String or Number, required for period-based endpoints)"
      },
      "optional": {}
    },
    "response_example": {
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "reportedCurrency": "The currency in which all reported values are denominated, as per ISO 4217. Example: 'USD' for US dollars. (String, required for financial data integrity)",
      "cik": "The Central Index Key, a unique nine-digit identifier assigned by the SEC to entities. Example: \"0001454889\". (String)",
      "filingDate": "The date on which a regulatory filing was submitted (e.g., with the SEC), in ISO 8601 format. Example: \"2025-02-03\". (String, Date)",
      "acceptedDate": "The date on which a filing or document was accepted by the regulatory authority. Example: \"2025-02-03\". (String, Date)",
      "fiscalYear": "The fiscal year to which a financial data point pertains, typically in four-digit format. Example: 2023. (Number or String)",
      "period": "The fiscal period associated with the data point, such as a quarter (\"Q2\") or full year. Example: \"Q2\". (String)",
      "revenue": "The total revenue value reported or projected for the period. Example: 100000000. (Number)",
      "costOfRevenue": "Direct costs attributable to the production of goods sold or services rendered. (Number, e.g., USD)",
      "grossProfit": "The gross profit value, calculated as revenue minus cost of goods sold (COGS). Example: 40000000. (Number)",
      "researchAndDevelopmentExpenses": "Total spending on R&D activities for the period. Example: 21,914,000,000 for Apple's annual R&D. (Number, innovation/capex)",
      "generalAndAdministrativeExpenses": "Total expenses related to general business operations not tied directly to product manufacturing or sales. Includes salaries of corporate staff, legal fees, and office expenses. Example: 5,000,000 for overhead costs in a fiscal year. (Number, income statement, required for OPEX analysis)",
      "sellingAndMarketingExpenses": "Total cost of selling and marketing operations for the reporting period. Example: 2,000,000 for a mid-size company. (Number, OPEX/income statement)",
      "sellingGeneralAndAdministrativeExpenses": "Combined total of selling, general, and administrative expenses (SG&A) over the period. Example: 8,500,000 for SG&A on the income statement. (Number, cost center analysis)",
      "otherExpenses": "Miscellaneous expenses not categorized elsewhere in the financials. Example: 0. (Number, optional)",
      "operatingExpenses": "The total operating expenses reported for the period, including SG&A, R&D, etc. Example: 15000000. (Number)",
      "costAndExpenses": "Total costs and expenses incurred by the company during the reporting period. (Number, e.g., USD)",
      "netInterestIncome": "Net interest earned, calculated as interest income minus interest expense. Example: 12000000. (Number, optional)",
      "interestIncome": "Total interest income earned during the period. Example: 350000000 for $350M. (Number, optional)",
      "interestExpense": "Total interest expense incurred during the reporting period. Example: 700000000 for $700M. (Number, optional)",
      "depreciationAndAmortization": "Combined total of depreciation (for tangible assets) and amortization (for intangible assets) during the period. (Number, currency)",
      "ebitda": "The EBITDA value (Earnings Before Interest, Taxes, Depreciation, and Amortization) reported for the period. Example: 22000000. (Number)",
      "ebit": "The actual reported Earnings Before Interest and Taxes for the period. Example: 22000000. (Number)",
      "nonOperatingIncomeExcludingInterest": "Income from non-operating activities, excluding interest (e.g., asset sales, one-time gains). Example: 120000000. (Number, optional)",
      "operatingIncome": "The operating income value, representing profit from core business operations. Example: 25000000. (Number)",
      "totalOtherIncomeExpensesNet": "Net value of all miscellaneous income and expenses. Example: -4,500,000 for net other expenses. (Number, non-core earnings adjustment)",
      "incomeBeforeTax": "Profit or earnings before income tax expense is deducted. Also known as pre-tax income. (Number, typically in reporting currency, optional)",
      "incomeTaxExpense": "Total income tax expense recognized for the period. Example: 29749000000 for $29.7B in taxes paid. (Number, optional)",
      "netIncomeFromContinuingOperations": "Net income derived from ongoing operations, excluding discontinued segments. Example: 93736000000 for $93.7B. (Number, optional)",
      "netIncomeFromDiscontinuedOperations": "Net income from segments or business lines that have been discontinued. Example: 0 if none. (Number, optional)",
      "otherAdjustmentsToNetIncome": "Any adjustments made to net income that are not categorized elsewhere, such as non-cash items, accounting changes, or special adjustments. Example: 0. (Number, optional)",
      "netIncome": "The net income value, representing total profit after all expenses, taxes, and non-operating items. Example: 18000000. (Number)",
      "netIncomeDeductions": "Any deductions from net income for noncontrolling interest or other adjustments. Example: 0 if none. (Number, optional)",
      "bottomLineNetIncome": "Net income or profit after all expenses, taxes, and extraordinary items. The company's 'bottom line.' (Number, e.g., USD)",
      "eps": "The Earnings Per Share value, calculated as net income divided by total diluted shares outstanding. Example: 3.25. (Number)",
      "epsDiluted": "The diluted earnings per share, accounting for convertible securities. Example: 3.10. (Number)",
      "weightedAverageShsOut": "Weighted average number of shares outstanding (basic), used for EPS. Example: 16,678,000,000. (Number, per-share metrics)",
      "weightedAverageShsOutDil": "Weighted average diluted shares outstanding, includes convertible securities and options. Example: 16,845,000,000. (Number, diluted EPS)"
    }
  },
  {
    "name": "Income Statement Bulk API",
    "description": "Downloads quarter or FY P&L data en masse—perfect for accountants, quant funds, or academics needing raw numbers at scale.",
    "category": "income_statement_bulk",
    "use_cases": [
      "track revenue momentum by geography",
      "generate synthetic indices of EBIT growth",
      "reconcile reported vs adjusted earnings",
      "stress-test valuation models in bulk",
      "export CSVs for classroom exercises"
    ],
    "parameters": {
      "required": {
        "year": "A four-digit calendar year or fiscal year number to filter period-based endpoints. Example: 2024 to retrieve data for the 2024 fiscal or calendar year. (Number or String, optional)",
        "period": "A string or integer indicating the fiscal period for which data is requested. Example: \"annual\" or \"quarter\" to indicate annual or quarterly data. (String or Number, required for period-based endpoints)"
      },
      "optional": {}
    },
    "response_example": {
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "reportedCurrency": "The currency in which all reported values are denominated, as per ISO 4217. Example: 'USD' for US dollars. (String, required for financial data integrity)",
      "cik": "The Central Index Key, a unique nine-digit identifier assigned by the SEC to entities. Example: \"0001454889\". (String)",
      "filingDate": "The date on which a regulatory filing was submitted (e.g., with the SEC), in ISO 8601 format. Example: \"2025-02-03\". (String, Date)",
      "acceptedDate": "The date on which a filing or document was accepted by the regulatory authority. Example: \"2025-02-03\". (String, Date)",
      "fiscalYear": "The fiscal year to which a financial data point pertains, typically in four-digit format. Example: 2023. (Number or String)",
      "period": "The fiscal period associated with the data point, such as a quarter (\"Q2\") or full year. Example: \"Q2\". (String)",
      "revenue": "The total revenue value reported or projected for the period. Example: 100000000. (Number)",
      "costOfRevenue": "Direct costs attributable to the production of goods sold or services rendered. (Number, e.g., USD)",
      "grossProfit": "The gross profit value, calculated as revenue minus cost of goods sold (COGS). Example: 40000000. (Number)",
      "researchAndDevelopmentExpenses": "Total spending on R&D activities for the period. Example: 21,914,000,000 for Apple's annual R&D. (Number, innovation/capex)",
      "generalAndAdministrativeExpenses": "Total expenses related to general business operations not tied directly to product manufacturing or sales. Includes salaries of corporate staff, legal fees, and office expenses. Example: 5,000,000 for overhead costs in a fiscal year. (Number, income statement, required for OPEX analysis)",
      "sellingAndMarketingExpenses": "Total cost of selling and marketing operations for the reporting period. Example: 2,000,000 for a mid-size company. (Number, OPEX/income statement)",
      "sellingGeneralAndAdministrativeExpenses": "Combined total of selling, general, and administrative expenses (SG&A) over the period. Example: 8,500,000 for SG&A on the income statement. (Number, cost center analysis)",
      "otherExpenses": "Miscellaneous expenses not categorized elsewhere in the financials. Example: 0. (Number, optional)",
      "operatingExpenses": "The total operating expenses reported for the period, including SG&A, R&D, etc. Example: 15000000. (Number)",
      "costAndExpenses": "Total costs and expenses incurred by the company during the reporting period. (Number, e.g., USD)",
      "netInterestIncome": "Net interest earned, calculated as interest income minus interest expense. Example: 12000000. (Number, optional)",
      "interestIncome": "Total interest income earned during the period. Example: 350000000 for $350M. (Number, optional)",
      "interestExpense": "Total interest expense incurred during the reporting period. Example: 700000000 for $700M. (Number, optional)",
      "depreciationAndAmortization": "Combined total of depreciation (for tangible assets) and amortization (for intangible assets) during the period. (Number, currency)",
      "ebitda": "The EBITDA value (Earnings Before Interest, Taxes, Depreciation, and Amortization) reported for the period. Example: 22000000. (Number)",
      "ebit": "The actual reported Earnings Before Interest and Taxes for the period. Example: 22000000. (Number)",
      "nonOperatingIncomeExcludingInterest": "Income from non-operating activities, excluding interest (e.g., asset sales, one-time gains). Example: 120000000. (Number, optional)",
      "operatingIncome": "The operating income value, representing profit from core business operations. Example: 25000000. (Number)",
      "totalOtherIncomeExpensesNet": "Net value of all miscellaneous income and expenses. Example: -4,500,000 for net other expenses. (Number, non-core earnings adjustment)",
      "incomeBeforeTax": "Profit or earnings before income tax expense is deducted. Also known as pre-tax income. (Number, typically in reporting currency, optional)",
      "incomeTaxExpense": "Total income tax expense recognized for the period. Example: 29749000000 for $29.7B in taxes paid. (Number, optional)",
      "netIncomeFromContinuingOperations": "Net income derived from ongoing operations, excluding discontinued segments. Example: 93736000000 for $93.7B. (Number, optional)",
      "netIncomeFromDiscontinuedOperations": "Net income from segments or business lines that have been discontinued. Example: 0 if none. (Number, optional)",
      "otherAdjustmentsToNetIncome": "Any adjustments made to net income that are not categorized elsewhere, such as non-cash items, accounting changes, or special adjustments. Example: 0. (Number, optional)",
      "netIncome": "The net income value, representing total profit after all expenses, taxes, and non-operating items. Example: 18000000. (Number)",
      "netIncomeDeductions": "Any deductions from net income for noncontrolling interest or other adjustments. Example: 0 if none. (Number, optional)",
      "bottomLineNetIncome": "Net income or profit after all expenses, taxes, and extraordinary items. The company's 'bottom line.' (Number, e.g., USD)",
      "eps": "The Earnings Per Share value, calculated as net income divided by total diluted shares outstanding. Example: 3.25. (Number)",
      "epsDiluted": "The diluted earnings per share, accounting for convertible securities. Example: 3.10. (Number)",
      "weightedAverageShsOut": "Weighted average number of shares outstanding (basic), used for EPS. Example: 16,678,000,000. (Number, per-share metrics)",
      "weightedAverageShsOutDil": "Weighted average diluted shares outstanding, includes convertible securities and options. Example: 16,845,000,000. (Number, diluted EPS)"
    }
  },
  {
    "name": "Income Statement Growth Bulk API",
    "description": "Returns percentage growth YoY/QoQ for every income-statement line—quickly isolate accelerating or decelerating trends market-wide.",
    "category": "income_statement_growth_bulk",
    "use_cases": [
      "screen for fastest growing revenue",
      "detect margin compression early",
      "drive momentum + fundamentals hybrid signals",
      "populate growth heat-maps in SaaS tools",
      "compare cost discipline across industries"
    ],
    "parameters": {
      "required": {
        "year": "A four-digit calendar year or fiscal year number to filter period-based endpoints. Example: 2024 to retrieve data for the 2024 fiscal or calendar year. (Number or String, optional)",
        "period": "A string or integer indicating the fiscal period for which data is requested. Example: \"annual\" or \"quarter\" to indicate annual or quarterly data. (String or Number, required for period-based endpoints)"
      },
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "fiscalYear": "The fiscal year to which a financial data point pertains, typically in four-digit format. Example: 2023. (Number or String)",
      "period": "The fiscal period associated with the data point, such as a quarter (\"Q2\") or full year. Example: \"Q2\". (String)",
      "reportedCurrency": "The currency in which all reported values are denominated, as per ISO 4217. Example: 'USD' for US dollars. (String, required for financial data integrity)",
      "growthRevenue": "The growth rate of revenue compared to the prior period, expressed as a percentage. Example: 8.5. (Number, Percentage)",
      "growthCostOfRevenue": "Growth rate in cost of goods sold or cost of revenue versus previous period. Example: 4.3 for a 4.3% rise in direct costs. (Number, percent, margin pressure tracker)",
      "growthGrossProfit": "Year-over-year percentage change in gross profit. Calculated as (Current Year Gross Profit - Previous Year Gross Profit) / Previous Year Gross Profit. Example: 0.07 for 7% growth. (Number, optional)",
      "growthGrossProfitRatio": "The growth rate of the gross profit margin, measured as the percentage change compared to the previous period. Example: 0.02 for a 2% increase. (Number, optional)",
      "growthResearchAndDevelopmentExpenses": "Growth rate of R&D expenses, indicating changing levels of investment in innovation. (Number, percent, optional)",
      "growthGeneralAndAdministrativeExpenses": "Growth in G&A expenses versus prior period. Example: 4.9 for a 4.9% increase in overhead. (Number, percent, cost control)",
      "growthSellingAndMarketingExpenses": "Growth in selling and marketing expenses compared to the prior period. (Number, percent, optional)",
      "growthOtherExpenses": "Change in expenses not otherwise classified, compared to the previous period. Useful for tracking cost trends. (Number, percent, optional)",
      "growthOperatingExpenses": "Growth rate in total operating expenses compared to the previous period. Example: 0.05 for a 5% rise. (Number, optional)",
      "growthCostAndExpenses": "Change in total costs and expenses versus the prior period. Example: 7.5 means a 7.5% increase in operating costs. (Number, percent, cost control analysis)",
      "growthInterestIncome": "Year-over-year growth in interest income earned from investments. Example: 0.11 for an 11% increase. (Number, optional)",
      "growthInterestExpense": "Year-over-year growth in interest expense paid on debt. Example: -0.05 for a 5% decrease. (Number, optional)",
      "growthDepreciationAndAmortization": "Growth in depreciation and amortization expenses over the period. Example: 5.0 for a 5% increase in D&A. (Number, percent, fixed asset trend)",
      "growthEBITDA": "The growth rate of EBITDA compared to the prior period, expressed as a percentage. Example: 9.8. (Number, Percentage)",
      "growthOperatingIncome": "The growth rate of operating income compared to the prior period, expressed as a percentage. Example: 10.2. (Number, Percentage)",
      "growthIncomeBeforeTax": "Percentage change in income before tax compared to the prior year or period. Example: 0.1 for a 10% increase. (Number, optional)",
      "growthIncomeTaxExpense": "Year-over-year growth rate of the total income tax expense. Example: 0.22 means tax expense rose by 22%. (Number, optional)",
      "growthNetIncome": "The growth rate of net income compared to the prior period, expressed as a percentage. Example: 12.0. (Number, Percentage)",
      "growthEPS": "The year-over-year growth rate of Earnings Per Share, expressed as a percentage. Example: 11.5. (Number, Percentage)",
      "growthEPSDiluted": "The growth rate of diluted EPS compared to the prior period, expressed as a percentage. Example: 11.5. (Number, Percentage)",
      "growthWeightedAverageShsOut": "Growth in weighted average shares outstanding (basic) used for EPS calculation. (Number, percent, optional)",
      "growthWeightedAverageShsOutDil": "Growth in weighted average diluted shares outstanding, used for diluted EPS. (Number, percent, optional)"
    }
  },
  {
    "name": "Income Statement Growth Bulk API",
    "description": "Bulk-supplies growth deltas for P&L metrics so you can model earnings trajectories without heavy math on your side.",
    "category": "income_statement_growth_bulk",
    "use_cases": [
      "rank companies by EBITDA acceleration",
      "flag sudden SG&A spikes",
      "feed predictive revenue models",
      "build thematic ‘high-growth’ baskets",
      "benchmark cost ratios vs prior periods"
    ],
    "parameters": {
      "required": {
        "year": "A four-digit calendar year or fiscal year number to filter period-based endpoints. Example: 2024 to retrieve data for the 2024 fiscal or calendar year. (Number or String, optional)",
        "period": "A string or integer indicating the fiscal period for which data is requested. Example: \"annual\" or \"quarter\" to indicate annual or quarterly data. (String or Number, required for period-based endpoints)"
      },
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "fiscalYear": "The fiscal year to which a financial data point pertains, typically in four-digit format. Example: 2023. (Number or String)",
      "period": "The fiscal period associated with the data point, such as a quarter (\"Q2\") or full year. Example: \"Q2\". (String)",
      "reportedCurrency": "The currency in which all reported values are denominated, as per ISO 4217. Example: 'USD' for US dollars. (String, required for financial data integrity)",
      "growthRevenue": "The growth rate of revenue compared to the prior period, expressed as a percentage. Example: 8.5. (Number, Percentage)",
      "growthCostOfRevenue": "Growth rate in cost of goods sold or cost of revenue versus previous period. Example: 4.3 for a 4.3% rise in direct costs. (Number, percent, margin pressure tracker)",
      "growthGrossProfit": "Year-over-year percentage change in gross profit. Calculated as (Current Year Gross Profit - Previous Year Gross Profit) / Previous Year Gross Profit. Example: 0.07 for 7% growth. (Number, optional)",
      "growthGrossProfitRatio": "The growth rate of the gross profit margin, measured as the percentage change compared to the previous period. Example: 0.02 for a 2% increase. (Number, optional)",
      "growthResearchAndDevelopmentExpenses": "Growth rate of R&D expenses, indicating changing levels of investment in innovation. (Number, percent, optional)",
      "growthGeneralAndAdministrativeExpenses": "Growth in G&A expenses versus prior period. Example: 4.9 for a 4.9% increase in overhead. (Number, percent, cost control)",
      "growthSellingAndMarketingExpenses": "Growth in selling and marketing expenses compared to the prior period. (Number, percent, optional)",
      "growthOtherExpenses": "Change in expenses not otherwise classified, compared to the previous period. Useful for tracking cost trends. (Number, percent, optional)",
      "growthOperatingExpenses": "Growth rate in total operating expenses compared to the previous period. Example: 0.05 for a 5% rise. (Number, optional)",
      "growthCostAndExpenses": "Change in total costs and expenses versus the prior period. Example: 7.5 means a 7.5% increase in operating costs. (Number, percent, cost control analysis)",
      "growthInterestIncome": "Year-over-year growth in interest income earned from investments. Example: 0.11 for an 11% increase. (Number, optional)",
      "growthInterestExpense": "Year-over-year growth in interest expense paid on debt. Example: -0.05 for a 5% decrease. (Number, optional)",
      "growthDepreciationAndAmortization": "Growth in depreciation and amortization expenses over the period. Example: 5.0 for a 5% increase in D&A. (Number, percent, fixed asset trend)",
      "growthEBITDA": "The growth rate of EBITDA compared to the prior period, expressed as a percentage. Example: 9.8. (Number, Percentage)",
      "growthOperatingIncome": "The growth rate of operating income compared to the prior period, expressed as a percentage. Example: 10.2. (Number, Percentage)",
      "growthIncomeBeforeTax": "Percentage change in income before tax compared to the prior year or period. Example: 0.1 for a 10% increase. (Number, optional)",
      "growthIncomeTaxExpense": "Year-over-year growth rate of the total income tax expense. Example: 0.22 means tax expense rose by 22%. (Number, optional)",
      "growthNetIncome": "The growth rate of net income compared to the prior period, expressed as a percentage. Example: 12.0. (Number, Percentage)",
      "growthEPS": "The year-over-year growth rate of Earnings Per Share, expressed as a percentage. Example: 11.5. (Number, Percentage)",
      "growthEPSDiluted": "The growth rate of diluted EPS compared to the prior period, expressed as a percentage. Example: 11.5. (Number, Percentage)",
      "growthWeightedAverageShsOut": "Growth in weighted average shares outstanding (basic) used for EPS calculation. (Number, percent, optional)",
      "growthWeightedAverageShsOutDil": "Growth in weighted average diluted shares outstanding, used for diluted EPS. (Number, percent, optional)"
    }
  },
  {
    "name": "Balance Sheet Statement Bulk API",
    "description": "Delivers complete balance-sheet snapshots for all firms—assets, liabilities, equity—ready for leverage or liquidity analysis at scale.",
    "category": "balance_sheet_bulk",
    "use_cases": [
      "monitor debt levels across sectors",
      "calculate book value factors",
      "track working-capital swings",
      "stress-test solvency ratios",
      "feed credit-risk scoring engines"
    ],
    "parameters": {
      "required": {
        "year": "A four-digit calendar year or fiscal year number to filter period-based endpoints. Example: 2024 to retrieve data for the 2024 fiscal or calendar year. (Number or String, optional)",
        "period": "A string or integer indicating the fiscal period for which data is requested. Example: \"annual\" or \"quarter\" to indicate annual or quarterly data. (String or Number, required for period-based endpoints)"
      },
      "optional": {}
    },
    "response_example": {
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "reportedCurrency": "The currency in which all reported values are denominated, as per ISO 4217. Example: 'USD' for US dollars. (String, required for financial data integrity)",
      "cik": "The Central Index Key, a unique nine-digit identifier assigned by the SEC to entities. Example: \"0001454889\". (String)",
      "filingDate": "The date on which a regulatory filing was submitted (e.g., with the SEC), in ISO 8601 format. Example: \"2025-02-03\". (String, Date)",
      "acceptedDate": "The date on which a filing or document was accepted by the regulatory authority. Example: \"2025-02-03\". (String, Date)",
      "fiscalYear": "The fiscal year to which a financial data point pertains, typically in four-digit format. Example: 2023. (Number or String)",
      "period": "The fiscal period associated with the data point, such as a quarter (\"Q2\") or full year. Example: \"Q2\". (String)",
      "cashAndCashEquivalents": "Sum of cash on hand and highly liquid short-term investments. (Number, e.g., USD)",
      "shortTermInvestments": "Liquid investments maturing within one year. Example: 12,000,000,000 in T-bills and CDs. (Number, current assets)",
      "cashAndShortTermInvestments": "The combined cash and short-term investments held by the company, representing liquid assets. Example: 5000000. (Number)",
      "netReceivables": "Net value of receivables due to the company, after deducting allowances for doubtful accounts. (Number, optional)",
      "accountsReceivables": "Money owed to the company by customers for goods or services delivered on credit. (Number, e.g., USD)",
      "otherReceivables": "Receivables not included in accounts receivable (e.g., related party). Example: 32833000000. (Number, optional)",
      "inventory": "Value of raw materials, work-in-progress, and finished goods available for sale, as reported on the balance sheet. (Number, usually in reporting currency, optional)",
      "prepaids": "Prepaid expenses, representing cash paid for goods or services to be received in the future (e.g., insurance premiums). Example: 0. (Number, optional)",
      "otherCurrentAssets": "Sum of all current assets not individually reported (catch-all bucket). Example: 14287000000. (Number, optional)",
      "totalCurrentAssets": "The total current assets value, representing assets expected to be converted to cash within one year. Example: 35000000. (Number)",
      "propertyPlantEquipmentNet": "Net value of property, plant, and equipment after accumulated depreciation. (Number, optional)",
      "goodwill": "The premium paid above fair value in an acquisition, representing intangible assets like brand reputation and customer relationships. Example: 41,000,000,000 as reported on Apple's balance sheet. (Number, balance sheet, intangible assets)",
      "intangibleAssets": "Value of non-physical assets owned by a company, such as patents, trademarks, copyrights, and goodwill. (Number, usually in reporting currency, optional)",
      "goodwillAndIntangibleAssets": "Combined total of goodwill and other intangible assets such as patents, trademarks, and software. Example: 52,000,000,000 for a tech giant with large M&A activity. (Number, balance sheet)",
      "longTermInvestments": "Total value of investments intended to be held for more than one year, such as bonds, affiliates, or unconsolidated subsidiaries. (Number, optional)",
      "taxAssets": "Total tax-related assets, such as deferred tax assets and prepayments. Example: 2,100,000,000 for future tax deductions. (Number, tax line item)",
      "otherNonCurrentAssets": "Long-term assets not classified elsewhere. Example: 55335000000. (Number, optional)",
      "totalNonCurrentAssets": "Sum of all non-current assets (not expected to be converted to cash within a year). Example: 200,000,000,000 for PP&E and intangibles. (Number, asset allocation)",
      "otherAssets": "Assets that do not fit standard classifications, such as deferred charges or miscellaneous investments. (Number, optional)",
      "totalAssets": "The total assets value, representing the entire asset base of the company. Example: 120000000. (Number)",
      "totalPayables": "Total amount owed to suppliers and vendors. Example: 20,000,000,000 in trade payables. (Number, current liabilities)",
      "accountPayables": "Amount owed by the company to suppliers or vendors for goods and services received but not yet paid for. (Number, e.g., USD)",
      "otherPayables": "Payables other than accounts payable, e.g., accrued expenses. Example: 26601000000. (Number, optional)",
      "accruedExpenses": "Expenses that have been incurred but not yet paid or recorded in accounts payable. (Number, e.g., USD)",
      "shortTermDebt": "Total debt obligations due within one year. Example: 8,000,000,000 in short-term loans. (Number, current liabilities)",
      "capitalLeaseObligationsCurrent": "Portion of capital lease obligations due within one year. (Number, e.g., USD)",
      "taxPayables": "Total taxes owed but not yet paid as of the balance sheet date. Example: 900,000,000 in outstanding tax liabilities. (Number, current liability)",
      "deferredRevenue": "Liabilities for revenue received but not yet earned, often from prepaid services or products. (Number, currency)",
      "otherCurrentLiabilities": "Sum of all current liabilities not otherwise listed. Example: 50071000000. (Number, optional)",
      "totalCurrentLiabilities": "The total current liabilities value, representing obligations due within one year. Example: 15000000. (Number)",
      "longTermDebt": "Outstanding debt obligations with maturities greater than one year. Example: 85750000000 for $85.75B in long-term debt. (Number, optional)",
      "deferredRevenueNonCurrent": "Portion of deferred revenue not expected to be recognized within one year. (Number, currency)",
      "deferredTaxLiabilitiesNonCurrent": "Deferred tax liabilities due after more than one year. (Number, currency)",
      "otherNonCurrentLiabilities": "Long-term liabilities not otherwise listed. Example: 35090000000. (Number, optional)",
      "totalNonCurrentLiabilities": "Sum of all liabilities due after one year. Example: 140,000,000,000 in long-term debt and obligations. (Number, long-term leverage)",
      "otherLiabilities": "Other non-current or miscellaneous liabilities. Example: 0. (Number, optional)",
      "capitalLeaseObligations": "Total amount owed under capital lease agreements. (Number, e.g., USD)",
      "totalLiabilities": "The total liabilities value, representing all debts and obligations. Example: 40000000. (Number)",
      "treasuryStock": "Value of a company's own shares that have been repurchased and held in treasury. Example: 5,000,000,000 as buyback reserve. (Number, equity reduction line)",
      "preferredStock": "Total value of preferred shares issued and outstanding. (Number, optional)",
      "commonStock": "Value of common stock issued by the company at par value. (Number, e.g., USD)",
      "retainedEarnings": "Accumulated net income kept in the company after dividends, reinvested into the business. Example: 90,000,000,000 for long-standing profitable firms. (Number, equity section of balance sheet)",
      "additionalPaidInCapital": "Excess amount paid by investors over the par value of stock issued. (Number, e.g., USD)",
      "accumulatedOtherComprehensiveIncomeLoss": "Cumulative total of other comprehensive income or loss items, such as foreign currency translation, unrealized gains/losses on securities, etc. (Number, e.g., USD)",
      "otherTotalStockholdersEquity": "Stockholder’s equity not categorized elsewhere. Example: 0. (Number, optional)",
      "totalStockholdersEquity": "The total stockholders’ equity value at period end. Example: 90000000. (Number)",
      "totalEquity": "The total equity value, representing shareholders’ equity. Example: 90000000. (Number)",
      "minorityInterest": "Value of minority shareholders' stake in subsidiaries not wholly owned by the parent company. Example: 0. (Number, optional)",
      "totalLiabilitiesAndTotalEquity": "Total of all liabilities plus shareholders' equity, must match total assets (balance sheet check). Example: 360,000,000,000. (Number, balance sheet balancing line)",
      "totalInvestments": "Sum of all investments held, both current and long-term. Example: 111,069,000,000. (Number, optional)",
      "totalDebt": "The total debt value, including short-term and long-term liabilities. Example: 30000000. (Number)",
      "netDebt": "Total debt minus cash and cash equivalents, representing the company's net leverage. Example: 76686000000 for $76.7B net debt. (Number, optional)"
    }
  },
  {
    "name": "Balance Sheet Statement Bulk API",
    "description": "One-call download of global balance sheets—great for building banking or insurance exposure maps and trend visualizations.",
    "category": "balance_sheet_bulk",
    "use_cases": [
      "compute tangible BVPS in bulk",
      "identify negative working-capital firms",
      "compare cash ratios by industry",
      "feed portfolio factor decomposition",
      "support academic capital-structure studies"
    ],
    "parameters": {
      "required": {
        "year": "A four-digit calendar year or fiscal year number to filter period-based endpoints. Example: 2024 to retrieve data for the 2024 fiscal or calendar year. (Number or String, optional)",
        "period": "A string or integer indicating the fiscal period for which data is requested. Example: \"annual\" or \"quarter\" to indicate annual or quarterly data. (String or Number, required for period-based endpoints)"
      },
      "optional": {}
    },
    "response_example": {
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "reportedCurrency": "The currency in which all reported values are denominated, as per ISO 4217. Example: 'USD' for US dollars. (String, required for financial data integrity)",
      "cik": "The Central Index Key, a unique nine-digit identifier assigned by the SEC to entities. Example: \"0001454889\". (String)",
      "filingDate": "The date on which a regulatory filing was submitted (e.g., with the SEC), in ISO 8601 format. Example: \"2025-02-03\". (String, Date)",
      "acceptedDate": "The date on which a filing or document was accepted by the regulatory authority. Example: \"2025-02-03\". (String, Date)",
      "fiscalYear": "The fiscal year to which a financial data point pertains, typically in four-digit format. Example: 2023. (Number or String)",
      "period": "The fiscal period associated with the data point, such as a quarter (\"Q2\") or full year. Example: \"Q2\". (String)",
      "cashAndCashEquivalents": "Sum of cash on hand and highly liquid short-term investments. (Number, e.g., USD)",
      "shortTermInvestments": "Liquid investments maturing within one year. Example: 12,000,000,000 in T-bills and CDs. (Number, current assets)",
      "cashAndShortTermInvestments": "The combined cash and short-term investments held by the company, representing liquid assets. Example: 5000000. (Number)",
      "netReceivables": "Net value of receivables due to the company, after deducting allowances for doubtful accounts. (Number, optional)",
      "accountsReceivables": "Money owed to the company by customers for goods or services delivered on credit. (Number, e.g., USD)",
      "otherReceivables": "Receivables not included in accounts receivable (e.g., related party). Example: 32833000000. (Number, optional)",
      "inventory": "Value of raw materials, work-in-progress, and finished goods available for sale, as reported on the balance sheet. (Number, usually in reporting currency, optional)",
      "prepaids": "Prepaid expenses, representing cash paid for goods or services to be received in the future (e.g., insurance premiums). Example: 0. (Number, optional)",
      "otherCurrentAssets": "Sum of all current assets not individually reported (catch-all bucket). Example: 14287000000. (Number, optional)",
      "totalCurrentAssets": "The total current assets value, representing assets expected to be converted to cash within one year. Example: 35000000. (Number)",
      "propertyPlantEquipmentNet": "Net value of property, plant, and equipment after accumulated depreciation. (Number, optional)",
      "goodwill": "The premium paid above fair value in an acquisition, representing intangible assets like brand reputation and customer relationships. Example: 41,000,000,000 as reported on Apple's balance sheet. (Number, balance sheet, intangible assets)",
      "intangibleAssets": "Value of non-physical assets owned by a company, such as patents, trademarks, copyrights, and goodwill. (Number, usually in reporting currency, optional)",
      "goodwillAndIntangibleAssets": "Combined total of goodwill and other intangible assets such as patents, trademarks, and software. Example: 52,000,000,000 for a tech giant with large M&A activity. (Number, balance sheet)",
      "longTermInvestments": "Total value of investments intended to be held for more than one year, such as bonds, affiliates, or unconsolidated subsidiaries. (Number, optional)",
      "taxAssets": "Total tax-related assets, such as deferred tax assets and prepayments. Example: 2,100,000,000 for future tax deductions. (Number, tax line item)",
      "otherNonCurrentAssets": "Long-term assets not classified elsewhere. Example: 55335000000. (Number, optional)",
      "totalNonCurrentAssets": "Sum of all non-current assets (not expected to be converted to cash within a year). Example: 200,000,000,000 for PP&E and intangibles. (Number, asset allocation)",
      "otherAssets": "Assets that do not fit standard classifications, such as deferred charges or miscellaneous investments. (Number, optional)",
      "totalAssets": "The total assets value, representing the entire asset base of the company. Example: 120000000. (Number)",
      "totalPayables": "Total amount owed to suppliers and vendors. Example: 20,000,000,000 in trade payables. (Number, current liabilities)",
      "accountPayables": "Amount owed by the company to suppliers or vendors for goods and services received but not yet paid for. (Number, e.g., USD)",
      "otherPayables": "Payables other than accounts payable, e.g., accrued expenses. Example: 26601000000. (Number, optional)",
      "accruedExpenses": "Expenses that have been incurred but not yet paid or recorded in accounts payable. (Number, e.g., USD)",
      "shortTermDebt": "Total debt obligations due within one year. Example: 8,000,000,000 in short-term loans. (Number, current liabilities)",
      "capitalLeaseObligationsCurrent": "Portion of capital lease obligations due within one year. (Number, e.g., USD)",
      "taxPayables": "Total taxes owed but not yet paid as of the balance sheet date. Example: 900,000,000 in outstanding tax liabilities. (Number, current liability)",
      "deferredRevenue": "Liabilities for revenue received but not yet earned, often from prepaid services or products. (Number, currency)",
      "otherCurrentLiabilities": "Sum of all current liabilities not otherwise listed. Example: 50071000000. (Number, optional)",
      "totalCurrentLiabilities": "The total current liabilities value, representing obligations due within one year. Example: 15000000. (Number)",
      "longTermDebt": "Outstanding debt obligations with maturities greater than one year. Example: 85750000000 for $85.75B in long-term debt. (Number, optional)",
      "deferredRevenueNonCurrent": "Portion of deferred revenue not expected to be recognized within one year. (Number, currency)",
      "deferredTaxLiabilitiesNonCurrent": "Deferred tax liabilities due after more than one year. (Number, currency)",
      "otherNonCurrentLiabilities": "Long-term liabilities not otherwise listed. Example: 35090000000. (Number, optional)",
      "totalNonCurrentLiabilities": "Sum of all liabilities due after one year. Example: 140,000,000,000 in long-term debt and obligations. (Number, long-term leverage)",
      "otherLiabilities": "Other non-current or miscellaneous liabilities. Example: 0. (Number, optional)",
      "capitalLeaseObligations": "Total amount owed under capital lease agreements. (Number, e.g., USD)",
      "totalLiabilities": "The total liabilities value, representing all debts and obligations. Example: 40000000. (Number)",
      "treasuryStock": "Value of a company's own shares that have been repurchased and held in treasury. Example: 5,000,000,000 as buyback reserve. (Number, equity reduction line)",
      "preferredStock": "Total value of preferred shares issued and outstanding. (Number, optional)",
      "commonStock": "Value of common stock issued by the company at par value. (Number, e.g., USD)",
      "retainedEarnings": "Accumulated net income kept in the company after dividends, reinvested into the business. Example: 90,000,000,000 for long-standing profitable firms. (Number, equity section of balance sheet)",
      "additionalPaidInCapital": "Excess amount paid by investors over the par value of stock issued. (Number, e.g., USD)",
      "accumulatedOtherComprehensiveIncomeLoss": "Cumulative total of other comprehensive income or loss items, such as foreign currency translation, unrealized gains/losses on securities, etc. (Number, e.g., USD)",
      "otherTotalStockholdersEquity": "Stockholder’s equity not categorized elsewhere. Example: 0. (Number, optional)",
      "totalStockholdersEquity": "The total stockholders’ equity value at period end. Example: 90000000. (Number)",
      "totalEquity": "The total equity value, representing shareholders’ equity. Example: 90000000. (Number)",
      "minorityInterest": "Value of minority shareholders' stake in subsidiaries not wholly owned by the parent company. Example: 0. (Number, optional)",
      "totalLiabilitiesAndTotalEquity": "Total of all liabilities plus shareholders' equity, must match total assets (balance sheet check). Example: 360,000,000,000. (Number, balance sheet balancing line)",
      "totalInvestments": "Sum of all investments held, both current and long-term. Example: 111,069,000,000. (Number, optional)",
      "totalDebt": "The total debt value, including short-term and long-term liabilities. Example: 30000000. (Number)",
      "netDebt": "Total debt minus cash and cash equivalents, representing the company's net leverage. Example: 76686000000 for $76.7B net debt. (Number, optional)"
    }
  },
  {
    "name": "Balance Sheet Statement Growth Bulk API",
    "description": "Measures YoY/QoQ growth for every balance-sheet item—quickly reveal leverage build-ups or asset shrinkage across the universe.",
    "category": "balance_sheet_growth_bulk",
    "use_cases": [
      "spot rapid debt accumulation",
      "track inventory build trends",
      "monitor equity dilution effects",
      "drive risk flags in lending workflows",
      "fuel macro aggregation of credit cycles"
    ],
    "parameters": {
      "required": {
        "year": "A four-digit calendar year or fiscal year number to filter period-based endpoints. Example: 2024 to retrieve data for the 2024 fiscal or calendar year. (Number or String, optional)",
        "period": "A string or integer indicating the fiscal period for which data is requested. Example: \"annual\" or \"quarter\" to indicate annual or quarterly data. (String or Number, required for period-based endpoints)"
      },
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "fiscalYear": "The fiscal year to which a financial data point pertains, typically in four-digit format. Example: 2023. (Number or String)",
      "period": "The fiscal period associated with the data point, such as a quarter (\"Q2\") or full year. Example: \"Q2\". (String)",
      "reportedCurrency": "The currency in which all reported values are denominated, as per ISO 4217. Example: 'USD' for US dollars. (String, required for financial data integrity)",
      "growthCashAndCashEquivalents": "Growth in cash and equivalents on hand, showing liquidity changes. Example: 3.5 for a 3.5% increase in cash reserves. (Number, percent, balance sheet health)",
      "growthShortTermInvestments": "Growth in short-term investments relative to the previous reporting period. (Number, percent, optional)",
      "growthCashAndShortTermInvestments": "The year-over-year growth rate in cash and short-term investments, expressed as a percentage. Example: 8.0. (Number, Percentage)",
      "growthNetReceivables": "Percentage change in net accounts receivable year-over-year. Example: 0.07 for a 7% increase. (Number, optional)",
      "growthInventory": "The growth rate of inventory levels compared to the prior period, expressed as a percentage. Example: 3.2. (Number, Percentage)",
      "growthOtherCurrentAssets": "Annual growth rate of other current assets. Example: 0.03 for a 3% increase. (Number, optional)",
      "growthTotalCurrentAssets": "Growth in total current assets year-over-year. Example: 0.09 means current assets rose by 9%. (Number, optional)",
      "growthPropertyPlantEquipmentNet": "Growth in net property, plant, and equipment (PP&E) year-over-year. Example: 0.08 means PP&E increased by 8%. (Number, optional)",
      "growthGoodwill": "Year-over-year change in the value of goodwill, representing intangible assets acquired through business combinations. Example: 0.05 for a 5% increase. (Number, optional)",
      "growthIntangibleAssets": "Annual growth rate of intangible assets (patents, IP, etc.) on the balance sheet. Example: 0.09 means intangible assets increased by 9%. (Number, optional)",
      "growthGoodwillAndIntangibleAssets": "Growth in total goodwill and intangible assets. Example: 7.2 for a 7.2% increase, often due to acquisitions. (Number, percent, balance sheet change)",
      "growthLongTermInvestments": "Growth rate in the value of long-term investments year-over-year. Example: -0.04 for a 4% decrease. (Number, optional)",
      "growthTaxAssets": "Growth in tax-related assets, such as deferred tax assets, compared to a prior period. (Number, percent, optional)",
      "growthOtherNonCurrentAssets": "Annual growth rate of other non-current assets. Example: 0.12 for a 12% increase. (Number, optional)",
      "growthTotalNonCurrentAssets": "Growth in total non-current assets year-over-year. Example: 0.10 for a 10% rise. (Number, optional)",
      "growthOtherAssets": "Growth in value of assets not classified as core or current, compared to the previous period. (Number, percent, optional)",
      "growthTotalAssets": "The growth rate of total assets compared to the prior period, expressed as a percentage. Example: 7.6. (Number, Percentage)",
      "growthAccountPayables": "Year-over-year or quarter-over-quarter growth in accounts payable, indicating changes in supplier credit usage. Example: 5.7 means a 5.7% increase. (Number, percent, liquidity trend)",
      "growthShortTermDebt": "Year-over-year growth rate in short-term debt outstanding. Example: -0.02 for a 2% decrease. (Number, optional)",
      "growthTaxPayables": "Change in taxes payable (liabilities owed to tax authorities) over the prior period. (Number, percent, optional)",
      "growthDeferredRevenue": "Growth rate of deferred revenue (prepaid, not yet earned). Example: 6.4 for a 6.4% increase. (Number, percent, SaaS/contract business metric)",
      "growthOtherCurrentLiabilities": "Growth in other current liabilities year-over-year. Example: -0.06 for a 6% decrease. (Number, optional)",
      "growthTotalCurrentLiabilities": "Growth in total current liabilities year-over-year. Example: 0.11 for an 11% increase. (Number, optional)",
      "growthLongTermDebt": "The growth rate of long-term debt compared to the prior period, expressed as a percentage. Example: 4.5. (Number, Percentage)",
      "growthDeferredRevenueNonCurrent": "Change in non-current deferred revenue, i.e., revenue to be recognized after 12 months. Example: -0.9 for a 0.9% decrease. (Number, percent, long-term contract health)",
      "growthDeferredTaxLiabilitiesNonCurrent": "Growth in non-current deferred tax liabilities. Example: 2.7 for a 2.7% increase. (Number, percent, tax/deferral impact)",
      "growthOtherNonCurrentLiabilities": "Annual growth rate of other non-current liabilities. Example: 0.07 for a 7% increase. (Number, optional)",
      "growthTotalNonCurrentLiabilities": "Growth in total non-current liabilities year-over-year. Example: 0.07 for a 7% increase. (Number, optional)",
      "growthOtherLiabilities": "Growth in miscellaneous or non-core liabilities compared to the previous reporting period. (Number, percent, optional)",
      "growthTotalLiabilities": "The growth rate of total liabilities compared to the prior period, expressed as a percentage. Example: 5.4. (Number, Percentage)",
      "growthPreferredStock": "Year-over-year growth in the value of preferred stock on the balance sheet. Example: 0.01 for a 1% increase. (Number, optional)",
      "growthCommonStock": "Growth in common stock issued, usually as a result of new equity raised. Example: 2.0 for 2% more common stock outstanding. (Number, percent, dilution tracker)",
      "growthRetainedEarnings": "Annual change in retained earnings, reflecting cumulative net income retained by the company. Example: 0.18 for an 18% increase. (Number, optional)",
      "growthAccumulatedOtherComprehensiveIncomeLoss": "Growth in accumulated other comprehensive income/loss, which includes unrealized gains/losses from investments, currency translation, etc. Example: -1.5 for a 1.5% decline. (Number, percent, equity impact)",
      "growthOthertotalStockholdersEquity": "Growth in total stockholders' equity excluding standard line items, compared to the prior period. (Number, percent, optional)",
      "growthTotalStockholdersEquity": "Growth in total stockholders' equity year-over-year. Example: 0.13 means equity increased by 13%. (Number, optional)",
      "growthMinorityInterest": "Change in minority interest (non-controlling interest) on the balance sheet. Example: 1.6 for a 1.6% increase. (Number, percent, consolidation effect)",
      "growthTotalEquity": "The growth rate of total equity compared to the prior period, expressed as a percentage. Example: 8.3. (Number, Percentage)",
      "growthTotalLiabilitiesAndStockholdersEquity": "Change in the sum of total liabilities and shareholders' equity (i.e., total balance sheet size) compared to the previous period. (Number, percent, optional)",
      "growthTotalInvestments": "Growth rate in total investments held by the company year-over-year. Example: 0.08 for an 8% increase. (Number, optional)",
      "growthTotalDebt": "Growth rate in total debt (short + long-term) year-over-year. Example: 0.05 for a 5% rise. (Number, optional)",
      "growthNetDebt": "The year-over-year growth rate of net debt, expressed as a percentage. Example: 4.5. (Number, Percentage)"
    }
  },
  {
    "name": "Balance Sheet Statement Growth Bulk API",
    "description": "Bulk-outputs percentage changes of balance-sheet lines—ideal for dynamic leverage scoring or capital-allocation research.",
    "category": "balance_sheet_growth_bulk",
    "use_cases": [
      "rank banks by loan growth",
      "detect sudden goodwill write-downs",
      "compare cash build-ups prior to M&A",
      "update leverage metrics daily",
      "feed dashboards that track liquidity risk"
    ],
    "parameters": {
      "required": {
        "year": "A four-digit calendar year or fiscal year number to filter period-based endpoints. Example: 2024 to retrieve data for the 2024 fiscal or calendar year. (Number or String, optional)",
        "period": "A string or integer indicating the fiscal period for which data is requested. Example: \"annual\" or \"quarter\" to indicate annual or quarterly data. (String or Number, required for period-based endpoints)"
      },
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "fiscalYear": "The fiscal year to which a financial data point pertains, typically in four-digit format. Example: 2023. (Number or String)",
      "period": "The fiscal period associated with the data point, such as a quarter (\"Q2\") or full year. Example: \"Q2\". (String)",
      "reportedCurrency": "The currency in which all reported values are denominated, as per ISO 4217. Example: 'USD' for US dollars. (String, required for financial data integrity)",
      "growthCashAndCashEquivalents": "Growth in cash and equivalents on hand, showing liquidity changes. Example: 3.5 for a 3.5% increase in cash reserves. (Number, percent, balance sheet health)",
      "growthShortTermInvestments": "Growth in short-term investments relative to the previous reporting period. (Number, percent, optional)",
      "growthCashAndShortTermInvestments": "The year-over-year growth rate in cash and short-term investments, expressed as a percentage. Example: 8.0. (Number, Percentage)",
      "growthNetReceivables": "Percentage change in net accounts receivable year-over-year. Example: 0.07 for a 7% increase. (Number, optional)",
      "growthInventory": "The growth rate of inventory levels compared to the prior period, expressed as a percentage. Example: 3.2. (Number, Percentage)",
      "growthOtherCurrentAssets": "Annual growth rate of other current assets. Example: 0.03 for a 3% increase. (Number, optional)",
      "growthTotalCurrentAssets": "Growth in total current assets year-over-year. Example: 0.09 means current assets rose by 9%. (Number, optional)",
      "growthPropertyPlantEquipmentNet": "Growth in net property, plant, and equipment (PP&E) year-over-year. Example: 0.08 means PP&E increased by 8%. (Number, optional)",
      "growthGoodwill": "Year-over-year change in the value of goodwill, representing intangible assets acquired through business combinations. Example: 0.05 for a 5% increase. (Number, optional)",
      "growthIntangibleAssets": "Annual growth rate of intangible assets (patents, IP, etc.) on the balance sheet. Example: 0.09 means intangible assets increased by 9%. (Number, optional)",
      "growthGoodwillAndIntangibleAssets": "Growth in total goodwill and intangible assets. Example: 7.2 for a 7.2% increase, often due to acquisitions. (Number, percent, balance sheet change)",
      "growthLongTermInvestments": "Growth rate in the value of long-term investments year-over-year. Example: -0.04 for a 4% decrease. (Number, optional)",
      "growthTaxAssets": "Growth in tax-related assets, such as deferred tax assets, compared to a prior period. (Number, percent, optional)",
      "growthOtherNonCurrentAssets": "Annual growth rate of other non-current assets. Example: 0.12 for a 12% increase. (Number, optional)",
      "growthTotalNonCurrentAssets": "Growth in total non-current assets year-over-year. Example: 0.10 for a 10% rise. (Number, optional)",
      "growthOtherAssets": "Growth in value of assets not classified as core or current, compared to the previous period. (Number, percent, optional)",
      "growthTotalAssets": "The growth rate of total assets compared to the prior period, expressed as a percentage. Example: 7.6. (Number, Percentage)",
      "growthAccountPayables": "Year-over-year or quarter-over-quarter growth in accounts payable, indicating changes in supplier credit usage. Example: 5.7 means a 5.7% increase. (Number, percent, liquidity trend)",
      "growthShortTermDebt": "Year-over-year growth rate in short-term debt outstanding. Example: -0.02 for a 2% decrease. (Number, optional)",
      "growthTaxPayables": "Change in taxes payable (liabilities owed to tax authorities) over the prior period. (Number, percent, optional)",
      "growthDeferredRevenue": "Growth rate of deferred revenue (prepaid, not yet earned). Example: 6.4 for a 6.4% increase. (Number, percent, SaaS/contract business metric)",
      "growthOtherCurrentLiabilities": "Growth in other current liabilities year-over-year. Example: -0.06 for a 6% decrease. (Number, optional)",
      "growthTotalCurrentLiabilities": "Growth in total current liabilities year-over-year. Example: 0.11 for an 11% increase. (Number, optional)",
      "growthLongTermDebt": "The growth rate of long-term debt compared to the prior period, expressed as a percentage. Example: 4.5. (Number, Percentage)",
      "growthDeferredRevenueNonCurrent": "Change in non-current deferred revenue, i.e., revenue to be recognized after 12 months. Example: -0.9 for a 0.9% decrease. (Number, percent, long-term contract health)",
      "growthDeferredTaxLiabilitiesNonCurrent": "Growth in non-current deferred tax liabilities. Example: 2.7 for a 2.7% increase. (Number, percent, tax/deferral impact)",
      "growthOtherNonCurrentLiabilities": "Annual growth rate of other non-current liabilities. Example: 0.07 for a 7% increase. (Number, optional)",
      "growthTotalNonCurrentLiabilities": "Growth in total non-current liabilities year-over-year. Example: 0.07 for a 7% increase. (Number, optional)",
      "growthOtherLiabilities": "Growth in miscellaneous or non-core liabilities compared to the previous reporting period. (Number, percent, optional)",
      "growthTotalLiabilities": "The growth rate of total liabilities compared to the prior period, expressed as a percentage. Example: 5.4. (Number, Percentage)",
      "growthPreferredStock": "Year-over-year growth in the value of preferred stock on the balance sheet. Example: 0.01 for a 1% increase. (Number, optional)",
      "growthCommonStock": "Growth in common stock issued, usually as a result of new equity raised. Example: 2.0 for 2% more common stock outstanding. (Number, percent, dilution tracker)",
      "growthRetainedEarnings": "Annual change in retained earnings, reflecting cumulative net income retained by the company. Example: 0.18 for an 18% increase. (Number, optional)",
      "growthAccumulatedOtherComprehensiveIncomeLoss": "Growth in accumulated other comprehensive income/loss, which includes unrealized gains/losses from investments, currency translation, etc. Example: -1.5 for a 1.5% decline. (Number, percent, equity impact)",
      "growthOthertotalStockholdersEquity": "Growth in total stockholders' equity excluding standard line items, compared to the prior period. (Number, percent, optional)",
      "growthTotalStockholdersEquity": "Growth in total stockholders' equity year-over-year. Example: 0.13 means equity increased by 13%. (Number, optional)",
      "growthMinorityInterest": "Change in minority interest (non-controlling interest) on the balance sheet. Example: 1.6 for a 1.6% increase. (Number, percent, consolidation effect)",
      "growthTotalEquity": "The growth rate of total equity compared to the prior period, expressed as a percentage. Example: 8.3. (Number, Percentage)",
      "growthTotalLiabilitiesAndStockholdersEquity": "Change in the sum of total liabilities and shareholders' equity (i.e., total balance sheet size) compared to the previous period. (Number, percent, optional)",
      "growthTotalInvestments": "Growth rate in total investments held by the company year-over-year. Example: 0.08 for an 8% increase. (Number, optional)",
      "growthTotalDebt": "Growth rate in total debt (short + long-term) year-over-year. Example: 0.05 for a 5% rise. (Number, optional)",
      "growthNetDebt": "The year-over-year growth rate of net debt, expressed as a percentage. Example: 4.5. (Number, Percentage)"
    }
  },
  {
    "name": "Cash Flow Statement Bulk API",
    "description": "Supplies complete cash-flow statements en masse—operating, investing, financing flows—for holistic liquidity analysis.",
    "category": "cash_flow_bulk",
    "use_cases": [
      "calculate free-cash-flow yield screens",
      "compare capex intensity across sectors",
      "monitor buyback vs dividend funding",
      "drive DCF valuation pipelines",
      "detect aggressive financing behaviors"
    ],
    "parameters": {
      "required": {
        "year": "A four-digit calendar year or fiscal year number to filter period-based endpoints. Example: 2024 to retrieve data for the 2024 fiscal or calendar year. (Number or String, optional)",
        "period": "A string or integer indicating the fiscal period for which data is requested. Example: \"annual\" or \"quarter\" to indicate annual or quarterly data. (String or Number, required for period-based endpoints)"
      },
      "optional": {}
    },
    "response_example": {
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "reportedCurrency": "The currency in which all reported values are denominated, as per ISO 4217. Example: 'USD' for US dollars. (String, required for financial data integrity)",
      "cik": "The Central Index Key, a unique nine-digit identifier assigned by the SEC to entities. Example: \"0001454889\". (String)",
      "filingDate": "The date on which a regulatory filing was submitted (e.g., with the SEC), in ISO 8601 format. Example: \"2025-02-03\". (String, Date)",
      "acceptedDate": "The date on which a filing or document was accepted by the regulatory authority. Example: \"2025-02-03\". (String, Date)",
      "fiscalYear": "The fiscal year to which a financial data point pertains, typically in four-digit format. Example: 2023. (Number or String)",
      "period": "The fiscal period associated with the data point, such as a quarter (\"Q2\") or full year. Example: \"Q2\". (String)",
      "netIncome": "The net income value, representing total profit after all expenses, taxes, and non-operating items. Example: 18000000. (Number)",
      "depreciationAndAmortization": "Combined total of depreciation (for tangible assets) and amortization (for intangible assets) during the period. (Number, currency)",
      "deferredIncomeTax": "Total amount of income taxes deferred to future periods due to timing differences between accounting and tax rules. (Number, currency)",
      "stockBasedCompensation": "Total value of stock-based compensation granted to employees. Example: 500,000,000 in RSUs and options. (Number, compensation disclosure)",
      "changeInWorkingCapital": "Change in working capital (current assets minus current liabilities) over a reporting period. (Number, e.g., USD)",
      "accountsReceivables": "Money owed to the company by customers for goods or services delivered on credit. (Number, e.g., USD)",
      "inventory": "Value of raw materials, work-in-progress, and finished goods available for sale, as reported on the balance sheet. (Number, usually in reporting currency, optional)",
      "accountsPayables": "Total value of unpaid bills and obligations to suppliers as of the reporting date. (Number, e.g., USD)",
      "otherWorkingCapital": "Working capital components not individually identified (e.g., prepaids, deferred revenue). Example: 3821000000. (Number, optional)",
      "otherNonCashItems": "Non-cash charges or credits included in net income, such as stock compensation, impairment, or write-downs. (Number, optional)",
      "netCashProvidedByOperatingActivities": "The net cash provided by operating activities as reported in the cash flow statement. Example: 18000000. (Number)",
      "investmentsInPropertyPlantAndEquipment": "Total investments made in property, plant, and equipment (PPE), such as buildings, factories, or equipment. (Number, optional)",
      "acquisitionsNet": "Net cash used for or provided by acquisitions of businesses, net of cash acquired. (Number, e.g., USD)",
      "purchasesOfInvestments": "Total amount spent on purchasing investments (e.g., securities, businesses) during the period. (Number, optional)",
      "salesMaturitiesOfInvestments": "Total proceeds from the sale or maturity of investments in the period. Example: 5,000,000 from bond redemptions. (Number, cash flow investing activities)",
      "otherInvestingActivities": "Investing cash flows not included in acquisitions or capital expenditures. Example: -1308000000. (Number, optional)",
      "netCashProvidedByInvestingActivities": "The net cash flow from investing activities, such as asset purchases or sales. Example: -5000000. (Number)",
      "netDebtIssuance": "Net amount of debt issued or repaid in a period. Positive for net issuance, negative for net repayments. Example: -5998000000 for $5.99B net repayment. (Number, optional)",
      "longTermNetDebtIssuance": "Net amount of long-term debt issued (or repaid) in a given period, showing whether new debt was raised or paid down. (Number, optional)",
      "shortTermNetDebtIssuance": "Net change in short-term debt issued minus repayments. Example: -2,000,000 for net repayments. (Number, cash flow financing)",
      "netStockIssuance": "Net value of common or preferred stock issued minus stock repurchased. Example: -94949000000 for net buybacks. (Number, optional)",
      "netCommonStockIssuance": "Net shares of common stock issued (shares issued minus shares repurchased) during a period. (Number, optional)",
      "commonStockIssuance": "Amount of capital raised through the issuance of new common shares. (Number, e.g., USD)",
      "commonStockRepurchased": "Total value of common stock repurchased (bought back) by the company during the period. (Number, e.g., USD)",
      "netPreferredStockIssuance": "Net value of preferred stock issued minus redemptions during the reporting period. (Number, optional)",
      "netDividendsPaid": "Net value of dividends paid to shareholders, subtracting any dividends received from investments. (Number, optional)",
      "commonDividendsPaid": "Total amount of dividends paid to common shareholders in the reporting period. (Number, e.g., USD)",
      "preferredDividendsPaid": "Total dividends paid to preferred shareholders in the reporting period. (Number, optional)",
      "otherFinancingActivities": "Cash flows from financing activities that do not fit into standard categories like stock issuance or dividends (e.g., debt restructuring fees). Example: -5802000000. (Number, optional)",
      "netCashProvidedByFinancingActivities": "The net cash provided by financing activities, representing cash raised from or used to repay debt and equity. Example: 7000000. (Number)",
      "effectOfForexChangesOnCash": "Net effect of foreign exchange rate changes on cash and cash equivalents during the period. (Number, currency)",
      "netChangeInCash": "Net increase or decrease in cash over the reporting period. Example: -794000000 for a net cash decrease of $794M. (Number, optional)",
      "cashAtEndOfPeriod": "Cash balance at the end of the reporting period. (Number, e.g., USD)",
      "cashAtBeginningOfPeriod": "Cash balance at the start of the reporting period. (Number, e.g., USD)",
      "operatingCashFlow": "The operating cash flow value, representing cash generated from normal business operations. Example: 20000000. (Number)",
      "capitalExpenditure": "The capital expenditure value, representing funds used to acquire or upgrade long-term assets. Example: 5000000. (Number)",
      "freeCashFlow": "The Free Cash Flow generated after capital expenditures, representing cash available to equity holders. Example: 2500000000. (Number)",
      "incomeTaxesPaid": "The actual cash amount of income taxes paid during the reporting period. Example: 26102000000 for $26.1B in taxes paid. (Number, optional)",
      "interestPaid": "Total cash interest paid during the period. Example: 600000000 for $600M. (Number, optional)"
    }
  },
  {
    "name": "Cash Flow Statement Bulk API",
    "description": "Returns raw statement-of-cash-flows for thousands of tickers—great for quantifying capital allocation without per-symbol queries.",
    "category": "cash_flow_bulk",
    "use_cases": [
      "screen for rising OCF margins",
      "flag negative FCF streaks",
      "feed payout sustainability models",
      "visualize financing outflows vs inflows",
      "export full cash-flow datasets to data lakes"
    ],
    "parameters": {
      "required": {
        "year": "A four-digit calendar year or fiscal year number to filter period-based endpoints. Example: 2024 to retrieve data for the 2024 fiscal or calendar year. (Number or String, optional)",
        "period": "A string or integer indicating the fiscal period for which data is requested. Example: \"annual\" or \"quarter\" to indicate annual or quarterly data. (String or Number, required for period-based endpoints)"
      },
      "optional": {}
    },
    "response_example": {
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "reportedCurrency": "The currency in which all reported values are denominated, as per ISO 4217. Example: 'USD' for US dollars. (String, required for financial data integrity)",
      "cik": "The Central Index Key, a unique nine-digit identifier assigned by the SEC to entities. Example: \"0001454889\". (String)",
      "filingDate": "The date on which a regulatory filing was submitted (e.g., with the SEC), in ISO 8601 format. Example: \"2025-02-03\". (String, Date)",
      "acceptedDate": "The date on which a filing or document was accepted by the regulatory authority. Example: \"2025-02-03\". (String, Date)",
      "fiscalYear": "The fiscal year to which a financial data point pertains, typically in four-digit format. Example: 2023. (Number or String)",
      "period": "The fiscal period associated with the data point, such as a quarter (\"Q2\") or full year. Example: \"Q2\". (String)",
      "netIncome": "The net income value, representing total profit after all expenses, taxes, and non-operating items. Example: 18000000. (Number)",
      "depreciationAndAmortization": "Combined total of depreciation (for tangible assets) and amortization (for intangible assets) during the period. (Number, currency)",
      "deferredIncomeTax": "Total amount of income taxes deferred to future periods due to timing differences between accounting and tax rules. (Number, currency)",
      "stockBasedCompensation": "Total value of stock-based compensation granted to employees. Example: 500,000,000 in RSUs and options. (Number, compensation disclosure)",
      "changeInWorkingCapital": "Change in working capital (current assets minus current liabilities) over a reporting period. (Number, e.g., USD)",
      "accountsReceivables": "Money owed to the company by customers for goods or services delivered on credit. (Number, e.g., USD)",
      "inventory": "Value of raw materials, work-in-progress, and finished goods available for sale, as reported on the balance sheet. (Number, usually in reporting currency, optional)",
      "accountsPayables": "Total value of unpaid bills and obligations to suppliers as of the reporting date. (Number, e.g., USD)",
      "otherWorkingCapital": "Working capital components not individually identified (e.g., prepaids, deferred revenue). Example: 3821000000. (Number, optional)",
      "otherNonCashItems": "Non-cash charges or credits included in net income, such as stock compensation, impairment, or write-downs. (Number, optional)",
      "netCashProvidedByOperatingActivities": "The net cash provided by operating activities as reported in the cash flow statement. Example: 18000000. (Number)",
      "investmentsInPropertyPlantAndEquipment": "Total investments made in property, plant, and equipment (PPE), such as buildings, factories, or equipment. (Number, optional)",
      "acquisitionsNet": "Net cash used for or provided by acquisitions of businesses, net of cash acquired. (Number, e.g., USD)",
      "purchasesOfInvestments": "Total amount spent on purchasing investments (e.g., securities, businesses) during the period. (Number, optional)",
      "salesMaturitiesOfInvestments": "Total proceeds from the sale or maturity of investments in the period. Example: 5,000,000 from bond redemptions. (Number, cash flow investing activities)",
      "otherInvestingActivities": "Investing cash flows not included in acquisitions or capital expenditures. Example: -1308000000. (Number, optional)",
      "netCashProvidedByInvestingActivities": "The net cash flow from investing activities, such as asset purchases or sales. Example: -5000000. (Number)",
      "netDebtIssuance": "Net amount of debt issued or repaid in a period. Positive for net issuance, negative for net repayments. Example: -5998000000 for $5.99B net repayment. (Number, optional)",
      "longTermNetDebtIssuance": "Net amount of long-term debt issued (or repaid) in a given period, showing whether new debt was raised or paid down. (Number, optional)",
      "shortTermNetDebtIssuance": "Net change in short-term debt issued minus repayments. Example: -2,000,000 for net repayments. (Number, cash flow financing)",
      "netStockIssuance": "Net value of common or preferred stock issued minus stock repurchased. Example: -94949000000 for net buybacks. (Number, optional)",
      "netCommonStockIssuance": "Net shares of common stock issued (shares issued minus shares repurchased) during a period. (Number, optional)",
      "commonStockIssuance": "Amount of capital raised through the issuance of new common shares. (Number, e.g., USD)",
      "commonStockRepurchased": "Total value of common stock repurchased (bought back) by the company during the period. (Number, e.g., USD)",
      "netPreferredStockIssuance": "Net value of preferred stock issued minus redemptions during the reporting period. (Number, optional)",
      "netDividendsPaid": "Net value of dividends paid to shareholders, subtracting any dividends received from investments. (Number, optional)",
      "commonDividendsPaid": "Total amount of dividends paid to common shareholders in the reporting period. (Number, e.g., USD)",
      "preferredDividendsPaid": "Total dividends paid to preferred shareholders in the reporting period. (Number, optional)",
      "otherFinancingActivities": "Cash flows from financing activities that do not fit into standard categories like stock issuance or dividends (e.g., debt restructuring fees). Example: -5802000000. (Number, optional)",
      "netCashProvidedByFinancingActivities": "The net cash provided by financing activities, representing cash raised from or used to repay debt and equity. Example: 7000000. (Number)",
      "effectOfForexChangesOnCash": "Net effect of foreign exchange rate changes on cash and cash equivalents during the period. (Number, currency)",
      "netChangeInCash": "Net increase or decrease in cash over the reporting period. Example: -794000000 for a net cash decrease of $794M. (Number, optional)",
      "cashAtEndOfPeriod": "Cash balance at the end of the reporting period. (Number, e.g., USD)",
      "cashAtBeginningOfPeriod": "Cash balance at the start of the reporting period. (Number, e.g., USD)",
      "operatingCashFlow": "The operating cash flow value, representing cash generated from normal business operations. Example: 20000000. (Number)",
      "capitalExpenditure": "The capital expenditure value, representing funds used to acquire or upgrade long-term assets. Example: 5000000. (Number)",
      "freeCashFlow": "The Free Cash Flow generated after capital expenditures, representing cash available to equity holders. Example: 2500000000. (Number)",
      "incomeTaxesPaid": "The actual cash amount of income taxes paid during the reporting period. Example: 26102000000 for $26.1B in taxes paid. (Number, optional)",
      "interestPaid": "Total cash interest paid during the period. Example: 600000000 for $600M. (Number, optional)"
    }
  },
  {
    "name": "Cash Flow Statement Growth Bulk API",
    "description": "Outputs growth rates for every cash-flow line item universe-wide—quickly gauge which firms are ramping OCF or slashing capex.",
    "category": "cash_flow_growth_bulk",
    "use_cases": [
      "identify accelerating free-cash-flow names",
      "detect shrinking dividends",
      "pair OCF growth with revenue growth for quality filters",
      "build capex trend analytics",
      "feed macro liquidity studies"
    ],
    "parameters": {
      "required": {
        "year": "A four-digit calendar year or fiscal year number to filter period-based endpoints. Example: 2024 to retrieve data for the 2024 fiscal or calendar year. (Number or String, optional)",
        "period": "A string or integer indicating the fiscal period for which data is requested. Example: \"annual\" or \"quarter\" to indicate annual or quarterly data. (String or Number, required for period-based endpoints)"
      },
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "fiscalYear": "The fiscal year to which a financial data point pertains, typically in four-digit format. Example: 2023. (Number or String)",
      "period": "The fiscal period associated with the data point, such as a quarter (\"Q2\") or full year. Example: \"Q2\". (String)",
      "reportedCurrency": "The currency in which all reported values are denominated, as per ISO 4217. Example: 'USD' for US dollars. (String, required for financial data integrity)",
      "growthNetIncome": "The growth rate of net income compared to the prior period, expressed as a percentage. Example: 12.0. (Number, Percentage)",
      "growthDepreciationAndAmortization": "Growth in depreciation and amortization expenses over the period. Example: 5.0 for a 5% increase in D&A. (Number, percent, fixed asset trend)",
      "growthDeferredIncomeTax": "Growth in deferred income tax liabilities/assets over the period. Example: 1.9 for a 1.9% increase in deferred tax. (Number, percent, tax planning metric)",
      "growthStockBasedCompensation": "Growth in stock-based compensation expenses, typically reflecting increased equity awards to employees/executives. (Number, percent, optional)",
      "growthChangeInWorkingCapital": "Growth rate of change in working capital (current assets - current liabilities). Example: 4.4 means working capital increased by 4.4%. (Number, percent, operational efficiency)",
      "growthAccountsReceivables": "Growth rate in accounts receivable over a given period. Example: -3.2 means receivables declined by 3.2%. (Number, percent, working capital analysis)",
      "growthInventory": "The growth rate of inventory levels compared to the prior period, expressed as a percentage. Example: 3.2. (Number, Percentage)",
      "growthAccountsPayables": "Synonym for growthAccountPayables; captures change in accounts payable over time for trend analysis. Example: 5.7 for 5.7% growth. (Number, percent, duplicate for variant naming)",
      "growthOtherWorkingCapital": "Change in miscellaneous working capital components not covered by standard definitions. (Number, percent, optional)",
      "growthOtherNonCashItems": "Change in non-cash adjustments (depreciation, amortization, etc.) impacting financial statements. (Number, percent, optional)",
      "growthNetCashProvidedByOperatingActivites": "The growth rate of net cash provided by operating activities compared to the prior period, expressed as a percentage. Example: 9.6. (Number, Percentage)",
      "growthInvestmentsInPropertyPlantAndEquipment": "Change in investments in PP&E versus the prior period. Example: 10.0 for 10% more invested in physical assets. (Number, percent, capex tracker)",
      "growthAcquisitionsNet": "Change in net spending on acquisitions (M&A activity) over the reporting period. Example: 10.0 means a 10% increase in acquisitions. (Number, percent, capex/expansion analysis)",
      "growthPurchasesOfInvestments": "Growth in the value of investments purchased compared to a previous period. (Number, percent, optional)",
      "growthSalesMaturitiesOfInvestments": "Change in cash inflows from the sale or maturity of investments. (Number, percent, optional)",
      "growthOtherInvestingActivites": "Change in investing cash flows outside standard lines (capex, acquisitions, etc.) compared to the prior period. (Number, percent, optional)",
      "growthNetCashUsedForInvestingActivites": "The growth rate of net cash used for investing activities compared to the prior period, expressed as a percentage. Example: 7.2. (Number, Percentage)",
      "growthDebtRepayment": "Change in debt repayments over time. Example: 11.2 for an 11.2% increase in principal repaid. (Number, percent, leverage trend)",
      "growthCommonStockIssued": "Change in the amount of newly issued common stock compared to previous periods. Example: 3.7 for a 3.7% increase. (Number, percent, equity financing trend)",
      "growthCommonStockRepurchased": "Growth in common stock repurchases (buybacks) over time. Example: 8.1 for 8.1% more stock bought back. (Number, percent, capital return analysis)",
      "growthDividendsPaid": "Change in total dividends paid to shareholders compared to previous period. Example: -1.2 for a 1.2% decrease. (Number, percent, capital return analysis)",
      "growthOtherFinancingActivites": "Growth in other cash flow activities related to financing that do not fit standard categories. (Number, percent, optional)",
      "growthNetCashUsedProvidedByFinancingActivities": "Growth in net cash from financing activities (debt/equity issuance, buybacks, dividends) versus prior period. Example: -2.3 for a 2.3% decrease. (Number, percent, cash flow trend)",
      "growthEffectOfForexChangesOnCash": "Change in impact of foreign exchange rates on cash flow over time. Example: -0.5 for a 0.5% decrease in FX effect. (Number, percent, multinational exposure)",
      "growthNetChangeInCash": "The year-over-year growth in net change in cash position, expressed as a percentage. Example: 9.6. (Number, Percentage)",
      "growthCashAtEndOfPeriod": "Growth in cash at the end of period vs. prior period. Example: -1.8% signals shrinking cash reserves. (Number, percent, cash flow analysis)",
      "growthCashAtBeginningOfPeriod": "Growth in opening cash balance, tracking changes in liquidity position at the start of the reporting period. Example: 2.2% more cash at the start of Q2 than Q1. (Number, percent, cash flow analysis)",
      "growthOperatingCashFlow": "The growth rate of operating cash flow compared to the prior period, expressed as a percentage. Example: 9.0. (Number, Percentage)",
      "growthCapitalExpenditure": "The growth rate of capital expenditures compared to the prior period, expressed as a percentage. Example: 2.8. (Number, Percentage)",
      "growthFreeCashFlow": "The growth rate of free cash flow compared to the prior period, expressed as a percentage. Example: 10.7. (Number, Percentage)"
    }
  },
  {
    "name": "Cash Flow Statement Growth Bulk API",
    "description": "Bulk-returns YoY/QoQ deltas of cash-flow metrics—ideal for uncovering improving (or deteriorating) cash dynamics ahead of earnings.",
    "category": "cash_flow_growth_bulk",
    "use_cases": [
      "rank stocks by OCF acceleration",
      "flag abrupt drops in capex",
      "support credit analysts with cash trend alerts",
      "train ML models on cash-flow momentum",
      "back-test strategies using FCF growth"
    ],
    "parameters": {
      "required": {
        "year": "A four-digit calendar year or fiscal year number to filter period-based endpoints. Example: 2024 to retrieve data for the 2024 fiscal or calendar year. (Number or String, optional)",
        "period": "A string or integer indicating the fiscal period for which data is requested. Example: \"annual\" or \"quarter\" to indicate annual or quarterly data. (String or Number, required for period-based endpoints)"
      },
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "fiscalYear": "The fiscal year to which a financial data point pertains, typically in four-digit format. Example: 2023. (Number or String)",
      "period": "The fiscal period associated with the data point, such as a quarter (\"Q2\") or full year. Example: \"Q2\". (String)",
      "reportedCurrency": "The currency in which all reported values are denominated, as per ISO 4217. Example: 'USD' for US dollars. (String, required for financial data integrity)",
      "growthNetIncome": "The growth rate of net income compared to the prior period, expressed as a percentage. Example: 12.0. (Number, Percentage)",
      "growthDepreciationAndAmortization": "Growth in depreciation and amortization expenses over the period. Example: 5.0 for a 5% increase in D&A. (Number, percent, fixed asset trend)",
      "growthDeferredIncomeTax": "Growth in deferred income tax liabilities/assets over the period. Example: 1.9 for a 1.9% increase in deferred tax. (Number, percent, tax planning metric)",
      "growthStockBasedCompensation": "Growth in stock-based compensation expenses, typically reflecting increased equity awards to employees/executives. (Number, percent, optional)",
      "growthChangeInWorkingCapital": "Growth rate of change in working capital (current assets - current liabilities). Example: 4.4 means working capital increased by 4.4%. (Number, percent, operational efficiency)",
      "growthAccountsReceivables": "Growth rate in accounts receivable over a given period. Example: -3.2 means receivables declined by 3.2%. (Number, percent, working capital analysis)",
      "growthInventory": "The growth rate of inventory levels compared to the prior period, expressed as a percentage. Example: 3.2. (Number, Percentage)",
      "growthAccountsPayables": "Synonym for growthAccountPayables; captures change in accounts payable over time for trend analysis. Example: 5.7 for 5.7% growth. (Number, percent, duplicate for variant naming)",
      "growthOtherWorkingCapital": "Change in miscellaneous working capital components not covered by standard definitions. (Number, percent, optional)",
      "growthOtherNonCashItems": "Change in non-cash adjustments (depreciation, amortization, etc.) impacting financial statements. (Number, percent, optional)",
      "growthNetCashProvidedByOperatingActivites": "The growth rate of net cash provided by operating activities compared to the prior period, expressed as a percentage. Example: 9.6. (Number, Percentage)",
      "growthInvestmentsInPropertyPlantAndEquipment": "Change in investments in PP&E versus the prior period. Example: 10.0 for 10% more invested in physical assets. (Number, percent, capex tracker)",
      "growthAcquisitionsNet": "Change in net spending on acquisitions (M&A activity) over the reporting period. Example: 10.0 means a 10% increase in acquisitions. (Number, percent, capex/expansion analysis)",
      "growthPurchasesOfInvestments": "Growth in the value of investments purchased compared to a previous period. (Number, percent, optional)",
      "growthSalesMaturitiesOfInvestments": "Change in cash inflows from the sale or maturity of investments. (Number, percent, optional)",
      "growthOtherInvestingActivites": "Change in investing cash flows outside standard lines (capex, acquisitions, etc.) compared to the prior period. (Number, percent, optional)",
      "growthNetCashUsedForInvestingActivites": "The growth rate of net cash used for investing activities compared to the prior period, expressed as a percentage. Example: 7.2. (Number, Percentage)",
      "growthDebtRepayment": "Change in debt repayments over time. Example: 11.2 for an 11.2% increase in principal repaid. (Number, percent, leverage trend)",
      "growthCommonStockIssued": "Change in the amount of newly issued common stock compared to previous periods. Example: 3.7 for a 3.7% increase. (Number, percent, equity financing trend)",
      "growthCommonStockRepurchased": "Growth in common stock repurchases (buybacks) over time. Example: 8.1 for 8.1% more stock bought back. (Number, percent, capital return analysis)",
      "growthDividendsPaid": "Change in total dividends paid to shareholders compared to previous period. Example: -1.2 for a 1.2% decrease. (Number, percent, capital return analysis)",
      "growthOtherFinancingActivites": "Growth in other cash flow activities related to financing that do not fit standard categories. (Number, percent, optional)",
      "growthNetCashUsedProvidedByFinancingActivities": "Growth in net cash from financing activities (debt/equity issuance, buybacks, dividends) versus prior period. Example: -2.3 for a 2.3% decrease. (Number, percent, cash flow trend)",
      "growthEffectOfForexChangesOnCash": "Change in impact of foreign exchange rates on cash flow over time. Example: -0.5 for a 0.5% decrease in FX effect. (Number, percent, multinational exposure)",
      "growthNetChangeInCash": "The year-over-year growth in net change in cash position, expressed as a percentage. Example: 9.6. (Number, Percentage)",
      "growthCashAtEndOfPeriod": "Growth in cash at the end of period vs. prior period. Example: -1.8% signals shrinking cash reserves. (Number, percent, cash flow analysis)",
      "growthCashAtBeginningOfPeriod": "Growth in opening cash balance, tracking changes in liquidity position at the start of the reporting period. Example: 2.2% more cash at the start of Q2 than Q1. (Number, percent, cash flow analysis)",
      "growthOperatingCashFlow": "The growth rate of operating cash flow compared to the prior period, expressed as a percentage. Example: 9.0. (Number, Percentage)",
      "growthCapitalExpenditure": "The growth rate of capital expenditures compared to the prior period, expressed as a percentage. Example: 2.8. (Number, Percentage)",
      "growthFreeCashFlow": "The growth rate of free cash flow compared to the prior period, expressed as a percentage. Example: 10.7. (Number, Percentage)"
    }
  },
  {
    "name": "EOD Bulk API",
    "description": "Pulls end-of-day OHLCV data for every symbol on a given date—perfect for large-scale back-tests or valuation refreshes.",
    "category": "eod_bulk",
    "use_cases": [
      "populate daily price tables in warehouses",
      "compute rolling returns for all tickers",
      "update factor models that need adjClose",
      "drive overnight risk calculations",
      "feed charting libraries with historical data"
    ],
    "parameters": {
      "required": {
        "date": "An ISO 8601 date (YYYY-MM-DD) used to filter or specify the reference date for historical or point-in-time data. Example: \"2025-06-01\". (String, Date, optional)"
      },
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "open": "The opening price of the security at the start of the trading session. Example: 130.00. (Number)",
      "low": "The lowest intraday price recorded for the security. Example: 129.75. (Number)",
      "high": "The highest intraday price recorded for the security. Example: 131.25. (Number)",
      "close": "The closing price of the security at the end of the trading session. Example: 130.75. (Number)",
      "adjClose": "The adjusted closing price, accounting for dividends, splits, and other actions. Example: 130.00. (Number)",
      "volume": "The total number of shares or contracts traded during a given period (typically daily). Example: 105000000. (Number)"
    }
  },
  {
    "name": "EOD Bulk API",
    "description": "One-shot download of daily prices across the entire market for a chosen day—ideal for snapshotting portfolios or market-breadth metrics.",
    "category": "eod_bulk",
    "use_cases": [
      "revalue holdings at official close",
      "calculate ADV and liquidity screens",
      "generate daily returns matrices",
      "check corporate action adjustments",
      "export end-of-day feeds to FTP clients"
    ],
    "parameters": {
      "required": {
        "date": "An ISO 8601 date (YYYY-MM-DD) used to filter or specify the reference date for historical or point-in-time data. Example: \"2025-06-01\". (String, Date, optional)"
      },
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "open": "The opening price of the security at the start of the trading session. Example: 130.00. (Number)",
      "low": "The lowest intraday price recorded for the security. Example: 129.75. (Number)",
      "high": "The highest intraday price recorded for the security. Example: 131.25. (Number)",
      "close": "The closing price of the security at the end of the trading session. Example: 130.75. (Number)",
      "adjClose": "The adjusted closing price, accounting for dividends, splits, and other actions. Example: 130.00. (Number)",
      "volume": "The total number of shares or contracts traded during a given period (typically daily). Example: 105000000. (Number)"
    }
  },
  {
    "name": "Stock Symbol Search API",
    "description": "Stock Symbol Search API returns the canonical ticker symbol for any company name, brand name, or partial identifier across global exchanges. Category: reference. Use cases include ticker autocomplete in user interfaces, validating user-supplied symbols before downstream queries, bulk mapping of company names to tickers, supporting multi-exchange coverage for global portfolios, and feeding ETL pipelines that require clean symbol metadata. Parameters: required: query (string); optional: limit (number), exchange (string). Response example fields: symbol (string), name (string), currency (string), exchangeFullName (string), exchange (string).",
    "category": "reference",
    "use_cases": [
      "ticker autocomplete in UI forms",
      "validate user-supplied symbols before downstream queries",
      "bulk mapping of company names to tickers",
      "multi-exchange coverage for global portfolios",
      "ETL pipelines that need clean symbol metadata"
    ],
    "parameters": {
      "required": {
        "query": "A free-form text string used to perform fuzzy or exact matches against company names, ticker symbols, or keywords. Example: \"Apple\" to retrieve all symbols or names containing “Apple”. (String, required for text-based search endpoints)"
      },
      "optional": {
        "limit": "An integer cap on the number of results returned by the endpoint. Example: 50 to restrict output to the top 50 matches. Must be ≥1 and ≤1000. (Integer, optional; defaults to 100)",
        "exchange": "The exchange code or abbreviation to scope results to a specific trading venue. Example: \"NASDAQ\" or \"NYSE\". Filters out tickers not listed on that exchange. (String, optional)"
      }
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "name": "The full legal or common name of the company. Example: \"Apple Inc.\" (String)",
      "currency": "The ISO 4217 three-letter currency code representing the trading currency of the security. Example: \"USD\" for US Dollars. (String)",
      "exchangeFullName": "The full name of the stock exchange where the security is listed. Example: \"NASDAQ Global Select\". (String)",
      "exchange": "The abbreviated code or name of the exchange where the security is traded. Example: \"NASDAQ\". (String)"
    }
  },
  {
    "name": "Stock Symbol Search API",
    "description": "Stock Symbol Search API provides low-latency mapping of free-text queries to equity tickers by leveraging a comprehensive index of global securities. Category: reference. Use cases cover real-time ticker suggestions in trading applications, pre-trade symbol validation in algorithmic systems, enterprise-scale bulk name-to-ticker conversion for data normalization, multi-exchange support for asset managers, and standardized symbol metadata provisioning for ETL workflows. Parameters: required: query (string); optional: limit (number), exchange (string). Response example fields include symbol (string), name (string), currency (string), exchangeFullName (string), and exchange (string).",
    "category": "reference",
    "use_cases": [
      "ticker autocomplete in UI forms",
      "validate user-supplied symbols before downstream queries",
      "bulk mapping of company names to tickers",
      "multi-exchange coverage for global portfolios",
      "ETL pipelines that need clean symbol metadata"
    ],
    "parameters": {
      "required": {
        "query": "A free-form text string used to perform fuzzy or exact matches against company names, ticker symbols, or keywords. Example: \"Apple\" to retrieve all symbols or names containing “Apple”. (String, required for text-based search endpoints)"
      },
      "optional": {
        "limit": "An integer cap on the number of results returned by the endpoint. Example: 50 to restrict output to the top 50 matches. Must be ≥1 and ≤1000. (Integer, optional; defaults to 100)",
        "exchange": "The exchange code or abbreviation to scope results to a specific trading venue. Example: \"NASDAQ\" or \"NYSE\". Filters out tickers not listed on that exchange. (String, optional)"
      }
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "name": "The full legal or common name of the company. Example: \"Apple Inc.\" (String)",
      "currency": "The ISO 4217 three-letter currency code representing the trading currency of the security. Example: \"USD\" for US Dollars. (String)",
      "exchangeFullName": "The full name of the stock exchange where the security is listed. Example: \"NASDAQ Global Select\". (String)",
      "exchange": "The abbreviated code or name of the exchange where the security is traded. Example: \"NASDAQ\". (String)"
    }
  },
  {
    "name": "Company Name Search API",
    "description": "Company Name Search API resolves partial or full company and ETF names into ticker symbols, company names, currency, and exchange information, enabling search by asset name when the symbol is unknown. Category: reference. Use cases include user interfaces that let investors type company names to discover tickers, bulk reconciliation of legacy or ambiguous names to current symbols, multi-exchange filtering for global asset managers, ETL workflows that normalize asset identifiers, and validation of corporate references in research reports. Parameters: required: query (string); optional: limit (number), exchange (string). Response example fields: symbol (string), name (string), currency (string), exchangeFullName (string), exchange (string).",
    "category": "reference",
    "use_cases": [
      "find tickers by typing partial company or ETF names",
      "bulk mapping of asset names to ticker symbols in data pipelines",
      "multi-exchange filtering for global portfolio coverage",
      "validate corporate references in research reports",
      "autocomplete ticker lookup when symbol is unknown"
    ],
    "parameters": {
      "required": {
        "query": "A free-form text string used to perform fuzzy or exact matches against company names, ticker symbols, or keywords. Example: \"Apple\" to retrieve all symbols or names containing “Apple”. (String, required for text-based search endpoints)"
      },
      "optional": {
        "limit": "An integer cap on the number of results returned by the endpoint. Example: 50 to restrict output to the top 50 matches. Must be ≥1 and ≤1000. (Integer, optional; defaults to 100)",
        "exchange": "The exchange code or abbreviation to scope results to a specific trading venue. Example: \"NASDAQ\" or \"NYSE\". Filters out tickers not listed on that exchange. (String, optional)"
      }
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "name": "The full legal or common name of the company. Example: \"Apple Inc.\" (String)",
      "currency": "The ISO 4217 three-letter currency code representing the trading currency of the security. Example: \"USD\" for US Dollars. (String)",
      "exchangeFullName": "The full name of the stock exchange where the security is listed. Example: \"NASDAQ Global Select\". (String)",
      "exchange": "The abbreviated code or name of the exchange where the security is traded. Example: \"NASDAQ\". (String)"
    }
  },
  {
    "name": "Company Name Search API",
    "description": "Company Name Search API provides a scalable endpoint to locate ticker symbols by matching free-text company or ETF names against a global equities index. Category: reference. Use cases include real-time ticker discovery when users do not know the symbol, bulk reconciliation of old or ambiguous company names, multi-exchange filtering for diversified portfolios, data normalization in ETL pipelines, and compliance checks in research workflows. Parameters: required: query (string); optional: limit (number), exchange (string). Response example fields include symbol (string), name (string), currency (string), exchangeFullName (string), and exchange (string).",
    "category": "reference",
    "use_cases": [
      "find tickers by typing partial company or ETF names",
      "bulk mapping of asset names to ticker symbols in data pipelines",
      "multi-exchange filtering for global portfolio coverage",
      "validate corporate references in research reports",
      "autocomplete ticker lookup when symbol is unknown"
    ],
    "parameters": {
      "required": {
        "query": "A free-form text string used to perform fuzzy or exact matches against company names, ticker symbols, or keywords. Example: \"Apple\" to retrieve all symbols or names containing “Apple”. (String, required for text-based search endpoints)"
      },
      "optional": {
        "limit": "An integer cap on the number of results returned by the endpoint. Example: 50 to restrict output to the top 50 matches. Must be ≥1 and ≤1000. (Integer, optional; defaults to 100)",
        "exchange": "The exchange code or abbreviation to scope results to a specific trading venue. Example: \"NASDAQ\" or \"NYSE\". Filters out tickers not listed on that exchange. (String, optional)"
      }
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "name": "The full legal or common name of the company. Example: \"Apple Inc.\" (String)",
      "currency": "The ISO 4217 three-letter currency code representing the trading currency of the security. Example: \"USD\" for US Dollars. (String)",
      "exchangeFullName": "The full name of the stock exchange where the security is listed. Example: \"NASDAQ Global Select\". (String)",
      "exchange": "The abbreviated code or name of the exchange where the security is traded. Example: \"NASDAQ\". (String)"
    }
  },
  {
    "name": "CIK API",
    "description": "CIK API retrieves the Central Index Key (CIK) and associated company metadata—such as ticker symbol, company name, exchange, and currency—for any publicly traded issuer, streamlining access to SEC filing identifiers. Category: reference. Use cases include retrieving CIKs for automated SEC document downloads, linking equity tickers to regulatory filings, compliance workflows that require unique SEC identifiers, data pipelines that merge financial statements with market data, and validation of corporate entities in audit processes. Parameters: required: cik (string); optional: limit (number). Response example fields: symbol (string), companyName (string), cik (string), exchangeFullName (string), exchange (string), currency (string).",
    "category": "reference",
    "use_cases": [
      "automate retrieval of SEC filings by CIK",
      "link equity tickers to regulatory documents",
      "compliance workflows requiring SEC identifiers",
      "merge financial statements with market data in ETL pipelines",
      "validate company entities in audit and risk systems"
    ],
    "parameters": {
      "required": {
        "cik": "The nine-digit Central Index Key assigned by the SEC, used to filter or look up specific filers. Example: \"0000320193\" for Apple Inc. (String, optional)"
      },
      "optional": {
        "limit": "An integer cap on the number of results returned by the endpoint. Example: 50 to restrict output to the top 50 matches. Must be ≥1 and ≤1000. (Integer, optional; defaults to 100)"
      }
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "companyName": "The registered legal name of the company. Example: \"Apple Inc.\". (String)",
      "cik": "The Central Index Key, a unique nine-digit identifier assigned by the SEC to entities. Example: \"0001454889\". (String)",
      "exchangeFullName": "The full name of the stock exchange where the security is listed. Example: \"NASDAQ Global Select\". (String)",
      "exchange": "The abbreviated code or name of the exchange where the security is traded. Example: \"NASDAQ\". (String)",
      "currency": "The ISO 4217 three-letter currency code representing the trading currency of the security. Example: \"USD\" for US Dollars. (String)"
    }
  },
  {
    "name": "CIK API",
    "description": "CIK API offers a low-latency lookup for Central Index Key (CIK) values and corresponding company details, enabling seamless integration with SEC filing processes. Category: reference. Use cases include auto-populating CIK fields for regulatory document retrieval, correlating tickers with SEC identifiers in compliance systems, enriching data warehouses with CIK-linked company metadata, auditing corporate entities in risk platforms, and powering ETL workflows that join financial statements to market data. Parameters: required: cik (string); optional: limit (number). Response example fields include symbol (string), companyName (string), cik (string), exchangeFullName (string), exchange (string), and currency (string).",
    "category": "reference",
    "use_cases": [
      "automate retrieval of SEC filings by CIK",
      "link equity tickers to regulatory documents",
      "compliance workflows requiring SEC identifiers",
      "merge financial statements with market data in ETL pipelines",
      "validate company entities in audit and risk systems"
    ],
    "parameters": {
      "required": {
        "cik": "The nine-digit Central Index Key assigned by the SEC, used to filter or look up specific filers. Example: \"0000320193\" for Apple Inc. (String, optional)"
      },
      "optional": {
        "limit": "An integer cap on the number of results returned by the endpoint. Example: 50 to restrict output to the top 50 matches. Must be ≥1 and ≤1000. (Integer, optional; defaults to 100)"
      }
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "companyName": "The registered legal name of the company. Example: \"Apple Inc.\". (String)",
      "cik": "The Central Index Key, a unique nine-digit identifier assigned by the SEC to entities. Example: \"0001454889\". (String)",
      "exchangeFullName": "The full name of the stock exchange where the security is listed. Example: \"NASDAQ Global Select\". (String)",
      "exchange": "The abbreviated code or name of the exchange where the security is traded. Example: \"NASDAQ\". (String)",
      "currency": "The ISO 4217 three-letter currency code representing the trading currency of the security. Example: \"USD\" for US Dollars. (String)"
    }
  },
  {
    "name": "CUSIP API",
    "description": "CUSIP API returns detailed security information—such as ticker symbol, company name, CUSIP number, and market capitalization—by querying the standard CUSIP identifier for financial instruments. Category: reference. Use cases include validating CUSIP numbers in fixed-income and equity portfolios, mapping CUSIPs to tickers for index construction, enriching bond or equity data feeds with standardized identifiers, compliance checks for institutional trading desks, and ETL processes that require accurate linkage between CUSIP and market metadata. Parameters: required: cusip (string). Response example fields: symbol (string), companyName (string), cusip (string), marketCap (number).",
    "category": "reference",
    "use_cases": [
      "validate CUSIP numbers in portfolio management systems",
      "map CUSIP to ticker for index and benchmark calculations",
      "enrich fixed-income and equity feeds with standard identifiers",
      "compliance checks for institutional trading and custody",
      "ETL pipelines linking CUSIP with company metadata"
    ],
    "parameters": {
      "required": {
        "cusip": "The nine-character CUSIP identifier used to uniquely identify U.S. or Canadian securities. Example: \"037833100\" for Apple Inc. (String, optional)"
      },
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "companyName": "The registered legal name of the company. Example: \"Apple Inc.\". (String)",
      "cusip": "The Committee on Uniform Securities Identification Procedures number, a unique 9-character identifier for U.S. securities. Example: \"037833100\". (String)",
      "marketCap": "The market capitalization of the company, calculated as share price multiplied by total shares outstanding. Example: \"None\" or 1500000000000 (1.5 trillion). (Number or String)"
    }
  },
  {
    "name": "CUSIP API",
    "description": "CUSIP API provides a robust endpoint to look up security metadata by CUSIP number, returning ticker symbol, issuer name, and market capitalization for the specified instrument. Category: reference. Use cases include automating CUSIP validation in trading platforms, linking CUSIP identifiers to ticker symbols for index calculations, enriching financial databases with CUSIP-linked metadata, conducting compliance checks on institutional trades, and integrating CUSIP-based lookups into ETL processes for data normalization. Parameters: required: cusip (string). Response example fields include symbol (string), companyName (string), cusip (string), and marketCap (number).",
    "category": "reference",
    "use_cases": [
      "validate CUSIP numbers in portfolio management systems",
      "map CUSIP to ticker for index and benchmark calculations",
      "enrich fixed-income and equity feeds with standard identifiers",
      "compliance checks for institutional trading and custody",
      "ETL pipelines linking CUSIP with company metadata"
    ],
    "parameters": {
      "required": {
        "cusip": "The nine-character CUSIP identifier used to uniquely identify U.S. or Canadian securities. Example: \"037833100\" for Apple Inc. (String, optional)"
      },
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "companyName": "The registered legal name of the company. Example: \"Apple Inc.\". (String)",
      "cusip": "The Committee on Uniform Securities Identification Procedures number, a unique 9-character identifier for U.S. securities. Example: \"037833100\". (String)",
      "marketCap": "The market capitalization of the company, calculated as share price multiplied by total shares outstanding. Example: \"None\" or 1500000000000 (1.5 trillion). (Number or String)"
    }
  },
  {
    "name": "ISIN API",
    "description": "ISIN API fetches the International Securities Identification Number (ISIN), ticker symbol, company name, and market capitalization for any financial security, facilitating global identification across markets. Category: reference. Use cases include mapping ISINs to local exchange tickers, validating international securities in cross-border portfolios, enriching data warehouses with ISIN-linked metadata, compliance workflows requiring global security identifiers, and ETL processes that standardize instrument identifiers for reporting and analytics. Parameters: required: isin (string). Response example fields: symbol (string), name (string), isin (string), and marketCap (number).",
    "category": "reference",
    "use_cases": [
      "map ISIN to local exchange tickers in global portfolios",
      "validate international securities in compliance checks",
      "enrich data warehouses with ISIN-linked metadata",
      "standardize instrument identifiers in ETL workflows",
      "support cross-border reporting with global security IDs"
    ],
    "parameters": {
      "required": {
        "isin": "The International Securities Identification Number (ISIN), a 12-character code used globally to identify securities. Example: \"US0378331005\" for Apple Inc. (String, optional)"
      },
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "name": "The full legal or common name of the company. Example: \"Apple Inc.\" (String)",
      "isin": "The International Securities Identification Number, a 12-character alphanumeric code for identifying securities. Example: \"US0378331005\". (String)",
      "marketCap": "The market capitalization of the company, calculated as share price multiplied by total shares outstanding. Example: \"None\" or 1500000000000 (1.5 trillion). (Number or String)"
    }
  },
  {
    "name": "ISIN API",
    "description": "ISIN API provides a comprehensive lookup for International Securities Identification Numbers, returning associated ticker symbol, issuer name, and market capitalization for any security. Category: reference. Use cases include validating and mapping ISIN codes to exchange-specific tickers, integrating global security identifiers into compliance platforms, enriching analytics databases with ISIN-based metadata, automating instrument identification in cross-border ETFs, and standardizing identifiers in ETL workflows. Parameters: required: isin (string). Response example fields include symbol (string), name (string), isin (string), and marketCap (number).",
    "category": "reference",
    "use_cases": [
      "map ISIN to local exchange tickers in global portfolios",
      "validate international securities in compliance checks",
      "enrich data warehouses with ISIN-linked metadata",
      "standardize instrument identifiers in ETL workflows",
      "support cross-border reporting with global security IDs"
    ],
    "parameters": {
      "required": {
        "isin": "The International Securities Identification Number (ISIN), a 12-character code used globally to identify securities. Example: \"US0378331005\" for Apple Inc. (String, optional)"
      },
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "name": "The full legal or common name of the company. Example: \"Apple Inc.\" (String)",
      "isin": "The International Securities Identification Number, a 12-character alphanumeric code for identifying securities. Example: \"US0378331005\". (String)",
      "marketCap": "The market capitalization of the company, calculated as share price multiplied by total shares outstanding. Example: \"None\" or 1500000000000 (1.5 trillion). (Number or String)"
    }
  },
  {
    "name": "Stock Screener API",
    "description": "Stock Screener API enables dynamic filtering of equities based on financial and market criteria—such as market capitalization, price, volume, beta, sector, industry, dividend yield, exchange, country, and trading status—to identify stocks matching specific investment strategies. Category: market-data. Use cases include building custom screeners for retail and institutional investors, powering watchlists that automatically update by predefined filters, research workflows that require filtering by sector or financial metrics, automated alerts when stocks meet screening criteria, and ETL pipelines that ingest filtered equity universes for quantitative modeling. Parameters include required filters: marketCapMoreThan (number), marketCapLowerThan (number), sector (string), industry (string), betaMoreThan (number), betaLowerThan (number), priceMoreThan (number), priceLowerThan (number), dividendMoreThan (number), dividendLowerThan (number), volumeMoreThan (number), volumeLowerThan (number), exchange (string), country (string), isEtf (boolean), isFund (boolean), isActivelyTrading (boolean), limit (number), includeAllShareClasses (boolean). Response example fields: symbol (string), companyName (string), marketCap (number), sector (string), industry (string), beta (number), price (number), lastAnnualDividend (number), volume (number), exchange (string), exchangeShortName (string), country (string), isEtf (boolean), isFund (boolean), isActivelyTrading (boolean).",
    "category": "market-data",
    "use_cases": [
      "build custom screeners for retail and institutional investors",
      "power dynamic watchlists that update by filter criteria",
      "research workflows filtering by sector or financial metrics",
      "automated alerts when equities meet screening thresholds",
      "ETL pipelines ingesting filtered equity universes for modeling"
    ],
    "parameters": {
      "required": {
        "marketCapMoreThan": "A numeric lower bound filter on market capitalization (in USD). Example: 10000000000 to return only companies with market cap ≥ $10 billion. (Number, optional)",
        "marketCapLowerThan": "A numeric upper bound filter on market capitalization (in USD). Example: 50000000000 to return only companies with market cap ≤ $50 billion. (Number, optional)",
        "sector": "A high-level sector classification string to filter companies by economic sector. Example: \"Technology\" to return only names in the technology sector. Matches standardized GICS or ICB sector names. (String, optional)",
        "industry": "A granular industry classification string to narrow results to specific industry verticals. Example: \"Semiconductors\" to retrieve only chipmakers. Must match FMP’s industry taxonomy. (String, optional)",
        "betaMoreThan": "A numeric threshold to include only stocks whose beta is strictly greater than this value. Example: 1.2 to fetch names more volatile than the market. (Number, optional)",
        "betaLowerThan": "A numeric threshold to include only stocks whose beta is strictly less than this value. Example: 0.8 to fetch defensive names. (Number, optional)",
        "priceMoreThan": "A numeric lower bound on the last traded price. Example: 50.00 to exclude penny stocks and sub-$50 names. (Number, optional)",
        "priceLowerThan": "A numeric upper bound on the last traded price. Example: 200.00 to exclude high-priced names above $200. (Number, optional)",
        "dividendMoreThan": "A numeric lower bound filter on dividend yield or amount. Example: 0.02 to return only names paying ≥2% yield. (Number, optional)",
        "dividendLowerThan": "A numeric upper bound filter on dividend yield or amount. Example: 0.05 to exclude names with >5% yield. (Number, optional)",
        "volumeMoreThan": "A numeric lower bound filter on average trading volume (shares). Example: 1000000 to include only names trading ≥1 million shares daily. (Number, optional)",
        "volumeLowerThan": "A numeric upper bound filter on average trading volume (shares). Example: 50000000 to exclude ultra-liquid names trading >50 million shares. (Number, optional)",
        "exchange": "The exchange code or abbreviation to scope results to a specific trading venue. Example: \"NASDAQ\" or \"NYSE\". Filters out tickers not listed on that exchange. (String, optional)",
        "country": "An ISO 3166-1 alpha-2 country code to limit results to companies domiciled or primarily operating in that country. Example: \"US\" for United States, \"JP\" for Japan. (String, optional)",
        "isEtf": "Boolean flag (true/false) to restrict results to Exchange-Traded Funds (ETFs) versus stocks. Example: true returns only ETF tickers. (Boolean, optional)",
        "isFund": "Boolean flag (true/false) to restrict results to mutual funds or closed-end funds versus equities. Example: true returns only fund tickers. (Boolean, optional)",
        "isActivelyTrading": "Boolean flag (true/false) to include only securities that are currently trading (excluding suspended or delisted names). Example: true returns only active tickers. (Boolean, optional)",
        "limit": "An integer cap on the number of results returned by the endpoint. Example: 50 to restrict output to the top 50 matches. Must be ≥1 and ≤1000. (Integer, optional; defaults to 100)",
        "includeAllShareClasses": "Boolean flag (true/false) to specify whether to include all share classes (e.g., Class A, Class B) for multi-class companies. Example: true returns AAPL, AAPL PK, etc. (Boolean, optional; defaults to false)"
      },
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "companyName": "The registered legal name of the company. Example: \"Apple Inc.\". (String)",
      "marketCap": "The market capitalization of the company, calculated as share price multiplied by total shares outstanding. Example: \"None\" or 1500000000000 (1.5 trillion). (Number or String)",
      "sector": "The broad sector classification for the company, often aligned with GICS sectors. Example: \"Information Technology\". (String)",
      "industry": "The primary industry classification of the company, typically using NAICS or SIC nomenclature. Example: \"Technology\". (String)",
      "beta": "A measure of the stock's volatility relative to the overall market; beta > 1 indicates higher volatility. Example: 1.20. (Number)",
      "price": "The last traded price or intrinsic value of the security or asset. Example: 130.75. (Number)",
      "lastAnnualDividend": "The most recent annual dividend paid per share. Example: 0.88. (Number)",
      "volume": "The total number of shares or contracts traded during a given period (typically daily). Example: 105000000. (Number)",
      "exchange": "The abbreviated code or name of the exchange where the security is traded. Example: \"NASDAQ\". (String)",
      "exchangeShortName": "The shorthand or abbreviated name of the exchange where the security trades. Example: \"NASDAQ\". (String)",
      "country": "The country where the company is headquartered or primarily operates, using the ISO 3166-1 alpha-2 code. Example: \"US\". (String)",
      "isEtf": "Boolean flag indicating if the security is an Exchange-Traded Fund (ETF). Example: false. (Boolean)",
      "isFund": "Boolean flag indicating if the security is a mutual fund or other investment fund. Example: false. (Boolean)",
      "isActivelyTrading": "Boolean flag indicating if the security is currently trading on the exchange. Example: true. (Boolean)"
    }
  },
  {
    "name": "Stock Screener API",
    "description": "Stock Screener API offers a flexible endpoint to discover equities by applying multiple filters—such as market capitalization range, price range, trading volume, beta, sector, industry, dividend thresholds, exchange, and country—to generate targeted stock lists. Category: market-data. Use cases include launching investor-facing stock screeners, driving automated watchlists for portfolio managers, filtering large equity universes for research purposes, triggering event-based alerts when screening criteria are met, and integrating filtered equity data into ETL pipelines for quantitative analysis. Parameters include: marketCapMoreThan (number), marketCapLowerThan (number), sector (string), industry (string), betaMoreThan (number), betaLowerThan (number), priceMoreThan (number), priceLowerThan (number), dividendMoreThan (number), dividendLowerThan (number), volumeMoreThan (number), volumeLowerThan (number), exchange (string), country (string), isEtf (boolean), isFund (boolean), isActivelyTrading (boolean), limit (number), includeAllShareClasses (boolean). Response example fields: symbol, companyName, marketCap, sector, industry, beta, price, lastAnnualDividend, volume, exchange, exchangeShortName, country, isEtf, isFund, isActivelyTrading.",
    "category": "market-data",
    "use_cases": [
      "build custom screeners for retail and institutional investors",
      "power dynamic watchlists that update by filter criteria",
      "research workflows filtering by sector or financial metrics",
      "automated alerts when equities meet screening thresholds",
      "ETL pipelines ingesting filtered equity universes for modeling"
    ],
    "parameters": {
      "required": {
        "marketCapMoreThan": "A numeric lower bound filter on market capitalization (in USD). Example: 10000000000 to return only companies with market cap ≥ $10 billion. (Number, optional)",
        "marketCapLowerThan": "A numeric upper bound filter on market capitalization (in USD). Example: 50000000000 to return only companies with market cap ≤ $50 billion. (Number, optional)",
        "sector": "A high-level sector classification string to filter companies by economic sector. Example: \"Technology\" to return only names in the technology sector. Matches standardized GICS or ICB sector names. (String, optional)",
        "industry": "A granular industry classification string to narrow results to specific industry verticals. Example: \"Semiconductors\" to retrieve only chipmakers. Must match FMP’s industry taxonomy. (String, optional)",
        "betaMoreThan": "A numeric threshold to include only stocks whose beta is strictly greater than this value. Example: 1.2 to fetch names more volatile than the market. (Number, optional)",
        "betaLowerThan": "A numeric threshold to include only stocks whose beta is strictly less than this value. Example: 0.8 to fetch defensive names. (Number, optional)",
        "priceMoreThan": "A numeric lower bound on the last traded price. Example: 50.00 to exclude penny stocks and sub-$50 names. (Number, optional)",
        "priceLowerThan": "A numeric upper bound on the last traded price. Example: 200.00 to exclude high-priced names above $200. (Number, optional)",
        "dividendMoreThan": "A numeric lower bound filter on dividend yield or amount. Example: 0.02 to return only names paying ≥2% yield. (Number, optional)",
        "dividendLowerThan": "A numeric upper bound filter on dividend yield or amount. Example: 0.05 to exclude names with >5% yield. (Number, optional)",
        "volumeMoreThan": "A numeric lower bound filter on average trading volume (shares). Example: 1000000 to include only names trading ≥1 million shares daily. (Number, optional)",
        "volumeLowerThan": "A numeric upper bound filter on average trading volume (shares). Example: 50000000 to exclude ultra-liquid names trading >50 million shares. (Number, optional)",
        "exchange": "The exchange code or abbreviation to scope results to a specific trading venue. Example: \"NASDAQ\" or \"NYSE\". Filters out tickers not listed on that exchange. (String, optional)",
        "country": "An ISO 3166-1 alpha-2 country code to limit results to companies domiciled or primarily operating in that country. Example: \"US\" for United States, \"JP\" for Japan. (String, optional)",
        "isEtf": "Boolean flag (true/false) to restrict results to Exchange-Traded Funds (ETFs) versus stocks. Example: true returns only ETF tickers. (Boolean, optional)",
        "isFund": "Boolean flag (true/false) to restrict results to mutual funds or closed-end funds versus equities. Example: true returns only fund tickers. (Boolean, optional)",
        "isActivelyTrading": "Boolean flag (true/false) to include only securities that are currently trading (excluding suspended or delisted names). Example: true returns only active tickers. (Boolean, optional)",
        "limit": "An integer cap on the number of results returned by the endpoint. Example: 50 to restrict output to the top 50 matches. Must be ≥1 and ≤1000. (Integer, optional; defaults to 100)",
        "includeAllShareClasses": "Boolean flag (true/false) to specify whether to include all share classes (e.g., Class A, Class B) for multi-class companies. Example: true returns AAPL, AAPL PK, etc. (Boolean, optional; defaults to false)"
      },
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "companyName": "The registered legal name of the company. Example: \"Apple Inc.\". (String)",
      "marketCap": "The market capitalization of the company, calculated as share price multiplied by total shares outstanding. Example: \"None\" or 1500000000000 (1.5 trillion). (Number or String)",
      "sector": "The broad sector classification for the company, often aligned with GICS sectors. Example: \"Information Technology\". (String)",
      "industry": "The primary industry classification of the company, typically using NAICS or SIC nomenclature. Example: \"Technology\". (String)",
      "beta": "A measure of the stock's volatility relative to the overall market; beta > 1 indicates higher volatility. Example: 1.20. (Number)",
      "price": "The last traded price or intrinsic value of the security or asset. Example: 130.75. (Number)",
      "lastAnnualDividend": "The most recent annual dividend paid per share. Example: 0.88. (Number)",
      "volume": "The total number of shares or contracts traded during a given period (typically daily). Example: 105000000. (Number)",
      "exchange": "The abbreviated code or name of the exchange where the security is traded. Example: \"NASDAQ\". (String)",
      "exchangeShortName": "The shorthand or abbreviated name of the exchange where the security trades. Example: \"NASDAQ\". (String)",
      "country": "The country where the company is headquartered or primarily operates, using the ISO 3166-1 alpha-2 code. Example: \"US\". (String)",
      "isEtf": "Boolean flag indicating if the security is an Exchange-Traded Fund (ETF). Example: false. (Boolean)",
      "isFund": "Boolean flag indicating if the security is a mutual fund or other investment fund. Example: false. (Boolean)",
      "isActivelyTrading": "Boolean flag indicating if the security is currently trading on the exchange. Example: true. (Boolean)"
    }
  },
  {
    "name": "Exchange Variants API",
    "description": "Exchange Variants API lists all exchanges where a given security is actively traded, returning detailed metadata such as current price, beta, average volume, market capitalization, last dividend, trading range, price changes, company name, currency, CIK, ISIN, CUSIP, exchange details, industry, website, corporate description, CEO, sector, country, employee count, contact information, address, DCF values, image URL, IPO date, and trading flags. Category: market-data. Use cases include displaying global listing venues for a security in portfolio dashboards, enriching research platforms with multi-exchange data, validating listing venues in compliance workflows, consolidating exchange-specific details in ETL processes, and enabling cross-listed equity analytics. Parameters: required: symbol (string). Response example fields include symbol (string), price (number), beta (number), volAvg (number), mktCap (number), lastDiv (number), range (string), changes (number), companyName (string), currency (string), cik (string), isin (string), cusip (string), exchange (string), exchangeShortName (string), industry (string), website (string), description (string), ceo (string), sector (string), country (string), fullTimeEmployees (string), phone (string), address (string), city (string), state (string), zip (string), dcfDiff (number), dcf (number), image (string), ipoDate (string), defaultImage (boolean), isEtf (boolean), isActivelyTrading (boolean), isAdr (boolean), isFund (boolean).",
    "category": "market-data",
    "use_cases": [
      "display all global exchange listings for a security in portfolio dashboards",
      "enrich security profiles with multi-exchange metadata for research platforms",
      "validate listing venues in compliance and regulatory workflows",
      "ETL processes consolidating exchange-specific details into data warehouses",
      "enable analytics on cross-listed equities for quantitative models"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "price": "The last traded price or intrinsic value of the security or asset. Example: 130.75. (Number)",
      "beta": "A measure of the stock's volatility relative to the overall market; beta > 1 indicates higher volatility. Example: 1.20. (Number)",
      "volAvg": "The average trading volume of the security over a predefined lookback period. Example: 95000000. (Number)",
      "mktCap": "The market capitalization of the company expressed in the reporting currency; equivalent to total shares outstanding multiplied by current share price. Example: 152173717000. (Number or String)",
      "lastDiv": "The most recent dividend amount paid per share. Example: 0.22. (Number)",
      "range": "The trading range (low–high) for the security during the trading session. Example: \"129.50–131.00\". (String)",
      "changes": "The absolute change in price or other metric relative to the previous period. Example: \"+1.25\". (String)",
      "companyName": "The registered legal name of the company. Example: \"Apple Inc.\". (String)",
      "currency": "The ISO 4217 three-letter currency code representing the trading currency of the security. Example: \"USD\" for US Dollars. (String)",
      "cik": "The Central Index Key, a unique nine-digit identifier assigned by the SEC to entities. Example: \"0001454889\". (String)",
      "isin": "The International Securities Identification Number, a 12-character alphanumeric code for identifying securities. Example: \"US0378331005\". (String)",
      "cusip": "The Committee on Uniform Securities Identification Procedures number, a unique 9-character identifier for U.S. securities. Example: \"037833100\". (String)",
      "exchange": "The abbreviated code or name of the exchange where the security is traded. Example: \"NASDAQ\". (String)",
      "exchangeShortName": "The shorthand or abbreviated name of the exchange where the security trades. Example: \"NASDAQ\". (String)",
      "industry": "The primary industry classification of the company, typically using NAICS or SIC nomenclature. Example: \"Technology\". (String)",
      "website": "The official corporate website URL of the company. Example: \"https://www.apple.com\". (String, URL)",
      "description": "A brief description of the company’s business model, product lines, or the context of the data point. Example: \"Apple Inc. designs, manufactures, and markets smartphones, personal computers, tablets, wearables, and accessories worldwide.\". (String)",
      "ceo": "The name of the Chief Executive Officer of the company. Example: \"Tim Cook\". (String)",
      "sector": "The broad sector classification for the company, often aligned with GICS sectors. Example: \"Information Technology\". (String)",
      "country": "The country where the company is headquartered or primarily operates, using the ISO 3166-1 alpha-2 code. Example: \"US\". (String)",
      "fullTimeEmployees": "The total number of full-time employees at the company. Example: 164000. (Number)",
      "phone": "The primary contact phone number for the company’s investor relations or corporate headquarters. Example: \"(408) 996-1010\". (String)",
      "address": "The registered address of the company’s corporate headquarters. Example: \"One Apple Park Way\". (String)",
      "city": "The city where the company’s headquarters is located. Example: \"Cupertino\". (String)",
      "state": "The state or region where the company’s headquarters is located. Example: \"CA\". (String)",
      "zip": "The postal or ZIP code for the company’s headquarters. Example: \"95014\". (String)",
      "dcfDiff": "The numeric difference between market price and DCF valuation. Example: 32.5. (Number)",
      "dcf": "The calculated Discounted Cash Flow (DCF) valuation for the company, representing the present value of projected cash flows. Example: 2500000000000. (Number)",
      "image": "A URL pointing to the company’s logo or representative image. Example: \"https://images.financialmodelingprep.com/symbol/AAPL.png\". (String, URL)",
      "ipoDate": "The date on which the company completed its Initial Public Offering (IPO). Example: \"2022-03-20\". (String, Date)",
      "defaultImage": "Boolean flag indicating whether the returned image is a default placeholder (true) or a custom company logo (false). Example: false. (Boolean)",
      "isEtf": "Boolean flag indicating if the security is an Exchange-Traded Fund (ETF). Example: false. (Boolean)",
      "isActivelyTrading": "Boolean flag indicating if the security is currently trading on the exchange. Example: true. (Boolean)",
      "isAdr": "Boolean flag indicating if the security is an American Depositary Receipt (ADR). Example: false. (Boolean)",
      "isFund": "Boolean flag indicating if the security is a mutual fund or other investment fund. Example: false. (Boolean)"
    }
  },
  {
    "name": "Exchange Variants API",
    "description": "Exchange Variants API provides a comprehensive view of all exchanges where a security is listed, returning extensive metadata including current market data (price, beta, average volume, market cap, last dividend, trading range, and changes), corporate identifiers (CIK, ISIN, CUSIP), company profile details (name, description, industry, website, CEO, sector, country, employee count, contact information, address), financial analysis metrics (DCF, DCF_DIFF), image URL, IPO date, and trading flags (isEtf, isActivelyTrading, isAdr, isFund). Category: market-data. Use cases include building portfolio dashboards that display global listings, enriching research databases with multi-exchange details, validating exchange venues in compliance systems, consolidating exchange-specific data in ETL pipelines, and powering analytics on cross-listed equities. Parameters: required: symbol (string). Response example fields include symbol, price, beta, volAvg, mktCap, lastDiv, range, changes, companyName, currency, cik, isin, cusip, exchange, exchangeShortName, industry, website, description, ceo, sector, country, fullTimeEmployees, phone, address, city, state, zip, dcfDiff, dcf, image, ipoDate, defaultImage, isEtf, isActivelyTrading, isAdr, isFund.",
    "category": "market-data",
    "use_cases": [
      "display all global exchange listings for a security in portfolio dashboards",
      "enrich security profiles with multi-exchange metadata for research platforms",
      "validate listing venues in compliance and regulatory workflows",
      "ETL processes consolidating exchange-specific details into data warehouses",
      "enable analytics on cross-listed equities for quantitative models"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "price": "The last traded price or intrinsic value of the security or asset. Example: 130.75. (Number)",
      "beta": "A measure of the stock's volatility relative to the overall market; beta > 1 indicates higher volatility. Example: 1.20. (Number)",
      "volAvg": "The average trading volume of the security over a predefined lookback period. Example: 95000000. (Number)",
      "mktCap": "The market capitalization of the company expressed in the reporting currency; equivalent to total shares outstanding multiplied by current share price. Example: 152173717000. (Number or String)",
      "lastDiv": "The most recent dividend amount paid per share. Example: 0.22. (Number)",
      "range": "The trading range (low–high) for the security during the trading session. Example: \"129.50–131.00\". (String)",
      "changes": "The absolute change in price or other metric relative to the previous period. Example: \"+1.25\". (String)",
      "companyName": "The registered legal name of the company. Example: \"Apple Inc.\". (String)",
      "currency": "The ISO 4217 three-letter currency code representing the trading currency of the security. Example: \"USD\" for US Dollars. (String)",
      "cik": "The Central Index Key, a unique nine-digit identifier assigned by the SEC to entities. Example: \"0001454889\". (String)",
      "isin": "The International Securities Identification Number, a 12-character alphanumeric code for identifying securities. Example: \"US0378331005\". (String)",
      "cusip": "The Committee on Uniform Securities Identification Procedures number, a unique 9-character identifier for U.S. securities. Example: \"037833100\". (String)",
      "exchange": "The abbreviated code or name of the exchange where the security is traded. Example: \"NASDAQ\". (String)",
      "exchangeShortName": "The shorthand or abbreviated name of the exchange where the security trades. Example: \"NASDAQ\". (String)",
      "industry": "The primary industry classification of the company, typically using NAICS or SIC nomenclature. Example: \"Technology\". (String)",
      "website": "The official corporate website URL of the company. Example: \"https://www.apple.com\". (String, URL)",
      "description": "A brief description of the company’s business model, product lines, or the context of the data point. Example: \"Apple Inc. designs, manufactures, and markets smartphones, personal computers, tablets, wearables, and accessories worldwide.\". (String)",
      "ceo": "The name of the Chief Executive Officer of the company. Example: \"Tim Cook\". (String)",
      "sector": "The broad sector classification for the company, often aligned with GICS sectors. Example: \"Information Technology\". (String)",
      "country": "The country where the company is headquartered or primarily operates, using the ISO 3166-1 alpha-2 code. Example: \"US\". (String)",
      "fullTimeEmployees": "The total number of full-time employees at the company. Example: 164000. (Number)",
      "phone": "The primary contact phone number for the company’s investor relations or corporate headquarters. Example: \"(408) 996-1010\". (String)",
      "address": "The registered address of the company’s corporate headquarters. Example: \"One Apple Park Way\". (String)",
      "city": "The city where the company’s headquarters is located. Example: \"Cupertino\". (String)",
      "state": "The state or region where the company’s headquarters is located. Example: \"CA\". (String)",
      "zip": "The postal or ZIP code for the company’s headquarters. Example: \"95014\". (String)",
      "dcfDiff": "The numeric difference between market price and DCF valuation. Example: 32.5. (Number)",
      "dcf": "The calculated Discounted Cash Flow (DCF) valuation for the company, representing the present value of projected cash flows. Example: 2500000000000. (Number)",
      "image": "A URL pointing to the company’s logo or representative image. Example: \"https://images.financialmodelingprep.com/symbol/AAPL.png\". (String, URL)",
      "ipoDate": "The date on which the company completed its Initial Public Offering (IPO). Example: \"2022-03-20\". (String, Date)",
      "defaultImage": "Boolean flag indicating whether the returned image is a default placeholder (true) or a custom company logo (false). Example: false. (Boolean)",
      "isEtf": "Boolean flag indicating if the security is an Exchange-Traded Fund (ETF). Example: false. (Boolean)",
      "isActivelyTrading": "Boolean flag indicating if the security is currently trading on the exchange. Example: true. (Boolean)",
      "isAdr": "Boolean flag indicating if the security is an American Depositary Receipt (ADR). Example: false. (Boolean)",
      "isFund": "Boolean flag indicating if the security is a mutual fund or other investment fund. Example: false. (Boolean)"
    }
  },
  {
    "name": "Company Symbols List API",
    "description": "Company Symbols List API returns a comprehensive directory of tradable symbols and associated company names across global exchanges. Category: reference. Use cases include populating symbol directories for trading platforms, synchronizing local equity databases with a master list, driving autocomplete lists in front-end applications, enabling bulk imports of available securities for data analysis, and ensuring coverage of all active listings in portfolio management systems. Parameters: none. Response example fields: symbol (string), companyName (string).",
    "category": "reference",
    "use_cases": [
      "populate symbol directories for trading platforms",
      "synchronize local equity databases with a master list",
      "drive autocomplete lists in front-end applications",
      "enable bulk imports of available securities for data analysis",
      "ensure coverage of all active listings in portfolio management systems"
    ],
    "parameters": {
      "required": {},
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "companyName": "The registered legal name of the company. Example: \"Apple Inc.\". (String)"
    }
  },
  {
    "name": "Company Symbols List API",
    "description": "Company Symbols List API provides a full listing of equity and instrument symbols along with their company names, enabling developers to retrieve the entire universe of tradable securities. Category: reference. Use cases cover building master symbol tables for ETL pipelines, driving drop-down selections in trading applications, validating symbol existence before order placement, feeding data warehouses with up-to-date symbol inventories, and supporting backtesting frameworks with a complete list of securities. Parameters: none. Response example fields: symbol (string), companyName (string).",
    "category": "reference",
    "use_cases": [
      "build master symbol tables for ETL pipelines",
      "drive drop-down selections in trading applications",
      "validate symbol existence before order placement",
      "feed data warehouses with up-to-date symbol inventories",
      "support backtesting frameworks with a complete list of securities"
    ],
    "parameters": {
      "required": {},
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "companyName": "The registered legal name of the company. Example: \"Apple Inc.\". (String)"
    }
  },
  {
    "name": "Financial Statement Symbols List API",
    "description": "Financial Statement Symbols List API returns a catalog of symbols and company names for entities with available financial statements, along with their trading and reporting currencies. Category: reference. Use cases include identifying companies for financial analysis, populating data pipelines with symbols that have accessible balance sheets, income statements, and cash flow data, driving screening tools that filter by reporting currency, supporting regulatory reporting workflows, and enabling ETL jobs to target entities with full financial disclosures. Parameters: none. Response example fields: symbol (string), companyName (string), tradingCurrency (string), reportingCurrency (string).",
    "category": "reference",
    "use_cases": [
      "identify companies for financial analysis",
      "populate data pipelines with symbols that have accessible financial statements",
      "drive screening tools that filter by reporting currency",
      "support regulatory reporting workflows",
      "enable ETL jobs to target entities with full financial disclosures"
    ],
    "parameters": {
      "required": {},
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "companyName": "The registered legal name of the company. Example: \"Apple Inc.\". (String)",
      "tradingCurrency": "The currency code used for real-time trading of the security. Example: \"USD\". (String)",
      "reportingCurrency": "The currency in which the company reports its financials. Example: \"USD\". (String)"
    }
  },
  {
    "name": "Financial Statement Symbols List API",
    "description": "Financial Statement Symbols List API provides a detailed list of companies for which income statements, balance sheets, and cash flow statements are available, including trading and reporting currency information. Category: reference. Use cases include streaming symbol lists into analytics platforms for ratio calculations, automating financial data ingestion for modeling, filtering companies by reporting currency for regional studies, maintaining compliance by ensuring coverage of all entities with public filings, and powering dashboards that track financial coverage. Parameters: none. Response example fields: symbol (string), companyName (string), tradingCurrency (string), reportingCurrency (string).",
    "category": "reference",
    "use_cases": [
      "stream symbol lists into analytics platforms for ratio calculations",
      "automate financial data ingestion for modeling",
      "filter companies by reporting currency for regional studies",
      "maintain compliance by ensuring coverage of all entities with public filings",
      "power dashboards that track financial coverage"
    ],
    "parameters": {
      "required": {},
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "companyName": "The registered legal name of the company. Example: \"Apple Inc.\". (String)",
      "tradingCurrency": "The currency code used for real-time trading of the security. Example: \"USD\". (String)",
      "reportingCurrency": "The currency in which the company reports its financials. Example: \"USD\". (String)"
    }
  },
  {
    "name": "CIK List API",
    "description": "CIK List API provides a directory of Central Index Key (CIK) numbers and corresponding company names for SEC-registered entities. Category: reference. Use cases include creating lookup tables for automated SEC filing retrieval, populating compliance databases with valid CIK values, merging market data with regulatory identifiers, driving risk-management tools that verify entity registration, and enabling ETL processes to enrich company records with CIK information. Parameters: required: limit (number). Response example fields: cik (string), companyName (string).",
    "category": "reference",
    "use_cases": [
      "create lookup tables for automated SEC filing retrieval",
      "populate compliance databases with valid CIK values",
      "merge market data with regulatory identifiers",
      "drive risk-management tools that verify entity registration",
      "enable ETL processes to enrich company records with CIK information"
    ],
    "parameters": {
      "required": {
        "limit": "An integer cap on the number of results returned by the endpoint. Example: 50 to restrict output to the top 50 matches. Must be ≥1 and ≤1000. (Integer, optional; defaults to 100)"
      },
      "optional": {}
    },
    "response_example": {
      "cik": "The Central Index Key, a unique nine-digit identifier assigned by the SEC to entities. Example: \"0001454889\". (String)",
      "companyName": "The registered legal name of the company. Example: \"Apple Inc.\". (String)"
    }
  },
  {
    "name": "CIK List API",
    "description": "CIK List API returns a complete set of CIK identifiers paired with company names for all entities registered with the SEC, supporting scalable retrieval of regulatory keys. Category: reference. Use cases include bulk ingestion of CIK data for financial databases, verifying CIK consistency in compliance audits, automating match routines between equity tickers and CIK numbers, maintaining up-to-date CIK registries in risk surveillance systems, and powering dashboards that track entity registrations. Parameters: required: limit (number). Response example fields: cik (string), companyName (string).",
    "category": "reference",
    "use_cases": [
      "bulk ingestion of CIK data for financial databases",
      "verify CIK consistency in compliance audits",
      "automate match routines between equity tickers and CIK numbers",
      "maintain up-to-date CIK registries in risk surveillance systems",
      "power dashboards that track entity registrations"
    ],
    "parameters": {
      "required": {
        "limit": "An integer cap on the number of results returned by the endpoint. Example: 50 to restrict output to the top 50 matches. Must be ≥1 and ≤1000. (Integer, optional; defaults to 100)"
      },
      "optional": {}
    },
    "response_example": {
      "cik": "The Central Index Key, a unique nine-digit identifier assigned by the SEC to entities. Example: \"0001454889\". (String)",
      "companyName": "The registered legal name of the company. Example: \"Apple Inc.\". (String)"
    }
  },
  {
    "name": "Symbol Changes List API",
    "description": "Symbol Changes List API provides a chronological list of stock symbol changes—such as ticker renames, mergers, acquisitions, and stock splits—along with associated company names and change dates. Category: reference. Use cases include updating symbol-to-company mappings in databases, tracking ticker history for historical data analysis, alerting systems when companies change their trading symbols, maintaining audit trails for corporate actions, and driving ETL jobs that reconcile old and new symbols in time-series data. Parameters: required: invalid (string), limit (number). Response example fields: date (string), companyName (string), oldSymbol (string), newSymbol (string).",
    "category": "reference",
    "use_cases": [
      "update symbol-to-company mappings in databases",
      "track ticker history for historical data analysis",
      "trigger alerts when companies change their trading symbols",
      "maintain audit trails for corporate actions",
      "drive ETL jobs that reconcile old and new symbols in time-series data"
    ],
    "parameters": {
      "required": {
        "invalid": "A Boolean flag indicating whether to include records marked invalid or erroneous. Example: true to return entries flagged as invalid. (Boolean, optional)",
        "limit": "An integer cap on the number of results returned by the endpoint. Example: 50 to restrict output to the top 50 matches. Must be ≥1 and ≤1000. (Integer, optional; defaults to 100)"
      },
      "optional": {}
    },
    "response_example": {
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "companyName": "The registered legal name of the company. Example: \"Apple Inc.\". (String)",
      "oldSymbol": "The previous ticker symbol before a corporate action such as merger or reclassification. Example: \"GOOG\". (String)",
      "newSymbol": "The updated ticker symbol after a corporate action. Example: \"GOOGL\". (String)"
    }
  },
  {
    "name": "Symbol Changes List API",
    "description": "Symbol Changes List API delivers a full record of ticker symbol transitions, including effective dates and corporate context, to ensure systems remain aligned with current trading identifiers. Category: reference. Use cases cover automated reconciliation of historical datasets when tickers are updated, enriching backtesting frameworks with accurate symbol change timelines, ensuring portfolio systems reflect current company symbols post-merger or split, integrating with compliance modules to validate corporate actions, and enabling data ingestion processes to map legacy symbols to new ones. Parameters: required: invalid (string), limit (number). Response example fields: date (string), companyName (string), oldSymbol (string), newSymbol (string).",
    "category": "reference",
    "use_cases": [
      "automated reconciliation of historical datasets when tickers are updated",
      "enrich backtesting frameworks with accurate symbol change timelines",
      "ensure portfolio systems reflect current company symbols post-merger or split",
      "integrate with compliance modules to validate corporate actions",
      "enable data ingestion processes to map legacy symbols to new ones"
    ],
    "parameters": {
      "required": {
        "invalid": "A Boolean flag indicating whether to include records marked invalid or erroneous. Example: true to return entries flagged as invalid. (Boolean, optional)",
        "limit": "An integer cap on the number of results returned by the endpoint. Example: 50 to restrict output to the top 50 matches. Must be ≥1 and ≤1000. (Integer, optional; defaults to 100)"
      },
      "optional": {}
    },
    "response_example": {
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "companyName": "The registered legal name of the company. Example: \"Apple Inc.\". (String)",
      "oldSymbol": "The previous ticker symbol before a corporate action such as merger or reclassification. Example: \"GOOG\". (String)",
      "newSymbol": "The updated ticker symbol after a corporate action. Example: \"GOOGL\". (String)"
    }
  },
  {
    "name": "ETF Symbol Search API",
    "description": "ETF Symbol Search API returns a list of ETF tickers and associated fund names, enabling users to discover exchange-traded funds by symbol or partial name match. Category: reference. Use cases include populating ETF selection lists in robo-advisor platforms, enabling search functionality in fund research tools, automating portfolio rebalancing that includes ETF instruments, driving ETL pipelines that ingest ETF universes for modeling, and supporting dashboards that track fund availability. Parameters: none. Response example fields: symbol (string), name (string).",
    "category": "reference",
    "use_cases": [
      "populate ETF selection lists in robo-advisor platforms",
      "enable search functionality in fund research tools",
      "automate portfolio rebalancing that includes ETF instruments",
      "drive ETL pipelines that ingest ETF universes for modeling",
      "support dashboards that track fund availability"
    ],
    "parameters": {
      "required": {},
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "name": "The full legal or common name of the company. Example: \"Apple Inc.\" (String)"
    }
  },
  {
    "name": "ETF Symbol Search API",
    "description": "ETF Symbol Search API provides an index of all exchange-traded fund symbols and fund names, allowing quick identification of ETFs by ticker or name. Category: reference. Use cases include building ETF lookup tables for financial applications, driving real-time autocomplete for fund selection in trading UIs, synchronizing ETF listings in data warehouses, enabling research workflows that filter by ETF name patterns, and ensuring coverage of all active ETF instruments in portfolio analytics. Parameters: none. Response example fields: symbol (string), name (string).",
    "category": "reference",
    "use_cases": [
      "build ETF lookup tables for financial applications",
      "drive real-time autocomplete for fund selection in trading UIs",
      "synchronize ETF listings in data warehouses",
      "enable research workflows that filter by ETF name patterns",
      "ensure coverage of all active ETF instruments in portfolio analytics"
    ],
    "parameters": {
      "required": {},
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "name": "The full legal or common name of the company. Example: \"Apple Inc.\" (String)"
    }
  },
  {
    "name": "Actively Trading List API",
    "description": "Actively Trading List API returns a list of symbols and company names for all securities currently trading on public exchanges, ensuring real-time coverage of market activity. Category: reference. Use cases include generating watchlists of actively traded securities, fueling market data dashboards with live listings, driving ETL processes that focus only on instruments with current trading volume, powering algorithmic strategies that require active ticker universes, and maintaining compliance systems with up-to-date trading lists. Parameters: none. Response example fields: symbol (string), name (string).",
    "category": "reference",
    "use_cases": [
      "generate watchlists of actively traded securities",
      "fuel market data dashboards with live listings",
      "drive ETL processes that focus only on instruments with current trading volume",
      "power algorithmic strategies that require active ticker universes",
      "maintain compliance systems with up-to-date trading lists"
    ],
    "parameters": {
      "required": {},
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "name": "The full legal or common name of the company. Example: \"Apple Inc.\" (String)"
    }
  },
  {
    "name": "Actively Trading List API",
    "description": "Actively Trading List API provides an up-to-the-minute directory of all symbols and their corresponding names that are trading on exchanges, enabling applications to filter out inactive listings. Category: reference. Use cases include driving live trading filters for portfolio managers, building real-time trading screens for front-end platforms, synchronizing active ticker universes in data platforms, triggering alerts when new symbols begin or cease trading, and supporting backtesting frameworks that exclude inactive securities. Parameters: none. Response example fields: symbol (string), name (string).",
    "category": "reference",
    "use_cases": [
      "drive live trading filters for portfolio managers",
      "build real-time trading screens for front-end platforms",
      "synchronize active ticker universes in data platforms",
      "trigger alerts when new symbols begin or cease trading",
      "support backtesting frameworks that exclude inactive securities"
    ],
    "parameters": {
      "required": {},
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "name": "The full legal or common name of the company. Example: \"Apple Inc.\" (String)"
    }
  },
  {
    "name": "Earnings Transcript List API",
    "description": "Earnings Transcript List API returns a list of company symbols, names, and the number of available earnings call transcripts, enabling applications to identify companies with accessible transcript archives. Category: reference. Use cases include populating transcript libraries for financial research tools, driving search functionality for earnings call content, enabling alert systems when new transcripts become available, integrating transcript counts into corporate analytics dashboards, and powering ETL workflows that ingest textual data for sentiment analysis. Parameters: none. Response example fields: symbol (string), companyName (string), noOfTranscripts (string).",
    "category": "reference",
    "use_cases": [
      "populate transcript libraries for financial research tools",
      "drive search functionality for earnings call content",
      "enable alert systems when new transcripts become available",
      "integrate transcript counts into corporate analytics dashboards",
      "power ETL workflows that ingest textual data for sentiment analysis"
    ],
    "parameters": {
      "required": {},
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "companyName": "The registered legal name of the company. Example: \"Apple Inc.\". (String)",
      "noOfTranscripts": "The count of earnings call or other transcripts available for the security. Example: 12. (Number)"
    }
  },
  {
    "name": "Earnings Transcript List API",
    "description": "Earnings Transcript List API provides a comprehensive directory of companies with available earnings call transcripts, along with the total count of transcripts for each entity. Category: reference. Use cases include automating transcript availability checks in research platforms, building transcript-focused dashboards for analysts, driving ETL jobs that ingest transcript metadata for NLP pipelines, alerting users when new transcript batches are added, and maintaining compliance archives of corporate communications. Parameters: none. Response example fields: symbol (string), companyName (string), noOfTranscripts (string).",
    "category": "reference",
    "use_cases": [
      "automate transcript availability checks in research platforms",
      "build transcript-focused dashboards for analysts",
      "drive ETL jobs that ingest transcript metadata for NLP pipelines",
      "alert users when new transcript batches are added",
      "maintain compliance archives of corporate communications"
    ],
    "parameters": {
      "required": {},
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "companyName": "The registered legal name of the company. Example: \"Apple Inc.\". (String)",
      "noOfTranscripts": "The count of earnings call or other transcripts available for the security. Example: 12. (Number)"
    }
  },
  {
    "name": "Available Exchanges API",
    "description": "Available Exchanges API returns a comprehensive list of all stock exchanges supported by the platform, enabling users to identify where securities are traded globally. Category: reference. Use cases include populating exchange dropdowns in trading applications, filtering market data by exchange, validating exchange codes in order-entry systems, driving ETL pipelines that segment data by trading venue, and enriching research workflows with exchange-level context. Parameters: none. Response example fields: exchange (string).",
    "category": "reference",
    "use_cases": [
      "populate exchange dropdowns in trading applications",
      "filter market data by exchange",
      "validate exchange codes in order-entry systems",
      "drive ETL pipelines that segment data by trading venue",
      "enrich research workflows with exchange-level context"
    ],
    "parameters": {
      "required": {},
      "optional": {}
    },
    "response_example": {
      "exchange": "The abbreviated code or name of the exchange where the security is traded. Example: \"NASDAQ\". (String)"
    }
  },
  {
    "name": "Available Exchanges API",
    "description": "Available Exchanges API provides a master list of global stock exchanges, allowing developers to retrieve all supported trading venues and their codes. Category: reference. Use cases include building exchange lookup services for portfolio management tools, synchronizing local exchange metadata with the platform’s list, driving compliance checks that require valid exchange identifiers, integrating with data warehouses for exchange-based partitioning, and enabling analytics dashboards to segment metrics by exchange. Parameters: none. Response example fields: exchange (string).",
    "category": "reference",
    "use_cases": [
      "build exchange lookup services for portfolio management tools",
      "synchronize local exchange metadata with the platform’s list",
      "drive compliance checks that require valid exchange identifiers",
      "integrate with data warehouses for exchange-based partitioning",
      "enable analytics dashboards to segment metrics by exchange"
    ],
    "parameters": {
      "required": {},
      "optional": {}
    },
    "response_example": {
      "exchange": "The abbreviated code or name of the exchange where the security is traded. Example: \"NASDAQ\". (String)"
    }
  },
  {
    "name": "Available Sectors API",
    "description": "Available Sectors API returns a full list of industry sectors in which companies are categorized, enabling users to filter and analyze securities by sector. Category: reference. Use cases include populating sector filters in screening tools, driving sector-based portfolio allocations, validating sector inputs in data-entry forms, integrating sector lists into ETL pipelines for industry-level aggregation, and enriching research workflows with sector classification. Parameters: none. Response example fields: sector (string).",
    "category": "reference",
    "use_cases": [
      "populate sector filters in screening tools",
      "drive sector-based portfolio allocations",
      "validate sector inputs in data-entry forms",
      "integrate sector lists into ETL pipelines for industry-level aggregation",
      "enrich research workflows with sector classification"
    ],
    "parameters": {
      "required": {},
      "optional": {}
    },
    "response_example": {
      "sector": "The broad sector classification for the company, often aligned with GICS sectors. Example: \"Information Technology\". (String)"
    }
  },
  {
    "name": "Available Sectors API",
    "description": "Available Sectors API provides a registry of all industry sectors, allowing developers to retrieve valid sector names for categorizing equities and industry analysis. Category: reference. Use cases include building industry classification modules for research platforms, synchronizing sector metadata in data warehouses, powering UI dropdowns for sector selection, validating sector codes in compliance and reporting tools, and enabling analytics dashboards to aggregate performance by sector. Parameters: none. Response example fields: sector (string).",
    "category": "reference",
    "use_cases": [
      "build industry classification modules for research platforms",
      "synchronize sector metadata in data warehouses",
      "power UI dropdowns for sector selection",
      "validate sector codes in compliance and reporting tools",
      "enable analytics dashboards to aggregate performance by sector"
    ],
    "parameters": {
      "required": {},
      "optional": {}
    },
    "response_example": {
      "sector": "The broad sector classification for the company, often aligned with GICS sectors. Example: \"Information Technology\". (String)"
    }
  },
  {
    "name": "Available Industries API",
    "description": "Available Industries API returns a complete list of industries where stock symbols are available, enabling users to filter and categorize companies based on specific industry segments. Category: reference. Use cases include populating industry filters in stock screeners, driving ETL workflows that segment data by industry, validating industry inputs in data-entry systems, synchronizing local industry metadata with the platform, and enriching research workflows with industry-level insights. Parameters: none. Response example fields: industry (string).",
    "category": "reference",
    "use_cases": [
      "populate industry filters in stock screeners",
      "drive ETL workflows that segment data by industry",
      "validate industry inputs in data-entry systems",
      "synchronize local industry metadata with the platform",
      "enrich research workflows with industry-level insights"
    ],
    "parameters": {
      "required": {},
      "optional": {}
    },
    "response_example": {
      "industry": "The primary industry classification of the company, typically using NAICS or SIC nomenclature. Example: \"Technology\". (String)"
    }
  },
  {
    "name": "Available Industries API",
    "description": "Available Industries API provides a detailed registry of all industry names, allowing developers to retrieve valid industry classifications for equities. Category: reference. Use cases include building industry mapping tables for analytics platforms, synchronizing industry metadata in data warehouses, powering UI components for industry selection, validating industry fields in compliance and reporting modules, and enabling dashboards to aggregate metrics by industry. Parameters: none. Response example fields: industry (string).",
    "category": "reference",
    "use_cases": [
      "build industry mapping tables for analytics platforms",
      "synchronize industry metadata in data warehouses",
      "power UI components for industry selection",
      "validate industry fields in compliance and reporting modules",
      "enable dashboards to aggregate metrics by industry"
    ],
    "parameters": {
      "required": {},
      "optional": {}
    },
    "response_example": {
      "industry": "The primary industry classification of the company, typically using NAICS or SIC nomenclature. Example: \"Technology\". (String)"
    }
  },
  {
    "name": "Available Countries API",
    "description": "Available Countries API returns a list of country codes where stock symbols are available, enabling users to filter and analyze securities by geographic region. Category: reference. Use cases include populating country filters in screening tools, driving ETL pipelines that segment data by country, validating country inputs in data-entry forms, synchronizing local country metadata with the platform, and enriching research workflows with country-level context. Parameters: none. Response example fields: country (string).",
    "category": "reference",
    "use_cases": [
      "populate country filters in screening tools",
      "drive ETL pipelines that segment data by country",
      "validate country inputs in data-entry forms",
      "synchronize local country metadata with the platform",
      "enrich research workflows with country-level context"
    ],
    "parameters": {
      "required": {},
      "optional": {}
    },
    "response_example": {
      "country": "The country where the company is headquartered or primarily operates, using the ISO 3166-1 alpha-2 code. Example: \"US\". (String)"
    }
  },
  {
    "name": "Available Countries API",
    "description": "Available Countries API provides a master list of all country codes associated with tradable securities, allowing developers to retrieve valid country identifiers for equities. Category: reference. Use cases include building geographic filtering modules for portfolio tools, synchronizing country metadata in data warehouses, powering UI dropdowns for country selection, validating country codes in compliance and reporting systems, and enabling analytics dashboards to aggregate performance by country. Parameters: none. Response example fields: country (string).",
    "category": "reference",
    "use_cases": [
      "build geographic filtering modules for portfolio tools",
      "synchronize country metadata in data warehouses",
      "power UI dropdowns for country selection",
      "validate country codes in compliance and reporting systems",
      "enable analytics dashboards to aggregate performance by country"
    ],
    "parameters": {
      "required": {},
      "optional": {}
    },
    "response_example": {
      "country": "The country where the company is headquartered or primarily operates, using the ISO 3166-1 alpha-2 code. Example: \"US\". (String)"
    }
  },
  {
    "name": "Stock Chart Light API",
    "description": "Stock Chart Light API returns essential end-of-day data—date, price, and trading volume—for a specified stock symbol over a given date range. Category: market-data. Use cases include building lightweight price/volume charts for mobile or low-bandwidth clients, performing quick trend analysis with minimal payload, integrating simplified historical data into dashboards, validating date-based price movements, and populating sparklines in UI components. Parameters: required: symbol (string); optional: from (date), to (date). Response example fields: symbol (string), date (string, YYYY-MM-DD), price (number), volume (number).",
    "category": "market-data",
    "use_cases": [
      "build lightweight price/volume charts for mobile or low-bandwidth clients",
      "perform quick trend analysis with minimal payload",
      "integrate simplified historical data into dashboards",
      "validate date-based price movements",
      "populate sparklines in UI components"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {
        "from": "The ISO 8601 date (YYYY-MM-DD) indicating the start of a time range filter. Example: \"2025-01-01\" to include only data from January 1, 2025 onward. Must be ≤ `to`. (String, Date, optional)",
        "to": "The ISO 8601 date (YYYY-MM-DD) indicating the end of a time range filter. Example: \"2025-12-31\" to include only data up to December 31, 2025. Must be ≥ `from`. (String, Date, optional)"
      }
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "price": "The last traded price or intrinsic value of the security or asset. Example: 130.75. (Number)",
      "volume": "The total number of shares or contracts traded during a given period (typically daily). Example: 105000000. (Number)"
    }
  },
  {
    "name": "Stock Chart Light API",
    "description": "Stock Chart Light API provides a streamlined dataset of daily price and volume for a given ticker within a date window, making it ideal for quick chart rendering and preliminary analysis. Category: market-data. Use cases include populating basic price/volume graphs in web apps, driving low-latency data feeds for dashboards, performing rapid backtesting subsampling, enabling performance monitoring with minimal overhead, and validating historical data pipelines. Parameters: required: symbol (string); optional: from (date), to (date). Response example fields: symbol (string), date (string, YYYY-MM-DD), price (number), volume (number).",
    "category": "market-data",
    "use_cases": [
      "populate basic price/volume graphs in web apps",
      "drive low-latency data feeds for dashboards",
      "perform rapid backtesting subsampling",
      "enable performance monitoring with minimal overhead",
      "validate historical data pipelines"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {
        "from": "The ISO 8601 date (YYYY-MM-DD) indicating the start of a time range filter. Example: \"2025-01-01\" to include only data from January 1, 2025 onward. Must be ≤ `to`. (String, Date, optional)",
        "to": "The ISO 8601 date (YYYY-MM-DD) indicating the end of a time range filter. Example: \"2025-12-31\" to include only data up to December 31, 2025. Must be ≥ `from`. (String, Date, optional)"
      }
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "price": "The last traded price or intrinsic value of the security or asset. Example: 130.75. (Number)",
      "volume": "The total number of shares or contracts traded during a given period (typically daily). Example: 105000000. (Number)"
    }
  },
  {
    "name": "Stock Price and Volume Data API",
    "description": "Stock Price and Volume Data API delivers comprehensive end-of-day metrics—including open, high, low, close, volume, price change, percent change, and VWAP—for a specified symbol over a date range. Category: market-data. Use cases include feeding detailed historical datasets into quantitative models, generating candlestick or OHLC charts, performing volatility analysis with full price range, integrating volume-weighted price calculations into reports, and driving trading strategy backtests. Parameters: required: symbol (string); optional: from (date), to (date). Response example fields: symbol (string), date (string, YYYY-MM-DD), open (number), high (number), low (number), close (number), volume (number), change (number), changePercent (number), vwap (number).",
    "category": "market-data",
    "use_cases": [
      "feed detailed historical datasets into quantitative models",
      "generate candlestick or OHLC charts",
      "perform volatility analysis with full price range",
      "integrate volume-weighted price calculations into reports",
      "drive trading strategy backtests"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {
        "from": "The ISO 8601 date (YYYY-MM-DD) indicating the start of a time range filter. Example: \"2025-01-01\" to include only data from January 1, 2025 onward. Must be ≤ `to`. (String, Date, optional)",
        "to": "The ISO 8601 date (YYYY-MM-DD) indicating the end of a time range filter. Example: \"2025-12-31\" to include only data up to December 31, 2025. Must be ≥ `from`. (String, Date, optional)"
      }
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "open": "The opening price of the security at the start of the trading session. Example: 130.00. (Number)",
      "high": "The highest intraday price recorded for the security. Example: 131.25. (Number)",
      "low": "The lowest intraday price recorded for the security. Example: 129.75. (Number)",
      "close": "The closing price of the security at the end of the trading session. Example: 130.75. (Number)",
      "volume": "The total number of shares or contracts traded during a given period (typically daily). Example: 105000000. (Number)",
      "change": "The absolute change in price or value compared to the previous close. Example: \"+1.25\". (String)",
      "changePercent": "The percentage change in value over a specified period, such as daily or yearly. Example: 2.5. (Number, Percentage)",
      "vwap": "The Volume-Weighted Average Price, representing the average price at which the security traded weighted by volume. Example: 130.82. (Number)"
    }
  },
  {
    "name": "Stock Price and Volume Data API",
    "description": "Stock Price and Volume Data API provides full OHLC and volume information, along with daily change metrics and VWAP, for any equity over a specified period. Category: market-data. Use cases include sourcing rich historical price series for research, powering interactive charting libraries, conducting return and performance attribution analysis, validating algorithmic trading signals, and populating financial dashboards with detailed price movements. Parameters: required: symbol (string); optional: from (date), to (date). Response example fields: symbol (string), date (string, YYYY-MM-DD), open (number), high (number), low (number), close (number), volume (number), change (number), changePercent (number), vwap (number).",
    "category": "market-data",
    "use_cases": [
      "source rich historical price series for research",
      "power interactive charting libraries",
      "conduct return and performance attribution analysis",
      "validate algorithmic trading signals",
      "populate financial dashboards with detailed price movements"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {
        "from": "The ISO 8601 date (YYYY-MM-DD) indicating the start of a time range filter. Example: \"2025-01-01\" to include only data from January 1, 2025 onward. Must be ≤ `to`. (String, Date, optional)",
        "to": "The ISO 8601 date (YYYY-MM-DD) indicating the end of a time range filter. Example: \"2025-12-31\" to include only data up to December 31, 2025. Must be ≥ `from`. (String, Date, optional)"
      }
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "open": "The opening price of the security at the start of the trading session. Example: 130.00. (Number)",
      "high": "The highest intraday price recorded for the security. Example: 131.25. (Number)",
      "low": "The lowest intraday price recorded for the security. Example: 129.75. (Number)",
      "close": "The closing price of the security at the end of the trading session. Example: 130.75. (Number)",
      "volume": "The total number of shares or contracts traded during a given period (typically daily). Example: 105000000. (Number)",
      "change": "The absolute change in price or value compared to the previous close. Example: \"+1.25\". (String)",
      "changePercent": "The percentage change in value over a specified period, such as daily or yearly. Example: 2.5. (Number, Percentage)",
      "vwap": "The Volume-Weighted Average Price, representing the average price at which the security traded weighted by volume. Example: 130.82. (Number)"
    }
  },
  {
    "name": "Unadjusted Stock Price API",
    "description": "Unadjusted Stock Price API returns historical price and volume data without adjusting for corporate actions like stock splits or dividends. Fields include adjusted open, high, low, close, and volume. Category: market-data. Use cases include preserving raw price history for backtesting that accounts for splits, validating corporate action adjustments, performing event-driven analysis with unmodified price levels, integrating unadjusted data into ETL pipelines for archival, and comparing adjusted vs. unadjusted series in research. Parameters: required: symbol (string); optional: from (date), to (date). Response example fields: symbol (string), date (string, YYYY-MM-DD), adjOpen (number), adjHigh (number), adjLow (number), adjClose (number), volume (number).",
    "category": "market-data",
    "use_cases": [
      "preserve raw price history for backtesting that accounts for splits",
      "validate corporate action adjustments",
      "perform event-driven analysis with unmodified price levels",
      "integrate unadjusted data into ETL pipelines for archival",
      "compare adjusted vs. unadjusted series in research"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {
        "from": "The ISO 8601 date (YYYY-MM-DD) indicating the start of a time range filter. Example: \"2025-01-01\" to include only data from January 1, 2025 onward. Must be ≤ `to`. (String, Date, optional)",
        "to": "The ISO 8601 date (YYYY-MM-DD) indicating the end of a time range filter. Example: \"2025-12-31\" to include only data up to December 31, 2025. Must be ≥ `from`. (String, Date, optional)"
      }
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "adjOpen": "The adjusted opening price of the security, accounting for corporate actions like splits. Example: 129.50. (Number)",
      "adjHigh": "The adjusted intraday high price after accounting for corporate actions. Example: 130.75. (Number)",
      "adjLow": "The adjusted intraday low price after accounting for corporate actions. Example: 128.90. (Number)",
      "adjClose": "The adjusted closing price, accounting for dividends, splits, and other actions. Example: 130.00. (Number)",
      "volume": "The total number of shares or contracts traded during a given period (typically daily). Example: 105000000. (Number)"
    }
  },
  {
    "name": "Unadjusted Stock Price API",
    "description": "Unadjusted Stock Price API provides historical end-of-day price data without split or dividend adjustments, delivering true open, high, low, close, and volume values. Category: market-data. Use cases include reconstructing the exact price series for quantitative strategies, auditing data integrity for corporate actions, building comparative analyses between adjusted and unadjusted data, supplying raw data to compliance audits, and populating legacy systems that expect unmodified values. Parameters: required: symbol (string); optional: from (date), to (date). Response example fields: symbol (string), date (string, YYYY-MM-DD), adjOpen (number), adjHigh (number), adjLow (number), adjClose (number), volume (number).",
    "category": "market-data",
    "use_cases": [
      "reconstruct the exact price series for quantitative strategies",
      "audit data integrity for corporate actions",
      "build comparative analyses between adjusted and unadjusted data",
      "supply raw data to compliance audits",
      "populate legacy systems that expect unmodified values"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {
        "from": "The ISO 8601 date (YYYY-MM-DD) indicating the start of a time range filter. Example: \"2025-01-01\" to include only data from January 1, 2025 onward. Must be ≤ `to`. (String, Date, optional)",
        "to": "The ISO 8601 date (YYYY-MM-DD) indicating the end of a time range filter. Example: \"2025-12-31\" to include only data up to December 31, 2025. Must be ≥ `from`. (String, Date, optional)"
      }
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "adjOpen": "The adjusted opening price of the security, accounting for corporate actions like splits. Example: 129.50. (Number)",
      "adjHigh": "The adjusted intraday high price after accounting for corporate actions. Example: 130.75. (Number)",
      "adjLow": "The adjusted intraday low price after accounting for corporate actions. Example: 128.90. (Number)",
      "adjClose": "The adjusted closing price, accounting for dividends, splits, and other actions. Example: 130.00. (Number)",
      "volume": "The total number of shares or contracts traded during a given period (typically daily). Example: 105000000. (Number)"
    }
  },
  {
    "name": "Dividend Adjusted Price Chart API",
    "description": "Dividend Adjusted Price Chart API returns end-of-day price and volume data adjusted for dividend payouts, ensuring the continuity of price series. Fields include adjusted open, high, low, close, and volume. Category: market-data. Use cases include tracking total returns over time, calculating accurate performance metrics for dividend-paying stocks, populating adjusted price charts for reporting, driving backtests that reflect dividend reinvestment, and integrating adjusted data into portfolio analytics. Parameters: required: symbol (string); optional: from (date), to (date). Response example fields: symbol (string), date (string, YYYY-MM-DD), adjOpen (number), adjHigh (number), adjLow (number), adjClose (number), volume (number).",
    "category": "market-data",
    "use_cases": [
      "track total returns over time for dividend-paying stocks",
      "calculate accurate performance metrics accounting for dividends",
      "populate adjusted price charts for reporting",
      "drive backtests that reflect dividend reinvestment",
      "integrate adjusted data into portfolio analytics"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {
        "from": "The ISO 8601 date (YYYY-MM-DD) indicating the start of a time range filter. Example: \"2025-01-01\" to include only data from January 1, 2025 onward. Must be ≤ `to`. (String, Date, optional)",
        "to": "The ISO 8601 date (YYYY-MM-DD) indicating the end of a time range filter. Example: \"2025-12-31\" to include only data up to December 31, 2025. Must be ≥ `from`. (String, Date, optional)"
      }
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "adjOpen": "The adjusted opening price of the security, accounting for corporate actions like splits. Example: 129.50. (Number)",
      "adjHigh": "The adjusted intraday high price after accounting for corporate actions. Example: 130.75. (Number)",
      "adjLow": "The adjusted intraday low price after accounting for corporate actions. Example: 128.90. (Number)",
      "adjClose": "The adjusted closing price, accounting for dividends, splits, and other actions. Example: 130.00. (Number)",
      "volume": "The total number of shares or contracts traded during a given period (typically daily). Example: 105000000. (Number)"
    }
  },
  {
    "name": "Dividend Adjusted Price Chart API",
    "description": "Dividend Adjusted Price Chart API provides daily price and volume values that reflect dividend adjustments, delivering a seamless price series for dividend-paying equities. Category: market-data. Use cases include building total return indices for dividend-paying equities, generating charts that account for dividend distributions, analyzing long-term performance with dividend reinvestment, supplying adjusted historical data for financial models, and supporting compliance with reporting standards on dividend impact. Parameters: required: symbol (string); optional: from (date), to (date). Response example fields: symbol (string), date (string, YYYY-MM-DD), adjOpen (number), adjHigh (number), adjLow (number), adjClose (number), volume (number).",
    "category": "market-data",
    "use_cases": [
      "build total return indices for dividend-paying equities",
      "generate charts that account for dividend distributions",
      "analyze long-term performance with dividend reinvestment",
      "supply adjusted historical data for financial models",
      "support compliance with reporting standards on dividend impact"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {
        "from": "The ISO 8601 date (YYYY-MM-DD) indicating the start of a time range filter. Example: \"2025-01-01\" to include only data from January 1, 2025 onward. Must be ≤ `to`. (String, Date, optional)",
        "to": "The ISO 8601 date (YYYY-MM-DD) indicating the end of a time range filter. Example: \"2025-12-31\" to include only data up to December 31, 2025. Must be ≥ `from`. (String, Date, optional)"
      }
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "adjOpen": "The adjusted opening price of the security, accounting for corporate actions like splits. Example: 129.50. (Number)",
      "adjHigh": "The adjusted intraday high price after accounting for corporate actions. Example: 130.75. (Number)",
      "adjLow": "The adjusted intraday low price after accounting for corporate actions. Example: 128.90. (Number)",
      "adjClose": "The adjusted closing price, accounting for dividends, splits, and other actions. Example: 130.00. (Number)",
      "volume": "The total number of shares or contracts traded during a given period (typically daily). Example: 105000000. (Number)"
    }
  },
  {
    "name": "1 Min Interval Stock Chart API",
    "description": "1 Min Interval Stock Chart API provides precise intraday end-of-day data at one-minute granularity, including timestamp, open, high, low, close prices, and trading volume for each minute. Category: market-data. Use cases include building high-frequency intraday charts for active traders, powering algorithmic trading signals that require one-minute resolution, monitoring real-time price action for scalping strategies, performing minute-level backtesting of trading models, and feeding intraday analytics dashboards with fine-grained data. Parameters: required: symbol (string); optional: from (date), to (date), nonadjusted (boolean). Response example fields: date (string, YYYY-MM-DD HH:mm:ss), open (number), low (number), high (number), close (number), volume (number).",
    "category": "market-data",
    "use_cases": [
      "build high-frequency intraday charts for active traders",
      "power algorithmic trading signals that require one-minute resolution",
      "monitor real-time price action for scalping strategies",
      "perform minute-level backtesting of trading models",
      "feed intraday analytics dashboards with fine-grained data"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {
        "from": "The ISO 8601 date (YYYY-MM-DD) indicating the start of a time range filter. Example: \"2025-01-01\" to include only data from January 1, 2025 onward. Must be ≤ `to`. (String, Date, optional)",
        "to": "The ISO 8601 date (YYYY-MM-DD) indicating the end of a time range filter. Example: \"2025-12-31\" to include only data up to December 31, 2025. Must be ≥ `from`. (String, Date, optional)",
        "nonadjusted": "A Boolean flag indicating whether to return raw, non-adjusted values (e.g., pre-split prices or unadjusted dividends). Example: true to receive data without any corporate-action adjustments. (Boolean, optional)"
      }
    },
    "response_example": {
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "open": "The opening price of the security at the start of the trading session. Example: 130.00. (Number)",
      "low": "The lowest intraday price recorded for the security. Example: 129.75. (Number)",
      "high": "The highest intraday price recorded for the security. Example: 131.25. (Number)",
      "close": "The closing price of the security at the end of the trading session. Example: 130.75. (Number)",
      "volume": "The total number of shares or contracts traded during a given period (typically daily). Example: 105000000. (Number)"
    }
  },
  {
    "name": "1 Min Interval Stock Chart API",
    "description": "1 Min Interval Stock Chart API delivers one-minute interval price and volume data for a specified equity, capturing open, high, low, close, and volume for each minute. Category: market-data. Use cases include enabling real-time intraday monitoring tools, supporting microstructure analysis for quantitative researchers, generating lightning-fast charts for mobile trading apps, integrating minute-by-minute feeds into risk management systems, and validating price movements at fine resolution. Parameters: required: symbol (string); optional: from (date), to (date), nonadjusted (boolean). Response example fields: date (string, YYYY-MM-DD HH:mm:ss), open (number), low (number), high (number), close (number), volume (number).",
    "category": "market-data",
    "use_cases": [
      "enable real-time intraday monitoring tools",
      "support microstructure analysis for quantitative researchers",
      "generate lightning-fast charts for mobile trading apps",
      "integrate minute-by-minute feeds into risk management systems",
      "validate price movements at fine resolution"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {
        "from": "The ISO 8601 date (YYYY-MM-DD) indicating the start of a time range filter. Example: \"2025-01-01\" to include only data from January 1, 2025 onward. Must be ≤ `to`. (String, Date, optional)",
        "to": "The ISO 8601 date (YYYY-MM-DD) indicating the end of a time range filter. Example: \"2025-12-31\" to include only data up to December 31, 2025. Must be ≥ `from`. (String, Date, optional)",
        "nonadjusted": "A Boolean flag indicating whether to return raw, non-adjusted values (e.g., pre-split prices or unadjusted dividends). Example: true to receive data without any corporate-action adjustments. (Boolean, optional)"
      }
    },
    "response_example": {
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "open": "The opening price of the security at the start of the trading session. Example: 130.00. (Number)",
      "low": "The lowest intraday price recorded for the security. Example: 129.75. (Number)",
      "high": "The highest intraday price recorded for the security. Example: 131.25. (Number)",
      "close": "The closing price of the security at the end of the trading session. Example: 130.75. (Number)",
      "volume": "The total number of shares or contracts traded during a given period (typically daily). Example: 105000000. (Number)"
    }
  },
  {
    "name": "5 Min Interval Stock Chart API",
    "description": "5 Min Interval Stock Chart API returns intraday data at five-minute intervals, including timestamp, open, high, low, close prices, and trading volume for each period. Category: market-data. Use cases include constructing candlestick charts at five-minute resolution, supporting short-term trading strategies and swing-trading analysis, aggregating tick data into manageable bars, driving intraday dashboards for market-making desks, and validating mid-term intraday trends. Parameters: required: symbol (string); optional: from (date), to (date), nonadjusted (boolean). Response example fields: date (string, YYYY-MM-DD HH:mm:ss), open (number), low (number), high (number), close (number), volume (number).",
    "category": "market-data",
    "use_cases": [
      "construct candlestick charts at five-minute resolution",
      "support short-term trading strategies and swing-trading analysis",
      "aggregate tick data into manageable bars",
      "drive intraday dashboards for market-making desks",
      "validate mid-term intraday trends"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {
        "from": "The ISO 8601 date (YYYY-MM-DD) indicating the start of a time range filter. Example: \"2025-01-01\" to include only data from January 1, 2025 onward. Must be ≤ `to`. (String, Date, optional)",
        "to": "The ISO 8601 date (YYYY-MM-DD) indicating the end of a time range filter. Example: \"2025-12-31\" to include only data up to December 31, 2025. Must be ≥ `from`. (String, Date, optional)",
        "nonadjusted": "A Boolean flag indicating whether to return raw, non-adjusted values (e.g., pre-split prices or unadjusted dividends). Example: true to receive data without any corporate-action adjustments. (Boolean, optional)"
      }
    },
    "response_example": {
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "open": "The opening price of the security at the start of the trading session. Example: 130.00. (Number)",
      "low": "The lowest intraday price recorded for the security. Example: 129.75. (Number)",
      "high": "The highest intraday price recorded for the security. Example: 131.25. (Number)",
      "close": "The closing price of the security at the end of the trading session. Example: 130.75. (Number)",
      "volume": "The total number of shares or contracts traded during a given period (typically daily). Example: 105000000. (Number)"
    }
  },
  {
    "name": "5 Min Interval Stock Chart API",
    "description": "5 Min Interval Stock Chart API provides five-minute resolution price and volume details for a given stock, capturing open, high, low, close, and volume every five minutes. Category: market-data. Use cases include powering intraday charting tools for momentum traders, feeding data into time-weighted averaging algorithms, generating heatmaps of price change over five-minute blocks, integrating into algorithmic strategies that operate on five-minute signals, and monitoring execution quality for short-duration trades. Parameters: required: symbol (string); optional: from (date), to (date), nonadjusted (boolean). Response example fields: date (string, YYYY-MM-DD HH:mm:ss), open (number), low (number), high (number), close (number), volume (number).",
    "category": "market-data",
    "use_cases": [
      "power intraday charting tools for momentum traders",
      "feed data into time-weighted averaging algorithms",
      "generate heatmaps of price change over five-minute blocks",
      "integrate into algorithmic strategies that operate on five-minute signals",
      "monitor execution quality for short-duration trades"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {
        "from": "The ISO 8601 date (YYYY-MM-DD) indicating the start of a time range filter. Example: \"2025-01-01\" to include only data from January 1, 2025 onward. Must be ≤ `to`. (String, Date, optional)",
        "to": "The ISO 8601 date (YYYY-MM-DD) indicating the end of a time range filter. Example: \"2025-12-31\" to include only data up to December 31, 2025. Must be ≥ `from`. (String, Date, optional)",
        "nonadjusted": "A Boolean flag indicating whether to return raw, non-adjusted values (e.g., pre-split prices or unadjusted dividends). Example: true to receive data without any corporate-action adjustments. (Boolean, optional)"
      }
    },
    "response_example": {
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "open": "The opening price of the security at the start of the trading session. Example: 130.00. (Number)",
      "low": "The lowest intraday price recorded for the security. Example: 129.75. (Number)",
      "high": "The highest intraday price recorded for the security. Example: 131.25. (Number)",
      "close": "The closing price of the security at the end of the trading session. Example: 130.75. (Number)",
      "volume": "The total number of shares or contracts traded during a given period (typically daily). Example: 105000000. (Number)"
    }
  },
  {
    "name": "15 Min Interval Stock Chart API",
    "description": "15 Min Interval Stock Chart API returns intraday price and volume data at fifteen-minute intervals, including timestamp, open, high, low, close prices, and trading volume. Category: market-data. Use cases include creating fifteen-minute candlestick charts for technical analysis, supporting medium-term intraday trend identification, integrating into swing-trading dashboards, aggregating high-frequency data into fifteen-minute bars for modeling, and validating intraday support/resistance levels. Parameters: required: symbol (string); optional: from (date), to (date), nonadjusted (boolean). Response example fields: date (string, YYYY-MM-DD HH:mm:ss), open (number), low (number), high (number), close (number), volume (number).",
    "category": "market-data",
    "use_cases": [
      "create fifteen-minute candlestick charts for technical analysis",
      "support medium-term intraday trend identification",
      "integrate into swing-trading dashboards",
      "aggregate high-frequency data into fifteen-minute bars for modeling",
      "validate intraday support/resistance levels"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {
        "from": "The ISO 8601 date (YYYY-MM-DD) indicating the start of a time range filter. Example: \"2025-01-01\" to include only data from January 1, 2025 onward. Must be ≤ `to`. (String, Date, optional)",
        "to": "The ISO 8601 date (YYYY-MM-DD) indicating the end of a time range filter. Example: \"2025-12-31\" to include only data up to December 31, 2025. Must be ≥ `from`. (String, Date, optional)",
        "nonadjusted": "A Boolean flag indicating whether to return raw, non-adjusted values (e.g., pre-split prices or unadjusted dividends). Example: true to receive data without any corporate-action adjustments. (Boolean, optional)"
      }
    },
    "response_example": {
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "open": "The opening price of the security at the start of the trading session. Example: 130.00. (Number)",
      "low": "The lowest intraday price recorded for the security. Example: 129.75. (Number)",
      "high": "The highest intraday price recorded for the security. Example: 131.25. (Number)",
      "close": "The closing price of the security at the end of the trading session. Example: 130.75. (Number)",
      "volume": "The total number of shares or contracts traded during a given period (typically daily). Example: 105000000. (Number)"
    }
  },
  {
    "name": "15 Min Interval Stock Chart API",
    "description": "15 Min Interval Stock Chart API provides fifteen-minute resolution data points for a specified ticker, including open, high, low, close, and volume for each interval. Category: market-data. Use cases include powering intraday analytics that require quarter-hour granularity, feeding fifteen-minute bars into machine learning models, generating mid-session trend reports, supporting portfolio risk analysis with intraday granularity, and integrating into automated alert systems for breakouts within fifteen-minute frames. Parameters: required: symbol (string); optional: from (date), to (date), nonadjusted (boolean). Response example fields: date (string, YYYY-MM-DD HH:mm:ss), open (number), low (number), high (number), close (number), volume (number).",
    "category": "market-data",
    "use_cases": [
      "power intraday analytics that require quarter-hour granularity",
      "feed fifteen-minute bars into machine learning models",
      "generate mid-session trend reports",
      "support portfolio risk analysis with intraday granularity",
      "integrate into automated alert systems for breakouts within fifteen-minute frames"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {
        "from": "The ISO 8601 date (YYYY-MM-DD) indicating the start of a time range filter. Example: \"2025-01-01\" to include only data from January 1, 2025 onward. Must be ≤ `to`. (String, Date, optional)",
        "to": "The ISO 8601 date (YYYY-MM-DD) indicating the end of a time range filter. Example: \"2025-12-31\" to include only data up to December 31, 2025. Must be ≥ `from`. (String, Date, optional)",
        "nonadjusted": "A Boolean flag indicating whether to return raw, non-adjusted values (e.g., pre-split prices or unadjusted dividends). Example: true to receive data without any corporate-action adjustments. (Boolean, optional)"
      }
    },
    "response_example": {
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "open": "The opening price of the security at the start of the trading session. Example: 130.00. (Number)",
      "low": "The lowest intraday price recorded for the security. Example: 129.75. (Number)",
      "high": "The highest intraday price recorded for the security. Example: 131.25. (Number)",
      "close": "The closing price of the security at the end of the trading session. Example: 130.75. (Number)",
      "volume": "The total number of shares or contracts traded during a given period (typically daily). Example: 105000000. (Number)"
    }
  },
  {
    "name": "30 Min Interval Stock Chart API",
    "description": "30 Min Interval Stock Chart API delivers intraday data at thirty-minute intervals, including timestamp, open, high, low, close prices, and trading volume every half hour. Category: market-data. Use cases include building intraday charts that summarize half-hour performance, identifying medium-term trend reversals during trading sessions, feeding data into volatility modeling at thirty-minute resolution, powering operational dashboards for trading floors, and validating execution quality over larger intervals. Parameters: required: symbol (string); optional: from (date), to (date), nonadjusted (boolean). Response example fields: date (string, YYYY-MM-DD HH:mm:ss), open (number), low (number), high (number), close (number), volume (number).",
    "category": "market-data",
    "use_cases": [
      "build intraday charts that summarize half-hour performance",
      "identify medium-term trend reversals during trading sessions",
      "feed data into volatility modeling at thirty-minute resolution",
      "power operational dashboards for trading floors",
      "validate execution quality over larger intervals"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {
        "from": "The ISO 8601 date (YYYY-MM-DD) indicating the start of a time range filter. Example: \"2025-01-01\" to include only data from January 1, 2025 onward. Must be ≤ `to`. (String, Date, optional)",
        "to": "The ISO 8601 date (YYYY-MM-DD) indicating the end of a time range filter. Example: \"2025-12-31\" to include only data up to December 31, 2025. Must be ≥ `from`. (String, Date, optional)",
        "nonadjusted": "A Boolean flag indicating whether to return raw, non-adjusted values (e.g., pre-split prices or unadjusted dividends). Example: true to receive data without any corporate-action adjustments. (Boolean, optional)"
      }
    },
    "response_example": {
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "open": "The opening price of the security at the start of the trading session. Example: 130.00. (Number)",
      "low": "The lowest intraday price recorded for the security. Example: 129.75. (Number)",
      "high": "The highest intraday price recorded for the security. Example: 131.25. (Number)",
      "close": "The closing price of the security at the end of the trading session. Example: 130.75. (Number)",
      "volume": "The total number of shares or contracts traded during a given period (typically daily). Example: 105000000. (Number)"
    }
  },
  {
    "name": "30 Min Interval Stock Chart API",
    "description": "30 Min Interval Stock Chart API provides half-hourly price and volume data points for any equity, capturing open, high, low, close, and volume for each thirty-minute slot. Category: market-data. Use cases include powering mid-session performance analysis, integrating thirty-minute bars into algorithmic frameworks, facilitating risk monitoring with coarser granularity, generating summary charts for end-of-day reporting, and feeding intraday data pipelines that require half-hour buckets. Parameters: required: symbol (string); optional: from (date), to (date), nonadjusted (boolean). Response example fields: date (string, YYYY-MM-DD HH:mm:ss), open (number), low (number), high (number), close (number), volume (number).",
    "category": "market-data",
    "use_cases": [
      "power mid-session performance analysis",
      "integrate thirty-minute bars into algorithmic frameworks",
      "facilitate risk monitoring with coarser granularity",
      "generate summary charts for end-of-day reporting",
      "feed intraday data pipelines that require half-hour buckets"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {
        "from": "The ISO 8601 date (YYYY-MM-DD) indicating the start of a time range filter. Example: \"2025-01-01\" to include only data from January 1, 2025 onward. Must be ≤ `to`. (String, Date, optional)",
        "to": "The ISO 8601 date (YYYY-MM-DD) indicating the end of a time range filter. Example: \"2025-12-31\" to include only data up to December 31, 2025. Must be ≥ `from`. (String, Date, optional)",
        "nonadjusted": "A Boolean flag indicating whether to return raw, non-adjusted values (e.g., pre-split prices or unadjusted dividends). Example: true to receive data without any corporate-action adjustments. (Boolean, optional)"
      }
    },
    "response_example": {
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "open": "The opening price of the security at the start of the trading session. Example: 130.00. (Number)",
      "low": "The lowest intraday price recorded for the security. Example: 129.75. (Number)",
      "high": "The highest intraday price recorded for the security. Example: 131.25. (Number)",
      "close": "The closing price of the security at the end of the trading session. Example: 130.75. (Number)",
      "volume": "The total number of shares or contracts traded during a given period (typically daily). Example: 105000000. (Number)"
    }
  },
  {
    "name": "1 Hour Interval Stock Chart API",
    "description": "1 Hour Interval Stock Chart API returns intraday data at one-hour intervals, including timestamp, open, high, low, close prices, and trading volume for each hour. Category: market-data. Use cases include analyzing broader intraday trends, building hourly candlestick charts for swing and day traders, integrating hourly data into portfolio risk models, driving end-of-day summaries that include hourly breakdowns, and validating price action across trading sessions. Parameters: required: symbol (string); optional: from (date), to (date), nonadjusted (boolean). Response example fields: date (string, YYYY-MM-DD HH:mm:ss), open (number), low (number), high (number), close (number), volume (number).",
    "category": "market-data",
    "use_cases": [
      "analyze broader intraday trends",
      "build hourly candlestick charts for swing and day traders",
      "integrate hourly data into portfolio risk models",
      "drive end-of-day summaries that include hourly breakdowns",
      "validate price action across trading sessions"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {
        "from": "The ISO 8601 date (YYYY-MM-DD) indicating the start of a time range filter. Example: \"2025-01-01\" to include only data from January 1, 2025 onward. Must be ≤ `to`. (String, Date, optional)",
        "to": "The ISO 8601 date (YYYY-MM-DD) indicating the end of a time range filter. Example: \"2025-12-31\" to include only data up to December 31, 2025. Must be ≥ `from`. (String, Date, optional)",
        "nonadjusted": "A Boolean flag indicating whether to return raw, non-adjusted values (e.g., pre-split prices or unadjusted dividends). Example: true to receive data without any corporate-action adjustments. (Boolean, optional)"
      }
    },
    "response_example": {
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "open": "The opening price of the security at the start of the trading session. Example: 130.00. (Number)",
      "low": "The lowest intraday price recorded for the security. Example: 129.75. (Number)",
      "high": "The highest intraday price recorded for the security. Example: 131.25. (Number)",
      "close": "The closing price of the security at the end of the trading session. Example: 130.75. (Number)",
      "volume": "The total number of shares or contracts traded during a given period (typically daily). Example: 105000000. (Number)"
    }
  },
  {
    "name": "1 Hour Interval Stock Chart API",
    "description": "1 Hour Interval Stock Chart API provides hourly resolution price and volume data for a specified symbol, capturing open, high, low, close, and volume each hour. Category: market-data. Use cases include feeding hourly bars into technical indicators, supporting multi-timeframe analysis alongside minute-level data, powering trading dashboards with coarser granularity, backtesting strategies that rely on hourly signals, and generating hourly performance reports. Parameters: required: symbol (string); optional: from (date), to (date), nonadjusted (boolean). Response example fields: date (string, YYYY-MM-DD HH:mm:ss), open (number), low (number), high (number), close (number), volume (number).",
    "category": "market-data",
    "use_cases": [
      "feed hourly bars into technical indicators",
      "support multi-timeframe analysis alongside minute-level data",
      "power trading dashboards with coarser granularity",
      "backtest strategies that rely on hourly signals",
      "generate hourly performance reports"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {
        "from": "The ISO 8601 date (YYYY-MM-DD) indicating the start of a time range filter. Example: \"2025-01-01\" to include only data from January 1, 2025 onward. Must be ≤ `to`. (String, Date, optional)",
        "to": "The ISO 8601 date (YYYY-MM-DD) indicating the end of a time range filter. Example: \"2025-12-31\" to include only data up to December 31, 2025. Must be ≥ `from`. (String, Date, optional)",
        "nonadjusted": "A Boolean flag indicating whether to return raw, non-adjusted values (e.g., pre-split prices or unadjusted dividends). Example: true to receive data without any corporate-action adjustments. (Boolean, optional)"
      }
    },
    "response_example": {
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "open": "The opening price of the security at the start of the trading session. Example: 130.00. (Number)",
      "low": "The lowest intraday price recorded for the security. Example: 129.75. (Number)",
      "high": "The highest intraday price recorded for the security. Example: 131.25. (Number)",
      "close": "The closing price of the security at the end of the trading session. Example: 130.75. (Number)",
      "volume": "The total number of shares or contracts traded during a given period (typically daily). Example: 105000000. (Number)"
    }
  },
  {
    "name": "4 Hour Interval Stock Chart API",
    "description": "4 Hour Interval Stock Chart API returns intraday data at four-hour intervals, including timestamp, open, high, low, close prices, and trading volume for each four-hour block. Category: market-data. Use cases include tracking extended intraday trends, building four-hour candlestick charts for position traders, integrating into multi-day analysis frameworks, feeding data into swing trading models that operate on four-hour bars, and validating price movements across longer intraday periods. Parameters: required: symbol (string); optional: from (date), to (date), nonadjusted (boolean). Response example fields: date (string, YYYY-MM-DD HH:mm:ss), open (number), low (number), high (number), close (number), volume (number).",
    "category": "market-data",
    "use_cases": [
      "track extended intraday trends",
      "build four-hour candlestick charts for position traders",
      "integrate into multi-day analysis frameworks",
      "feed data into swing trading models that operate on four-hour bars",
      "validate price movements across longer intraday periods"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {
        "from": "The ISO 8601 date (YYYY-MM-DD) indicating the start of a time range filter. Example: \"2025-01-01\" to include only data from January 1, 2025 onward. Must be ≤ `to`. (String, Date, optional)",
        "to": "The ISO 8601 date (YYYY-MM-DD) indicating the end of a time range filter. Example: \"2025-12-31\" to include only data up to December 31, 2025. Must be ≥ `from`. (String, Date, optional)",
        "nonadjusted": "A Boolean flag indicating whether to return raw, non-adjusted values (e.g., pre-split prices or unadjusted dividends). Example: true to receive data without any corporate-action adjustments. (Boolean, optional)"
      }
    },
    "response_example": {
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "open": "The opening price of the security at the start of the trading session. Example: 130.00. (Number)",
      "low": "The lowest intraday price recorded for the security. Example: 129.75. (Number)",
      "high": "The highest intraday price recorded for the security. Example: 131.25. (Number)",
      "close": "The closing price of the security at the end of the trading session. Example: 130.75. (Number)",
      "volume": "The total number of shares or contracts traded during a given period (typically daily). Example: 105000000. (Number)"
    }
  },
  {
    "name": "4 Hour Interval Stock Chart API",
    "description": "4 Hour Interval Stock Chart API provides four-hour resolution data points for any equity, capturing open, high, low, close, and volume every four hours. Category: market-data. Use cases include analyzing broader market movements within a single trading day, integrating four-hour bars into algorithmic strategies, supplying data for swing-trading dashboards, supporting risk models with intraday breakdowns, and generating summarised charts for multi-day analytics. Parameters: required: symbol (string); optional: from (date), to (date), nonadjusted (boolean). Response example fields: date (string, YYYY-MM-DD HH:mm:ss), open (number), low (number), high (number), close (number), volume (number).",
    "category": "market-data",
    "use_cases": [
      "analyze broader market movements within a single trading day",
      "integrate four-hour bars into algorithmic strategies",
      "supply data for swing-trading dashboards",
      "support risk models with intraday breakdowns",
      "generate summarised charts for multi-day analytics"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {
        "from": "The ISO 8601 date (YYYY-MM-DD) indicating the start of a time range filter. Example: \"2025-01-01\" to include only data from January 1, 2025 onward. Must be ≤ `to`. (String, Date, optional)",
        "to": "The ISO 8601 date (YYYY-MM-DD) indicating the end of a time range filter. Example: \"2025-12-31\" to include only data up to December 31, 2025. Must be ≥ `from`. (String, Date, optional)",
        "nonadjusted": "A Boolean flag indicating whether to return raw, non-adjusted values (e.g., pre-split prices or unadjusted dividends). Example: true to receive data without any corporate-action adjustments. (Boolean, optional)"
      }
    },
    "response_example": {
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "open": "The opening price of the security at the start of the trading session. Example: 130.00. (Number)",
      "low": "The lowest intraday price recorded for the security. Example: 129.75. (Number)",
      "high": "The highest intraday price recorded for the security. Example: 131.25. (Number)",
      "close": "The closing price of the security at the end of the trading session. Example: 130.75. (Number)",
      "volume": "The total number of shares or contracts traded during a given period (typically daily). Example: 105000000. (Number)"
    }
  },
  {
    "name": "Latest Earning Transcripts API",
    "description": "Latest Earning Transcripts API returns a paginated list of companies that have available earnings call transcripts, including symbol, fiscal period, fiscal year, and transcript date. Category: reference. Use cases include populating a dashboard of the most recent earnings calls, driving research tools that list companies with newly published transcripts, automating notifications when new transcripts are available, feeding ETL pipelines for transcript ingestion, and enabling compliance teams to track the latest corporate communications. Parameters: required: limit (number), page (number). Response example fields: symbol (string), period (string), fiscalYear (number), date (string, YYYY-MM-DD).",
    "category": "reference",
    "use_cases": [
      "populate a dashboard of the most recent earnings calls",
      "drive research tools that list companies with newly published transcripts",
      "automate notifications when new transcripts are available",
      "feed ETL pipelines for transcript ingestion",
      "enable compliance teams to track the latest corporate communications"
    ],
    "parameters": {
      "required": {
        "limit": "An integer cap on the number of results returned by the endpoint. Example: 50 to restrict output to the top 50 matches. Must be ≥1 and ≤1000. (Integer, optional; defaults to 100)",
        "page": "A zero-based integer page index for paginated endpoints. Example: 2 to return the third page of results, given the configured `limit`. (Integer, optional; defaults to 0)"
      },
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "period": "The fiscal period associated with the data point, such as a quarter (\"Q2\") or full year. Example: \"Q2\". (String)",
      "fiscalYear": "The fiscal year to which a financial data point pertains, typically in four-digit format. Example: 2023. (Number or String)",
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)"
    }
  },
  {
    "name": "Latest Earning Transcripts API",
    "description": "Latest Earning Transcripts API provides a list of symbols along with their latest earnings transcript metadata—fiscal period, year, and date—enabling users to identify which companies have recent earnings calls. Category: reference. Use cases include generating weekly reports of companies with new transcripts, integrating into alert systems for financial analysts, driving UI components that highlight fresh earnings releases, syncing transcript lists for NLP pipelines, and maintaining up-to-date records in data warehouses. Parameters: required: limit (number), page (number). Response example fields: symbol (string), period (string), fiscalYear (number), date (string, YYYY-MM-DD).",
    "category": "reference",
    "use_cases": [
      "generate weekly reports of companies with new transcripts",
      "integrate into alert systems for financial analysts",
      "drive UI components that highlight fresh earnings releases",
      "sync transcript lists for NLP pipelines",
      "maintain up-to-date records in data warehouses"
    ],
    "parameters": {
      "required": {
        "limit": "An integer cap on the number of results returned by the endpoint. Example: 50 to restrict output to the top 50 matches. Must be ≥1 and ≤1000. (Integer, optional; defaults to 100)",
        "page": "A zero-based integer page index for paginated endpoints. Example: 2 to return the third page of results, given the configured `limit`. (Integer, optional; defaults to 0)"
      },
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "period": "The fiscal period associated with the data point, such as a quarter (\"Q2\") or full year. Example: \"Q2\". (String)",
      "fiscalYear": "The fiscal year to which a financial data point pertains, typically in four-digit format. Example: 2023. (Number or String)",
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)"
    }
  },
  {
    "name": "Earnings Transcript API",
    "description": "Earnings Transcript API returns the full text of a company’s specified earnings call transcript, including symbol, quarter, year, date, and the transcript content. Category: reference. Use cases include conducting sentiment analysis on management commentary, archiving detailed earnings discussions for research, integrating transcripts into text-mining pipelines, powering knowledge bases that index corporate communications, and enabling compliance audits of public disclosures. Parameters: required: symbol (string), year (string), quarter (string); optional: limit (number). Response example fields: symbol (string), period (string), year (number), date (string, YYYY-MM-DD), content (string).",
    "category": "reference",
    "use_cases": [
      "conduct sentiment analysis on management commentary",
      "archive detailed earnings discussions for research",
      "integrate transcripts into text-mining pipelines",
      "power knowledge bases that index corporate communications",
      "enable compliance audits of public disclosures"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)",
        "year": "A four-digit calendar year or fiscal year number to filter period-based endpoints. Example: 2024 to retrieve data for the 2024 fiscal or calendar year. (Number or String, optional)",
        "quarter": "A fiscal quarter identifier, typically \"Q1\", \"Q2\", \"Q3\", or \"Q4\". Example: \"Q3\" to filter data to the third quarter of the specified year. (String, optional)"
      },
      "optional": {
        "limit": "An integer cap on the number of results returned by the endpoint. Example: 50 to restrict output to the top 50 matches. Must be ≥1 and ≤1000. (Integer, optional; defaults to 100)"
      }
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "period": "The fiscal period associated with the data point, such as a quarter (\"Q2\") or full year. Example: \"Q2\". (String)",
      "year": "The calendar year associated with a data point or report. Example: 2023. (Number or String)",
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "content": "The full body text of a news article, research note, or report. Example: \"Apple reported quarterly revenue above analyst expectations...\". (String)"
    }
  },
  {
    "name": "Earnings Transcript API",
    "description": "Earnings Transcript API provides complete earnings call transcript data for a given symbol, year, and quarter, delivering the full dialogue between company executives and participants. Category: reference. Use cases include powering financial research tools that require entire transcript content, feeding natural language processing engines to extract key insights, building searchable archives of earnings calls, enabling competitive analysis by comparing management commentary, and supporting investor presentations with verbatim earnings responses. Parameters: required: symbol (string), year (string), quarter (string); optional: limit (number). Response example fields: symbol (string), period (string), year (number), date (string, YYYY-MM-DD), content (string).",
    "category": "reference",
    "use_cases": [
      "power financial research tools that require entire transcript content",
      "feed natural language processing engines to extract key insights",
      "build searchable archives of earnings calls",
      "enable competitive analysis by comparing management commentary",
      "support investor presentations with verbatim earnings responses"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)",
        "year": "A four-digit calendar year or fiscal year number to filter period-based endpoints. Example: 2024 to retrieve data for the 2024 fiscal or calendar year. (Number or String, optional)",
        "quarter": "A fiscal quarter identifier, typically \"Q1\", \"Q2\", \"Q3\", or \"Q4\". Example: \"Q3\" to filter data to the third quarter of the specified year. (String, optional)"
      },
      "optional": {
        "limit": "An integer cap on the number of results returned by the endpoint. Example: 50 to restrict output to the top 50 matches. Must be ≥1 and ≤1000. (Integer, optional; defaults to 100)"
      }
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "period": "The fiscal period associated with the data point, such as a quarter (\"Q2\") or full year. Example: \"Q2\". (String)",
      "year": "The calendar year associated with a data point or report. Example: 2023. (Number or String)",
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)",
      "content": "The full body text of a news article, research note, or report. Example: \"Apple reported quarterly revenue above analyst expectations...\". (String)"
    }
  },
  {
    "name": "Transcripts Dates By Symbol API",
    "description": "Transcripts Dates By Symbol API returns all available earnings call transcript dates for a given company symbol, listing each quarter and fiscal year with its corresponding date. Category: reference. Use cases include driving UI components that let users select which transcript to view, enabling timeline visualizations of earnings calls, integrating with scheduling tools to plan analyst coverage, supporting ETL jobs that ingest transcript metadata, and validating data availability before full transcript retrieval. Parameters: required: symbol (string). Response example fields: quarter (number), fiscalYear (number), date (string, YYYY-MM-DD).",
    "category": "reference",
    "use_cases": [
      "drive UI components that let users select which transcript to view",
      "enable timeline visualizations of earnings calls",
      "integrate with scheduling tools to plan analyst coverage",
      "support ETL jobs that ingest transcript metadata",
      "validate data availability before full transcript retrieval"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {}
    },
    "response_example": {
      "quarter": "The fiscal quarter associated with the data point, typically \"Q1\", \"Q2\", \"Q3\", or \"Q4\". Example: \"Q4\". (String)",
      "fiscalYear": "The fiscal year to which a financial data point pertains, typically in four-digit format. Example: 2023. (Number or String)",
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)"
    }
  },
  {
    "name": "Transcripts Dates By Symbol API",
    "description": "Transcripts Dates By Symbol API provides a chronological list of earnings call transcript dates associated with a specific symbol, including quarter and fiscal year. Category: reference. Use cases include automating notifications for upcoming transcript releases, populating dropdowns in transcript lookup tools, feeding timeline data into analytics dashboards, enabling audit trails for earnings call schedules, and integrating with compliance systems to verify transcript publication dates. Parameters: required: symbol (string). Response example fields: quarter (number), fiscalYear (number), date (string, YYYY-MM-DD).",
    "category": "reference",
    "use_cases": [
      "automate notifications for upcoming transcript releases",
      "populate dropdowns in transcript lookup tools",
      "feed timeline data into analytics dashboards",
      "enable audit trails for earnings call schedules",
      "integrate with compliance systems to verify transcript publication dates"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)"
      },
      "optional": {}
    },
    "response_example": {
      "quarter": "The fiscal quarter associated with the data point, typically \"Q1\", \"Q2\", \"Q3\", or \"Q4\". Example: \"Q4\". (String)",
      "fiscalYear": "The fiscal year to which a financial data point pertains, typically in four-digit format. Example: 2023. (Number or String)",
      "date": "The date associated with the data point, in ISO 8601 format indicating when the data was recorded. Example: \"2029-09-28\". (String, Date)"
    }
  },
  {
    "name": "Available Transcript Symbols API",
    "description": "Available Transcript Symbols API returns a list of all stock symbols that have at least one earnings call transcript available, along with the company name and number of transcripts. Category: reference. Use cases include generating a master index of companies with transcript archives, driving search filters for transcript libraries, integrating with ETL workflows to determine which symbols to ingest, powering analytics dashboards that track coverage breadth, and enabling research platforms to prioritize companies by transcript count. Parameters: none. Response example fields: symbol (string), companyName (string), noOfTranscripts (string).",
    "category": "reference",
    "use_cases": [
      "generate a master index of companies with transcript archives",
      "drive search filters for transcript libraries",
      "integrate with ETL workflows to determine which symbols to ingest",
      "power analytics dashboards that track coverage breadth",
      "enable research platforms to prioritize companies by transcript count"
    ],
    "parameters": {
      "required": {},
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "companyName": "The registered legal name of the company. Example: \"Apple Inc.\". (String)",
      "noOfTranscripts": "The count of earnings call or other transcripts available for the security. Example: 12. (Number)"
    }
  },
  {
    "name": "Available Transcript Symbols API",
    "description": "Available Transcript Symbols API provides a directory of symbols and companies that have available earnings call transcripts, including the total transcript count per symbol. Category: reference. Use cases include creating lookup tables for transcript availability, feeding UI components with symbols that support transcript search, driving bulk ingestion of transcript data based on symbol lists, enabling compliance checks for transcript coverage, and powering dashboards that display companies ranked by transcript volume. Parameters: none. Response example fields: symbol (string), companyName (string), noOfTranscripts (string).",
    "category": "reference",
    "use_cases": [
      "create lookup tables for transcript availability",
      "feed UI components with symbols that support transcript search",
      "drive bulk ingestion of transcript data based on symbol lists",
      "enable compliance checks for transcript coverage",
      "power dashboards that display companies ranked by transcript volume"
    ],
    "parameters": {
      "required": {},
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "companyName": "The registered legal name of the company. Example: \"Apple Inc.\". (String)",
      "noOfTranscripts": "The count of earnings call or other transcripts available for the security. Example: 12. (Number)"
    }
  },
  {
    "name": "Industry Classification List API",
    "description": "Industry Classification List API returns a comprehensive directory of Standard Industrial Classification (SIC) codes and corresponding industry titles, enabling users to retrieve all valid industry classifications. Category: reference. Use cases include populating industry filter dropdowns in screening tools, validating SIC codes in data-entry workflows, driving ETL pipelines that segment companies by industry, supporting compliance systems that verify industry classifications, and enriching research platforms with standardized industry metadata. Parameters: required: industryTitle (string), sicCode (string). Response example fields: office (string), sicCode (string), industryTitle (string).",
    "category": "reference",
    "use_cases": [
      "populate industry filter dropdowns in screening tools",
      "validate SIC codes in data-entry workflows",
      "drive ETL pipelines that segment companies by industry",
      "support compliance systems that verify industry classifications",
      "enrich research platforms with standardized industry metadata"
    ],
    "parameters": {
      "required": {
        "industryTitle": "The official industry classification title, matching FMP’s taxonomy. Example: \"Technology Hardware, Storage & Peripherals\". (String, optional)",
        "sicCode": "The Standard Industrial Classification (SIC) code, a four-digit number identifying a company’s primary business activity. Example: \"3571\" for Electronic Computers. (String, optional)"
      },
      "optional": {}
    },
    "response_example": {
      "office": "The name of a company’s office, department, or local division. Example: \"Office of Life Sciences\". (String)",
      "sicCode": "The Standard Industrial Classification code assigned to the company’s primary business activity. Example: \"100\" (Agricultural Production-Crops). (String)",
      "industryTitle": "The textual title or name of the industry in which the company operates. Example: \"Technology Hardware, Storage & Peripherals\". (String)"
    }
  },
  {
    "name": "Industry Classification List API",
    "description": "Industry Classification List API provides a master list of SIC codes and their corresponding industry titles, including the regulatory office designation. Category: reference. Use cases include building industry lookup services for analytics platforms, synchronizing local industry metadata with the standardized SIC list, integrating industry codes into portfolio allocation models, validating industry assignments in compliance audits, and enabling dashboards that display industry-level summaries. Parameters: required: industryTitle (string), sicCode (string). Response example fields: office (string), sicCode (string), industryTitle (string).",
    "category": "reference",
    "use_cases": [
      "build industry lookup services for analytics platforms",
      "synchronize local industry metadata with standardized SIC list",
      "integrate industry codes into portfolio allocation models",
      "validate industry assignments in compliance audits",
      "enable dashboards that display industry-level summaries"
    ],
    "parameters": {
      "required": {
        "industryTitle": "The official industry classification title, matching FMP’s taxonomy. Example: \"Technology Hardware, Storage & Peripherals\". (String, optional)",
        "sicCode": "The Standard Industrial Classification (SIC) code, a four-digit number identifying a company’s primary business activity. Example: \"3571\" for Electronic Computers. (String, optional)"
      },
      "optional": {}
    },
    "response_example": {
      "office": "The name of a company’s office, department, or local division. Example: \"Office of Life Sciences\". (String)",
      "sicCode": "The Standard Industrial Classification code assigned to the company’s primary business activity. Example: \"100\" (Agricultural Production-Crops). (String)",
      "industryTitle": "The textual title or name of the industry in which the company operates. Example: \"Technology Hardware, Storage & Peripherals\". (String)"
    }
  },
  {
    "name": "Industry Classification Search API",
    "description": "Industry Classification Search API returns detailed industry classification and company information by searching with one or more identifiers (symbol, CIK, or SIC code). Category: reference. Use cases include retrieving industry details for a given stock ticker, validating a company’s SIC classification, integrating industry metadata into CVM applications, populating compliance dashboards with SIC-based data, and enhancing data warehouses with company-specific industry attributes. Parameters: required: symbol (string), cik (string), sicCode (string). Response example fields: symbol (string), name (string), cik (string), sicCode (string), industryTitle (string), businessAddress (array of strings), phoneNumber (string).",
    "category": "reference",
    "use_cases": [
      "retrieve industry details for a given stock ticker",
      "validate a company’s SIC classification",
      "integrate industry metadata into CVM applications",
      "populate compliance dashboards with SIC-based data",
      "enhance data warehouses with company-specific industry attributes"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)",
        "cik": "The nine-digit Central Index Key assigned by the SEC, used to filter or look up specific filers. Example: \"0000320193\" for Apple Inc. (String, optional)",
        "sicCode": "The Standard Industrial Classification (SIC) code, a four-digit number identifying a company’s primary business activity. Example: \"3571\" for Electronic Computers. (String, optional)"
      },
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "name": "The full legal or common name of the company. Example: \"Apple Inc.\" (String)",
      "cik": "The Central Index Key, a unique nine-digit identifier assigned by the SEC to entities. Example: \"0001454889\". (String)",
      "sicCode": "The Standard Industrial Classification code assigned to the company’s primary business activity. Example: \"100\" (Agricultural Production-Crops). (String)",
      "industryTitle": "The textual title or name of the industry in which the company operates. Example: \"Technology Hardware, Storage & Peripherals\". (String)",
      "businessAddress": [
        "ONE APPLE PARK WAY",
        "CUPERTINO CA 95014"
      ],
      "phoneNumber": "The direct phone number for a company office, department, or division. Example: \"(408) 996-1010\". (String)"
    }
  },
  {
    "name": "Industry Classification Search API",
    "description": "Industry Classification Search API provides a targeted search for company industry data by accepting inputs like symbol, CIK, or SIC code and returning company name, SIC code, industry title, and contact information. Category: reference. Use cases include powering UI search components for industry lookup, driving ETL pipelines to enrich company records with SIC-based metadata, supporting automated compliance checks on industry codes, building dashboards showing company industry assignments, and integrating into analytics models that segment by industry. Parameters: required: symbol (string), cik (string), sicCode (string). Response example fields: symbol (string), name (string), cik (string), sicCode (string), industryTitle (string), businessAddress (array of strings), phoneNumber (string).",
    "category": "reference",
    "use_cases": [
      "power UI search components for industry lookup",
      "drive ETL pipelines to enrich company records with SIC-based metadata",
      "support automated compliance checks on industry codes",
      "build dashboards showing company industry assignments",
      "integrate into analytics models that segment by industry"
    ],
    "parameters": {
      "required": {
        "symbol": "The exact stock ticker symbol identifying the security. Example: \"AAPL\" for Apple Inc. Used to pinpoint a single company’s data slice. Required for symbol-specific queries. (String, required when filtering by security)",
        "cik": "The nine-digit Central Index Key assigned by the SEC, used to filter or look up specific filers. Example: \"0000320193\" for Apple Inc. (String, optional)",
        "sicCode": "The Standard Industrial Classification (SIC) code, a four-digit number identifying a company’s primary business activity. Example: \"3571\" for Electronic Computers. (String, optional)"
      },
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "name": "The full legal or common name of the company. Example: \"Apple Inc.\" (String)",
      "cik": "The Central Index Key, a unique nine-digit identifier assigned by the SEC to entities. Example: \"0001454889\". (String)",
      "sicCode": "The Standard Industrial Classification code assigned to the company’s primary business activity. Example: \"100\" (Agricultural Production-Crops). (String)",
      "industryTitle": "The textual title or name of the industry in which the company operates. Example: \"Technology Hardware, Storage & Peripherals\". (String)",
      "businessAddress": [
        "ONE APPLE PARK WAY",
        "CUPERTINO CA 95014"
      ],
      "phoneNumber": "The direct phone number for a company office, department, or division. Example: \"(408) 996-1010\". (String)"
    }
  },
  {
    "name": "All Industry Classification API",
    "description": "All Industry Classification API returns a paginated list of all companies along with their SIC codes, industry titles, and basic business contact information. Category: reference. Use cases include creating a full industry classification database for analytics, driving ETL pipelines that ingest company-level SIC metadata, populating compliance systems with industry assignments, powering screening tools that filter by industry, and supporting research platforms that analyze industry-wide trends. Parameters: required: page (number), limit (number). Response example fields: symbol (string), name (string), cik (string), sicCode (string), industryTitle (string), businessAddress (array of strings), phoneNumber (string).",
    "category": "reference",
    "use_cases": [
      "create a full industry classification database for analytics",
      "drive ETL pipelines that ingest company-level SIC metadata",
      "populate compliance systems with industry assignments",
      "power screening tools that filter by industry",
      "support research platforms analyzing industry-wide trends"
    ],
    "parameters": {
      "required": {
        "page": "A zero-based integer page index for paginated endpoints. Example: 2 to return the third page of results, given the configured `limit`. (Integer, optional; defaults to 0)",
        "limit": "An integer cap on the number of results returned by the endpoint. Example: 50 to restrict output to the top 50 matches. Must be ≥1 and ≤1000. (Integer, optional; defaults to 100)"
      },
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "name": "The full legal or common name of the company. Example: \"Apple Inc.\" (String)",
      "cik": "The Central Index Key, a unique nine-digit identifier assigned by the SEC to entities. Example: \"0001454889\". (String)",
      "sicCode": "The Standard Industrial Classification code assigned to the company’s primary business activity. Example: \"100\" (Agricultural Production-Crops). (String)",
      "industryTitle": "The textual title or name of the industry in which the company operates. Example: \"Technology Hardware, Storage & Peripherals\". (String)",
      "businessAddress": [
        "BANK OF AMERICA CORPORATE CENTER",
        "CHARLOTTE NC 28255"
      ],
      "phoneNumber": "The direct phone number for a company office, department, or division. Example: \"(408) 996-1010\". (String)"
    }
  },
  {
    "name": "All Industry Classification API",
    "description": "All Industry Classification API provides a comprehensive, paginated feed of companies with their SIC codes, industry titles, and business address details, allowing users to retrieve the entire universe of industry-classified entities. Category: reference. Use cases include building master company-industry tables in data warehouses, powering dashboards that display industry breakdowns, enabling compliance platforms to verify industry assignments for all listed companies, integrating into ETL processes that require full industry classification coverage, and supporting quantitative models that analyze industry distributions. Parameters: required: page (number), limit (number). Response example fields: symbol (string), name (string), cik (string), sicCode (string), industryTitle (string), businessAddress (array of strings), phoneNumber (string).",
    "category": "reference",
    "use_cases": [
      "build master company-industry tables in data warehouses",
      "power dashboards that display industry breakdowns",
      "enable compliance platforms to verify industry assignments",
      "integrate into ETL processes requiring full coverage",
      "support quantitative models analyzing industry distributions"
    ],
    "parameters": {
      "required": {
        "page": "A zero-based integer page index for paginated endpoints. Example: 2 to return the third page of results, given the configured `limit`. (Integer, optional; defaults to 0)",
        "limit": "An integer cap on the number of results returned by the endpoint. Example: 50 to restrict output to the top 50 matches. Must be ≥1 and ≤1000. (Integer, optional; defaults to 100)"
      },
      "optional": {}
    },
    "response_example": {
      "symbol": "The unique stock ticker symbol representing a publicly traded company. Example: \"AAPL\" for Apple Inc. (String)",
      "name": "The full legal or common name of the company. Example: \"Apple Inc.\" (String)",
      "cik": "The Central Index Key, a unique nine-digit identifier assigned by the SEC to entities. Example: \"0001454889\". (String)",
      "sicCode": "The Standard Industrial Classification code assigned to the company’s primary business activity. Example: \"100\" (Agricultural Production-Crops). (String)",
      "industryTitle": "The textual title or name of the industry in which the company operates. Example: \"Technology Hardware, Storage & Peripherals\". (String)",
      "businessAddress": [
        "BANK OF AMERICA CORPORATE CENTER",
        "CHARLOTTE NC 28255"
      ],
      "phoneNumber": "The direct phone number for a company office, department, or division. Example: \"(408) 996-1010\". (String)"
    }
  }
]